/******/ (function(modules) { // webpackBootstrap
/******/ 	var parentHotUpdateCallback = this["webpackHotUpdate"];
/******/ 	this["webpackHotUpdate"] = 
/******/ 	function webpackHotUpdateCallback(chunkId, moreModules) { // eslint-disable-line no-unused-vars
/******/ 		hotAddUpdateChunk(chunkId, moreModules);
/******/ 		if(parentHotUpdateCallback) parentHotUpdateCallback(chunkId, moreModules);
/******/ 	}
/******/ 	
/******/ 	function hotDownloadUpdateChunk(chunkId) { // eslint-disable-line no-unused-vars
/******/ 		var head = document.getElementsByTagName("head")[0];
/******/ 		var script = document.createElement("script");
/******/ 		script.type = "text/javascript";
/******/ 		script.charset = "utf-8";
/******/ 		script.src = __webpack_require__.p + "" + chunkId + "." + hotCurrentHash + ".hot-update.js";
/******/ 		head.appendChild(script);
/******/ 	}
/******/ 	
/******/ 	function hotDownloadManifest(callback) { // eslint-disable-line no-unused-vars
/******/ 		if(typeof XMLHttpRequest === "undefined")
/******/ 			return callback(new Error("No browser support"));
/******/ 		try {
/******/ 			var request = new XMLHttpRequest();
/******/ 			var requestPath = __webpack_require__.p + "" + hotCurrentHash + ".hot-update.json";
/******/ 			request.open("GET", requestPath, true);
/******/ 			request.timeout = 10000;
/******/ 			request.send(null);
/******/ 		} catch(err) {
/******/ 			return callback(err);
/******/ 		}
/******/ 		request.onreadystatechange = function() {
/******/ 			if(request.readyState !== 4) return;
/******/ 			if(request.status === 0) {
/******/ 				// timeout
/******/ 				callback(new Error("Manifest request to " + requestPath + " timed out."));
/******/ 			} else if(request.status === 404) {
/******/ 				// no update available
/******/ 				callback();
/******/ 			} else if(request.status !== 200 && request.status !== 304) {
/******/ 				// other failure
/******/ 				callback(new Error("Manifest request to " + requestPath + " failed."));
/******/ 			} else {
/******/ 				// success
/******/ 				try {
/******/ 					var update = JSON.parse(request.responseText);
/******/ 				} catch(e) {
/******/ 					callback(e);
/******/ 					return;
/******/ 				}
/******/ 				callback(null, update);
/******/ 			}
/******/ 		};
/******/ 	}
/******/
/******/ 	
/******/ 	
/******/ 	var hotApplyOnUpdate = true;
/******/ 	var hotCurrentHash = "f59f835d2e36363832cf"; // eslint-disable-line no-unused-vars
/******/ 	var hotCurrentModuleData = {};
/******/ 	var hotCurrentParents = []; // eslint-disable-line no-unused-vars
/******/ 	
/******/ 	function hotCreateRequire(moduleId) { // eslint-disable-line no-unused-vars
/******/ 		var me = installedModules[moduleId];
/******/ 		if(!me) return __webpack_require__;
/******/ 		var fn = function(request) {
/******/ 			if(me.hot.active) {
/******/ 				if(installedModules[request]) {
/******/ 					if(installedModules[request].parents.indexOf(moduleId) < 0)
/******/ 						installedModules[request].parents.push(moduleId);
/******/ 					if(me.children.indexOf(request) < 0)
/******/ 						me.children.push(request);
/******/ 				} else hotCurrentParents = [moduleId];
/******/ 			} else {
/******/ 				console.warn("[HMR] unexpected require(" + request + ") from disposed module " + moduleId);
/******/ 				hotCurrentParents = [];
/******/ 			}
/******/ 			return __webpack_require__(request);
/******/ 		};
/******/ 		for(var name in __webpack_require__) {
/******/ 			if(Object.prototype.hasOwnProperty.call(__webpack_require__, name)) {
/******/ 				if(Object.defineProperty) {
/******/ 					Object.defineProperty(fn, name, (function(name) {
/******/ 						return {
/******/ 							configurable: true,
/******/ 							enumerable: true,
/******/ 							get: function() {
/******/ 								return __webpack_require__[name];
/******/ 							},
/******/ 							set: function(value) {
/******/ 								__webpack_require__[name] = value;
/******/ 							}
/******/ 						};
/******/ 					}(name)));
/******/ 				} else {
/******/ 					fn[name] = __webpack_require__[name];
/******/ 				}
/******/ 			}
/******/ 		}
/******/ 	
/******/ 		function ensure(chunkId, callback) {
/******/ 			if(hotStatus === "ready")
/******/ 				hotSetStatus("prepare");
/******/ 			hotChunksLoading++;
/******/ 			__webpack_require__.e(chunkId, function() {
/******/ 				try {
/******/ 					callback.call(null, fn);
/******/ 				} finally {
/******/ 					finishChunkLoading();
/******/ 				}
/******/ 	
/******/ 				function finishChunkLoading() {
/******/ 					hotChunksLoading--;
/******/ 					if(hotStatus === "prepare") {
/******/ 						if(!hotWaitingFilesMap[chunkId]) {
/******/ 							hotEnsureUpdateChunk(chunkId);
/******/ 						}
/******/ 						if(hotChunksLoading === 0 && hotWaitingFiles === 0) {
/******/ 							hotUpdateDownloaded();
/******/ 						}
/******/ 					}
/******/ 				}
/******/ 			});
/******/ 		}
/******/ 		if(Object.defineProperty) {
/******/ 			Object.defineProperty(fn, "e", {
/******/ 				enumerable: true,
/******/ 				value: ensure
/******/ 			});
/******/ 		} else {
/******/ 			fn.e = ensure;
/******/ 		}
/******/ 		return fn;
/******/ 	}
/******/ 	
/******/ 	function hotCreateModule(moduleId) { // eslint-disable-line no-unused-vars
/******/ 		var hot = {
/******/ 			// private stuff
/******/ 			_acceptedDependencies: {},
/******/ 			_declinedDependencies: {},
/******/ 			_selfAccepted: false,
/******/ 			_selfDeclined: false,
/******/ 			_disposeHandlers: [],
/******/ 	
/******/ 			// Module API
/******/ 			active: true,
/******/ 			accept: function(dep, callback) {
/******/ 				if(typeof dep === "undefined")
/******/ 					hot._selfAccepted = true;
/******/ 				else if(typeof dep === "function")
/******/ 					hot._selfAccepted = dep;
/******/ 				else if(typeof dep === "object")
/******/ 					for(var i = 0; i < dep.length; i++)
/******/ 						hot._acceptedDependencies[dep[i]] = callback;
/******/ 				else
/******/ 					hot._acceptedDependencies[dep] = callback;
/******/ 			},
/******/ 			decline: function(dep) {
/******/ 				if(typeof dep === "undefined")
/******/ 					hot._selfDeclined = true;
/******/ 				else if(typeof dep === "number")
/******/ 					hot._declinedDependencies[dep] = true;
/******/ 				else
/******/ 					for(var i = 0; i < dep.length; i++)
/******/ 						hot._declinedDependencies[dep[i]] = true;
/******/ 			},
/******/ 			dispose: function(callback) {
/******/ 				hot._disposeHandlers.push(callback);
/******/ 			},
/******/ 			addDisposeHandler: function(callback) {
/******/ 				hot._disposeHandlers.push(callback);
/******/ 			},
/******/ 			removeDisposeHandler: function(callback) {
/******/ 				var idx = hot._disposeHandlers.indexOf(callback);
/******/ 				if(idx >= 0) hot._disposeHandlers.splice(idx, 1);
/******/ 			},
/******/ 	
/******/ 			// Management API
/******/ 			check: hotCheck,
/******/ 			apply: hotApply,
/******/ 			status: function(l) {
/******/ 				if(!l) return hotStatus;
/******/ 				hotStatusHandlers.push(l);
/******/ 			},
/******/ 			addStatusHandler: function(l) {
/******/ 				hotStatusHandlers.push(l);
/******/ 			},
/******/ 			removeStatusHandler: function(l) {
/******/ 				var idx = hotStatusHandlers.indexOf(l);
/******/ 				if(idx >= 0) hotStatusHandlers.splice(idx, 1);
/******/ 			},
/******/ 	
/******/ 			//inherit from previous dispose call
/******/ 			data: hotCurrentModuleData[moduleId]
/******/ 		};
/******/ 		return hot;
/******/ 	}
/******/ 	
/******/ 	var hotStatusHandlers = [];
/******/ 	var hotStatus = "idle";
/******/ 	
/******/ 	function hotSetStatus(newStatus) {
/******/ 		hotStatus = newStatus;
/******/ 		for(var i = 0; i < hotStatusHandlers.length; i++)
/******/ 			hotStatusHandlers[i].call(null, newStatus);
/******/ 	}
/******/ 	
/******/ 	// while downloading
/******/ 	var hotWaitingFiles = 0;
/******/ 	var hotChunksLoading = 0;
/******/ 	var hotWaitingFilesMap = {};
/******/ 	var hotRequestedFilesMap = {};
/******/ 	var hotAvailibleFilesMap = {};
/******/ 	var hotCallback;
/******/ 	
/******/ 	// The update info
/******/ 	var hotUpdate, hotUpdateNewHash;
/******/ 	
/******/ 	function toModuleId(id) {
/******/ 		var isNumber = (+id) + "" === id;
/******/ 		return isNumber ? +id : id;
/******/ 	}
/******/ 	
/******/ 	function hotCheck(apply, callback) {
/******/ 		if(hotStatus !== "idle") throw new Error("check() is only allowed in idle status");
/******/ 		if(typeof apply === "function") {
/******/ 			hotApplyOnUpdate = false;
/******/ 			callback = apply;
/******/ 		} else {
/******/ 			hotApplyOnUpdate = apply;
/******/ 			callback = callback || function(err) {
/******/ 				if(err) throw err;
/******/ 			};
/******/ 		}
/******/ 		hotSetStatus("check");
/******/ 		hotDownloadManifest(function(err, update) {
/******/ 			if(err) return callback(err);
/******/ 			if(!update) {
/******/ 				hotSetStatus("idle");
/******/ 				callback(null, null);
/******/ 				return;
/******/ 			}
/******/ 	
/******/ 			hotRequestedFilesMap = {};
/******/ 			hotAvailibleFilesMap = {};
/******/ 			hotWaitingFilesMap = {};
/******/ 			for(var i = 0; i < update.c.length; i++)
/******/ 				hotAvailibleFilesMap[update.c[i]] = true;
/******/ 			hotUpdateNewHash = update.h;
/******/ 	
/******/ 			hotSetStatus("prepare");
/******/ 			hotCallback = callback;
/******/ 			hotUpdate = {};
/******/ 			var chunkId = 0;
/******/ 			{ // eslint-disable-line no-lone-blocks
/******/ 				/*globals chunkId */
/******/ 				hotEnsureUpdateChunk(chunkId);
/******/ 			}
/******/ 			if(hotStatus === "prepare" && hotChunksLoading === 0 && hotWaitingFiles === 0) {
/******/ 				hotUpdateDownloaded();
/******/ 			}
/******/ 		});
/******/ 	}
/******/ 	
/******/ 	function hotAddUpdateChunk(chunkId, moreModules) { // eslint-disable-line no-unused-vars
/******/ 		if(!hotAvailibleFilesMap[chunkId] || !hotRequestedFilesMap[chunkId])
/******/ 			return;
/******/ 		hotRequestedFilesMap[chunkId] = false;
/******/ 		for(var moduleId in moreModules) {
/******/ 			if(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
/******/ 				hotUpdate[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 		}
/******/ 		if(--hotWaitingFiles === 0 && hotChunksLoading === 0) {
/******/ 			hotUpdateDownloaded();
/******/ 		}
/******/ 	}
/******/ 	
/******/ 	function hotEnsureUpdateChunk(chunkId) {
/******/ 		if(!hotAvailibleFilesMap[chunkId]) {
/******/ 			hotWaitingFilesMap[chunkId] = true;
/******/ 		} else {
/******/ 			hotRequestedFilesMap[chunkId] = true;
/******/ 			hotWaitingFiles++;
/******/ 			hotDownloadUpdateChunk(chunkId);
/******/ 		}
/******/ 	}
/******/ 	
/******/ 	function hotUpdateDownloaded() {
/******/ 		hotSetStatus("ready");
/******/ 		var callback = hotCallback;
/******/ 		hotCallback = null;
/******/ 		if(!callback) return;
/******/ 		if(hotApplyOnUpdate) {
/******/ 			hotApply(hotApplyOnUpdate, callback);
/******/ 		} else {
/******/ 			var outdatedModules = [];
/******/ 			for(var id in hotUpdate) {
/******/ 				if(Object.prototype.hasOwnProperty.call(hotUpdate, id)) {
/******/ 					outdatedModules.push(toModuleId(id));
/******/ 				}
/******/ 			}
/******/ 			callback(null, outdatedModules);
/******/ 		}
/******/ 	}
/******/ 	
/******/ 	function hotApply(options, callback) {
/******/ 		if(hotStatus !== "ready") throw new Error("apply() is only allowed in ready status");
/******/ 		if(typeof options === "function") {
/******/ 			callback = options;
/******/ 			options = {};
/******/ 		} else if(options && typeof options === "object") {
/******/ 			callback = callback || function(err) {
/******/ 				if(err) throw err;
/******/ 			};
/******/ 		} else {
/******/ 			options = {};
/******/ 			callback = callback || function(err) {
/******/ 				if(err) throw err;
/******/ 			};
/******/ 		}
/******/ 	
/******/ 		function getAffectedStuff(module) {
/******/ 			var outdatedModules = [module];
/******/ 			var outdatedDependencies = {};
/******/ 	
/******/ 			var queue = outdatedModules.slice();
/******/ 			while(queue.length > 0) {
/******/ 				var moduleId = queue.pop();
/******/ 				var module = installedModules[moduleId];
/******/ 				if(!module || module.hot._selfAccepted)
/******/ 					continue;
/******/ 				if(module.hot._selfDeclined) {
/******/ 					return new Error("Aborted because of self decline: " + moduleId);
/******/ 				}
/******/ 				if(moduleId === 0) {
/******/ 					return;
/******/ 				}
/******/ 				for(var i = 0; i < module.parents.length; i++) {
/******/ 					var parentId = module.parents[i];
/******/ 					var parent = installedModules[parentId];
/******/ 					if(parent.hot._declinedDependencies[moduleId]) {
/******/ 						return new Error("Aborted because of declined dependency: " + moduleId + " in " + parentId);
/******/ 					}
/******/ 					if(outdatedModules.indexOf(parentId) >= 0) continue;
/******/ 					if(parent.hot._acceptedDependencies[moduleId]) {
/******/ 						if(!outdatedDependencies[parentId])
/******/ 							outdatedDependencies[parentId] = [];
/******/ 						addAllToSet(outdatedDependencies[parentId], [moduleId]);
/******/ 						continue;
/******/ 					}
/******/ 					delete outdatedDependencies[parentId];
/******/ 					outdatedModules.push(parentId);
/******/ 					queue.push(parentId);
/******/ 				}
/******/ 			}
/******/ 	
/******/ 			return [outdatedModules, outdatedDependencies];
/******/ 		}
/******/ 	
/******/ 		function addAllToSet(a, b) {
/******/ 			for(var i = 0; i < b.length; i++) {
/******/ 				var item = b[i];
/******/ 				if(a.indexOf(item) < 0)
/******/ 					a.push(item);
/******/ 			}
/******/ 		}
/******/ 	
/******/ 		// at begin all updates modules are outdated
/******/ 		// the "outdated" status can propagate to parents if they don't accept the children
/******/ 		var outdatedDependencies = {};
/******/ 		var outdatedModules = [];
/******/ 		var appliedUpdate = {};
/******/ 		for(var id in hotUpdate) {
/******/ 			if(Object.prototype.hasOwnProperty.call(hotUpdate, id)) {
/******/ 				var moduleId = toModuleId(id);
/******/ 				var result = getAffectedStuff(moduleId);
/******/ 				if(!result) {
/******/ 					if(options.ignoreUnaccepted)
/******/ 						continue;
/******/ 					hotSetStatus("abort");
/******/ 					return callback(new Error("Aborted because " + moduleId + " is not accepted"));
/******/ 				}
/******/ 				if(result instanceof Error) {
/******/ 					hotSetStatus("abort");
/******/ 					return callback(result);
/******/ 				}
/******/ 				appliedUpdate[moduleId] = hotUpdate[moduleId];
/******/ 				addAllToSet(outdatedModules, result[0]);
/******/ 				for(var moduleId in result[1]) {
/******/ 					if(Object.prototype.hasOwnProperty.call(result[1], moduleId)) {
/******/ 						if(!outdatedDependencies[moduleId])
/******/ 							outdatedDependencies[moduleId] = [];
/******/ 						addAllToSet(outdatedDependencies[moduleId], result[1][moduleId]);
/******/ 					}
/******/ 				}
/******/ 			}
/******/ 		}
/******/ 	
/******/ 		// Store self accepted outdated modules to require them later by the module system
/******/ 		var outdatedSelfAcceptedModules = [];
/******/ 		for(var i = 0; i < outdatedModules.length; i++) {
/******/ 			var moduleId = outdatedModules[i];
/******/ 			if(installedModules[moduleId] && installedModules[moduleId].hot._selfAccepted)
/******/ 				outdatedSelfAcceptedModules.push({
/******/ 					module: moduleId,
/******/ 					errorHandler: installedModules[moduleId].hot._selfAccepted
/******/ 				});
/******/ 		}
/******/ 	
/******/ 		// Now in "dispose" phase
/******/ 		hotSetStatus("dispose");
/******/ 		var queue = outdatedModules.slice();
/******/ 		while(queue.length > 0) {
/******/ 			var moduleId = queue.pop();
/******/ 			var module = installedModules[moduleId];
/******/ 			if(!module) continue;
/******/ 	
/******/ 			var data = {};
/******/ 	
/******/ 			// Call dispose handlers
/******/ 			var disposeHandlers = module.hot._disposeHandlers;
/******/ 			for(var j = 0; j < disposeHandlers.length; j++) {
/******/ 				var cb = disposeHandlers[j];
/******/ 				cb(data);
/******/ 			}
/******/ 			hotCurrentModuleData[moduleId] = data;
/******/ 	
/******/ 			// disable module (this disables requires from this module)
/******/ 			module.hot.active = false;
/******/ 	
/******/ 			// remove module from cache
/******/ 			delete installedModules[moduleId];
/******/ 	
/******/ 			// remove "parents" references from all children
/******/ 			for(var j = 0; j < module.children.length; j++) {
/******/ 				var child = installedModules[module.children[j]];
/******/ 				if(!child) continue;
/******/ 				var idx = child.parents.indexOf(moduleId);
/******/ 				if(idx >= 0) {
/******/ 					child.parents.splice(idx, 1);
/******/ 				}
/******/ 			}
/******/ 		}
/******/ 	
/******/ 		// remove outdated dependency from module children
/******/ 		for(var moduleId in outdatedDependencies) {
/******/ 			if(Object.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)) {
/******/ 				var module = installedModules[moduleId];
/******/ 				var moduleOutdatedDependencies = outdatedDependencies[moduleId];
/******/ 				for(var j = 0; j < moduleOutdatedDependencies.length; j++) {
/******/ 					var dependency = moduleOutdatedDependencies[j];
/******/ 					var idx = module.children.indexOf(dependency);
/******/ 					if(idx >= 0) module.children.splice(idx, 1);
/******/ 				}
/******/ 			}
/******/ 		}
/******/ 	
/******/ 		// Not in "apply" phase
/******/ 		hotSetStatus("apply");
/******/ 	
/******/ 		hotCurrentHash = hotUpdateNewHash;
/******/ 	
/******/ 		// insert new code
/******/ 		for(var moduleId in appliedUpdate) {
/******/ 			if(Object.prototype.hasOwnProperty.call(appliedUpdate, moduleId)) {
/******/ 				modules[moduleId] = appliedUpdate[moduleId];
/******/ 			}
/******/ 		}
/******/ 	
/******/ 		// call accept handlers
/******/ 		var error = null;
/******/ 		for(var moduleId in outdatedDependencies) {
/******/ 			if(Object.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)) {
/******/ 				var module = installedModules[moduleId];
/******/ 				var moduleOutdatedDependencies = outdatedDependencies[moduleId];
/******/ 				var callbacks = [];
/******/ 				for(var i = 0; i < moduleOutdatedDependencies.length; i++) {
/******/ 					var dependency = moduleOutdatedDependencies[i];
/******/ 					var cb = module.hot._acceptedDependencies[dependency];
/******/ 					if(callbacks.indexOf(cb) >= 0) continue;
/******/ 					callbacks.push(cb);
/******/ 				}
/******/ 				for(var i = 0; i < callbacks.length; i++) {
/******/ 					var cb = callbacks[i];
/******/ 					try {
/******/ 						cb(outdatedDependencies);
/******/ 					} catch(err) {
/******/ 						if(!error)
/******/ 							error = err;
/******/ 					}
/******/ 				}
/******/ 			}
/******/ 		}
/******/ 	
/******/ 		// Load self accepted modules
/******/ 		for(var i = 0; i < outdatedSelfAcceptedModules.length; i++) {
/******/ 			var item = outdatedSelfAcceptedModules[i];
/******/ 			var moduleId = item.module;
/******/ 			hotCurrentParents = [moduleId];
/******/ 			try {
/******/ 				__webpack_require__(moduleId);
/******/ 			} catch(err) {
/******/ 				if(typeof item.errorHandler === "function") {
/******/ 					try {
/******/ 						item.errorHandler(err);
/******/ 					} catch(err) {
/******/ 						if(!error)
/******/ 							error = err;
/******/ 					}
/******/ 				} else if(!error)
/******/ 					error = err;
/******/ 			}
/******/ 		}
/******/ 	
/******/ 		// handle errors in accept handlers and self accepted module load
/******/ 		if(error) {
/******/ 			hotSetStatus("fail");
/******/ 			return callback(error);
/******/ 		}
/******/ 	
/******/ 		hotSetStatus("idle");
/******/ 		callback(null, outdatedModules);
/******/ 	}
/******/
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false,
/******/ 			hot: hotCreateModule(moduleId),
/******/ 			parents: hotCurrentParents,
/******/ 			children: []
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, hotCreateRequire(moduleId));
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// __webpack_hash__
/******/ 	__webpack_require__.h = function() { return hotCurrentHash; };
/******/
/******/ 	// Load entry module and return exports
/******/ 	return hotCreateRequire(0)(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(496);
	module.exports = __webpack_require__(188);


/***/ },
/* 1 */
/***/ function(module, exports) {

	// shim for using process in browser
	
	var process = module.exports = {};
	var queue = [];
	var draining = false;
	var currentQueue;
	var queueIndex = -1;
	
	function cleanUpNextTick() {
	    draining = false;
	    if (currentQueue.length) {
	        queue = currentQueue.concat(queue);
	    } else {
	        queueIndex = -1;
	    }
	    if (queue.length) {
	        drainQueue();
	    }
	}
	
	function drainQueue() {
	    if (draining) {
	        return;
	    }
	    var timeout = setTimeout(cleanUpNextTick);
	    draining = true;
	
	    var len = queue.length;
	    while(len) {
	        currentQueue = queue;
	        queue = [];
	        while (++queueIndex < len) {
	            if (currentQueue) {
	                currentQueue[queueIndex].run();
	            }
	        }
	        queueIndex = -1;
	        len = queue.length;
	    }
	    currentQueue = null;
	    draining = false;
	    clearTimeout(timeout);
	}
	
	process.nextTick = function (fun) {
	    var args = new Array(arguments.length - 1);
	    if (arguments.length > 1) {
	        for (var i = 1; i < arguments.length; i++) {
	            args[i - 1] = arguments[i];
	        }
	    }
	    queue.push(new Item(fun, args));
	    if (queue.length === 1 && !draining) {
	        setTimeout(drainQueue, 0);
	    }
	};
	
	// v8 likes predictible objects
	function Item(fun, array) {
	    this.fun = fun;
	    this.array = array;
	}
	Item.prototype.run = function () {
	    this.fun.apply(null, this.array);
	};
	process.title = 'browser';
	process.browser = true;
	process.env = {};
	process.argv = [];
	process.version = ''; // empty string to avoid regexp issues
	process.versions = {};
	
	function noop() {}
	
	process.on = noop;
	process.addListener = noop;
	process.once = noop;
	process.off = noop;
	process.removeListener = noop;
	process.removeAllListeners = noop;
	process.emit = noop;
	
	process.binding = function (name) {
	    throw new Error('process.binding is not supported');
	};
	
	process.cwd = function () { return '/' };
	process.chdir = function (dir) {
	    throw new Error('process.chdir is not supported');
	};
	process.umask = function() { return 0; };


/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	var ie, print, wiki;
	
	ie = __webpack_require__(32);
	
	wiki = __webpack_require__(190);
	
	print = function(type, message, style) {
	  style = style || "";
	  if (ie || typeof InstallTrigger !== 'undefined') {
	    console.log("[ D3plus ] " + message);
	  } else if (type.indexOf("group") === 0) {
	    console[type]("%c[ D3plus ]%c " + message, "font-weight: 800;" + "color: #b35c1e;" + "margin-left: 0px;", "font-weight:200;" + style);
	  } else {
	    console[type]("%c" + message, style + "font-weight:200;");
	  }
	};
	
	print.comment = function(message) {
	  this("log", message, "color:#aaa;");
	};
	
	print.error = function(message, url) {
	  this("groupCollapsed", "ERROR: " + message, "font-weight:800;color:#D74B03;");
	  this.stack();
	  this.wiki(url);
	  this.groupEnd();
	};
	
	print.group = function(message) {
	  this("group", message, "color:#888;");
	};
	
	print.groupCollapsed = function(message) {
	  this("groupCollapsed", message, "color:#888;");
	};
	
	print.groupEnd = function() {
	  if (!ie) {
	    console.groupEnd();
	  }
	};
	
	print.log = function(message) {
	  this("log", message, "color:#444444;");
	};
	
	print.stack = function() {
	  var err, line, message, page, splitter, stack, url;
	  if (!ie) {
	    err = new Error();
	    if (err.stack) {
	      stack = err.stack.split("\n");
	      stack = stack.filter(function(e) {
	        return e.indexOf("Error") !== 0 && e.indexOf("d3plus.js:") < 0 && e.indexOf("d3plus.min.js:") < 0;
	      });
	      if (stack.length && stack[0].length) {
	        splitter = window.chrome ? "at " : "@";
	        url = stack[0];
	        if (url.indexOf(splitter) >= 0) {
	          url = url.split(splitter)[1];
	        }
	        stack = url.split(":");
	        if (stack.length === 3) {
	          stack.pop();
	        }
	        line = stack.pop();
	        page = stack.join(":").split("/");
	        page = page[page.length - 1];
	        message = "line " + line + " of " + page + ": " + url;
	        this("log", message, "color:#D74B03;");
	      }
	    }
	  }
	};
	
	print.time = function(message) {
	  if (!ie) {
	    console.time(message);
	  }
	};
	
	print.timeEnd = function(message) {
	  if (!ie) {
	    console.timeEnd(message);
	  }
	};
	
	print.warning = function(message, url) {
	  this("groupCollapsed", message, "color:#888;");
	  this.stack();
	  this.wiki(url);
	  this.groupEnd();
	};
	
	print.wiki = function(url) {
	  if (url) {
	    if (url in wiki) {
	      url = d3plus.repo + "wiki/" + wiki[url];
	    }
	    this("log", "documentation: " + url, "color:#aaa;");
	  }
	};
	
	module.exports = print;


/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	var cacheInit, checkAttrs, checkData, fetch, fetchArray, filterArray, find, uniqueValues, validObject, valueParse;
	
	validObject = __webpack_require__(7);
	
	uniqueValues = __webpack_require__(8);
	
	find = function(vars, node, variable, depth) {
	  var cache, nodeObject, returned, val;
	  nodeObject = validObject(node);
	  if (typeof variable === "function" && nodeObject) {
	    return variable(node, vars);
	  }
	  if (nodeObject) {
	    if (variable in node) {
	      return node[variable];
	    }
	    cache = vars.data.cacheID + "_" + depth;
	    cacheInit(node, cache, vars);
	    if (variable in node.d3plus.data[cache]) {
	      return node.d3plus.data[cache][variable];
	    }
	    if (depth in node) {
	      node = node[depth];
	    } else if (vars.id.value in node) {
	      node = node[vars.id.value];
	      if (depth !== variable) {
	        returned = checkData(vars, node, depth, vars.id.value);
	      }
	      if (returned === null || returned === void 0) {
	        returned = checkAttrs(vars, node, depth, vars.id.value);
	      }
	      if (returned === null || returned === void 0) {
	        return null;
	      } else if (depth === variable) {
	        return returned;
	      }
	      node = returned;
	    } else {
	      return null;
	    }
	  }
	  if (node instanceof Array && !validObject(node[0])) {
	    node = uniqueValues(node);
	  }
	  if (node instanceof Array && validObject(node[0])) {
	    val = uniqueValues(node, variable);
	    if (val.length) {
	      return val;
	    }
	  }
	  val = checkData(vars, node, variable, depth);
	  if (val) {
	    return val;
	  }
	  val = checkAttrs(vars, node, variable, depth);
	  return val;
	};
	
	checkData = function(vars, node, variable, depth) {
	  var val;
	  if (vars.data.viz instanceof Array && variable in vars.data.keys) {
	    val = uniqueValues(filterArray(vars.data.viz, node, depth), variable);
	  }
	  if (val && val.length) {
	    return val;
	  } else {
	    return null;
	  }
	};
	
	checkAttrs = function(vars, node, variable, depth) {
	  var attrList, n, val, vals;
	  if ("attrs" in vars && vars.attrs.value && variable in vars.attrs.keys) {
	    if (validObject(vars.attrs.value) && depth in vars.attrs.value) {
	      attrList = vars.attrs.value[depth];
	    } else {
	      attrList = vars.attrs.value;
	    }
	    if (attrList instanceof Array) {
	      val = uniqueValues(filterArray(attrList, node, depth), variable);
	      if (val.length) {
	        return val;
	      }
	    } else if (node instanceof Array) {
	      attrList = [
	        (function() {
	          var j, len, results;
	          if (n in attrList) {
	            results = [];
	            for (j = 0, len = node.length; j < len; j++) {
	              n = node[j];
	              results.push(attrList[n]);
	            }
	            return results;
	          }
	        })()
	      ];
	      if (attrList.length) {
	        vals = uniqueValues(attrList, variable);
	        if (vals.length) {
	          return vals;
	        }
	      }
	    } else if (node in attrList) {
	      return attrList[node][variable];
	    }
	  }
	  return null;
	};
	
	filterArray = function(arr, node, depth) {
	  if (node instanceof Array) {
	    return arr.filter(function(d) {
	      return node.indexOf(d[depth]) >= 0;
	    });
	  } else {
	    return arr.filter(function(d) {
	      return d[depth] === node;
	    });
	  }
	};
	
	cacheInit = function(node, cache, vars) {
	  if (!("d3plus" in node)) {
	    node.d3plus = {};
	  }
	  if (!("data" in node.d3plus)) {
	    node.d3plus.data = {};
	  }
	  if (vars.data.changed || (vars.attrs && vars.attrs.changed) || !(cache in node.d3plus.data)) {
	    node.d3plus.data[cache] = {};
	  }
	  return node;
	};
	
	valueParse = function(vars, node, depth, variable, val) {
	  var cache, d, i, j, len, timeVar, v;
	  if (val === null) {
	    return val;
	  }
	  timeVar = "time" in vars && vars.time.value === variable;
	  if (!(val instanceof Array)) {
	    val = [val];
	  }
	  for (i = j = 0, len = val.length; j < len; i = ++j) {
	    v = val[i];
	    if (timeVar && v !== null && v.constructor !== Date) {
	      v = v + "";
	      if (v.length === 4 && parseInt(v) + "" === v) {
	        v += "/01/01";
	      }
	      d = new Date(v);
	      if (d !== "Invalid Date") {
	        val[i] = d;
	      }
	    }
	  }
	  if (val.length === 1) {
	    val = val[0];
	  }
	  if (val !== null && validObject(node) && typeof variable === "string" && !(variable in node)) {
	    cache = vars.data.cacheID + "_" + depth;
	    node.d3plus.data[cache][variable] = val;
	  }
	  return val;
	};
	
	fetchArray = function(vars, arr, variable, depth) {
	  var item, j, len, v, val;
	  val = [];
	  for (j = 0, len = arr.length; j < len; j++) {
	    item = arr[j];
	    if (validObject(item)) {
	      v = find(vars, item, variable, depth);
	      val.push(valueParse(vars, item, depth, variable, v));
	    } else {
	      val.push(item);
	    }
	  }
	  if (typeof val[0] !== "number") {
	    val = uniqueValues(val);
	  }
	  if (val.length === 1) {
	    return val[0];
	  } else {
	    return val;
	  }
	};
	
	fetch = function(vars, node, variable, depth) {
	  var nodeObject, val;
	  if (!variable) {
	    return null;
	  }
	  if (typeof variable === "number") {
	    return variable;
	  }
	  nodeObject = validObject(node);
	  if (!depth) {
	    depth = vars.id.value;
	  }
	  if (nodeObject && node.values instanceof Array) {
	    val = fetchArray(vars, node.values, variable, depth);
	  } else if (nodeObject && node[variable] instanceof Array) {
	    val = fetchArray(vars, node[variable], variable, depth);
	  } else if (node instanceof Array) {
	    val = fetchArray(vars, node, variable, depth);
	  } else {
	    val = find(vars, node, variable, depth);
	    val = valueParse(vars, node, depth, variable, val);
	  }
	  return val;
	};
	
	module.exports = fetch;


/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule invariant
	 */
	
	'use strict';
	
	/**
	 * Use invariant() to assert state which your program assumes to be true.
	 *
	 * Provide sprintf-style format (only %s is supported) and arguments
	 * to provide information about what broke and what you were
	 * expecting.
	 *
	 * The invariant message will be stripped in production, but the invariant
	 * will remain to ensure logic does not differ in production.
	 */
	
	function invariant(condition, format, a, b, c, d, e, f) {
	  if (process.env.NODE_ENV !== 'production') {
	    if (format === undefined) {
	      throw new Error('invariant requires an error message argument');
	    }
	  }
	
	  if (!condition) {
	    var error;
	    if (format === undefined) {
	      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
	    } else {
	      var args = [a, b, c, d, e, f];
	      var argIndex = 0;
	      error = new Error(format.replace(/%s/g, function () {
	        return args[argIndex++];
	      }));
	      error.name = 'Invariant Violation';
	    }
	
	    error.framesToPop = 1; // we don't care about invariant's own frame
	    throw error;
	  }
	}
	
	module.exports = invariant;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 5 */
/***/ function(module, exports) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule Object.assign
	 */
	
	// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.assign
	
	'use strict';
	
	function assign(target, sources) {
	  if (target == null) {
	    throw new TypeError('Object.assign target cannot be null or undefined');
	  }
	
	  var to = Object(target);
	  var hasOwnProperty = Object.prototype.hasOwnProperty;
	
	  for (var nextIndex = 1; nextIndex < arguments.length; nextIndex++) {
	    var nextSource = arguments[nextIndex];
	    if (nextSource == null) {
	      continue;
	    }
	
	    var from = Object(nextSource);
	
	    // We don't currently support accessors nor proxies. Therefore this
	    // copy cannot throw. If we ever supported this then we must handle
	    // exceptions and side-effects. We don't support symbols so they won't
	    // be transferred.
	
	    for (var key in from) {
	      if (hasOwnProperty.call(from, key)) {
	        to[key] = from[key];
	      }
	    }
	  }
	
	  return to;
	}
	
	module.exports = assign;

/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule warning
	 */
	
	'use strict';
	
	var emptyFunction = __webpack_require__(27);
	
	/**
	 * Similar to invariant but only logs a warning if the condition is not met.
	 * This can be used to log issues in development environments in critical
	 * paths. Removing the logging code for production environments will keep the
	 * same logic and follow the same code paths.
	 */
	
	var warning = emptyFunction;
	
	if (process.env.NODE_ENV !== 'production') {
	  warning = function (condition, format) {
	    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
	      args[_key - 2] = arguments[_key];
	    }
	
	    if (format === undefined) {
	      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
	    }
	
	    if (format.indexOf('Failed Composite propType: ') === 0) {
	      return; // Ignore CompositeComponent proptype check.
	    }
	
	    if (!condition) {
	      var argIndex = 0;
	      var message = 'Warning: ' + format.replace(/%s/g, function () {
	        return args[argIndex++];
	      });
	      if (typeof console !== 'undefined') {
	        console.error(message);
	      }
	      try {
	        // --- Welcome to debugging React ---
	        // This error was thrown as a convenience so that you can use this stack
	        // to find the callsite that caused this warning to fire.
	        throw new Error(message);
	      } catch (x) {}
	    }
	  };
	}
	
	module.exports = warning;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 7 */
/***/ function(module, exports) {

	
	/**
	 * This function returns true if the variable passed is a literal javascript keyed Object. It's a small, simple function, but it catches some edge-cases that can throw off your code (such as Arrays and `null`).
	 * @method d3plus.object.validate
	 * @for d3plus.object
	 * @param obj {Object} The object to validate.
	 * @return {Boolean}
	 */
	module.exports = function(obj) {
	  return obj && obj.constructor === Object;
	};


/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	var objectValidate, uniques;
	
	objectValidate = __webpack_require__(7);
	
	uniques = function(data, value, fetch, vars, depth, sorted) {
	  var check, d, i, j, k, len, len1, len2, len3, lookups, m, v, val, vals;
	  if (data === void 0) {
	    return [];
	  }
	  if (vars && depth === void 0) {
	    depth = vars.id.value;
	  }
	  sorted = (true === sorted && sorted === void 0);
	  if (!(data instanceof Array)) {
	    data = [data];
	  }
	  lookups = [];
	  if (value === void 0) {
	    return data.reduce(function(p, c) {
	      var lookup;
	      lookup = JSON.stringify(c);
	      if (lookups.indexOf(lookup) < 0) {
	        if (p.indexOf(c) < 0) {
	          p.push(c);
	        }
	        lookups.push(lookup);
	      }
	      return p;
	    }, []);
	  }
	  vals = [];
	  check = function(v) {
	    var l;
	    if (v !== void 0 && v !== null) {
	      l = JSON.stringify(v);
	      if (lookups.indexOf(l) < 0) {
	        vals.push(v);
	        return lookups.push(l);
	      }
	    }
	  };
	  if (typeof fetch === "function" && vars) {
	    for (i = 0, len = data.length; i < len; i++) {
	      d = data[i];
	      val = uniques(fetch(vars, d, value, depth));
	      for (j = 0, len1 = val.length; j < len1; j++) {
	        v = val[j];
	        check(v);
	      }
	    }
	  } else if (typeof value === "function") {
	    for (k = 0, len2 = data.length; k < len2; k++) {
	      d = data[k];
	      val = value(d);
	      check(val);
	    }
	  } else {
	    for (m = 0, len3 = data.length; m < len3; m++) {
	      d = data[m];
	      if (objectValidate(d)) {
	        val = d[value];
	        check(val);
	      }
	    }
	  }
	  if (sorted) {
	    return vals.sort(function(a, b) {
	      return a - b;
	    });
	  } else {
	    return vals;
	  }
	};
	
	module.exports = uniques;


/***/ },
/* 9 */
/***/ function(module, exports, __webpack_require__) {

	var ie, touch;
	
	ie = __webpack_require__(32);
	
	touch = __webpack_require__(51);
	
	if (touch) {
	  module.exports = {
	    click: "click",
	    down: "touchstart",
	    up: "touchend",
	    over: ie ? "mouseenter" : "mouseover",
	    out: ie ? "mouseleave" : "mouseout",
	    move: "mousemove"
	  };
	} else {
	  module.exports = {
	    click: "click",
	    down: "mousedown",
	    up: "mouseup",
	    over: ie ? "mouseenter" : "mouseover",
	    out: ie ? "mouseleave" : "mouseout",
	    move: "mousemove"
	  };
	}


/***/ },
/* 10 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ExecutionEnvironment
	 */
	
	'use strict';
	
	var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);
	
	/**
	 * Simple, lightweight module assisting with the detection and context of
	 * Worker. Helps avoid circular dependencies and allows code to reason about
	 * whether or not they are in a Worker, even if they never include the main
	 * `ReactWorker` dependency.
	 */
	var ExecutionEnvironment = {
	
	  canUseDOM: canUseDOM,
	
	  canUseWorkers: typeof Worker !== 'undefined',
	
	  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),
	
	  canUseViewport: canUseDOM && !!window.screen,
	
	  isInWorker: !canUseDOM // For now, this is true - might change in the future.
	
	};
	
	module.exports = ExecutionEnvironment;

/***/ },
/* 11 */
/***/ function(module, exports, __webpack_require__) {

	var copy, objectMerge, objectValidate;
	
	objectMerge = __webpack_require__(29);
	
	objectValidate = __webpack_require__(7);
	
	copy = function(variable) {
	  var ret;
	  if (objectValidate(variable)) {
	    return objectMerge(variable);
	  } else if (variable instanceof Array) {
	    ret = [];
	    variable.forEach(function(o) {
	      return ret.push(copy(o));
	    });
	    return ret;
	  } else {
	    return variable;
	  }
	};
	
	module.exports = copy;


/***/ },
/* 12 */
/***/ function(module, exports) {

	module.exports = function(g) {
	  if (!g) {
	    g = false;
	  }
	  return {
	    accepted: [false, Array, Function, Number, Object, String],
	    callback: {
	      accepted: [false, Function],
	      value: false
	    },
	    global: g,
	    process: Array,
	    value: []
	  };
	};


/***/ },
/* 13 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMount
	 */
	
	'use strict';
	
	var DOMProperty = __webpack_require__(42);
	var ReactBrowserEventEmitter = __webpack_require__(71);
	var ReactCurrentOwner = __webpack_require__(35);
	var ReactDOMFeatureFlags = __webpack_require__(157);
	var ReactElement = __webpack_require__(18);
	var ReactEmptyComponentRegistry = __webpack_require__(164);
	var ReactInstanceHandles = __webpack_require__(49);
	var ReactInstanceMap = __webpack_require__(62);
	var ReactMarkupChecksum = __webpack_require__(167);
	var ReactPerf = __webpack_require__(22);
	var ReactReconciler = __webpack_require__(43);
	var ReactUpdateQueue = __webpack_require__(107);
	var ReactUpdates = __webpack_require__(24);
	
	var assign = __webpack_require__(5);
	var emptyObject = __webpack_require__(64);
	var containsNode = __webpack_require__(179);
	var instantiateReactComponent = __webpack_require__(114);
	var invariant = __webpack_require__(4);
	var setInnerHTML = __webpack_require__(78);
	var shouldUpdateReactComponent = __webpack_require__(117);
	var validateDOMNesting = __webpack_require__(119);
	var warning = __webpack_require__(6);
	
	var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
	var nodeCache = {};
	
	var ELEMENT_NODE_TYPE = 1;
	var DOC_NODE_TYPE = 9;
	var DOCUMENT_FRAGMENT_NODE_TYPE = 11;
	
	var ownerDocumentContextKey = '__ReactMount_ownerDocument$' + Math.random().toString(36).slice(2);
	
	/** Mapping from reactRootID to React component instance. */
	var instancesByReactRootID = {};
	
	/** Mapping from reactRootID to `container` nodes. */
	var containersByReactRootID = {};
	
	if (process.env.NODE_ENV !== 'production') {
	  /** __DEV__-only mapping from reactRootID to root elements. */
	  var rootElementsByReactRootID = {};
	}
	
	// Used to store breadth-first search state in findComponentRoot.
	var findComponentRootReusableArray = [];
	
	/**
	 * Finds the index of the first character
	 * that's not common between the two given strings.
	 *
	 * @return {number} the index of the character where the strings diverge
	 */
	function firstDifferenceIndex(string1, string2) {
	  var minLen = Math.min(string1.length, string2.length);
	  for (var i = 0; i < minLen; i++) {
	    if (string1.charAt(i) !== string2.charAt(i)) {
	      return i;
	    }
	  }
	  return string1.length === string2.length ? -1 : minLen;
	}
	
	/**
	 * @param {DOMElement|DOMDocument} container DOM element that may contain
	 * a React component
	 * @return {?*} DOM element that may have the reactRoot ID, or null.
	 */
	function getReactRootElementInContainer(container) {
	  if (!container) {
	    return null;
	  }
	
	  if (container.nodeType === DOC_NODE_TYPE) {
	    return container.documentElement;
	  } else {
	    return container.firstChild;
	  }
	}
	
	/**
	 * @param {DOMElement} container DOM element that may contain a React component.
	 * @return {?string} A "reactRoot" ID, if a React component is rendered.
	 */
	function getReactRootID(container) {
	  var rootElement = getReactRootElementInContainer(container);
	  return rootElement && ReactMount.getID(rootElement);
	}
	
	/**
	 * Accessing node[ATTR_NAME] or calling getAttribute(ATTR_NAME) on a form
	 * element can return its control whose name or ID equals ATTR_NAME. All
	 * DOM nodes support `getAttributeNode` but this can also get called on
	 * other objects so just return '' if we're given something other than a
	 * DOM node (such as window).
	 *
	 * @param {?DOMElement|DOMWindow|DOMDocument|DOMTextNode} node DOM node.
	 * @return {string} ID of the supplied `domNode`.
	 */
	function getID(node) {
	  var id = internalGetID(node);
	  if (id) {
	    if (nodeCache.hasOwnProperty(id)) {
	      var cached = nodeCache[id];
	      if (cached !== node) {
	        !!isValid(cached, id) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactMount: Two valid but unequal nodes with the same `%s`: %s', ATTR_NAME, id) : invariant(false) : undefined;
	
	        nodeCache[id] = node;
	      }
	    } else {
	      nodeCache[id] = node;
	    }
	  }
	
	  return id;
	}
	
	function internalGetID(node) {
	  // If node is something like a window, document, or text node, none of
	  // which support attributes or a .getAttribute method, gracefully return
	  // the empty string, as if the attribute were missing.
	  return node && node.getAttribute && node.getAttribute(ATTR_NAME) || '';
	}
	
	/**
	 * Sets the React-specific ID of the given node.
	 *
	 * @param {DOMElement} node The DOM node whose ID will be set.
	 * @param {string} id The value of the ID attribute.
	 */
	function setID(node, id) {
	  var oldID = internalGetID(node);
	  if (oldID !== id) {
	    delete nodeCache[oldID];
	  }
	  node.setAttribute(ATTR_NAME, id);
	  nodeCache[id] = node;
	}
	
	/**
	 * Finds the node with the supplied React-generated DOM ID.
	 *
	 * @param {string} id A React-generated DOM ID.
	 * @return {DOMElement} DOM node with the suppled `id`.
	 * @internal
	 */
	function getNode(id) {
	  if (!nodeCache.hasOwnProperty(id) || !isValid(nodeCache[id], id)) {
	    nodeCache[id] = ReactMount.findReactNodeByID(id);
	  }
	  return nodeCache[id];
	}
	
	/**
	 * Finds the node with the supplied public React instance.
	 *
	 * @param {*} instance A public React instance.
	 * @return {?DOMElement} DOM node with the suppled `id`.
	 * @internal
	 */
	function getNodeFromInstance(instance) {
	  var id = ReactInstanceMap.get(instance)._rootNodeID;
	  if (ReactEmptyComponentRegistry.isNullComponentID(id)) {
	    return null;
	  }
	  if (!nodeCache.hasOwnProperty(id) || !isValid(nodeCache[id], id)) {
	    nodeCache[id] = ReactMount.findReactNodeByID(id);
	  }
	  return nodeCache[id];
	}
	
	/**
	 * A node is "valid" if it is contained by a currently mounted container.
	 *
	 * This means that the node does not have to be contained by a document in
	 * order to be considered valid.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @param {string} id The expected ID of the node.
	 * @return {boolean} Whether the node is contained by a mounted container.
	 */
	function isValid(node, id) {
	  if (node) {
	    !(internalGetID(node) === id) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactMount: Unexpected modification of `%s`', ATTR_NAME) : invariant(false) : undefined;
	
	    var container = ReactMount.findReactContainerForID(id);
	    if (container && containsNode(container, node)) {
	      return true;
	    }
	  }
	
	  return false;
	}
	
	/**
	 * Causes the cache to forget about one React-specific ID.
	 *
	 * @param {string} id The ID to forget.
	 */
	function purgeID(id) {
	  delete nodeCache[id];
	}
	
	var deepestNodeSoFar = null;
	function findDeepestCachedAncestorImpl(ancestorID) {
	  var ancestor = nodeCache[ancestorID];
	  if (ancestor && isValid(ancestor, ancestorID)) {
	    deepestNodeSoFar = ancestor;
	  } else {
	    // This node isn't populated in the cache, so presumably none of its
	    // descendants are. Break out of the loop.
	    return false;
	  }
	}
	
	/**
	 * Return the deepest cached node whose ID is a prefix of `targetID`.
	 */
	function findDeepestCachedAncestor(targetID) {
	  deepestNodeSoFar = null;
	  ReactInstanceHandles.traverseAncestors(targetID, findDeepestCachedAncestorImpl);
	
	  var foundNode = deepestNodeSoFar;
	  deepestNodeSoFar = null;
	  return foundNode;
	}
	
	/**
	 * Mounts this component and inserts it into the DOM.
	 *
	 * @param {ReactComponent} componentInstance The instance to mount.
	 * @param {string} rootID DOM ID of the root node.
	 * @param {DOMElement} container DOM element to mount into.
	 * @param {ReactReconcileTransaction} transaction
	 * @param {boolean} shouldReuseMarkup If true, do not insert markup
	 */
	function mountComponentIntoNode(componentInstance, rootID, container, transaction, shouldReuseMarkup, context) {
	  if (ReactDOMFeatureFlags.useCreateElement) {
	    context = assign({}, context);
	    if (container.nodeType === DOC_NODE_TYPE) {
	      context[ownerDocumentContextKey] = container;
	    } else {
	      context[ownerDocumentContextKey] = container.ownerDocument;
	    }
	  }
	  if (process.env.NODE_ENV !== 'production') {
	    if (context === emptyObject) {
	      context = {};
	    }
	    var tag = container.nodeName.toLowerCase();
	    context[validateDOMNesting.ancestorInfoContextKey] = validateDOMNesting.updatedAncestorInfo(null, tag, null);
	  }
	  var markup = ReactReconciler.mountComponent(componentInstance, rootID, transaction, context);
	  componentInstance._renderedComponent._topLevelWrapper = componentInstance;
	  ReactMount._mountImageIntoNode(markup, container, shouldReuseMarkup, transaction);
	}
	
	/**
	 * Batched mount.
	 *
	 * @param {ReactComponent} componentInstance The instance to mount.
	 * @param {string} rootID DOM ID of the root node.
	 * @param {DOMElement} container DOM element to mount into.
	 * @param {boolean} shouldReuseMarkup If true, do not insert markup
	 */
	function batchedMountComponentIntoNode(componentInstance, rootID, container, shouldReuseMarkup, context) {
	  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled(
	  /* forceHTML */shouldReuseMarkup);
	  transaction.perform(mountComponentIntoNode, null, componentInstance, rootID, container, transaction, shouldReuseMarkup, context);
	  ReactUpdates.ReactReconcileTransaction.release(transaction);
	}
	
	/**
	 * Unmounts a component and removes it from the DOM.
	 *
	 * @param {ReactComponent} instance React component instance.
	 * @param {DOMElement} container DOM element to unmount from.
	 * @final
	 * @internal
	 * @see {ReactMount.unmountComponentAtNode}
	 */
	function unmountComponentFromNode(instance, container) {
	  ReactReconciler.unmountComponent(instance);
	
	  if (container.nodeType === DOC_NODE_TYPE) {
	    container = container.documentElement;
	  }
	
	  // http://jsperf.com/emptying-a-node
	  while (container.lastChild) {
	    container.removeChild(container.lastChild);
	  }
	}
	
	/**
	 * True if the supplied DOM node has a direct React-rendered child that is
	 * not a React root element. Useful for warning in `render`,
	 * `unmountComponentAtNode`, etc.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @return {boolean} True if the DOM element contains a direct child that was
	 * rendered by React but is not a root element.
	 * @internal
	 */
	function hasNonRootReactChild(node) {
	  var reactRootID = getReactRootID(node);
	  return reactRootID ? reactRootID !== ReactInstanceHandles.getReactRootIDFromNodeID(reactRootID) : false;
	}
	
	/**
	 * Returns the first (deepest) ancestor of a node which is rendered by this copy
	 * of React.
	 */
	function findFirstReactDOMImpl(node) {
	  // This node might be from another React instance, so we make sure not to
	  // examine the node cache here
	  for (; node && node.parentNode !== node; node = node.parentNode) {
	    if (node.nodeType !== 1) {
	      // Not a DOMElement, therefore not a React component
	      continue;
	    }
	    var nodeID = internalGetID(node);
	    if (!nodeID) {
	      continue;
	    }
	    var reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(nodeID);
	
	    // If containersByReactRootID contains the container we find by crawling up
	    // the tree, we know that this instance of React rendered the node.
	    // nb. isValid's strategy (with containsNode) does not work because render
	    // trees may be nested and we don't want a false positive in that case.
	    var current = node;
	    var lastID;
	    do {
	      lastID = internalGetID(current);
	      current = current.parentNode;
	      if (current == null) {
	        // The passed-in node has been detached from the container it was
	        // originally rendered into.
	        return null;
	      }
	    } while (lastID !== reactRootID);
	
	    if (current === containersByReactRootID[reactRootID]) {
	      return node;
	    }
	  }
	  return null;
	}
	
	/**
	 * Temporary (?) hack so that we can store all top-level pending updates on
	 * composites instead of having to worry about different types of components
	 * here.
	 */
	var TopLevelWrapper = function () {};
	TopLevelWrapper.prototype.isReactComponent = {};
	if (process.env.NODE_ENV !== 'production') {
	  TopLevelWrapper.displayName = 'TopLevelWrapper';
	}
	TopLevelWrapper.prototype.render = function () {
	  // this.props is actually a ReactElement
	  return this.props;
	};
	
	/**
	 * Mounting is the process of initializing a React component by creating its
	 * representative DOM elements and inserting them into a supplied `container`.
	 * Any prior content inside `container` is destroyed in the process.
	 *
	 *   ReactMount.render(
	 *     component,
	 *     document.getElementById('container')
	 *   );
	 *
	 *   <div id="container">                   <-- Supplied `container`.
	 *     <div data-reactid=".3">              <-- Rendered reactRoot of React
	 *       // ...                                 component.
	 *     </div>
	 *   </div>
	 *
	 * Inside of `container`, the first element rendered is the "reactRoot".
	 */
	var ReactMount = {
	
	  TopLevelWrapper: TopLevelWrapper,
	
	  /** Exposed for debugging purposes **/
	  _instancesByReactRootID: instancesByReactRootID,
	
	  /**
	   * This is a hook provided to support rendering React components while
	   * ensuring that the apparent scroll position of its `container` does not
	   * change.
	   *
	   * @param {DOMElement} container The `container` being rendered into.
	   * @param {function} renderCallback This must be called once to do the render.
	   */
	  scrollMonitor: function (container, renderCallback) {
	    renderCallback();
	  },
	
	  /**
	   * Take a component that's already mounted into the DOM and replace its props
	   * @param {ReactComponent} prevComponent component instance already in the DOM
	   * @param {ReactElement} nextElement component instance to render
	   * @param {DOMElement} container container to render into
	   * @param {?function} callback function triggered on completion
	   */
	  _updateRootComponent: function (prevComponent, nextElement, container, callback) {
	    ReactMount.scrollMonitor(container, function () {
	      ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement);
	      if (callback) {
	        ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);
	      }
	    });
	
	    if (process.env.NODE_ENV !== 'production') {
	      // Record the root element in case it later gets transplanted.
	      rootElementsByReactRootID[getReactRootID(container)] = getReactRootElementInContainer(container);
	    }
	
	    return prevComponent;
	  },
	
	  /**
	   * Register a component into the instance map and starts scroll value
	   * monitoring
	   * @param {ReactComponent} nextComponent component instance to render
	   * @param {DOMElement} container container to render into
	   * @return {string} reactRoot ID prefix
	   */
	  _registerComponent: function (nextComponent, container) {
	    !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '_registerComponent(...): Target container is not a DOM element.') : invariant(false) : undefined;
	
	    ReactBrowserEventEmitter.ensureScrollValueMonitoring();
	
	    var reactRootID = ReactMount.registerContainer(container);
	    instancesByReactRootID[reactRootID] = nextComponent;
	    return reactRootID;
	  },
	
	  /**
	   * Render a new component into the DOM.
	   * @param {ReactElement} nextElement element to render
	   * @param {DOMElement} container container to render into
	   * @param {boolean} shouldReuseMarkup if we should skip the markup insertion
	   * @return {ReactComponent} nextComponent
	   */
	  _renderNewRootComponent: function (nextElement, container, shouldReuseMarkup, context) {
	    // Various parts of our code (such as ReactCompositeComponent's
	    // _renderValidatedComponent) assume that calls to render aren't nested;
	    // verify that that's the case.
	    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '_renderNewRootComponent(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from ' + 'render is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : undefined;
	
	    var componentInstance = instantiateReactComponent(nextElement, null);
	    var reactRootID = ReactMount._registerComponent(componentInstance, container);
	
	    // The initial render is synchronous but any updates that happen during
	    // rendering, in componentWillMount or componentDidMount, will be batched
	    // according to the current batching strategy.
	
	    ReactUpdates.batchedUpdates(batchedMountComponentIntoNode, componentInstance, reactRootID, container, shouldReuseMarkup, context);
	
	    if (process.env.NODE_ENV !== 'production') {
	      // Record the root element in case it later gets transplanted.
	      rootElementsByReactRootID[reactRootID] = getReactRootElementInContainer(container);
	    }
	
	    return componentInstance;
	  },
	
	  /**
	   * Renders a React component into the DOM in the supplied `container`.
	   *
	   * If the React component was previously rendered into `container`, this will
	   * perform an update on it and only mutate the DOM as necessary to reflect the
	   * latest React component.
	   *
	   * @param {ReactComponent} parentComponent The conceptual parent of this render tree.
	   * @param {ReactElement} nextElement Component element to render.
	   * @param {DOMElement} container DOM element to render into.
	   * @param {?function} callback function triggered on completion
	   * @return {ReactComponent} Component instance rendered in `container`.
	   */
	  renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
	    !(parentComponent != null && parentComponent._reactInternalInstance != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'parentComponent must be a valid React Component') : invariant(false) : undefined;
	    return ReactMount._renderSubtreeIntoContainer(parentComponent, nextElement, container, callback);
	  },
	
	  _renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
	    !ReactElement.isValidElement(nextElement) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOM.render(): Invalid component element.%s', typeof nextElement === 'string' ? ' Instead of passing an element string, make sure to instantiate ' + 'it by passing it to React.createElement.' : typeof nextElement === 'function' ? ' Instead of passing a component class, make sure to instantiate ' + 'it by passing it to React.createElement.' :
	    // Check if it quacks like an element
	    nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : invariant(false) : undefined;
	
	    process.env.NODE_ENV !== 'production' ? warning(!container || !container.tagName || container.tagName.toUpperCase() !== 'BODY', 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : undefined;
	
	    var nextWrappedElement = new ReactElement(TopLevelWrapper, null, null, null, null, null, nextElement);
	
	    var prevComponent = instancesByReactRootID[getReactRootID(container)];
	
	    if (prevComponent) {
	      var prevWrappedElement = prevComponent._currentElement;
	      var prevElement = prevWrappedElement.props;
	      if (shouldUpdateReactComponent(prevElement, nextElement)) {
	        var publicInst = prevComponent._renderedComponent.getPublicInstance();
	        var updatedCallback = callback && function () {
	          callback.call(publicInst);
	        };
	        ReactMount._updateRootComponent(prevComponent, nextWrappedElement, container, updatedCallback);
	        return publicInst;
	      } else {
	        ReactMount.unmountComponentAtNode(container);
	      }
	    }
	
	    var reactRootElement = getReactRootElementInContainer(container);
	    var containerHasReactMarkup = reactRootElement && !!internalGetID(reactRootElement);
	    var containerHasNonRootReactChild = hasNonRootReactChild(container);
	
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : undefined;
	
	      if (!containerHasReactMarkup || reactRootElement.nextSibling) {
	        var rootElementSibling = reactRootElement;
	        while (rootElementSibling) {
	          if (internalGetID(rootElementSibling)) {
	            process.env.NODE_ENV !== 'production' ? warning(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.') : undefined;
	            break;
	          }
	          rootElementSibling = rootElementSibling.nextSibling;
	        }
	      }
	    }
	
	    var shouldReuseMarkup = containerHasReactMarkup && !prevComponent && !containerHasNonRootReactChild;
	    var component = ReactMount._renderNewRootComponent(nextWrappedElement, container, shouldReuseMarkup, parentComponent != null ? parentComponent._reactInternalInstance._processChildContext(parentComponent._reactInternalInstance._context) : emptyObject)._renderedComponent.getPublicInstance();
	    if (callback) {
	      callback.call(component);
	    }
	    return component;
	  },
	
	  /**
	   * Renders a React component into the DOM in the supplied `container`.
	   *
	   * If the React component was previously rendered into `container`, this will
	   * perform an update on it and only mutate the DOM as necessary to reflect the
	   * latest React component.
	   *
	   * @param {ReactElement} nextElement Component element to render.
	   * @param {DOMElement} container DOM element to render into.
	   * @param {?function} callback function triggered on completion
	   * @return {ReactComponent} Component instance rendered in `container`.
	   */
	  render: function (nextElement, container, callback) {
	    return ReactMount._renderSubtreeIntoContainer(null, nextElement, container, callback);
	  },
	
	  /**
	   * Registers a container node into which React components will be rendered.
	   * This also creates the "reactRoot" ID that will be assigned to the element
	   * rendered within.
	   *
	   * @param {DOMElement} container DOM element to register as a container.
	   * @return {string} The "reactRoot" ID of elements rendered within.
	   */
	  registerContainer: function (container) {
	    var reactRootID = getReactRootID(container);
	    if (reactRootID) {
	      // If one exists, make sure it is a valid "reactRoot" ID.
	      reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(reactRootID);
	    }
	    if (!reactRootID) {
	      // No valid "reactRoot" ID found, create one.
	      reactRootID = ReactInstanceHandles.createReactRootID();
	    }
	    containersByReactRootID[reactRootID] = container;
	    return reactRootID;
	  },
	
	  /**
	   * Unmounts and destroys the React component rendered in the `container`.
	   *
	   * @param {DOMElement} container DOM element containing a React component.
	   * @return {boolean} True if a component was found in and unmounted from
	   *                   `container`
	   */
	  unmountComponentAtNode: function (container) {
	    // Various parts of our code (such as ReactCompositeComponent's
	    // _renderValidatedComponent) assume that calls to render aren't nested;
	    // verify that that's the case. (Strictly speaking, unmounting won't cause a
	    // render but we still don't expect to be in a render call here.)
	    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, 'unmountComponentAtNode(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from render ' + 'is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : undefined;
	
	    !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : invariant(false) : undefined;
	
	    var reactRootID = getReactRootID(container);
	    var component = instancesByReactRootID[reactRootID];
	    if (!component) {
	      // Check if the node being unmounted was rendered by React, but isn't a
	      // root node.
	      var containerHasNonRootReactChild = hasNonRootReactChild(container);
	
	      // Check if the container itself is a React root node.
	      var containerID = internalGetID(container);
	      var isContainerReactRoot = containerID && containerID === ReactInstanceHandles.getReactRootIDFromNodeID(containerID);
	
	      if (process.env.NODE_ENV !== 'production') {
	        process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'unmountComponentAtNode(): The node you\'re attempting to unmount ' + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : undefined;
	      }
	
	      return false;
	    }
	    ReactUpdates.batchedUpdates(unmountComponentFromNode, component, container);
	    delete instancesByReactRootID[reactRootID];
	    delete containersByReactRootID[reactRootID];
	    if (process.env.NODE_ENV !== 'production') {
	      delete rootElementsByReactRootID[reactRootID];
	    }
	    return true;
	  },
	
	  /**
	   * Finds the container DOM element that contains React component to which the
	   * supplied DOM `id` belongs.
	   *
	   * @param {string} id The ID of an element rendered by a React component.
	   * @return {?DOMElement} DOM element that contains the `id`.
	   */
	  findReactContainerForID: function (id) {
	    var reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(id);
	    var container = containersByReactRootID[reactRootID];
	
	    if (process.env.NODE_ENV !== 'production') {
	      var rootElement = rootElementsByReactRootID[reactRootID];
	      if (rootElement && rootElement.parentNode !== container) {
	        process.env.NODE_ENV !== 'production' ? warning(
	        // Call internalGetID here because getID calls isValid which calls
	        // findReactContainerForID (this function).
	        internalGetID(rootElement) === reactRootID, 'ReactMount: Root element ID differed from reactRootID.') : undefined;
	        var containerChild = container.firstChild;
	        if (containerChild && reactRootID === internalGetID(containerChild)) {
	          // If the container has a new child with the same ID as the old
	          // root element, then rootElementsByReactRootID[reactRootID] is
	          // just stale and needs to be updated. The case that deserves a
	          // warning is when the container is empty.
	          rootElementsByReactRootID[reactRootID] = containerChild;
	        } else {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'ReactMount: Root element has been removed from its original ' + 'container. New container: %s', rootElement.parentNode) : undefined;
	        }
	      }
	    }
	
	    return container;
	  },
	
	  /**
	   * Finds an element rendered by React with the supplied ID.
	   *
	   * @param {string} id ID of a DOM node in the React component.
	   * @return {DOMElement} Root DOM node of the React component.
	   */
	  findReactNodeByID: function (id) {
	    var reactRoot = ReactMount.findReactContainerForID(id);
	    return ReactMount.findComponentRoot(reactRoot, id);
	  },
	
	  /**
	   * Traverses up the ancestors of the supplied node to find a node that is a
	   * DOM representation of a React component rendered by this copy of React.
	   *
	   * @param {*} node
	   * @return {?DOMEventTarget}
	   * @internal
	   */
	  getFirstReactDOM: function (node) {
	    return findFirstReactDOMImpl(node);
	  },
	
	  /**
	   * Finds a node with the supplied `targetID` inside of the supplied
	   * `ancestorNode`.  Exploits the ID naming scheme to perform the search
	   * quickly.
	   *
	   * @param {DOMEventTarget} ancestorNode Search from this root.
	   * @pararm {string} targetID ID of the DOM representation of the component.
	   * @return {DOMEventTarget} DOM node with the supplied `targetID`.
	   * @internal
	   */
	  findComponentRoot: function (ancestorNode, targetID) {
	    var firstChildren = findComponentRootReusableArray;
	    var childIndex = 0;
	
	    var deepestAncestor = findDeepestCachedAncestor(targetID) || ancestorNode;
	
	    if (process.env.NODE_ENV !== 'production') {
	      // This will throw on the next line; give an early warning
	      process.env.NODE_ENV !== 'production' ? warning(deepestAncestor != null, 'React can\'t find the root component node for data-reactid value ' + '`%s`. If you\'re seeing this message, it probably means that ' + 'you\'ve loaded two copies of React on the page. At this time, only ' + 'a single copy of React can be loaded at a time.', targetID) : undefined;
	    }
	
	    firstChildren[0] = deepestAncestor.firstChild;
	    firstChildren.length = 1;
	
	    while (childIndex < firstChildren.length) {
	      var child = firstChildren[childIndex++];
	      var targetChild;
	
	      while (child) {
	        var childID = ReactMount.getID(child);
	        if (childID) {
	          // Even if we find the node we're looking for, we finish looping
	          // through its siblings to ensure they're cached so that we don't have
	          // to revisit this node again. Otherwise, we make n^2 calls to getID
	          // when visiting the many children of a single node in order.
	
	          if (targetID === childID) {
	            targetChild = child;
	          } else if (ReactInstanceHandles.isAncestorIDOf(childID, targetID)) {
	            // If we find a child whose ID is an ancestor of the given ID,
	            // then we can be sure that we only want to search the subtree
	            // rooted at this child, so we can throw out the rest of the
	            // search state.
	            firstChildren.length = childIndex = 0;
	            firstChildren.push(child.firstChild);
	          }
	        } else {
	          // If this child had no ID, then there's a chance that it was
	          // injected automatically by the browser, as when a `<table>`
	          // element sprouts an extra `<tbody>` child as a side effect of
	          // `.innerHTML` parsing. Optimistically continue down this
	          // branch, but not before examining the other siblings.
	          firstChildren.push(child.firstChild);
	        }
	
	        child = child.nextSibling;
	      }
	
	      if (targetChild) {
	        // Emptying firstChildren/findComponentRootReusableArray is
	        // not necessary for correctness, but it helps the GC reclaim
	        // any nodes that were left at the end of the search.
	        firstChildren.length = 0;
	
	        return targetChild;
	      }
	    }
	
	    firstChildren.length = 0;
	
	     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'findComponentRoot(..., %s): Unable to find element. This probably ' + 'means the DOM was unexpectedly mutated (e.g., by the browser), ' + 'usually due to forgetting a <tbody> when using tables, nesting tags ' + 'like <form>, <p>, or <a>, or using non-SVG elements in an <svg> ' + 'parent. ' + 'Try inspecting the child nodes of the element with React ID `%s`.', targetID, ReactMount.getID(ancestorNode)) : invariant(false) : undefined;
	  },
	
	  _mountImageIntoNode: function (markup, container, shouldReuseMarkup, transaction) {
	    !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mountComponentIntoNode(...): Target container is not valid.') : invariant(false) : undefined;
	
	    if (shouldReuseMarkup) {
	      var rootElement = getReactRootElementInContainer(container);
	      if (ReactMarkupChecksum.canReuseMarkup(markup, rootElement)) {
	        return;
	      } else {
	        var checksum = rootElement.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
	        rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
	
	        var rootMarkup = rootElement.outerHTML;
	        rootElement.setAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME, checksum);
	
	        var normalizedMarkup = markup;
	        if (process.env.NODE_ENV !== 'production') {
	          // because rootMarkup is retrieved from the DOM, various normalizations
	          // will have occurred which will not be present in `markup`. Here,
	          // insert markup into a <div> or <iframe> depending on the container
	          // type to perform the same normalizations before comparing.
	          var normalizer;
	          if (container.nodeType === ELEMENT_NODE_TYPE) {
	            normalizer = document.createElement('div');
	            normalizer.innerHTML = markup;
	            normalizedMarkup = normalizer.innerHTML;
	          } else {
	            normalizer = document.createElement('iframe');
	            document.body.appendChild(normalizer);
	            normalizer.contentDocument.write(markup);
	            normalizedMarkup = normalizer.contentDocument.documentElement.outerHTML;
	            document.body.removeChild(normalizer);
	          }
	        }
	
	        var diffIndex = firstDifferenceIndex(normalizedMarkup, rootMarkup);
	        var difference = ' (client) ' + normalizedMarkup.substring(diffIndex - 20, diffIndex + 20) + '\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);
	
	        !(container.nodeType !== DOC_NODE_TYPE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'You\'re trying to render a component to the document using ' + 'server rendering but the checksum was invalid. This usually ' + 'means you rendered a different component type or props on ' + 'the client from the one on the server, or your render() ' + 'methods are impure. React cannot handle this case due to ' + 'cross-browser quirks by rendering at the document root. You ' + 'should look for environment dependent code in your components ' + 'and ensure the props are the same client and server side:\n%s', difference) : invariant(false) : undefined;
	
	        if (process.env.NODE_ENV !== 'production') {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'React attempted to reuse markup in a container but the ' + 'checksum was invalid. This generally means that you are ' + 'using server rendering and the markup generated on the ' + 'server was not what the client was expecting. React injected ' + 'new markup to compensate which works but you have lost many ' + 'of the benefits of server rendering. Instead, figure out ' + 'why the markup being generated is different on the client ' + 'or server:\n%s', difference) : undefined;
	        }
	      }
	    }
	
	    !(container.nodeType !== DOC_NODE_TYPE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'You\'re trying to render a component to the document but ' + 'you didn\'t use server rendering. We can\'t do this ' + 'without using server rendering due to cross-browser quirks. ' + 'See ReactDOMServer.renderToString() for server rendering.') : invariant(false) : undefined;
	
	    if (transaction.useCreateElement) {
	      while (container.lastChild) {
	        container.removeChild(container.lastChild);
	      }
	      container.appendChild(markup);
	    } else {
	      setInnerHTML(container, markup);
	    }
	  },
	
	  ownerDocumentContextKey: ownerDocumentContextKey,
	
	  /**
	   * React ID utilities.
	   */
	
	  getReactRootID: getReactRootID,
	
	  getID: getID,
	
	  setID: setID,
	
	  getNode: getNode,
	
	  getNodeFromInstance: getNodeFromInstance,
	
	  isValid: isValid,
	
	  purgeID: purgeID
	};
	
	ReactPerf.measureMethods(ReactMount, 'ReactMount', {
	  _renderNewRootComponent: '_renderNewRootComponent',
	  _mountImageIntoNode: '_mountImageIntoNode'
	});
	
	module.exports = ReactMount;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 14 */
/***/ function(module, exports) {

	//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	// Formats a string similar to Python's "format"
	//------------------------------------------------------------------------------
	module.exports = function() {
	
	  var args = Array.prototype.slice.call(arguments)
	    , str = args.shift()
	
	  str.unkeyed_index = 0;
	  return str.replace(/\{(\w*)\}/g, function(match, key) {
	      if (key === '') {
	          key = str.unkeyed_index;
	          str.unkeyed_index++
	      }
	      if (key == +key) {
	          return args[key] !== 'undefined'
	              ? args[key]
	              : match;
	      } else {
	          for (var i = 0; i < args.length; i++) {
	              if (typeof args[i] === 'object' && typeof args[i][key] !== 'undefined') {
	                  return args[i][key];
	              }
	          }
	          return match;
	      }
	  }.bind(str));
	
	}


/***/ },
/* 15 */
/***/ function(module, exports, __webpack_require__) {

	var helvetica, validate;
	
	validate = __webpack_require__(130);
	
	helvetica = ["Helvetica Neue", "HelveticaNeue", "Helvetica", "Arial", "sans-serif"];
	
	module.exports = function(family) {
	  if (family === void 0) {
	    family = helvetica;
	  }
	  return {
	    process: validate,
	    value: family
	  };
	};


/***/ },
/* 16 */
/***/ function(module, exports, __webpack_require__) {

	var color, ie, value;
	
	color = __webpack_require__(136);
	
	ie = __webpack_require__(32);
	
	value = __webpack_require__(3);
	
	module.exports = function(nodes, vars) {
	  return nodes.attr("fill", function(d) {
	    if (d.d3plus && d.d3plus.spline) {
	      return "none";
	    } else {
	      return color(d, vars);
	    }
	  }).style("stroke", function(d) {
	    var c;
	    if (d.d3plus && d.d3plus.stroke) {
	      return d.d3plus.stroke;
	    } else {
	      c = d.values ? color(d.values[0], vars) : color(d, vars, true);
	      return d3.rgb(c).darker(0.6);
	    }
	  }).style("stroke-width", function(d) {
	    var v;
	    if (ie && vars.types[vars.type.value].zoom) {
	      return 0;
	    }
	    if (d.d3plus.shape === "line" && vars.size.value) {
	      if (vars.size.value.constructor === Number) {
	        return vars.size.value;
	      }
	      v = value(vars, d, vars.size.value);
	      if (v && v.length) {
	        return d3.max(v);
	      }
	    }
	    return vars.data.stroke.width;
	  }).attr("opacity", vars.data.opacity).attr("vector-effect", "non-scaling-stroke");
	};


/***/ },
/* 17 */
/***/ function(module, exports, __webpack_require__) {

	var fetchValue = __webpack_require__(3),
	    validObject = __webpack_require__(7),
	    uniques     = __webpack_require__(8);
	
	//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	// Get array of available text values
	//------------------------------------------------------------------------------
	module.exports = function(vars, obj, depth) {
	
	  if (typeof depth !== "number") depth = vars.depth.value;
	
	  var key = vars.id.nesting[depth], textKeys;
	
	  if ( vars.text.nesting && validObject(vars.text.nesting) ) {
	    if ( vars.text.nesting[key] ) {
	      textKeys = vars.text.nesting[key];
	    }
	    else {
	      textKeys = vars.text.value;
	    }
	  }
	  else {
	    textKeys = [];
	    if (vars.text.value && depth === vars.depth.value) textKeys.push(vars.text.value);
	    textKeys.push(key);
	  }
	
	  if ( !(textKeys instanceof Array) ) {
	    textKeys = [ textKeys ];
	  }
	
	  var names = [];
	
	  if (validObject(obj) && "d3plus" in obj && obj.d3plus.text) {
	    names.push(obj.d3plus.text.toString());
	    names.push(vars.format.value(obj.d3plus.text.toString(), {"vars": vars, "data": obj}));
	  }
	  else {
	
	    var formatObj = validObject(obj) ? obj : undefined;
	
	    if (formatObj && obj[vars.id.value] instanceof Array) {
	      obj = obj[vars.id.value];
	    }
	    else if (!(obj instanceof Array)) {
	      obj = [obj];
	    }
	
	    textKeys.forEach(function( t ){
	
	      var name = uniques(obj, t, fetchValue, vars, key);
	
	      if ( name.length ) {
	        if (name.length > 1) {
	          name = name.filter(function(n){
	            return (n instanceof Array) || (typeof n === "string" && n.indexOf(" < ") < 0);
	          });
	        }
	        name = name.map(function(n){
	          if (n instanceof Array) {
	            n = n.filter(function(nn){ return nn; });
	            return n.map(function(nn){
	              return vars.format.value(nn.toString(), {"vars": vars, "data": formatObj, "key": t});
	            });
	          }
	          else if (n) {
	            return vars.format.value(n.toString(), {"vars": vars, "data": formatObj, "key": t});
	          }
	        });
	        if (name.length === 1) name = name[0];
	        names.push(name);
	      }
	
	    });
	
	  }
	
	  return names;
	
	};


/***/ },
/* 18 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactElement
	 */
	
	'use strict';
	
	var ReactCurrentOwner = __webpack_require__(35);
	
	var assign = __webpack_require__(5);
	var canDefineProperty = __webpack_require__(76);
	
	// The Symbol used to tag the ReactElement type. If there is no native Symbol
	// nor polyfill, then a plain number is used for performance.
	var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;
	
	var RESERVED_PROPS = {
	  key: true,
	  ref: true,
	  __self: true,
	  __source: true
	};
	
	/**
	 * Base constructor for all React elements. This is only used to make this
	 * work with a dynamic instanceof check. Nothing should live on this prototype.
	 *
	 * @param {*} type
	 * @param {*} key
	 * @param {string|object} ref
	 * @param {*} self A *temporary* helper to detect places where `this` is
	 * different from the `owner` when React.createElement is called, so that we
	 * can warn. We want to get rid of owner and replace string `ref`s with arrow
	 * functions, and as long as `this` and owner are the same, there will be no
	 * change in behavior.
	 * @param {*} source An annotation object (added by a transpiler or otherwise)
	 * indicating filename, line number, and/or other information.
	 * @param {*} owner
	 * @param {*} props
	 * @internal
	 */
	var ReactElement = function (type, key, ref, self, source, owner, props) {
	  var element = {
	    // This tag allow us to uniquely identify this as a React Element
	    $$typeof: REACT_ELEMENT_TYPE,
	
	    // Built-in properties that belong on the element
	    type: type,
	    key: key,
	    ref: ref,
	    props: props,
	
	    // Record the component responsible for creating this element.
	    _owner: owner
	  };
	
	  if (process.env.NODE_ENV !== 'production') {
	    // The validation flag is currently mutative. We put it on
	    // an external backing store so that we can freeze the whole object.
	    // This can be replaced with a WeakMap once they are implemented in
	    // commonly used development environments.
	    element._store = {};
	
	    // To make comparing ReactElements easier for testing purposes, we make
	    // the validation flag non-enumerable (where possible, which should
	    // include every environment we run tests in), so the test framework
	    // ignores it.
	    if (canDefineProperty) {
	      Object.defineProperty(element._store, 'validated', {
	        configurable: false,
	        enumerable: false,
	        writable: true,
	        value: false
	      });
	      // self and source are DEV only properties.
	      Object.defineProperty(element, '_self', {
	        configurable: false,
	        enumerable: false,
	        writable: false,
	        value: self
	      });
	      // Two elements created in two different places should be considered
	      // equal for testing purposes and therefore we hide it from enumeration.
	      Object.defineProperty(element, '_source', {
	        configurable: false,
	        enumerable: false,
	        writable: false,
	        value: source
	      });
	    } else {
	      element._store.validated = false;
	      element._self = self;
	      element._source = source;
	    }
	    Object.freeze(element.props);
	    Object.freeze(element);
	  }
	
	  return element;
	};
	
	ReactElement.createElement = function (type, config, children) {
	  var propName;
	
	  // Reserved names are extracted
	  var props = {};
	
	  var key = null;
	  var ref = null;
	  var self = null;
	  var source = null;
	
	  if (config != null) {
	    ref = config.ref === undefined ? null : config.ref;
	    key = config.key === undefined ? null : '' + config.key;
	    self = config.__self === undefined ? null : config.__self;
	    source = config.__source === undefined ? null : config.__source;
	    // Remaining properties are added to a new props object
	    for (propName in config) {
	      if (config.hasOwnProperty(propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
	        props[propName] = config[propName];
	      }
	    }
	  }
	
	  // Children can be more than one argument, and those are transferred onto
	  // the newly allocated props object.
	  var childrenLength = arguments.length - 2;
	  if (childrenLength === 1) {
	    props.children = children;
	  } else if (childrenLength > 1) {
	    var childArray = Array(childrenLength);
	    for (var i = 0; i < childrenLength; i++) {
	      childArray[i] = arguments[i + 2];
	    }
	    props.children = childArray;
	  }
	
	  // Resolve default props
	  if (type && type.defaultProps) {
	    var defaultProps = type.defaultProps;
	    for (propName in defaultProps) {
	      if (typeof props[propName] === 'undefined') {
	        props[propName] = defaultProps[propName];
	      }
	    }
	  }
	
	  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
	};
	
	ReactElement.createFactory = function (type) {
	  var factory = ReactElement.createElement.bind(null, type);
	  // Expose the type on the factory and the prototype so that it can be
	  // easily accessed on elements. E.g. `<Foo />.type === Foo`.
	  // This should not be named `constructor` since this may not be the function
	  // that created the element, and it may not even be a constructor.
	  // Legacy hook TODO: Warn if this is accessed
	  factory.type = type;
	  return factory;
	};
	
	ReactElement.cloneAndReplaceKey = function (oldElement, newKey) {
	  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);
	
	  return newElement;
	};
	
	ReactElement.cloneAndReplaceProps = function (oldElement, newProps) {
	  var newElement = ReactElement(oldElement.type, oldElement.key, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, newProps);
	
	  if (process.env.NODE_ENV !== 'production') {
	    // If the key on the original is valid, then the clone is valid
	    newElement._store.validated = oldElement._store.validated;
	  }
	
	  return newElement;
	};
	
	ReactElement.cloneElement = function (element, config, children) {
	  var propName;
	
	  // Original props are copied
	  var props = assign({}, element.props);
	
	  // Reserved names are extracted
	  var key = element.key;
	  var ref = element.ref;
	  // Self is preserved since the owner is preserved.
	  var self = element._self;
	  // Source is preserved since cloneElement is unlikely to be targeted by a
	  // transpiler, and the original source is probably a better indicator of the
	  // true owner.
	  var source = element._source;
	
	  // Owner will be preserved, unless ref is overridden
	  var owner = element._owner;
	
	  if (config != null) {
	    if (config.ref !== undefined) {
	      // Silently steal the ref from the parent.
	      ref = config.ref;
	      owner = ReactCurrentOwner.current;
	    }
	    if (config.key !== undefined) {
	      key = '' + config.key;
	    }
	    // Remaining properties override existing props
	    for (propName in config) {
	      if (config.hasOwnProperty(propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
	        props[propName] = config[propName];
	      }
	    }
	  }
	
	  // Children can be more than one argument, and those are transferred onto
	  // the newly allocated props object.
	  var childrenLength = arguments.length - 2;
	  if (childrenLength === 1) {
	    props.children = children;
	  } else if (childrenLength > 1) {
	    var childArray = Array(childrenLength);
	    for (var i = 0; i < childrenLength; i++) {
	      childArray[i] = arguments[i + 2];
	    }
	    props.children = childArray;
	  }
	
	  return ReactElement(element.type, key, ref, self, source, owner, props);
	};
	
	/**
	 * @param {?object} object
	 * @return {boolean} True if `object` is a valid component.
	 * @final
	 */
	ReactElement.isValidElement = function (object) {
	  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
	};
	
	module.exports = ReactElement;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 19 */
/***/ function(module, exports, __webpack_require__) {

	var comparator, fetchSort;
	
	comparator = __webpack_require__(65);
	
	fetchSort = __webpack_require__(191);
	
	module.exports = function(arr, keys, sort, colors, vars, depth) {
	  var d, data, i, len;
	  if (!arr || arr.length <= 1) {
	    return arr || [];
	  } else {
	    if (vars) {
	      if (!keys) {
	        keys = vars.order.value || vars.size.value || vars.id.value;
	      }
	      if (!sort) {
	        sort = vars.order.sort.value;
	      }
	      if (!colors) {
	        colors = vars.color.value || [];
	      }
	      for (i = 0, len = arr.length; i < len; i++) {
	        d = arr[i];
	        if (!d.d3plus) {
	          d.d3plus = {};
	        }
	        data = "d3plus" in d && "d3plus" in d.d3plus ? d.d3plus : d;
	        d.d3plus.sortKeys = fetchSort(vars, data, keys, colors, depth);
	      }
	    }
	    return arr.sort(function(a, b) {
	      return comparator(a, b, keys, sort, colors, vars, depth);
	    });
	  }
	};


/***/ },
/* 20 */
/***/ function(module, exports, __webpack_require__) {

	var fetchValue, getColor, getRandom, randomColor, uniques, validColor, validObject;
	
	fetchValue = __webpack_require__(3);
	
	randomColor = __webpack_require__(81);
	
	validColor = __webpack_require__(122);
	
	validObject = __webpack_require__(7);
	
	uniques = __webpack_require__(8);
	
	module.exports = function(vars, id, level) {
	  var color, colorLevel, colors, i, obj, value;
	  obj = validObject(id);
	  if (obj && "d3plus" in id && "color" in id.d3plus) {
	    return id.d3plus.color;
	  }
	  if (level === void 0) {
	    level = vars.id.value;
	  }
	  if (typeof level === "number") {
	    level = vars.id.nesting[level];
	  }
	  if (!vars.color.value) {
	    return getRandom(vars, id, level);
	  } else {
	    colors = [];
	    i = vars.id.nesting.indexOf(level);
	    while (i >= 0) {
	      colorLevel = vars.id.nesting[i];
	      value = uniques(id, vars.color.value, fetchValue, vars, colorLevel);
	      if (value.length === 1) {
	        value = value[0];
	      }
	      if (!(value instanceof Array) && value !== void 0 && value !== null) {
	        color = getColor(vars, id, value, level);
	        if (colors.indexOf(color) < 0) {
	          colors.push(color);
	        }
	        break;
	      }
	      i--;
	    }
	    if (colors.length === 1) {
	      return colors[0];
	    } else {
	      return vars.color.missing;
	    }
	  }
	};
	
	getColor = function(vars, id, color, level) {
	  if (!color) {
	    if (vars.color.value && typeof vars.color.valueScale === "function") {
	      return vars.color.valueScale(0);
	    }
	    return getRandom(vars, id, level);
	  } else if (!vars.color.valueScale) {
	    if (validColor(color)) {
	      return color;
	    } else {
	      return getRandom(vars, color, level);
	    }
	  } else {
	    return vars.color.valueScale(color);
	  }
	};
	
	getRandom = function(vars, c, level) {
	  if (validObject(c)) {
	    c = fetchValue(vars, c, level);
	  }
	  if (c instanceof Array) {
	    c = c[0];
	  }
	  return randomColor(c, vars.color.scale.value);
	};


/***/ },
/* 21 */
/***/ function(module, exports) {

	module.exports = function(transform) {
	  var accepted;
	  accepted = ["capitalize", "lowercase", "none", "uppercase"];
	  if (transform === false) {
	    accepted.unshift(false);
	  }
	  if (accepted.indexOf(transform) < 0) {
	    transform = "none";
	  }
	  return {
	    accepted: accepted,
	    value: transform
	  };
	};


/***/ },
/* 22 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPerf
	 * @typechecks static-only
	 */
	
	'use strict';
	
	/**
	 * ReactPerf is a general AOP system designed to measure performance. This
	 * module only has the hooks: see ReactDefaultPerf for the analysis tool.
	 */
	var ReactPerf = {
	  /**
	   * Boolean to enable/disable measurement. Set to false by default to prevent
	   * accidental logging and perf loss.
	   */
	  enableMeasure: false,
	
	  /**
	   * Holds onto the measure function in use. By default, don't measure
	   * anything, but we'll override this if we inject a measure function.
	   */
	  storedMeasure: _noMeasure,
	
	  /**
	   * @param {object} object
	   * @param {string} objectName
	   * @param {object<string>} methodNames
	   */
	  measureMethods: function (object, objectName, methodNames) {
	    if (process.env.NODE_ENV !== 'production') {
	      for (var key in methodNames) {
	        if (!methodNames.hasOwnProperty(key)) {
	          continue;
	        }
	        object[key] = ReactPerf.measure(objectName, methodNames[key], object[key]);
	      }
	    }
	  },
	
	  /**
	   * Use this to wrap methods you want to measure. Zero overhead in production.
	   *
	   * @param {string} objName
	   * @param {string} fnName
	   * @param {function} func
	   * @return {function}
	   */
	  measure: function (objName, fnName, func) {
	    if (process.env.NODE_ENV !== 'production') {
	      var measuredFunc = null;
	      var wrapper = function () {
	        if (ReactPerf.enableMeasure) {
	          if (!measuredFunc) {
	            measuredFunc = ReactPerf.storedMeasure(objName, fnName, func);
	          }
	          return measuredFunc.apply(this, arguments);
	        }
	        return func.apply(this, arguments);
	      };
	      wrapper.displayName = objName + '_' + fnName;
	      return wrapper;
	    }
	    return func;
	  },
	
	  injection: {
	    /**
	     * @param {function} measure
	     */
	    injectMeasure: function (measure) {
	      ReactPerf.storedMeasure = measure;
	    }
	  }
	};
	
	/**
	 * Simply passes through the measured function, without measuring it.
	 *
	 * @param {string} objName
	 * @param {string} fnName
	 * @param {function} func
	 * @return {function}
	 */
	function _noMeasure(objName, fnName, func) {
	  return func;
	}
	
	module.exports = ReactPerf;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 23 */
/***/ function(module, exports) {

	module.exports = function(decoration) {
	  var accepted;
	  accepted = ["line-through", "none", "overline", "underline"];
	  if (decoration === false) {
	    accepted.unshift(false);
	  }
	  if (accepted.indexOf(decoration) < 0) {
	    decoration = "none";
	  }
	  return {
	    accepted: accepted,
	    value: decoration
	  };
	};


/***/ },
/* 24 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactUpdates
	 */
	
	'use strict';
	
	var CallbackQueue = __webpack_require__(101);
	var PooledClass = __webpack_require__(37);
	var ReactPerf = __webpack_require__(22);
	var ReactReconciler = __webpack_require__(43);
	var Transaction = __webpack_require__(75);
	
	var assign = __webpack_require__(5);
	var invariant = __webpack_require__(4);
	
	var dirtyComponents = [];
	var asapCallbackQueue = CallbackQueue.getPooled();
	var asapEnqueued = false;
	
	var batchingStrategy = null;
	
	function ensureInjected() {
	  !(ReactUpdates.ReactReconcileTransaction && batchingStrategy) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must inject a reconcile transaction class and batching ' + 'strategy') : invariant(false) : undefined;
	}
	
	var NESTED_UPDATES = {
	  initialize: function () {
	    this.dirtyComponentsLength = dirtyComponents.length;
	  },
	  close: function () {
	    if (this.dirtyComponentsLength !== dirtyComponents.length) {
	      // Additional updates were enqueued by componentDidUpdate handlers or
	      // similar; before our own UPDATE_QUEUEING wrapper closes, we want to run
	      // these new updates so that if A's componentDidUpdate calls setState on
	      // B, B will update before the callback A's updater provided when calling
	      // setState.
	      dirtyComponents.splice(0, this.dirtyComponentsLength);
	      flushBatchedUpdates();
	    } else {
	      dirtyComponents.length = 0;
	    }
	  }
	};
	
	var UPDATE_QUEUEING = {
	  initialize: function () {
	    this.callbackQueue.reset();
	  },
	  close: function () {
	    this.callbackQueue.notifyAll();
	  }
	};
	
	var TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];
	
	function ReactUpdatesFlushTransaction() {
	  this.reinitializeTransaction();
	  this.dirtyComponentsLength = null;
	  this.callbackQueue = CallbackQueue.getPooled();
	  this.reconcileTransaction = ReactUpdates.ReactReconcileTransaction.getPooled( /* forceHTML */false);
	}
	
	assign(ReactUpdatesFlushTransaction.prototype, Transaction.Mixin, {
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  },
	
	  destructor: function () {
	    this.dirtyComponentsLength = null;
	    CallbackQueue.release(this.callbackQueue);
	    this.callbackQueue = null;
	    ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);
	    this.reconcileTransaction = null;
	  },
	
	  perform: function (method, scope, a) {
	    // Essentially calls `this.reconcileTransaction.perform(method, scope, a)`
	    // with this transaction's wrappers around it.
	    return Transaction.Mixin.perform.call(this, this.reconcileTransaction.perform, this.reconcileTransaction, method, scope, a);
	  }
	});
	
	PooledClass.addPoolingTo(ReactUpdatesFlushTransaction);
	
	function batchedUpdates(callback, a, b, c, d, e) {
	  ensureInjected();
	  batchingStrategy.batchedUpdates(callback, a, b, c, d, e);
	}
	
	/**
	 * Array comparator for ReactComponents by mount ordering.
	 *
	 * @param {ReactComponent} c1 first component you're comparing
	 * @param {ReactComponent} c2 second component you're comparing
	 * @return {number} Return value usable by Array.prototype.sort().
	 */
	function mountOrderComparator(c1, c2) {
	  return c1._mountOrder - c2._mountOrder;
	}
	
	function runBatchedUpdates(transaction) {
	  var len = transaction.dirtyComponentsLength;
	  !(len === dirtyComponents.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected flush transaction\'s stored dirty-components length (%s) to ' + 'match dirty-components array length (%s).', len, dirtyComponents.length) : invariant(false) : undefined;
	
	  // Since reconciling a component higher in the owner hierarchy usually (not
	  // always -- see shouldComponentUpdate()) will reconcile children, reconcile
	  // them before their children by sorting the array.
	  dirtyComponents.sort(mountOrderComparator);
	
	  for (var i = 0; i < len; i++) {
	    // If a component is unmounted before pending changes apply, it will still
	    // be here, but we assume that it has cleared its _pendingCallbacks and
	    // that performUpdateIfNecessary is a noop.
	    var component = dirtyComponents[i];
	
	    // If performUpdateIfNecessary happens to enqueue any new updates, we
	    // shouldn't execute the callbacks until the next render happens, so
	    // stash the callbacks first
	    var callbacks = component._pendingCallbacks;
	    component._pendingCallbacks = null;
	
	    ReactReconciler.performUpdateIfNecessary(component, transaction.reconcileTransaction);
	
	    if (callbacks) {
	      for (var j = 0; j < callbacks.length; j++) {
	        transaction.callbackQueue.enqueue(callbacks[j], component.getPublicInstance());
	      }
	    }
	  }
	}
	
	var flushBatchedUpdates = function () {
	  // ReactUpdatesFlushTransaction's wrappers will clear the dirtyComponents
	  // array and perform any updates enqueued by mount-ready handlers (i.e.,
	  // componentDidUpdate) but we need to check here too in order to catch
	  // updates enqueued by setState callbacks and asap calls.
	  while (dirtyComponents.length || asapEnqueued) {
	    if (dirtyComponents.length) {
	      var transaction = ReactUpdatesFlushTransaction.getPooled();
	      transaction.perform(runBatchedUpdates, null, transaction);
	      ReactUpdatesFlushTransaction.release(transaction);
	    }
	
	    if (asapEnqueued) {
	      asapEnqueued = false;
	      var queue = asapCallbackQueue;
	      asapCallbackQueue = CallbackQueue.getPooled();
	      queue.notifyAll();
	      CallbackQueue.release(queue);
	    }
	  }
	};
	flushBatchedUpdates = ReactPerf.measure('ReactUpdates', 'flushBatchedUpdates', flushBatchedUpdates);
	
	/**
	 * Mark a component as needing a rerender, adding an optional callback to a
	 * list of functions which will be executed once the rerender occurs.
	 */
	function enqueueUpdate(component) {
	  ensureInjected();
	
	  // Various parts of our code (such as ReactCompositeComponent's
	  // _renderValidatedComponent) assume that calls to render aren't nested;
	  // verify that that's the case. (This is called by each top-level update
	  // function, like setProps, setState, forceUpdate, etc.; creation and
	  // destruction of top-level components is guarded in ReactMount.)
	
	  if (!batchingStrategy.isBatchingUpdates) {
	    batchingStrategy.batchedUpdates(enqueueUpdate, component);
	    return;
	  }
	
	  dirtyComponents.push(component);
	}
	
	/**
	 * Enqueue a callback to be run at the end of the current batching cycle. Throws
	 * if no updates are currently being performed.
	 */
	function asap(callback, context) {
	  !batchingStrategy.isBatchingUpdates ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates.asap: Can\'t enqueue an asap callback in a context where' + 'updates are not being batched.') : invariant(false) : undefined;
	  asapCallbackQueue.enqueue(callback, context);
	  asapEnqueued = true;
	}
	
	var ReactUpdatesInjection = {
	  injectReconcileTransaction: function (ReconcileTransaction) {
	    !ReconcileTransaction ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a reconcile transaction class') : invariant(false) : undefined;
	    ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;
	  },
	
	  injectBatchingStrategy: function (_batchingStrategy) {
	    !_batchingStrategy ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a batching strategy') : invariant(false) : undefined;
	    !(typeof _batchingStrategy.batchedUpdates === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a batchedUpdates() function') : invariant(false) : undefined;
	    !(typeof _batchingStrategy.isBatchingUpdates === 'boolean') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide an isBatchingUpdates boolean attribute') : invariant(false) : undefined;
	    batchingStrategy = _batchingStrategy;
	  }
	};
	
	var ReactUpdates = {
	  /**
	   * React references `ReactReconcileTransaction` using this property in order
	   * to allow dependency injection.
	   *
	   * @internal
	   */
	  ReactReconcileTransaction: null,
	
	  batchedUpdates: batchedUpdates,
	  enqueueUpdate: enqueueUpdate,
	  flushBatchedUpdates: flushBatchedUpdates,
	  injection: ReactUpdatesInjection,
	  asap: asap
	};
	
	module.exports = ReactUpdates;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 25 */
/***/ function(module, exports) {

	module.exports = function(color) {
	  var b, g, r, rgbColor, yiq;
	  rgbColor = d3.rgb(color);
	  r = rgbColor.r;
	  g = rgbColor.g;
	  b = rgbColor.b;
	  yiq = (r * 299 + g * 587 + b * 114) / 1000;
	  if (yiq >= 128) {
	    return "#444444";
	  } else {
	    return "#f7f7f7";
	  }
	};


/***/ },
/* 26 */
/***/ function(module, exports) {

	module.exports = function(id) {
	  if (id) {
	    d3.selectAll("div#d3plus_tooltip_curtain_" + id).remove();
	    return d3.selectAll("div#d3plus_tooltip_id_" + id).remove();
	  } else {
	    d3.selectAll("div.d3plus_tooltip_curtain").remove();
	    return d3.selectAll("div.d3plus_tooltip").remove();
	  }
	};


/***/ },
/* 27 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule emptyFunction
	 */
	
	"use strict";
	
	function makeEmptyFunction(arg) {
	  return function () {
	    return arg;
	  };
	}
	
	/**
	 * This function accepts and discards inputs; it has no side effects. This is
	 * primarily useful idiomatically for overridable function endpoints which
	 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
	 */
	function emptyFunction() {}
	
	emptyFunction.thatReturns = makeEmptyFunction;
	emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
	emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
	emptyFunction.thatReturnsNull = makeEmptyFunction(null);
	emptyFunction.thatReturnsThis = function () {
	  return this;
	};
	emptyFunction.thatReturnsArgument = function (arg) {
	  return arg;
	};
	
	module.exports = emptyFunction;

/***/ },
/* 28 */
/***/ function(module, exports) {

	module.exports = function(color) {
	  var hsl;
	  hsl = d3.hsl(color);
	  if (hsl.l > .45) {
	    if (hsl.s > .8) {
	      hsl.s = 0.8;
	    }
	    hsl.l = 0.45;
	  }
	  return hsl.toString();
	};


/***/ },
/* 29 */
/***/ function(module, exports, __webpack_require__) {

	var d3selection, validate;
	
	d3selection = __webpack_require__(31);
	
	validate = __webpack_require__(7);
	
	
	/**
	 * Given any two objects, this method will merge the two objects together, returning a new third object. The values of the second object always overwrite the first.
	 * @method d3plus.object.merge
	 * @for d3plus.object
	 * @param obj1 {Object} The primary object.
	 * @param obj2 {Object} The secondary object to merge into the first.
	 * @return {Object}
	 */
	
	module.exports = function(obj1, obj2) {
	  var copyObject, obj3;
	  copyObject = function(obj, ret, shallow) {
	    var k, results, v;
	    results = [];
	    for (k in obj) {
	      v = obj[k];
	      if (typeof v !== "undefined") {
	        if (!shallow && validate(v)) {
	          if (typeof ret[k] !== "object") {
	            ret[k] = {};
	          }
	          results.push(copyObject(v, ret[k], k.indexOf("d3plus") === 0));
	        } else if (!d3selection(v) && v instanceof Array) {
	          results.push(ret[k] = v.slice(0));
	        } else {
	          results.push(ret[k] = v);
	        }
	      } else {
	        results.push(void 0);
	      }
	    }
	    return results;
	  };
	  obj3 = {};
	  if (obj1) {
	    copyObject(obj1, obj3);
	  }
	  if (obj2) {
	    copyObject(obj2, obj3);
	  }
	  return obj3;
	};


/***/ },
/* 30 */
/***/ function(module, exports) {

	module.exports = function(arr, n) {
	  var buckets, step;
	  buckets = [];
	  step = 1 / (n - 1) * (arr[1] - arr[0]);
	  return d3.range(arr[0], arr[1] + step, step);
	};


/***/ },
/* 31 */
/***/ function(module, exports, __webpack_require__) {

	var ie;
	
	ie = __webpack_require__(32);
	
	module.exports = function(elem) {
	  if (ie) {
	    return typeof elem === "object" && elem instanceof Array && "size" in elem && "select" in elem;
	  } else {
	    return elem instanceof d3.selection;
	  }
	};


/***/ },
/* 32 */
/***/ function(module, exports) {

	// Determines if the current browser is Internet Explorer.
	module.exports = /(MSIE|Trident\/|Edge\/)/i.test(navigator.userAgent);


/***/ },
/* 33 */
/***/ function(module, exports) {

	//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	// Removes all non ASCII characters
	//------------------------------------------------------------------------------
	module.exports = function(str) {
	
	  var removed = [ "!","@","#","$","%","^","&","*","(",")",
	                  "[","]","{","}",".",",","/","\\","|",
	                  "'","\"",";",":","<",">","?","=","+"];
	
	  var diacritics = [
	      [/[\300-\306]/g, "A"],
	      [/[\340-\346]/g, "a"],
	      [/[\310-\313]/g, "E"],
	      [/[\350-\353]/g, "e"],
	      [/[\314-\317]/g, "I"],
	      [/[\354-\357]/g, "i"],
	      [/[\322-\330]/g, "O"],
	      [/[\362-\370]/g, "o"],
	      [/[\331-\334]/g, "U"],
	      [/[\371-\374]/g, "u"],
	      [/[\321]/g, "N"],
	      [/[\361]/g, "n"],
	      [/[\307]/g, "C"],
	      [/[\347]/g, "c"]
	  ];
	
	  str += "";
	
	  return ""+str.replace(/[^A-Za-z0-9\-_]/g, function(chr) {
	
	    if (" " === chr) {
	      return "_";
	    }
	    else if (removed.indexOf(chr) >= 0) {
	      return "";
	    }
	
	    var ret = chr;
	    for (var d = 0; d < diacritics.length; d++) {
	      if (new RegExp(diacritics[d][0]).test(chr)) {
	        ret = diacritics[d][1];
	        break;
	      }
	    }
	
	    return ret;
	
	  });
	
	};


/***/ },
/* 34 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventConstants
	 */
	
	'use strict';
	
	var keyMirror = __webpack_require__(79);
	
	var PropagationPhases = keyMirror({ bubbled: null, captured: null });
	
	/**
	 * Types of raw signals from the browser caught at the top level.
	 */
	var topLevelTypes = keyMirror({
	  topAbort: null,
	  topBlur: null,
	  topCanPlay: null,
	  topCanPlayThrough: null,
	  topChange: null,
	  topClick: null,
	  topCompositionEnd: null,
	  topCompositionStart: null,
	  topCompositionUpdate: null,
	  topContextMenu: null,
	  topCopy: null,
	  topCut: null,
	  topDoubleClick: null,
	  topDrag: null,
	  topDragEnd: null,
	  topDragEnter: null,
	  topDragExit: null,
	  topDragLeave: null,
	  topDragOver: null,
	  topDragStart: null,
	  topDrop: null,
	  topDurationChange: null,
	  topEmptied: null,
	  topEncrypted: null,
	  topEnded: null,
	  topError: null,
	  topFocus: null,
	  topInput: null,
	  topKeyDown: null,
	  topKeyPress: null,
	  topKeyUp: null,
	  topLoad: null,
	  topLoadedData: null,
	  topLoadedMetadata: null,
	  topLoadStart: null,
	  topMouseDown: null,
	  topMouseMove: null,
	  topMouseOut: null,
	  topMouseOver: null,
	  topMouseUp: null,
	  topPaste: null,
	  topPause: null,
	  topPlay: null,
	  topPlaying: null,
	  topProgress: null,
	  topRateChange: null,
	  topReset: null,
	  topScroll: null,
	  topSeeked: null,
	  topSeeking: null,
	  topSelectionChange: null,
	  topStalled: null,
	  topSubmit: null,
	  topSuspend: null,
	  topTextInput: null,
	  topTimeUpdate: null,
	  topTouchCancel: null,
	  topTouchEnd: null,
	  topTouchMove: null,
	  topTouchStart: null,
	  topVolumeChange: null,
	  topWaiting: null,
	  topWheel: null
	});
	
	var EventConstants = {
	  topLevelTypes: topLevelTypes,
	  PropagationPhases: PropagationPhases
	};
	
	module.exports = EventConstants;

/***/ },
/* 35 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactCurrentOwner
	 */
	
	'use strict';
	
	/**
	 * Keeps track of the current owner.
	 *
	 * The current owner is the component who should own any components that are
	 * currently being constructed.
	 */
	var ReactCurrentOwner = {
	
	  /**
	   * @internal
	   * @type {ReactComponent}
	   */
	  current: null
	
	};
	
	module.exports = ReactCurrentOwner;

/***/ },
/* 36 */
/***/ function(module, exports, __webpack_require__) {

	var fontTester;
	
	fontTester = __webpack_require__(84);
	
	module.exports = function(words, style, opts) {
	  var attr, getHeight, getWidth, sizes, spacing, tester, tspans;
	  if (!opts) {
	    opts = {};
	  }
	  style = style || {};
	  tester = opts.parent || fontTester("svg").append("text");
	  sizes = [];
	  if (!(words instanceof Array)) {
	    words = [words];
	  }
	  tspans = tester.selectAll("tspan").data(words);
	  attr = {
	    left: "0px",
	    position: "absolute",
	    top: "0px",
	    x: 0,
	    y: 0
	  };
	  spacing = 0;
	  if ("letter-spacing" in style) {
	    spacing = parseFloat(style["letter-spacing"]);
	    delete style["letter-spacing"];
	  }
	  getWidth = function(elem) {
	    var add;
	    add = 0;
	    if (spacing) {
	      add = (d3.select(elem).text().length - 1) * spacing;
	    }
	    return elem.getComputedTextLength() + add;
	  };
	  getHeight = function(elem) {
	    return elem.parentNode.getBBox().height || elem.getBoundingClientRect().height;
	  };
	  tspans.enter().append("tspan").text(String).style(style).attr(attr).each(function(d) {
	    if (typeof opts.mod === "function") {
	      return opts.mod(this);
	    }
	  }).each(function(d) {
	    var children, height, width;
	    children = d3.select(this).selectAll("tspan");
	    if (children.size()) {
	      width = [];
	      children.each(function() {
	        return width.push(getWidth(this));
	      });
	      width = d3.max(width);
	    } else {
	      width = getWidth(this);
	    }
	    height = getHeight(this);
	    return sizes.push({
	      height: height,
	      text: d,
	      width: width
	    });
	  });
	  tspans.remove();
	  if (!opts.parent) {
	    tester.remove();
	  }
	  return sizes;
	};


/***/ },
/* 37 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule PooledClass
	 */
	
	'use strict';
	
	var invariant = __webpack_require__(4);
	
	/**
	 * Static poolers. Several custom versions for each potential number of
	 * arguments. A completely generic pooler is easy to implement, but would
	 * require accessing the `arguments` object. In each of these, `this` refers to
	 * the Class itself, not an instance. If any others are needed, simply add them
	 * here, or in their own files.
	 */
	var oneArgumentPooler = function (copyFieldsFrom) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, copyFieldsFrom);
	    return instance;
	  } else {
	    return new Klass(copyFieldsFrom);
	  }
	};
	
	var twoArgumentPooler = function (a1, a2) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2);
	    return instance;
	  } else {
	    return new Klass(a1, a2);
	  }
	};
	
	var threeArgumentPooler = function (a1, a2, a3) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3);
	  }
	};
	
	var fourArgumentPooler = function (a1, a2, a3, a4) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3, a4);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3, a4);
	  }
	};
	
	var fiveArgumentPooler = function (a1, a2, a3, a4, a5) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3, a4, a5);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3, a4, a5);
	  }
	};
	
	var standardReleaser = function (instance) {
	  var Klass = this;
	  !(instance instanceof Klass) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Trying to release an instance into a pool of a different type.') : invariant(false) : undefined;
	  instance.destructor();
	  if (Klass.instancePool.length < Klass.poolSize) {
	    Klass.instancePool.push(instance);
	  }
	};
	
	var DEFAULT_POOL_SIZE = 10;
	var DEFAULT_POOLER = oneArgumentPooler;
	
	/**
	 * Augments `CopyConstructor` to be a poolable class, augmenting only the class
	 * itself (statically) not adding any prototypical fields. Any CopyConstructor
	 * you give this may have a `poolSize` property, and will look for a
	 * prototypical `destructor` on instances (optional).
	 *
	 * @param {Function} CopyConstructor Constructor that can be used to reset.
	 * @param {Function} pooler Customizable pooler.
	 */
	var addPoolingTo = function (CopyConstructor, pooler) {
	  var NewKlass = CopyConstructor;
	  NewKlass.instancePool = [];
	  NewKlass.getPooled = pooler || DEFAULT_POOLER;
	  if (!NewKlass.poolSize) {
	    NewKlass.poolSize = DEFAULT_POOL_SIZE;
	  }
	  NewKlass.release = standardReleaser;
	  return NewKlass;
	};
	
	var PooledClass = {
	  addPoolingTo: addPoolingTo,
	  oneArgumentPooler: oneArgumentPooler,
	  twoArgumentPooler: twoArgumentPooler,
	  threeArgumentPooler: threeArgumentPooler,
	  fourArgumentPooler: fourArgumentPooler,
	  fiveArgumentPooler: fiveArgumentPooler
	};
	
	module.exports = PooledClass;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 38 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule keyOf
	 */
	
	/**
	 * Allows extraction of a minified key. Let's the build system minify keys
	 * without losing the ability to dynamically use key strings as values
	 * themselves. Pass in an object with a single key/val pair and it will return
	 * you the string key of that single record. Suppose you want to grab the
	 * value for a key 'className' inside of an object. Key/val minification may
	 * have aliased that key to be 'xa12'. keyOf({className: null}) will return
	 * 'xa12' in that case. Resolve keys you want to use once at startup time, then
	 * reuse those resolutions.
	 */
	"use strict";
	
	var keyOf = function (oneKeyObj) {
	  var key;
	  for (key in oneKeyObj) {
	    if (!oneKeyObj.hasOwnProperty(key)) {
	      continue;
	    }
	    return key;
	  }
	  return null;
	};
	
	module.exports = keyOf;

/***/ },
/* 39 */
/***/ function(module, exports) {

	var prefix;
	
	prefix = function() {
	  var val;
	  if ("-webkit-transform" in document.body.style) {
	    val = "-webkit-";
	  } else if ("-moz-transform" in document.body.style) {
	    val = "-moz-";
	  } else if ("-ms-transform" in document.body.style) {
	    val = "-ms-";
	  } else if ("-o-transform" in document.body.style) {
	    val = "-o-";
	  } else {
	    val = "";
	  }
	  prefix = function() {
	    return val;
	  };
	  return val;
	};
	
	module.exports = prefix;


/***/ },
/* 40 */
/***/ function(module, exports) {

	module.exports = d3.select("html").attr("dir") === "rtl";


/***/ },
/* 41 */
/***/ function(module, exports, __webpack_require__) {

	var attach, print, sizes, text, wrap;
	
	attach = __webpack_require__(86);
	
	sizes = __webpack_require__(237);
	
	print = __webpack_require__(2);
	
	text = __webpack_require__(238);
	
	wrap = __webpack_require__(240);
	
	module.exports = function() {
	  var vars;
	  vars = {
	    self: function(selection) {
	      selection.each(function() {
	        sizes(vars);
	        if (vars.size.value[0] <= vars.height.inner) {
	          text(vars);
	          wrap(vars);
	        } else {
	          vars.container.value.html("");
	        }
	        if (vars.dev.value) {
	          print.timeEnd("total draw time");
	        }
	      });
	      return vars.self;
	    }
	  };
	  attach(vars, {
	    align: __webpack_require__(241),
	    config: __webpack_require__(242),
	    container: __webpack_require__(243),
	    dev: __webpack_require__(244),
	    draw: __webpack_require__(245),
	    format: __webpack_require__(246),
	    height: __webpack_require__(247),
	    padding: __webpack_require__(248),
	    resize: __webpack_require__(249),
	    rotate: __webpack_require__(250),
	    text: __webpack_require__(253),
	    shape: __webpack_require__(251),
	    size: __webpack_require__(252),
	    valign: __webpack_require__(254),
	    width: __webpack_require__(255),
	    x: __webpack_require__(256),
	    y: __webpack_require__(257)
	  });
	  return vars.self;
	};


/***/ },
/* 42 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMProperty
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var invariant = __webpack_require__(4);
	
	function checkMask(value, bitmask) {
	  return (value & bitmask) === bitmask;
	}
	
	var DOMPropertyInjection = {
	  /**
	   * Mapping from normalized, camelcased property names to a configuration that
	   * specifies how the associated DOM property should be accessed or rendered.
	   */
	  MUST_USE_ATTRIBUTE: 0x1,
	  MUST_USE_PROPERTY: 0x2,
	  HAS_SIDE_EFFECTS: 0x4,
	  HAS_BOOLEAN_VALUE: 0x8,
	  HAS_NUMERIC_VALUE: 0x10,
	  HAS_POSITIVE_NUMERIC_VALUE: 0x20 | 0x10,
	  HAS_OVERLOADED_BOOLEAN_VALUE: 0x40,
	
	  /**
	   * Inject some specialized knowledge about the DOM. This takes a config object
	   * with the following properties:
	   *
	   * isCustomAttribute: function that given an attribute name will return true
	   * if it can be inserted into the DOM verbatim. Useful for data-* or aria-*
	   * attributes where it's impossible to enumerate all of the possible
	   * attribute names,
	   *
	   * Properties: object mapping DOM property name to one of the
	   * DOMPropertyInjection constants or null. If your attribute isn't in here,
	   * it won't get written to the DOM.
	   *
	   * DOMAttributeNames: object mapping React attribute name to the DOM
	   * attribute name. Attribute names not specified use the **lowercase**
	   * normalized name.
	   *
	   * DOMAttributeNamespaces: object mapping React attribute name to the DOM
	   * attribute namespace URL. (Attribute names not specified use no namespace.)
	   *
	   * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.
	   * Property names not specified use the normalized name.
	   *
	   * DOMMutationMethods: Properties that require special mutation methods. If
	   * `value` is undefined, the mutation method should unset the property.
	   *
	   * @param {object} domPropertyConfig the config as described above.
	   */
	  injectDOMPropertyConfig: function (domPropertyConfig) {
	    var Injection = DOMPropertyInjection;
	    var Properties = domPropertyConfig.Properties || {};
	    var DOMAttributeNamespaces = domPropertyConfig.DOMAttributeNamespaces || {};
	    var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};
	    var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};
	    var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};
	
	    if (domPropertyConfig.isCustomAttribute) {
	      DOMProperty._isCustomAttributeFunctions.push(domPropertyConfig.isCustomAttribute);
	    }
	
	    for (var propName in Properties) {
	      !!DOMProperty.properties.hasOwnProperty(propName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'injectDOMPropertyConfig(...): You\'re trying to inject DOM property ' + '\'%s\' which has already been injected. You may be accidentally ' + 'injecting the same DOM property config twice, or you may be ' + 'injecting two configs that have conflicting property names.', propName) : invariant(false) : undefined;
	
	      var lowerCased = propName.toLowerCase();
	      var propConfig = Properties[propName];
	
	      var propertyInfo = {
	        attributeName: lowerCased,
	        attributeNamespace: null,
	        propertyName: propName,
	        mutationMethod: null,
	
	        mustUseAttribute: checkMask(propConfig, Injection.MUST_USE_ATTRIBUTE),
	        mustUseProperty: checkMask(propConfig, Injection.MUST_USE_PROPERTY),
	        hasSideEffects: checkMask(propConfig, Injection.HAS_SIDE_EFFECTS),
	        hasBooleanValue: checkMask(propConfig, Injection.HAS_BOOLEAN_VALUE),
	        hasNumericValue: checkMask(propConfig, Injection.HAS_NUMERIC_VALUE),
	        hasPositiveNumericValue: checkMask(propConfig, Injection.HAS_POSITIVE_NUMERIC_VALUE),
	        hasOverloadedBooleanValue: checkMask(propConfig, Injection.HAS_OVERLOADED_BOOLEAN_VALUE)
	      };
	
	      !(!propertyInfo.mustUseAttribute || !propertyInfo.mustUseProperty) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'DOMProperty: Cannot require using both attribute and property: %s', propName) : invariant(false) : undefined;
	      !(propertyInfo.mustUseProperty || !propertyInfo.hasSideEffects) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'DOMProperty: Properties that have side effects must use property: %s', propName) : invariant(false) : undefined;
	      !(propertyInfo.hasBooleanValue + propertyInfo.hasNumericValue + propertyInfo.hasOverloadedBooleanValue <= 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'DOMProperty: Value can be one of boolean, overloaded boolean, or ' + 'numeric value, but not a combination: %s', propName) : invariant(false) : undefined;
	
	      if (process.env.NODE_ENV !== 'production') {
	        DOMProperty.getPossibleStandardName[lowerCased] = propName;
	      }
	
	      if (DOMAttributeNames.hasOwnProperty(propName)) {
	        var attributeName = DOMAttributeNames[propName];
	        propertyInfo.attributeName = attributeName;
	        if (process.env.NODE_ENV !== 'production') {
	          DOMProperty.getPossibleStandardName[attributeName] = propName;
	        }
	      }
	
	      if (DOMAttributeNamespaces.hasOwnProperty(propName)) {
	        propertyInfo.attributeNamespace = DOMAttributeNamespaces[propName];
	      }
	
	      if (DOMPropertyNames.hasOwnProperty(propName)) {
	        propertyInfo.propertyName = DOMPropertyNames[propName];
	      }
	
	      if (DOMMutationMethods.hasOwnProperty(propName)) {
	        propertyInfo.mutationMethod = DOMMutationMethods[propName];
	      }
	
	      DOMProperty.properties[propName] = propertyInfo;
	    }
	  }
	};
	var defaultValueCache = {};
	
	/**
	 * DOMProperty exports lookup objects that can be used like functions:
	 *
	 *   > DOMProperty.isValid['id']
	 *   true
	 *   > DOMProperty.isValid['foobar']
	 *   undefined
	 *
	 * Although this may be confusing, it performs better in general.
	 *
	 * @see http://jsperf.com/key-exists
	 * @see http://jsperf.com/key-missing
	 */
	var DOMProperty = {
	
	  ID_ATTRIBUTE_NAME: 'data-reactid',
	
	  /**
	   * Map from property "standard name" to an object with info about how to set
	   * the property in the DOM. Each object contains:
	   *
	   * attributeName:
	   *   Used when rendering markup or with `*Attribute()`.
	   * attributeNamespace
	   * propertyName:
	   *   Used on DOM node instances. (This includes properties that mutate due to
	   *   external factors.)
	   * mutationMethod:
	   *   If non-null, used instead of the property or `setAttribute()` after
	   *   initial render.
	   * mustUseAttribute:
	   *   Whether the property must be accessed and mutated using `*Attribute()`.
	   *   (This includes anything that fails `<propName> in <element>`.)
	   * mustUseProperty:
	   *   Whether the property must be accessed and mutated as an object property.
	   * hasSideEffects:
	   *   Whether or not setting a value causes side effects such as triggering
	   *   resources to be loaded or text selection changes. If true, we read from
	   *   the DOM before updating to ensure that the value is only set if it has
	   *   changed.
	   * hasBooleanValue:
	   *   Whether the property should be removed when set to a falsey value.
	   * hasNumericValue:
	   *   Whether the property must be numeric or parse as a numeric and should be
	   *   removed when set to a falsey value.
	   * hasPositiveNumericValue:
	   *   Whether the property must be positive numeric or parse as a positive
	   *   numeric and should be removed when set to a falsey value.
	   * hasOverloadedBooleanValue:
	   *   Whether the property can be used as a flag as well as with a value.
	   *   Removed when strictly equal to false; present without a value when
	   *   strictly equal to true; present with a value otherwise.
	   */
	  properties: {},
	
	  /**
	   * Mapping from lowercase property names to the properly cased version, used
	   * to warn in the case of missing properties. Available only in __DEV__.
	   * @type {Object}
	   */
	  getPossibleStandardName: process.env.NODE_ENV !== 'production' ? {} : null,
	
	  /**
	   * All of the isCustomAttribute() functions that have been injected.
	   */
	  _isCustomAttributeFunctions: [],
	
	  /**
	   * Checks whether a property name is a custom attribute.
	   * @method
	   */
	  isCustomAttribute: function (attributeName) {
	    for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {
	      var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];
	      if (isCustomAttributeFn(attributeName)) {
	        return true;
	      }
	    }
	    return false;
	  },
	
	  /**
	   * Returns the default property value for a DOM property (i.e., not an
	   * attribute). Most default values are '' or false, but not all. Worse yet,
	   * some (in particular, `type`) vary depending on the type of element.
	   *
	   * TODO: Is it better to grab all the possible properties when creating an
	   * element to avoid having to create the same element twice?
	   */
	  getDefaultValueForProperty: function (nodeName, prop) {
	    var nodeDefaults = defaultValueCache[nodeName];
	    var testElement;
	    if (!nodeDefaults) {
	      defaultValueCache[nodeName] = nodeDefaults = {};
	    }
	    if (!(prop in nodeDefaults)) {
	      testElement = document.createElement(nodeName);
	      nodeDefaults[prop] = testElement[prop];
	    }
	    return nodeDefaults[prop];
	  },
	
	  injection: DOMPropertyInjection
	};
	
	module.exports = DOMProperty;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 43 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactReconciler
	 */
	
	'use strict';
	
	var ReactRef = __webpack_require__(456);
	
	/**
	 * Helper to call ReactRef.attachRefs with this composite component, split out
	 * to avoid allocations in the transaction mount-ready queue.
	 */
	function attachRefs() {
	  ReactRef.attachRefs(this, this._currentElement);
	}
	
	var ReactReconciler = {
	
	  /**
	   * Initializes the component, renders markup, and registers event listeners.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {string} rootID DOM ID of the root node.
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @return {?string} Rendered markup to be inserted into the DOM.
	   * @final
	   * @internal
	   */
	  mountComponent: function (internalInstance, rootID, transaction, context) {
	    var markup = internalInstance.mountComponent(rootID, transaction, context);
	    if (internalInstance._currentElement && internalInstance._currentElement.ref != null) {
	      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
	    }
	    return markup;
	  },
	
	  /**
	   * Releases any resources allocated by `mountComponent`.
	   *
	   * @final
	   * @internal
	   */
	  unmountComponent: function (internalInstance) {
	    ReactRef.detachRefs(internalInstance, internalInstance._currentElement);
	    internalInstance.unmountComponent();
	  },
	
	  /**
	   * Update a component using a new element.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactElement} nextElement
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   * @internal
	   */
	  receiveComponent: function (internalInstance, nextElement, transaction, context) {
	    var prevElement = internalInstance._currentElement;
	
	    if (nextElement === prevElement && context === internalInstance._context) {
	      // Since elements are immutable after the owner is rendered,
	      // we can do a cheap identity compare here to determine if this is a
	      // superfluous reconcile. It's possible for state to be mutable but such
	      // change should trigger an update of the owner which would recreate
	      // the element. We explicitly check for the existence of an owner since
	      // it's possible for an element created outside a composite to be
	      // deeply mutated and reused.
	
	      // TODO: Bailing out early is just a perf optimization right?
	      // TODO: Removing the return statement should affect correctness?
	      return;
	    }
	
	    var refsChanged = ReactRef.shouldUpdateRefs(prevElement, nextElement);
	
	    if (refsChanged) {
	      ReactRef.detachRefs(internalInstance, prevElement);
	    }
	
	    internalInstance.receiveComponent(nextElement, transaction, context);
	
	    if (refsChanged && internalInstance._currentElement && internalInstance._currentElement.ref != null) {
	      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
	    }
	  },
	
	  /**
	   * Flush any dirty changes in a component.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  performUpdateIfNecessary: function (internalInstance, transaction) {
	    internalInstance.performUpdateIfNecessary(transaction);
	  }
	
	};
	
	module.exports = ReactReconciler;

/***/ },
/* 44 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticEvent
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var PooledClass = __webpack_require__(37);
	
	var assign = __webpack_require__(5);
	var emptyFunction = __webpack_require__(27);
	var warning = __webpack_require__(6);
	
	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var EventInterface = {
	  type: null,
	  target: null,
	  // currentTarget is set when dispatching; no use in copying it here
	  currentTarget: emptyFunction.thatReturnsNull,
	  eventPhase: null,
	  bubbles: null,
	  cancelable: null,
	  timeStamp: function (event) {
	    return event.timeStamp || Date.now();
	  },
	  defaultPrevented: null,
	  isTrusted: null
	};
	
	/**
	 * Synthetic events are dispatched by event plugins, typically in response to a
	 * top-level event delegation handler.
	 *
	 * These systems should generally use pooling to reduce the frequency of garbage
	 * collection. The system should check `isPersistent` to determine whether the
	 * event should be released into the pool after being dispatched. Users that
	 * need a persisted event should invoke `persist`.
	 *
	 * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
	 * normalizing browser quirks. Subclasses do not necessarily have to implement a
	 * DOM interface; custom application-specific events can also subclass this.
	 *
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 */
	function SyntheticEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  this.dispatchConfig = dispatchConfig;
	  this.dispatchMarker = dispatchMarker;
	  this.nativeEvent = nativeEvent;
	
	  var Interface = this.constructor.Interface;
	  for (var propName in Interface) {
	    if (!Interface.hasOwnProperty(propName)) {
	      continue;
	    }
	    var normalize = Interface[propName];
	    if (normalize) {
	      this[propName] = normalize(nativeEvent);
	    } else {
	      if (propName === 'target') {
	        this.target = nativeEventTarget;
	      } else {
	        this[propName] = nativeEvent[propName];
	      }
	    }
	  }
	
	  var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
	  if (defaultPrevented) {
	    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
	  } else {
	    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;
	  }
	  this.isPropagationStopped = emptyFunction.thatReturnsFalse;
	}
	
	assign(SyntheticEvent.prototype, {
	
	  preventDefault: function () {
	    this.defaultPrevented = true;
	    var event = this.nativeEvent;
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(event, 'This synthetic event is reused for performance reasons. If you\'re ' + 'seeing this, you\'re calling `preventDefault` on a ' + 'released/nullified synthetic event. This is a no-op. See ' + 'https://fb.me/react-event-pooling for more information.') : undefined;
	    }
	    if (!event) {
	      return;
	    }
	
	    if (event.preventDefault) {
	      event.preventDefault();
	    } else {
	      event.returnValue = false;
	    }
	    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
	  },
	
	  stopPropagation: function () {
	    var event = this.nativeEvent;
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(event, 'This synthetic event is reused for performance reasons. If you\'re ' + 'seeing this, you\'re calling `stopPropagation` on a ' + 'released/nullified synthetic event. This is a no-op. See ' + 'https://fb.me/react-event-pooling for more information.') : undefined;
	    }
	    if (!event) {
	      return;
	    }
	
	    if (event.stopPropagation) {
	      event.stopPropagation();
	    } else {
	      event.cancelBubble = true;
	    }
	    this.isPropagationStopped = emptyFunction.thatReturnsTrue;
	  },
	
	  /**
	   * We release all dispatched `SyntheticEvent`s after each event loop, adding
	   * them back into the pool. This allows a way to hold onto a reference that
	   * won't be added back into the pool.
	   */
	  persist: function () {
	    this.isPersistent = emptyFunction.thatReturnsTrue;
	  },
	
	  /**
	   * Checks if this event should be released back into the pool.
	   *
	   * @return {boolean} True if this should not be released, false otherwise.
	   */
	  isPersistent: emptyFunction.thatReturnsFalse,
	
	  /**
	   * `PooledClass` looks for `destructor` on each instance it releases.
	   */
	  destructor: function () {
	    var Interface = this.constructor.Interface;
	    for (var propName in Interface) {
	      this[propName] = null;
	    }
	    this.dispatchConfig = null;
	    this.dispatchMarker = null;
	    this.nativeEvent = null;
	  }
	
	});
	
	SyntheticEvent.Interface = EventInterface;
	
	/**
	 * Helper to reduce boilerplate when creating subclasses.
	 *
	 * @param {function} Class
	 * @param {?object} Interface
	 */
	SyntheticEvent.augmentClass = function (Class, Interface) {
	  var Super = this;
	
	  var prototype = Object.create(Super.prototype);
	  assign(prototype, Class.prototype);
	  Class.prototype = prototype;
	  Class.prototype.constructor = Class;
	
	  Class.Interface = assign({}, Super.Interface, Interface);
	  Class.augmentClass = Super.augmentClass;
	
	  PooledClass.addPoolingTo(Class, PooledClass.fourArgumentPooler);
	};
	
	PooledClass.addPoolingTo(SyntheticEvent, PooledClass.fourArgumentPooler);
	
	module.exports = SyntheticEvent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 45 */
/***/ function(module, exports) {

	module.exports = function(value, vars, method) {
	  var elem;
	  if (vars.history) {
	    vars.history.reset();
	  }
	  if (value.constructor === String) {
	    if (value.indexOf("/") >= 0) {
	      method.url = value;
	      return [];
	    }
	    elem = d3.selectAll(value);
	    if (elem.size()) {
	      return elem;
	    }
	    if (value.indexOf(".") >= 0) {
	      method.url = value;
	    }
	    return [];
	  } else {
	    return value;
	  }
	};


/***/ },
/* 46 */
/***/ function(module, exports, __webpack_require__) {

	var format, locale;
	
	format = __webpack_require__(14);
	
	locale = __webpack_require__(53).ui;
	
	module.exports = function(list, andText, max, moreText) {
	  var amount;
	  if (!(list instanceof Array)) {
	    return list;
	  } else {
	    list = list.slice(0);
	  }
	  if (!andText) {
	    andText = locale.and;
	  }
	  if (!moreText) {
	    moreText = locale.moreText;
	  }
	  if (list.length === 2) {
	    return list.join(" " + andText + " ");
	  } else {
	    if (max && list.length > max) {
	      amount = list.length - max + 1;
	      list = list.slice(0, max - 1);
	      list[max - 1] = format(moreText, amount);
	    }
	    if (list.length > 1) {
	      list[list.length - 1] = andText + " " + list[list.length - 1];
	    }
	    return list.join(", ");
	  }
	};


/***/ },
/* 47 */
/***/ function(module, exports) {

	module.exports = function(arr, value) {
	  var closest, i;
	  if (value.constructor === String) {
	    i = arr.indexOf(value);
	    if (i > -1) {
	      return arr[i];
	    } else {
	      return arr[0];
	    }
	  }
	  closest = arr[0];
	  arr.forEach(function(p) {
	    if (Math.abs(value - p) < Math.abs(value - closest)) {
	      return closest = p;
	    }
	  });
	  return closest;
	};


/***/ },
/* 48 */
/***/ function(module, exports, __webpack_require__) {

	var arraySort = __webpack_require__(19),
	    attach      = __webpack_require__(86),
	    dataFormat  = __webpack_require__(144),
	    dataKeys    = __webpack_require__(123),
	    dataLoad    = __webpack_require__(124),
	    fetchData   = __webpack_require__(99),
	    ie          = __webpack_require__(32),
	    methodReset = __webpack_require__(129),
	    print       = __webpack_require__(2);
	//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	// Form Element shell
	//------------------------------------------------------------------------------
	module.exports = function() {
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // Initialize the global variable object.
	  //----------------------------------------------------------------------------
	  var vars = {
	    "types": {
	      "auto": __webpack_require__(377),
	      "button": __webpack_require__(226),
	      "drop": __webpack_require__(228),
	      "toggle": __webpack_require__(391)
	    }
	  };
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // Create the main drawing function.
	  //----------------------------------------------------------------------------
	  vars.self = function( selection ) {
	
	    //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	    // Set timing to 0 if it's the first time running this function or if the
	    // data length is longer than the "large" limit
	    //--------------------------------------------------------------------------
	    var large = vars.data.value instanceof Array && vars.data.value.length > vars.data.large;
	
	    vars.draw.timing = vars.draw.first || large || ie ? 0 : vars.timing.ui;
	
	    //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	    // Create/update the UI element
	    //--------------------------------------------------------------------------
	    if ( vars.data.value instanceof Array ) {
	
	      if ( vars.dev.value ) print.group("drawing \""+vars.type.value+"\"");
	
	      //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	      // Analyze new data, if changed.
	      //------------------------------------------------------------------------
	      if ( vars.data.changed ) {
	        vars.data.cache = {};
	        dataKeys( vars , "data" );
	        dataFormat( vars );
	      }
	
	      vars.data.viz = fetchData( vars );
	
	      //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	      // Sort the data, if needed.
	      //------------------------------------------------------------------------
	      if (vars.data.sort.value && (vars.data.changed || vars.order.changed || vars.order.sort.changed) ) {
	        arraySort( vars.data.viz , vars.order.value || vars.text.value,
	                   vars.order.sort.value , vars.color.value , vars );
	      }
	
	      //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	      // Set first element in data as focus if there is no focus set.
	      //------------------------------------------------------------------------
	      if (vars.focus.value === false && ["auto", "button"].indexOf(vars.type.value) < 0) {
	
	        var element = vars.data.element.value;
	
	        if ( element && element.node().tagName.toLowerCase() === "select" ) {
	          var i = element.property("selectedIndex");
	          i = i < 0 ? 0 : i;
	          var option = element.selectAll("option")[0][i],
	              val = option.getAttribute("data-"+vars.id.value) || option.getAttribute(vars.id.value);
	          if (val) vars.focus.value = val;
	        }
	
	        if ( vars.focus.value === false && vars.data.viz.length ) {
	          vars.focus.value = vars.data.viz[0][vars.id.value];
	        }
	
	        if (vars.dev.value && vars.focus.value !== false) print.log("\"value\" set to \""+vars.focus.value+"\"");
	
	      }
	
	      var getLevel = function(d,depth) {
	
	        depth = typeof depth !== "number" ? vars.id.nesting.length === 1 ? 0 : vars.id.nesting.length-1 : depth;
	        var level = vars.id.nesting[depth];
	
	        if ( depth > 0 && (!(level in d) || d[level] instanceof Array) ) {
	          return getLevel(d,depth-1);
	        }
	        else {
	          return level;
	        }
	
	      };
	
	      //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	      // Run these things if the data has changed.
	      //------------------------------------------------------------------------
	      if ( vars.data.changed ) {
	
	        //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	        // Determine if search box is needed.
	        //----------------------------------------------------------------------
	        if ( vars.search.value === "auto" ) {
	
	          if (vars.data.viz.length > 10) {
	            vars.search.enabled = true;
	            if ( vars.dev.value ) print.log("Search enabled.");
	          }
	          else {
	            vars.search.enabled = false;
	            if ( vars.dev.value ) print.log("Search disabled.");
	          }
	
	        }
	        else {
	
	          vars.search.enabled = vars.search.value;
	
	        }
	
	        //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	        // Update OPTION elements with the new data.
	        //----------------------------------------------------------------------
	        var elementTag = vars.data.element.value ? vars.data.element.value.node().tagName.toLowerCase() : "";
	        if ( vars.data.element.value && elementTag === "select" ) {
	
	          var optionData = [];
	          for (var level in vars.data.nested.all) {
	            optionData = optionData.concat(vars.data.nested.all[level]);
	          }
	
	          options = vars.data.element.value.selectAll("option")
	            .data(optionData,function(d){
	              var level = d ? getLevel(d) : false;
	              return d && level in d ? d[level] : false;
	            });
	
	          options.exit().remove();
	
	          options.enter().append("option");
	
	          options
	            .each(function(d){
	
	              var level   = getLevel(d),
	                  textKey = level === vars.id.value ? vars.text.value || vars.id.value
	                          : vars.text.nesting !== true && level in vars.text.nesting ? vars.text.nesting[level] : level;
	
	              for ( var k in d ) {
	
	                if ( typeof d[k] !== "object" ) {
	
	                  if ( k === textKey ) {
	                    d3.select(this).html(d[k]);
	                  }
	
	                  if ( ["alt","value"].indexOf(k) >= 0 ) {
	                    d3.select(this).attr(k,d[k]);
	                  }
	                  else {
	                    d3.select(this).attr("data-"+k,d[k]);
	                  }
	
	                }
	
	              }
	
	              if (d[level] === vars.focus.value) {
	                this.selected = true;
	              }
	              else {
	                this.selected = false;
	              }
	
	            });
	
	        }
	
	      }
	      else if (vars.focus.changed && vars.data.element.value) {
	        var tag = vars.data.element.value.node().tagName.toLowerCase();
	        if (tag === "select") {
	          vars.data.element.value.selectAll("option")
	            .each(function(d){
	              if (d[getLevel(d)] === vars.focus.value) {
	                this.selected = true;
	              }
	              else {
	                this.selected = false;
	              }
	            });
	        }
	        else {
	          var tag = vars.data.element.value.attr("type").toLowerCase();
	          if (tag === "radio") {
	            vars.data.element.value
	              .each(function(d){
	                if (this.value === vars.focus.value) {
	                  this.checked = true;
	                }
	                else {
	                  this.checked = false;
	                }
	              })
	          }
	        }
	      }
	
	      if ( vars.type.value !== "auto" ) {
	
	        if ( !vars.container.ui ) {
	
	          //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	          // Select container DIV for UI element
	          //----------------------------------------------------------------------
	          vars.container.ui = vars.container.value
	            .selectAll("div#d3plus_"+vars.type.value+"_"+vars.container.id)
	            .data(["container"]);
	
	          //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	          // Create container DIV for UI element
	          //----------------------------------------------------------------------
	          var before = vars.data.element.value ? vars.data.element.value[0][0] : null;
	
	          if ( before ) {
	
	            if ( before.id ) {
	              before = "#"+before.id;
	            }
	            else {
	
	              var id = before.getAttribute(vars.id.value) ? vars.id.value : "data-"+vars.id.value;
	
	              if ( before.getAttribute(id) ) {
	                before = "["+id+"="+before.getAttribute(id)+"]";
	              }
	              else {
	                before = null;
	              }
	
	            }
	
	          }
	
	          vars.container.ui.enter()
	            .insert("div",before)
	            .attr("id","d3plus_"+vars.type.value+"_"+vars.container.id)
	            .style("position","relative")
	            .style("overflow","visible")
	            .style("vertical-align","top");
	
	        }
	
	        //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	        // Update Container
	        //------------------------------------------------------------------------
	        vars.container.ui
	          .style("display", vars.ui.display.value);
	
	        vars.container.ui.transition().duration(vars.draw.timing)
	          .style("margin", vars.ui.margin.css);
	
	        //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	        // Create title, if available.
	        //------------------------------------------------------------------------
	        var title = vars.container.ui.selectAll("div.d3plus_title")
	          .data(vars.title.value ? [vars.title.value] : []);
	
	        title.enter().insert("div","#d3plus_"+vars.type.value+"_"+vars.container.id)
	          .attr("class","d3plus_title")
	          .style("display","inline-block");
	
	        title
	          .style("color",vars.font.color)
	          .style("font-family",vars.font.family.value)
	          .style("font-size",vars.font.size+"px")
	          .style("font-weight",vars.font.weight)
	          .style("padding",vars.ui.padding.css)
	          .style("border-color","transparent")
	          .style("border-style","solid")
	          .style("border-width",vars.ui.border+"px")
	          .text(String)
	          .each(function(d){
	            vars.margin.left = this.offsetWidth;
	          });
	
	      }
	
	      //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	      // Call specific UI element type, if there is data.
	      //------------------------------------------------------------------------
	      if ( vars.data.value.length ) {
	
	        var app = vars.format.locale.value.visualization[vars.type.value];
	        if ( vars.dev.value ) print.time("drawing "+ app);
	        vars.types[vars.type.value]( vars );
	        if ( vars.dev.value ) print.timeEnd("drawing "+ app);
	
	      }
	      else if ( vars.data.url && (!vars.data.loaded || vars.data.stream) ) {
	
	        dataLoad( vars , "data" , vars.self.draw );
	
	      }
	
	      //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	      // Initialization complete
	      //------------------------------------------------------------------------
	      if (vars.dev.value) print.timeEnd("total draw time");
	      methodReset( vars );
	
	    }
	
	  };
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // Define methods and expose public variables.
	  //----------------------------------------------------------------------------
	  attach(vars, {
	    "active":    __webpack_require__(197),
	    "alt":       __webpack_require__(198),
	    "color":     __webpack_require__(199),
	    "config":    __webpack_require__(200),
	    "container": __webpack_require__(201),
	    "data":      __webpack_require__(375),
	    "depth":     __webpack_require__(202),
	    "dev":       __webpack_require__(203),
	    "draw":      __webpack_require__(376),
	    "focus":     __webpack_require__(204),
	    "font":      __webpack_require__(205),
	    "format":    __webpack_require__(206),
	    "height":    __webpack_require__(207),
	    "history":   __webpack_require__(208),
	    "hover":     __webpack_require__(209),
	    "icon":      __webpack_require__(210),
	    "id":        __webpack_require__(211),
	    "keywords":  __webpack_require__(212),
	    "margin":    __webpack_require__(213),
	    "open":      __webpack_require__(214),
	    "order":     __webpack_require__(215),
	    "remove":    __webpack_require__(216),
	    "search":    __webpack_require__(217),
	    "select":    __webpack_require__(218),
	    "selectAll": __webpack_require__(219),
	    "text":      __webpack_require__(220),
	    "timing":    __webpack_require__(221),
	    "title":     __webpack_require__(222),
	    "type":      __webpack_require__(223),
	    "ui":        __webpack_require__(224),
	    "width":     __webpack_require__(225)
	  });
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // Finally, return the main UI function to the user
	  //----------------------------------------------------------------------------
	  return vars.self;
	
	};


/***/ },
/* 49 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInstanceHandles
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var ReactRootIndex = __webpack_require__(172);
	
	var invariant = __webpack_require__(4);
	
	var SEPARATOR = '.';
	var SEPARATOR_LENGTH = SEPARATOR.length;
	
	/**
	 * Maximum depth of traversals before we consider the possibility of a bad ID.
	 */
	var MAX_TREE_DEPTH = 10000;
	
	/**
	 * Creates a DOM ID prefix to use when mounting React components.
	 *
	 * @param {number} index A unique integer
	 * @return {string} React root ID.
	 * @internal
	 */
	function getReactRootIDString(index) {
	  return SEPARATOR + index.toString(36);
	}
	
	/**
	 * Checks if a character in the supplied ID is a separator or the end.
	 *
	 * @param {string} id A React DOM ID.
	 * @param {number} index Index of the character to check.
	 * @return {boolean} True if the character is a separator or end of the ID.
	 * @private
	 */
	function isBoundary(id, index) {
	  return id.charAt(index) === SEPARATOR || index === id.length;
	}
	
	/**
	 * Checks if the supplied string is a valid React DOM ID.
	 *
	 * @param {string} id A React DOM ID, maybe.
	 * @return {boolean} True if the string is a valid React DOM ID.
	 * @private
	 */
	function isValidID(id) {
	  return id === '' || id.charAt(0) === SEPARATOR && id.charAt(id.length - 1) !== SEPARATOR;
	}
	
	/**
	 * Checks if the first ID is an ancestor of or equal to the second ID.
	 *
	 * @param {string} ancestorID
	 * @param {string} descendantID
	 * @return {boolean} True if `ancestorID` is an ancestor of `descendantID`.
	 * @internal
	 */
	function isAncestorIDOf(ancestorID, descendantID) {
	  return descendantID.indexOf(ancestorID) === 0 && isBoundary(descendantID, ancestorID.length);
	}
	
	/**
	 * Gets the parent ID of the supplied React DOM ID, `id`.
	 *
	 * @param {string} id ID of a component.
	 * @return {string} ID of the parent, or an empty string.
	 * @private
	 */
	function getParentID(id) {
	  return id ? id.substr(0, id.lastIndexOf(SEPARATOR)) : '';
	}
	
	/**
	 * Gets the next DOM ID on the tree path from the supplied `ancestorID` to the
	 * supplied `destinationID`. If they are equal, the ID is returned.
	 *
	 * @param {string} ancestorID ID of an ancestor node of `destinationID`.
	 * @param {string} destinationID ID of the destination node.
	 * @return {string} Next ID on the path from `ancestorID` to `destinationID`.
	 * @private
	 */
	function getNextDescendantID(ancestorID, destinationID) {
	  !(isValidID(ancestorID) && isValidID(destinationID)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNextDescendantID(%s, %s): Received an invalid React DOM ID.', ancestorID, destinationID) : invariant(false) : undefined;
	  !isAncestorIDOf(ancestorID, destinationID) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNextDescendantID(...): React has made an invalid assumption about ' + 'the DOM hierarchy. Expected `%s` to be an ancestor of `%s`.', ancestorID, destinationID) : invariant(false) : undefined;
	  if (ancestorID === destinationID) {
	    return ancestorID;
	  }
	  // Skip over the ancestor and the immediate separator. Traverse until we hit
	  // another separator or we reach the end of `destinationID`.
	  var start = ancestorID.length + SEPARATOR_LENGTH;
	  var i;
	  for (i = start; i < destinationID.length; i++) {
	    if (isBoundary(destinationID, i)) {
	      break;
	    }
	  }
	  return destinationID.substr(0, i);
	}
	
	/**
	 * Gets the nearest common ancestor ID of two IDs.
	 *
	 * Using this ID scheme, the nearest common ancestor ID is the longest common
	 * prefix of the two IDs that immediately preceded a "marker" in both strings.
	 *
	 * @param {string} oneID
	 * @param {string} twoID
	 * @return {string} Nearest common ancestor ID, or the empty string if none.
	 * @private
	 */
	function getFirstCommonAncestorID(oneID, twoID) {
	  var minLength = Math.min(oneID.length, twoID.length);
	  if (minLength === 0) {
	    return '';
	  }
	  var lastCommonMarkerIndex = 0;
	  // Use `<=` to traverse until the "EOL" of the shorter string.
	  for (var i = 0; i <= minLength; i++) {
	    if (isBoundary(oneID, i) && isBoundary(twoID, i)) {
	      lastCommonMarkerIndex = i;
	    } else if (oneID.charAt(i) !== twoID.charAt(i)) {
	      break;
	    }
	  }
	  var longestCommonID = oneID.substr(0, lastCommonMarkerIndex);
	  !isValidID(longestCommonID) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getFirstCommonAncestorID(%s, %s): Expected a valid React DOM ID: %s', oneID, twoID, longestCommonID) : invariant(false) : undefined;
	  return longestCommonID;
	}
	
	/**
	 * Traverses the parent path between two IDs (either up or down). The IDs must
	 * not be the same, and there must exist a parent path between them. If the
	 * callback returns `false`, traversal is stopped.
	 *
	 * @param {?string} start ID at which to start traversal.
	 * @param {?string} stop ID at which to end traversal.
	 * @param {function} cb Callback to invoke each ID with.
	 * @param {*} arg Argument to invoke the callback with.
	 * @param {?boolean} skipFirst Whether or not to skip the first node.
	 * @param {?boolean} skipLast Whether or not to skip the last node.
	 * @private
	 */
	function traverseParentPath(start, stop, cb, arg, skipFirst, skipLast) {
	  start = start || '';
	  stop = stop || '';
	  !(start !== stop) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'traverseParentPath(...): Cannot traverse from and to the same ID, `%s`.', start) : invariant(false) : undefined;
	  var traverseUp = isAncestorIDOf(stop, start);
	  !(traverseUp || isAncestorIDOf(start, stop)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'traverseParentPath(%s, %s, ...): Cannot traverse from two IDs that do ' + 'not have a parent path.', start, stop) : invariant(false) : undefined;
	  // Traverse from `start` to `stop` one depth at a time.
	  var depth = 0;
	  var traverse = traverseUp ? getParentID : getNextDescendantID;
	  for (var id = start;; /* until break */id = traverse(id, stop)) {
	    var ret;
	    if ((!skipFirst || id !== start) && (!skipLast || id !== stop)) {
	      ret = cb(id, traverseUp, arg);
	    }
	    if (ret === false || id === stop) {
	      // Only break //after// visiting `stop`.
	      break;
	    }
	    !(depth++ < MAX_TREE_DEPTH) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'traverseParentPath(%s, %s, ...): Detected an infinite loop while ' + 'traversing the React DOM ID tree. This may be due to malformed IDs: %s', start, stop, id) : invariant(false) : undefined;
	  }
	}
	
	/**
	 * Manages the IDs assigned to DOM representations of React components. This
	 * uses a specific scheme in order to traverse the DOM efficiently (e.g. in
	 * order to simulate events).
	 *
	 * @internal
	 */
	var ReactInstanceHandles = {
	
	  /**
	   * Constructs a React root ID
	   * @return {string} A React root ID.
	   */
	  createReactRootID: function () {
	    return getReactRootIDString(ReactRootIndex.createReactRootIndex());
	  },
	
	  /**
	   * Constructs a React ID by joining a root ID with a name.
	   *
	   * @param {string} rootID Root ID of a parent component.
	   * @param {string} name A component's name (as flattened children).
	   * @return {string} A React ID.
	   * @internal
	   */
	  createReactID: function (rootID, name) {
	    return rootID + name;
	  },
	
	  /**
	   * Gets the DOM ID of the React component that is the root of the tree that
	   * contains the React component with the supplied DOM ID.
	   *
	   * @param {string} id DOM ID of a React component.
	   * @return {?string} DOM ID of the React component that is the root.
	   * @internal
	   */
	  getReactRootIDFromNodeID: function (id) {
	    if (id && id.charAt(0) === SEPARATOR && id.length > 1) {
	      var index = id.indexOf(SEPARATOR, 1);
	      return index > -1 ? id.substr(0, index) : id;
	    }
	    return null;
	  },
	
	  /**
	   * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that
	   * should would receive a `mouseEnter` or `mouseLeave` event.
	   *
	   * NOTE: Does not invoke the callback on the nearest common ancestor because
	   * nothing "entered" or "left" that element.
	   *
	   * @param {string} leaveID ID being left.
	   * @param {string} enterID ID being entered.
	   * @param {function} cb Callback to invoke on each entered/left ID.
	   * @param {*} upArg Argument to invoke the callback with on left IDs.
	   * @param {*} downArg Argument to invoke the callback with on entered IDs.
	   * @internal
	   */
	  traverseEnterLeave: function (leaveID, enterID, cb, upArg, downArg) {
	    var ancestorID = getFirstCommonAncestorID(leaveID, enterID);
	    if (ancestorID !== leaveID) {
	      traverseParentPath(leaveID, ancestorID, cb, upArg, false, true);
	    }
	    if (ancestorID !== enterID) {
	      traverseParentPath(ancestorID, enterID, cb, downArg, true, false);
	    }
	  },
	
	  /**
	   * Simulates the traversal of a two-phase, capture/bubble event dispatch.
	   *
	   * NOTE: This traversal happens on IDs without touching the DOM.
	   *
	   * @param {string} targetID ID of the target node.
	   * @param {function} cb Callback to invoke.
	   * @param {*} arg Argument to invoke the callback with.
	   * @internal
	   */
	  traverseTwoPhase: function (targetID, cb, arg) {
	    if (targetID) {
	      traverseParentPath('', targetID, cb, arg, true, false);
	      traverseParentPath(targetID, '', cb, arg, false, true);
	    }
	  },
	
	  /**
	   * Same as `traverseTwoPhase` but skips the `targetID`.
	   */
	  traverseTwoPhaseSkipTarget: function (targetID, cb, arg) {
	    if (targetID) {
	      traverseParentPath('', targetID, cb, arg, true, true);
	      traverseParentPath(targetID, '', cb, arg, true, true);
	    }
	  },
	
	  /**
	   * Traverse a node ID, calling the supplied `cb` for each ancestor ID. For
	   * example, passing `.0.$row-0.1` would result in `cb` getting called
	   * with `.0`, `.0.$row-0`, and `.0.$row-0.1`.
	   *
	   * NOTE: This traversal happens on IDs without touching the DOM.
	   *
	   * @param {string} targetID ID of the target node.
	   * @param {function} cb Callback to invoke.
	   * @param {*} arg Argument to invoke the callback with.
	   * @internal
	   */
	  traverseAncestors: function (targetID, cb, arg) {
	    traverseParentPath('', targetID, cb, arg, true, false);
	  },
	
	  getFirstCommonAncestorID: getFirstCommonAncestorID,
	
	  /**
	   * Exposed for unit testing.
	   * @private
	   */
	  _getNextDescendantID: getNextDescendantID,
	
	  isAncestorIDOf: isAncestorIDOf,
	
	  SEPARATOR: SEPARATOR
	
	};
	
	module.exports = ReactInstanceHandles;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 50 */
/***/ function(module, exports) {

	var sheet;
	
	sheet = function(name) {
	  var css, i, returnBoolean, tested;
	  tested = sheet.tested;
	  if (name in tested) {
	    return tested[name];
	  }
	  i = 0;
	  returnBoolean = false;
	  while (i < document.styleSheets.length) {
	    css = document.styleSheets[i];
	    if (css.href && css.href.indexOf(name) >= 0) {
	      returnBoolean = true;
	      break;
	    }
	    i++;
	  }
	  return returnBoolean;
	};
	
	sheet.tested = {};
	
	module.exports = sheet;


/***/ },
/* 51 */
/***/ function(module, exports) {

	module.exports = ("ontouchstart" in window) || window.DocumentTouch && document instanceof DocumentTouch ? true : false;


/***/ },
/* 52 */
/***/ function(module, exports) {

	module.exports = function(color, increment) {
	  var c;
	  if (increment === void 0) {
	    increment = 0.5;
	  }
	  c = d3.hsl(color);
	  increment = (1 - c.l) * increment;
	  c.l += increment;
	  c.s -= increment;
	  return c.toString();
	};


/***/ },
/* 53 */
/***/ function(module, exports) {

	module.exports = {
	  dev: {
	    accepted: "{0} is not an accepted value for {1}, please use one of the following: {2}.",
	    deprecated: "the {0} method has been removed, please update your code to use {1}.",
	    noChange: "{0} was not updated because it did not change.",
	    noContainer: "cannot find a container on the page matching {0}.",
	    of: "of",
	    oldStyle: "style properties for {0} have now been embedded directly into .{1}().",
	    sameEdge: "edges cannot link to themselves. automatically removing self-referencing edge {0}.",
	    set: "{0} has been set.",
	    setLong: "{0} has been set to {1}.",
	    setContainer: "please define a container div using .container()"
	  },
	  error: {
	    accepted: "{0} is not an accepted {1} for {2} visualizations, please use one of the following: {3}.",
	    connections: "no connections available for {0}.",
	    data: "no data available",
	    dataYear: "no data available for {0}.",
	    lib: "{0} visualizations require loading the {1} library.",
	    libs: "{0} visualizations require loading the following libraries: {1}.",
	    method: "{0} visualizations require setting the {1} method.",
	    methods: "{0} visualizations require setting the following methods: {1}."
	  },
	  format: {
	    decimal: ".",
	    thousands: ",",
	    grouping: [3],
	    currency: ["$", ""],
	    dateTime: "%A, %B %-d, %Y %X",
	    date: "%-m/%-d/%Y",
	    time: "%I:%M:%S %p",
	    periods: ["AM", "PM"],
	    days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
	    shortDays: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
	    months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
	    shortMonths: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]
	  },
	  lowercase: ["a", "an", "and", "as", "at", "but", "by", "for", "from", "if", "in", "into", "near", "nor", "of", "on", "onto", "or", "per", "that", "the", "to", "with", "via", "vs", "vs."],
	  message: {
	    data: "analyzing data",
	    draw: "drawing visualization",
	    initializing: "initializing {0}",
	    loading: "loading data",
	    tooltipReset: "resetting tooltips",
	    ui: "updating ui"
	  },
	  method: {
	    active: "active segments",
	    color: "color",
	    depth: "depth",
	    dev: "verbose",
	    focus: "focus",
	    icon: "icon",
	    id: "id",
	    height: "height",
	    labels: "labels",
	    legend: "legend",
	    margin: "margin",
	    messages: "status messages",
	    mode: "mode",
	    mute: "hide",
	    order: "order",
	    search: "search",
	    shape: "shape",
	    size: "size",
	    solo: "isolate",
	    style: "style",
	    temp: "temporary segments",
	    text: "text",
	    time: "time",
	    timeline: "timeline",
	    total: "total segments",
	    type: "type",
	    width: "width",
	    x: "x axis",
	    y: "y axis",
	    zoom: "zoom"
	  },
	  time: ["date", "day", "month", "time", "year"],
	  timeFormat: {
	    FullYear: "%Y",
	    Month: "%B",
	    MonthSmall: "%b",
	    Date: "%A %-d",
	    DateSmall: "%-d",
	    Hours: "%I %p",
	    Minutes: "%I:%M",
	    Seconds: "%Ss",
	    Milliseconds: "%Lms",
	    "FullYear-Month": "%b %Y",
	    "FullYear-Date": "%-m/%-d/%Y",
	    "Month-Date": "%b %-d",
	    "Hours-Minutes": "%I:%M %p",
	    "Hours-Seconds": "%I:%M:%S %p",
	    "Hours-Milliseconds": "%H:%M:%S.%L",
	    "Minutes-Seconds": "%I:%M:%S %p",
	    "Minutes-Milliseconds": "%H:%M:%S.%L",
	    "Seconds-Milliseconds": "%H:%M:%S.%L"
	  },
	  ui: {
	    and: "and",
	    back: "back",
	    collapse: "click to collapse",
	    error: "error",
	    expand: "click to expand",
	    including: "including",
	    loading: "loading...",
	    more: "{0} more",
	    moreInfo: "click for more info",
	    or: "or",
	    noResults: "no results matching {0}.",
	    primary: "primary connections",
	    share: "share",
	    total: "total",
	    values: "values"
	  },
	  uppercase: ["CEO", "CEOs", "CFO", "CFOs", "CNC", "COO", "COOs", "CPU", "CPUs", "GDP", "HVAC", "ID", "IT", "R&D", "TV", "UI"],
	  visualization: {
	    bar: "Bar Chart",
	    box: "Box Plot",
	    bubbles: "Bubbles",
	    chart: "Chart",
	    geo_map: "Geo Map",
	    line: "Line Plot",
	    network: "Network",
	    paths: "Paths",
	    pie: "Pie Chart",
	    rings: "Rings",
	    scatter: "Scatter Plot",
	    stacked: "Stacked Area",
	    table: "Table",
	    tree_map: "Tree Map"
	  }
	};


/***/ },
/* 54 */
/***/ function(module, exports, __webpack_require__) {

	var rtl;
	
	rtl = __webpack_require__(40);
	
	module.exports = function(align) {
	  var accepted;
	  accepted = ["left", "center", "right"];
	  if (align === false) {
	    accepted.unshift(false);
	  }
	  if (accepted.indexOf(align) < 0) {
	    align = "left";
	  }
	  return {
	    accepted: accepted,
	    process: function(value) {
	      if (rtl) {
	        if (value === "left") {
	          return "right";
	        } else {
	          if (value === "right") {
	            return "left";
	          } else {
	            return value;
	          }
	        }
	      } else {
	        return value;
	      }
	    },
	    value: align
	  };
	};


/***/ },
/* 55 */
/***/ function(module, exports, __webpack_require__) {

	var intersectPoints, lineIntersection, pointInPoly, pointInSegmentBox, polyInsidePoly, rayIntersectsSegment, rotatePoint, rotatePoly, segmentsIntersect, simplify, squaredDist;
	
	simplify = __webpack_require__(341);
	
	module.exports = function(poly, options) {
	  var aRatio, aRatios, angle, angleRad, angleStep, angles, area, aspectRatioStep, aspectRatios, bBox, boxHeight, boxWidth, centroid, events, height, i, insidePoly, j, k, l, left, len, len1, len2, len3, m, maxArea, maxAspectRatio, maxHeight, maxRect, maxWidth, maxx, maxy, minAspectRatio, minSqDistH, minSqDistW, minx, miny, modifOrigins, origOrigin, origin, origins, p, p1H, p1W, p2H, p2W, rectPoly, ref, ref1, ref2, ref3, ref4, ref5, ref6, ref7, ref8, right, rndPoint, rndX, rndY, tempPoly, tolerance, width, widthStep, x0, y0;
	  if (poly.length < 3) {
	    return null;
	  }
	  events = [];
	  aspectRatioStep = 0.5;
	  angleStep = 5;
	  if (options == null) {
	    options = {};
	  }
	  if (options.maxAspectRatio == null) {
	    options.maxAspectRatio = 15;
	  }
	  if (options.minWidth == null) {
	    options.minWidth = 0;
	  }
	  if (options.minHeight == null) {
	    options.minHeight = 0;
	  }
	  if (options.tolerance == null) {
	    options.tolerance = 0.02;
	  }
	  if (options.nTries == null) {
	    options.nTries = 20;
	  }
	  if (options.angle != null) {
	    if (options.angle instanceof Array) {
	      angles = options.angle;
	    } else if (typeof options.angle === 'number') {
	      angles = [options.angle];
	    } else if (typeof options.angle === 'string' && !isNaN(options.angle)) {
	      angles = [Number(options.angle)];
	    }
	  }
	  if (angles == null) {
	    angles = d3.range(-90, 90 + angleStep, angleStep);
	  }
	  if (options.aspectRatio != null) {
	    if (options.aspectRatio instanceof Array) {
	      aspectRatios = options.aspectRatio;
	    } else if (typeof options.aspectRatio === 'number') {
	      aspectRatios = [options.aspectRatio];
	    } else if (typeof options.aspectRatio === 'string' && !isNaN(options.aspectRatio)) {
	      aspectRatios = [Number(options.aspectRatio)];
	    }
	  }
	  if (options.origin != null) {
	    if (options.origin instanceof Array) {
	      if (options.origin[0] instanceof Array) {
	        origins = options.origin;
	      } else {
	        origins = [options.origin];
	      }
	    }
	  }
	  area = Math.abs(d3.geom.polygon(poly).area());
	  if (area === 0) {
	    return null;
	  }
	  ref = d3.extent(poly, function(d) {
	    return d[0];
	  }), minx = ref[0], maxx = ref[1];
	  ref1 = d3.extent(poly, function(d) {
	    return d[1];
	  }), miny = ref1[0], maxy = ref1[1];
	  tolerance = Math.min(maxx - minx, maxy - miny) * options.tolerance;
	  tempPoly = (function() {
	    var j, len, results;
	    results = [];
	    for (j = 0, len = poly.length; j < len; j++) {
	      p = poly[j];
	      results.push({
	        x: p[0],
	        y: p[1]
	      });
	    }
	    return results;
	  })();
	  if (tolerance > 0) {
	    tempPoly = simplify(tempPoly, tolerance);
	    poly = (function() {
	      var j, len, results;
	      results = [];
	      for (j = 0, len = tempPoly.length; j < len; j++) {
	        p = tempPoly[j];
	        results.push([p.x, p.y]);
	      }
	      return results;
	    })();
	  }
	  if (options.vdebug) {
	    events.push({
	      type: 'simplify',
	      poly: poly
	    });
	  }
	  ref2 = d3.extent(poly, function(d) {
	    return d[0];
	  }), minx = ref2[0], maxx = ref2[1];
	  ref3 = d3.extent(poly, function(d) {
	    return d[1];
	  }), miny = ref3[0], maxy = ref3[1];
	  bBox = [[minx, miny], [maxx, miny], [maxx, maxy], [minx, maxy]];
	  ref4 = [maxx - minx, maxy - miny], boxWidth = ref4[0], boxHeight = ref4[1];
	  widthStep = Math.min(boxWidth, boxHeight) / 50;
	  if (origins == null) {
	    origins = [];
	    centroid = d3.geom.polygon(poly).centroid();
	    if (pointInPoly(centroid, poly)) {
	      origins.push(centroid);
	    }
	    while (origins.length < options.nTries) {
	      rndX = Math.random() * boxWidth + minx;
	      rndY = Math.random() * boxHeight + miny;
	      rndPoint = [rndX, rndY];
	      if (pointInPoly(rndPoint, poly)) {
	        origins.push(rndPoint);
	      }
	    }
	  }
	  if (options.vdebug) {
	    events.push({
	      type: 'origins',
	      points: origins
	    });
	  }
	  maxArea = 0;
	  maxRect = null;
	  for (j = 0, len = angles.length; j < len; j++) {
	    angle = angles[j];
	    angleRad = -angle * Math.PI / 180;
	    if (options.vdebug) {
	      events.push({
	        type: 'angle',
	        angle: angle
	      });
	    }
	    for (i = k = 0, len1 = origins.length; k < len1; i = ++k) {
	      origOrigin = origins[i];
	      ref5 = intersectPoints(poly, origOrigin, angleRad), p1W = ref5[0], p2W = ref5[1];
	      ref6 = intersectPoints(poly, origOrigin, angleRad + Math.PI / 2), p1H = ref6[0], p2H = ref6[1];
	      modifOrigins = [];
	      if ((p1W != null) && (p2W != null)) {
	        modifOrigins.push([(p1W[0] + p2W[0]) / 2, (p1W[1] + p2W[1]) / 2]);
	      }
	      if ((p1H != null) && (p2H != null)) {
	        modifOrigins.push([(p1H[0] + p2H[0]) / 2, (p1H[1] + p2H[1]) / 2]);
	      }
	      if (options.vdebug) {
	        events.push({
	          type: 'modifOrigin',
	          idx: i,
	          p1W: p1W,
	          p2W: p2W,
	          p1H: p1H,
	          p2H: p2H,
	          modifOrigins: modifOrigins
	        });
	      }
	      for (l = 0, len2 = modifOrigins.length; l < len2; l++) {
	        origin = modifOrigins[l];
	        if (options.vdebug) {
	          events.push({
	            type: 'origin',
	            cx: origin[0],
	            cy: origin[1]
	          });
	        }
	        ref7 = intersectPoints(poly, origin, angleRad), p1W = ref7[0], p2W = ref7[1];
	        if (p1W === null || p2W === null) {
	          continue;
	        }
	        minSqDistW = Math.min(squaredDist(origin, p1W), squaredDist(origin, p2W));
	        maxWidth = 2 * Math.sqrt(minSqDistW);
	        ref8 = intersectPoints(poly, origin, angleRad + Math.PI / 2), p1H = ref8[0], p2H = ref8[1];
	        if (p1H === null || p2H === null) {
	          continue;
	        }
	        minSqDistH = Math.min(squaredDist(origin, p1H), squaredDist(origin, p2H));
	        maxHeight = 2 * Math.sqrt(minSqDistH);
	        if (maxWidth * maxHeight < maxArea) {
	          continue;
	        }
	        if (aspectRatios != null) {
	          aRatios = aspectRatios;
	        } else {
	          minAspectRatio = Math.max(1, options.minWidth / maxHeight, maxArea / (maxHeight * maxHeight));
	          maxAspectRatio = Math.min(options.maxAspectRatio, maxWidth / options.minHeight, (maxWidth * maxWidth) / maxArea);
	          aRatios = d3.range(minAspectRatio, maxAspectRatio + aspectRatioStep, aspectRatioStep);
	        }
	        for (m = 0, len3 = aRatios.length; m < len3; m++) {
	          aRatio = aRatios[m];
	          left = Math.max(options.minWidth, Math.sqrt(maxArea * aRatio));
	          right = Math.min(maxWidth, maxHeight * aRatio);
	          if (right * maxHeight < maxArea) {
	            continue;
	          }
	          if ((right - left) >= widthStep) {
	            if (options.vdebug) {
	              events.push({
	                type: 'aRatio',
	                aRatio: aRatio
	              });
	            }
	          }
	          while ((right - left) >= widthStep) {
	            width = (left + right) / 2;
	            height = width / aRatio;
	            x0 = origin[0], y0 = origin[1];
	            rectPoly = [[x0 - width / 2, y0 - height / 2], [x0 + width / 2, y0 - height / 2], [x0 + width / 2, y0 + height / 2], [x0 - width / 2, y0 + height / 2]];
	            rectPoly = rotatePoly(rectPoly, angleRad, origin);
	            if (polyInsidePoly(rectPoly, poly)) {
	              insidePoly = true;
	              maxArea = width * height;
	              maxRect = {
	                cx: x0,
	                cy: y0,
	                width: width,
	                height: height,
	                angle: angle
	              };
	              left = width;
	            } else {
	              insidePoly = false;
	              right = width;
	            }
	            if (options.vdebug) {
	              events.push({
	                type: 'rectangle',
	                cx: x0,
	                cy: y0,
	                width: width,
	                height: height,
	                areaFraction: (width * height) / area,
	                angle: angle,
	                insidePoly: insidePoly
	              });
	            }
	          }
	        }
	      }
	    }
	  }
	  return [maxRect, maxArea, events];
	};
	
	squaredDist = function(a, b) {
	  var deltax, deltay;
	  deltax = b[0] - a[0];
	  deltay = b[1] - a[1];
	  return deltax * deltax + deltay * deltay;
	};
	
	rayIntersectsSegment = function(p, p1, p2) {
	  var a, b, mAB, mAP, ref;
	  ref = p1[1] < p2[1] ? [p1, p2] : [p2, p1], a = ref[0], b = ref[1];
	  if (p[1] === b[1] || p[1] === a[1]) {
	    p[1] += Number.MIN_VALUE;
	  }
	  if (p[1] > b[1] || p[1] < a[1]) {
	    return false;
	  } else if (p[0] > a[0] && p[0] > b[0]) {
	    return false;
	  } else if (p[0] < a[0] && p[0] < b[0]) {
	    return true;
	  } else {
	    mAB = (b[1] - a[1]) / (b[0] - a[0]);
	    mAP = (p[1] - a[1]) / (p[0] - a[0]);
	    return mAP > mAB;
	  }
	};
	
	pointInPoly = function(p, poly) {
	  var a, b, c, i, n;
	  i = -1;
	  n = poly.length;
	  b = poly[n - 1];
	  c = 0;
	  while (++i < n) {
	    a = b;
	    b = poly[i];
	    if (rayIntersectsSegment(p, a, b)) {
	      c++;
	    }
	  }
	  return c % 2 !== 0;
	};
	
	pointInSegmentBox = function(p, p1, q1) {
	  var eps, px, py;
	  eps = 1e-9;
	  px = p[0], py = p[1];
	  if (px < Math.min(p1[0], q1[0]) - eps || px > Math.max(p1[0], q1[0]) + eps || py < Math.min(p1[1], q1[1]) - eps || py > Math.max(p1[1], q1[1]) + eps) {
	    return false;
	  }
	  return true;
	};
	
	lineIntersection = function(p1, q1, p2, q2) {
	  var cross1, cross2, denom, dx1, dx2, dy1, dy2, eps, px, py;
	  eps = 1e-9;
	  dx1 = p1[0] - q1[0];
	  dy1 = p1[1] - q1[1];
	  dx2 = p2[0] - q2[0];
	  dy2 = p2[1] - q2[1];
	  denom = dx1 * dy2 - dy1 * dx2;
	  if (Math.abs(denom) < eps) {
	    return null;
	  }
	  cross1 = p1[0] * q1[1] - p1[1] * q1[0];
	  cross2 = p2[0] * q2[1] - p2[1] * q2[0];
	  px = (cross1 * dx2 - cross2 * dx1) / denom;
	  py = (cross1 * dy2 - cross2 * dy1) / denom;
	  return [px, py];
	};
	
	segmentsIntersect = function(p1, q1, p2, q2) {
	  var p;
	  p = lineIntersection(p1, q1, p2, q2);
	  if (p == null) {
	    return false;
	  }
	  return pointInSegmentBox(p, p1, q1) && pointInSegmentBox(p, p2, q2);
	};
	
	polyInsidePoly = function(polyA, polyB) {
	  var aA, aB, bA, bB, iA, iB, nA, nB;
	  iA = -1;
	  nA = polyA.length;
	  nB = polyB.length;
	  bA = polyA[nA - 1];
	  while (++iA < nA) {
	    aA = bA;
	    bA = polyA[iA];
	    iB = -1;
	    bB = polyB[nB - 1];
	    while (++iB < nB) {
	      aB = bB;
	      bB = polyB[iB];
	      if (segmentsIntersect(aA, bA, aB, bB)) {
	        return false;
	      }
	    }
	  }
	  return pointInPoly(polyA[0], polyB);
	};
	
	rotatePoint = function(p, alpha, origin) {
	  var cosAlpha, sinAlpha, xshifted, yshifted;
	  if (origin == null) {
	    origin = [0, 0];
	  }
	  xshifted = p[0] - origin[0];
	  yshifted = p[1] - origin[1];
	  cosAlpha = Math.cos(alpha);
	  sinAlpha = Math.sin(alpha);
	  return [cosAlpha * xshifted - sinAlpha * yshifted + origin[0], sinAlpha * xshifted + cosAlpha * yshifted + origin[1]];
	};
	
	rotatePoly = function(poly, alpha, origin) {
	  var j, len, point, results;
	  results = [];
	  for (j = 0, len = poly.length; j < len; j++) {
	    point = poly[j];
	    results.push(rotatePoint(point, alpha, origin));
	  }
	  return results;
	};
	
	intersectPoints = function(poly, origin, alpha) {
	  var a, b, closestPointLeft, closestPointRight, eps, i, idx, minSqDistLeft, minSqDistRight, n, p, shiftedOrigin, sqDist, x0, y0;
	  eps = 1e-9;
	  origin = [origin[0] + eps * Math.cos(alpha), origin[1] + eps * Math.sin(alpha)];
	  x0 = origin[0], y0 = origin[1];
	  shiftedOrigin = [x0 + Math.cos(alpha), y0 + Math.sin(alpha)];
	  idx = 0;
	  if (Math.abs(shiftedOrigin[0] - x0) < eps) {
	    idx = 1;
	  }
	  i = -1;
	  n = poly.length;
	  b = poly[n - 1];
	  minSqDistLeft = Number.MAX_VALUE;
	  minSqDistRight = Number.MAX_VALUE;
	  closestPointLeft = null;
	  closestPointRight = null;
	  while (++i < n) {
	    a = b;
	    b = poly[i];
	    p = lineIntersection(origin, shiftedOrigin, a, b);
	    if ((p != null) && pointInSegmentBox(p, a, b)) {
	      sqDist = squaredDist(origin, p);
	      if (p[idx] < origin[idx]) {
	        if (sqDist < minSqDistLeft) {
	          minSqDistLeft = sqDist;
	          closestPointLeft = p;
	        }
	      } else if (p[idx] > origin[idx]) {
	        if (sqDist < minSqDistRight) {
	          minSqDistRight = sqDist;
	          closestPointRight = p;
	        }
	      }
	    }
	  }
	  return [closestPointLeft, closestPointRight];
	};


/***/ },
/* 56 */
/***/ function(module, exports, __webpack_require__) {

	var fetchValue;
	
	fetchValue = __webpack_require__(3);
	
	module.exports = function(vars, d, segment) {
	  var ret;
	  ret = vars[segment].value;
	  if (ret) {
	    if (segment in d.d3plus) {
	      return d.d3plus[segment];
	    } else {
	      return fetchValue(vars, d, ret);
	    }
	  } else {
	    return d.d3plus[segment];
	  }
	};


/***/ },
/* 57 */
/***/ function(module, exports, __webpack_require__) {

	var axes, draw, mouse, plot;
	
	axes = __webpack_require__(324);
	
	draw = __webpack_require__(327);
	
	mouse = __webpack_require__(325);
	
	plot = __webpack_require__(326);
	
	module.exports = function(vars, opts) {
	  if (opts === void 0) {
	    opts = {};
	  }
	  axes(vars, opts);
	  plot(vars, opts);
	  draw(vars, opts);
	  vars.mouse.viz = opts.mouse === true ? mouse : false;
	};


/***/ },
/* 58 */
/***/ function(module, exports) {

	module.exports = {
	  "y": function() {
	    return (window.pageYOffset !== undefined) ? window.pageYOffset :
	           (document.documentElement || document.body.parentNode || document.body).scrollTop
	  },
	  "x": function() {
	    return (window.pageXOffset !== undefined) ? window.pageXOffset :
	           (document.documentElement || document.body.parentNode || document.body).scrollLeft
	  }
	}


/***/ },
/* 59 */
/***/ function(module, exports, __webpack_require__) {

	var fetchValue = __webpack_require__(3),
	    validObject  = __webpack_require__(7),
	    uniqueValues = __webpack_require__(8);
	//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	// Nests and groups the data.
	//------------------------------------------------------------------------------
	var dataNest = function(vars, flatData, nestingLevels, discrete) {
	
	  if (discrete === undefined) discrete = true;
	
	  var nestedData   = d3.nest(),
	      groupedData  = [],
	      segments     = "temp" in vars ? [ "active" , "temp" , "total" ] : [];
	
	  if (!nestingLevels.length) {
	    nestedData.key(function(d){ return true; });
	  }
	  else {
	
	    //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	    // Loop through each nesting level.
	    //----------------------------------------------------------------------------
	    nestingLevels.forEach(function(level, i){
	
	      //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	      // Create a nest key for the current level.
	      //--------------------------------------------------------------------------
	      nestedData.key(function(d){ return fetchValue(vars, d, level); });
	
	    });
	
	  }
	
	  if (discrete && vars.axes && vars.axes.discrete && (!vars.time || vars[vars.axes.discrete].value !== vars.time.value)) {
	    nestedData.key(function(d){
	      return fetchValue(vars, d, vars[vars.axes.discrete].value);
	    });
	  }
	
	  var deepest_is_id = nestingLevels.length && vars.id.nesting.indexOf(nestingLevels[nestingLevels.length - 1]) >= 0;
	  var i = nestingLevels.length && deepest_is_id ? nestingLevels.length - 1 : 0;
	  var depthKey = deepest_is_id ? vars.id.nesting[i] : vars.depth.value;
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // If we're at the deepest level, create the rollup function.
	  //----------------------------------------------------------------------------
	  nestedData.rollup(function(leaves) {
	
	    //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	    // If there's only 1 leaf, and it's been processed, return it as-is.
	    //--------------------------------------------------------------------------
	    if (leaves.length === 1 && ("d3plus" in leaves[0])) {
	      groupedData.push(leaves[0]);
	      return leaves[0];
	    }
	
	    leaves = leaves.reduce(function(arr, ll){
	      if (ll.values instanceof Array) {
	        return arr.concat(ll.values);
	      }
	      arr.push(ll);
	      return arr;
	    }, []);
	
	    //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	    // Create the "d3plus" object for the return variable, starting with
	    // just the current depth.
	    //--------------------------------------------------------------------------
	    var returnObj = {
	      "d3plus": {
	        "data": {},
	        "depth": i
	      }
	    };
	
	    var merged = d3.sum(leaves, function(ll){ return "d3plus" in ll && ll.d3plus.merged ? 1 : 0; });
	
	    if (merged === leaves.length) {
	      for (var ll = 0; ll < leaves.length; ll++) {
	        var l = leaves[ll];
	        if (!returnObj.d3plus.merged) returnObj.d3plus.merged = [];
	        returnObj.d3plus.merged = returnObj.d3plus.merged.concat(l.d3plus.merged);
	        if (l.d3plus.text) returnObj.d3plus.text = l.d3plus.text;
	      }
	    }
	
	    //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	    // Create a reference sum for the 3 different "segment" variables.
	    //--------------------------------------------------------------------------
	    for (var s = 0; s < segments.length; s++) {
	
	      var c = segments[s];
	      var segmentAgg = vars.aggs && vars.aggs.value[key] ? vars.aggs.value[key] : "sum";
	
	      if ("d3plus" in leaves[0] && c in leaves[0].d3plus) {
	        returnObj.d3plus[c] = d3.sum(leaves, function(d){
	          return d.d3plus[c];
	        });
	      }
	      else if (typeof segmentAgg === "function") {
	        returnObj.d3plus[c] = segmentAgg(leaves);
	      }
	      else {
	
	        returnObj.d3plus[c] = d3[segmentAgg](leaves, function(d) {
	
	          var a = c === "total" ? 1 : 0;
	          if (vars[c].value) {
	            a = fetchValue(vars, d, vars[c].value);
	            if (typeof a !== "number") a = a ? 1 : 0;
	          }
	          return a;
	
	        });
	
	      }
	    }
	
	    //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	    // Aggregate all values detected in the data.
	    //--------------------------------------------------------------------------
	    for (var key in vars.data.keys) {
	
	      if (key in returnObj.d3plus.data) {
	        returnObj[key] = returnObj.d3plus[key];
	      }
	      else {
	
	        var agg     = vars.aggs && vars.aggs.value[key] ? vars.aggs.value[key] : "sum",
	            aggType = typeof agg,
	            keyType = vars.data.keys[key],
	            idKey   = vars.id.nesting.indexOf(key) >= 0,
	            timeKey = "time" in vars && key === vars.time.value;
	
	        if (key in returnObj.d3plus.data) {
	          returnObj[key] = returnObj.d3plus[key];
	        }
	        else if (aggType === "function") {
	          returnObj[key] = vars.aggs.value[key](leaves);
	        }
	        else if (timeKey) {
	          returnObj[key] = parseDates(uniqueValues(leaves, key));
	        }
	        else if (vars.axes && vars.axes.discrete && vars[vars.axes.discrete].value === key) {
	          returnObj[key] = uniqueValues(leaves, key);
	        }
	        else if (keyType === "number" && aggType === "string" && !idKey) {
	          var vals = leaves.map(function(d){ return d[key]; });
	          vals = vals.filter(function(d){ return typeof d === keyType; });
	          if (vals.length) returnObj[key] = d3[agg](vals);
	        }
	        else {
	
	          var testVals = checkVal(leaves, key);
	          var keyValues = testVals.length === 1 ? testVals[0][key]
	                        : uniqueValues(testVals, key);
	
	          if (testVals.length === 1) {
	            returnObj[key] = keyValues;
	          }
	          else if (keyValues && keyValues.length) {
	
	            if (!(keyValues instanceof Array)) {
	              keyValues = [keyValues];
	            }
	
	            if (idKey && vars.id.nesting.indexOf(key) > i) {
	            // if (idKey && vars.id.nesting.indexOf(key) > i && keyValues.length > 1) {
	              // if (nestingLevels.length == 1 && testVals.length > leaves.length) {
	              //   var newNesting = nestingLevels.concat(key);
	              //   testVals = dataNest(vars,testVals,newNesting);
	              // }
	              returnObj[key] = testVals;
	            }
	            else {
	
	              returnObj[key] = keyValues;
	
	            }
	
	          }
	          else if (idKey) {
	            var endPoint = vars.id.nesting.indexOf(key) - 1;
	            if (endPoint >= i && (!("endPoint" in returnObj.d3plus) || returnObj.d3plus.endPoint > i)) {
	              returnObj.d3plus.endPoint = i;
	            }
	          }
	
	        }
	
	      }
	
	      if (key in returnObj && returnObj[key] instanceof Array && returnObj[key].length === 1) {
	        returnObj[key] = returnObj[key][0];
	      }
	
	    }
	
	    for (var lll = 0; lll < nestingLevels.length; lll++) {
	      var level = nestingLevels[lll];
	      if (!(level in returnObj)) {
	        returnObj[level] = fetchValue(vars, leaves[0], level);
	      }
	    }
	
	    groupedData.push(returnObj);
	
	    return returnObj;
	
	  });
	
	  var find_keys = function(obj,depth,keys) {
	    if (obj.children) {
	      if (vars.data.keys[nestingLevels[depth]] == "number") {
	        obj.key = parseFloat(obj.key);
	      }
	      keys[nestingLevels[depth]] = obj.key;
	      delete obj.key;
	      for ( var k in keys ) {
	        obj[k] = keys[k];
	      }
	      depth++;
	      obj.children.forEach(function(c){
	        find_keys(c,depth,keys);
	      });
	    }
	  };
	
	  nestedData = nestedData
	    .entries(flatData)
	    .map(rename_key_value)
	    .map(function(obj){
	      find_keys(obj,0,{});
	      return obj;
	    });
	
	  return groupedData;
	
	};
	
	var checkVal = function(leaves, key) {
	
	  var returnVals = [];
	
	  function run(obj) {
	    if (obj instanceof Array) {
	      obj.forEach(run);
	    }
	    else if (validObject(obj) && key in obj) {
	      if (obj[key] instanceof Array) {
	        obj[key].forEach(run);
	      }
	      else {
	        returnVals.push(obj);
	      }
	    }
	  }
	
	  run(leaves);
	
	  return returnVals;
	
	};
	
	var parseDates = function(dateArray) {
	
	  var dates = [];
	
	  function checkDate(arr) {
	
	    for (var i = 0; i < arr.length; i++) {
	      var d = arr[i];
	      if (d) {
	        if (d.constructor === Array) {
	          checkDate(d);
	        }
	        else {
	          dates.push(d);
	        }
	        // if (d.constructor === Date) dates.push(d);
	        // else if (d.constructor === Array) {
	        //   checkDate(d);
	        // }
	        // else {
	        //   d = new Date(d.toString());
	        //   if (d !== "Invalid Date") {
	        //     d.setTime( d.getTime() + d.getTimezoneOffset() * 60 * 1000 );
	        //     dates.push(d);
	        //   }
	        // }
	      }
	    }
	
	  }
	
	  checkDate(dateArray);
	
	  return uniqueValues(dates);
	
	};
	
	var rename_key_value = function(obj) {
	  if (obj.values && obj.values.length) {
	    obj.children = obj.values.map(function(obj) {
	      return rename_key_value(obj);
	    });
	    delete obj.values;
	    return obj;
	  }
	  else if(obj.values) {
	    return obj.values;
	  }
	  else {
	    return obj;
	  }
	};
	
	module.exports = dataNest;


/***/ },
/* 60 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPluginHub
	 */
	
	'use strict';
	
	var EventPluginRegistry = __webpack_require__(152);
	var EventPluginUtils = __webpack_require__(432);
	var ReactErrorUtils = __webpack_require__(165);
	
	var accumulateInto = __webpack_require__(174);
	var forEachAccumulated = __webpack_require__(175);
	var invariant = __webpack_require__(4);
	var warning = __webpack_require__(6);
	
	/**
	 * Internal store for event listeners
	 */
	var listenerBank = {};
	
	/**
	 * Internal queue of events that have accumulated their dispatches and are
	 * waiting to have their dispatches executed.
	 */
	var eventQueue = null;
	
	/**
	 * Dispatches an event and releases it back into the pool, unless persistent.
	 *
	 * @param {?object} event Synthetic event to be dispatched.
	 * @param {boolean} simulated If the event is simulated (changes exn behavior)
	 * @private
	 */
	var executeDispatchesAndRelease = function (event, simulated) {
	  if (event) {
	    EventPluginUtils.executeDispatchesInOrder(event, simulated);
	
	    if (!event.isPersistent()) {
	      event.constructor.release(event);
	    }
	  }
	};
	var executeDispatchesAndReleaseSimulated = function (e) {
	  return executeDispatchesAndRelease(e, true);
	};
	var executeDispatchesAndReleaseTopLevel = function (e) {
	  return executeDispatchesAndRelease(e, false);
	};
	
	/**
	 * - `InstanceHandle`: [required] Module that performs logical traversals of DOM
	 *   hierarchy given ids of the logical DOM elements involved.
	 */
	var InstanceHandle = null;
	
	function validateInstanceHandle() {
	  var valid = InstanceHandle && InstanceHandle.traverseTwoPhase && InstanceHandle.traverseEnterLeave;
	  process.env.NODE_ENV !== 'production' ? warning(valid, 'InstanceHandle not injected before use!') : undefined;
	}
	
	/**
	 * This is a unified interface for event plugins to be installed and configured.
	 *
	 * Event plugins can implement the following properties:
	 *
	 *   `extractEvents` {function(string, DOMEventTarget, string, object): *}
	 *     Required. When a top-level event is fired, this method is expected to
	 *     extract synthetic events that will in turn be queued and dispatched.
	 *
	 *   `eventTypes` {object}
	 *     Optional, plugins that fire events must publish a mapping of registration
	 *     names that are used to register listeners. Values of this mapping must
	 *     be objects that contain `registrationName` or `phasedRegistrationNames`.
	 *
	 *   `executeDispatch` {function(object, function, string)}
	 *     Optional, allows plugins to override how an event gets dispatched. By
	 *     default, the listener is simply invoked.
	 *
	 * Each plugin that is injected into `EventsPluginHub` is immediately operable.
	 *
	 * @public
	 */
	var EventPluginHub = {
	
	  /**
	   * Methods for injecting dependencies.
	   */
	  injection: {
	
	    /**
	     * @param {object} InjectedMount
	     * @public
	     */
	    injectMount: EventPluginUtils.injection.injectMount,
	
	    /**
	     * @param {object} InjectedInstanceHandle
	     * @public
	     */
	    injectInstanceHandle: function (InjectedInstanceHandle) {
	      InstanceHandle = InjectedInstanceHandle;
	      if (process.env.NODE_ENV !== 'production') {
	        validateInstanceHandle();
	      }
	    },
	
	    getInstanceHandle: function () {
	      if (process.env.NODE_ENV !== 'production') {
	        validateInstanceHandle();
	      }
	      return InstanceHandle;
	    },
	
	    /**
	     * @param {array} InjectedEventPluginOrder
	     * @public
	     */
	    injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,
	
	    /**
	     * @param {object} injectedNamesToPlugins Map from names to plugin modules.
	     */
	    injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName
	
	  },
	
	  eventNameDispatchConfigs: EventPluginRegistry.eventNameDispatchConfigs,
	
	  registrationNameModules: EventPluginRegistry.registrationNameModules,
	
	  /**
	   * Stores `listener` at `listenerBank[registrationName][id]`. Is idempotent.
	   *
	   * @param {string} id ID of the DOM element.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @param {?function} listener The callback to store.
	   */
	  putListener: function (id, registrationName, listener) {
	    !(typeof listener === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected %s listener to be a function, instead got type %s', registrationName, typeof listener) : invariant(false) : undefined;
	
	    var bankForRegistrationName = listenerBank[registrationName] || (listenerBank[registrationName] = {});
	    bankForRegistrationName[id] = listener;
	
	    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	    if (PluginModule && PluginModule.didPutListener) {
	      PluginModule.didPutListener(id, registrationName, listener);
	    }
	  },
	
	  /**
	   * @param {string} id ID of the DOM element.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @return {?function} The stored callback.
	   */
	  getListener: function (id, registrationName) {
	    var bankForRegistrationName = listenerBank[registrationName];
	    return bankForRegistrationName && bankForRegistrationName[id];
	  },
	
	  /**
	   * Deletes a listener from the registration bank.
	   *
	   * @param {string} id ID of the DOM element.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   */
	  deleteListener: function (id, registrationName) {
	    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	    if (PluginModule && PluginModule.willDeleteListener) {
	      PluginModule.willDeleteListener(id, registrationName);
	    }
	
	    var bankForRegistrationName = listenerBank[registrationName];
	    // TODO: This should never be null -- when is it?
	    if (bankForRegistrationName) {
	      delete bankForRegistrationName[id];
	    }
	  },
	
	  /**
	   * Deletes all listeners for the DOM element with the supplied ID.
	   *
	   * @param {string} id ID of the DOM element.
	   */
	  deleteAllListeners: function (id) {
	    for (var registrationName in listenerBank) {
	      if (!listenerBank[registrationName][id]) {
	        continue;
	      }
	
	      var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	      if (PluginModule && PluginModule.willDeleteListener) {
	        PluginModule.willDeleteListener(id, registrationName);
	      }
	
	      delete listenerBank[registrationName][id];
	    }
	  },
	
	  /**
	   * Allows registered plugins an opportunity to extract events from top-level
	   * native browser events.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {DOMEventTarget} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native browser event.
	   * @return {*} An accumulation of synthetic events.
	   * @internal
	   */
	  extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
	    var events;
	    var plugins = EventPluginRegistry.plugins;
	    for (var i = 0; i < plugins.length; i++) {
	      // Not every plugin in the ordering may be loaded at runtime.
	      var possiblePlugin = plugins[i];
	      if (possiblePlugin) {
	        var extractedEvents = possiblePlugin.extractEvents(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget);
	        if (extractedEvents) {
	          events = accumulateInto(events, extractedEvents);
	        }
	      }
	    }
	    return events;
	  },
	
	  /**
	   * Enqueues a synthetic event that should be dispatched when
	   * `processEventQueue` is invoked.
	   *
	   * @param {*} events An accumulation of synthetic events.
	   * @internal
	   */
	  enqueueEvents: function (events) {
	    if (events) {
	      eventQueue = accumulateInto(eventQueue, events);
	    }
	  },
	
	  /**
	   * Dispatches all synthetic events on the event queue.
	   *
	   * @internal
	   */
	  processEventQueue: function (simulated) {
	    // Set `eventQueue` to null before processing it so that we can tell if more
	    // events get enqueued while processing.
	    var processingEventQueue = eventQueue;
	    eventQueue = null;
	    if (simulated) {
	      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseSimulated);
	    } else {
	      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);
	    }
	    !!eventQueue ? process.env.NODE_ENV !== 'production' ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing ' + 'an event queue. Support for this has not yet been implemented.') : invariant(false) : undefined;
	    // This would be a good time to rethrow if any of the event handlers threw.
	    ReactErrorUtils.rethrowCaughtError();
	  },
	
	  /**
	   * These are needed for tests only. Do not use!
	   */
	  __purge: function () {
	    listenerBank = {};
	  },
	
	  __getListenerBank: function () {
	    return listenerBank;
	  }
	
	};
	
	module.exports = EventPluginHub;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 61 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPropagators
	 */
	
	'use strict';
	
	var EventConstants = __webpack_require__(34);
	var EventPluginHub = __webpack_require__(60);
	
	var warning = __webpack_require__(6);
	
	var accumulateInto = __webpack_require__(174);
	var forEachAccumulated = __webpack_require__(175);
	
	var PropagationPhases = EventConstants.PropagationPhases;
	var getListener = EventPluginHub.getListener;
	
	/**
	 * Some event types have a notion of different registration names for different
	 * "phases" of propagation. This finds listeners by a given phase.
	 */
	function listenerAtPhase(id, event, propagationPhase) {
	  var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
	  return getListener(id, registrationName);
	}
	
	/**
	 * Tags a `SyntheticEvent` with dispatched listeners. Creating this function
	 * here, allows us to not have to bind or create functions for each event.
	 * Mutating the event's members allows us to not have to create a wrapping
	 * "dispatch" object that pairs the event with the listener.
	 */
	function accumulateDirectionalDispatches(domID, upwards, event) {
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(domID, 'Dispatching id must not be null') : undefined;
	  }
	  var phase = upwards ? PropagationPhases.bubbled : PropagationPhases.captured;
	  var listener = listenerAtPhase(domID, event, phase);
	  if (listener) {
	    event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
	    event._dispatchIDs = accumulateInto(event._dispatchIDs, domID);
	  }
	}
	
	/**
	 * Collect dispatches (must be entirely collected before dispatching - see unit
	 * tests). Lazily allocate the array to conserve memory.  We must loop through
	 * each event and perform the traversal for each one. We cannot perform a
	 * single traversal for the entire collection of events because each event may
	 * have a different target.
	 */
	function accumulateTwoPhaseDispatchesSingle(event) {
	  if (event && event.dispatchConfig.phasedRegistrationNames) {
	    EventPluginHub.injection.getInstanceHandle().traverseTwoPhase(event.dispatchMarker, accumulateDirectionalDispatches, event);
	  }
	}
	
	/**
	 * Same as `accumulateTwoPhaseDispatchesSingle`, but skips over the targetID.
	 */
	function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
	  if (event && event.dispatchConfig.phasedRegistrationNames) {
	    EventPluginHub.injection.getInstanceHandle().traverseTwoPhaseSkipTarget(event.dispatchMarker, accumulateDirectionalDispatches, event);
	  }
	}
	
	/**
	 * Accumulates without regard to direction, does not look for phased
	 * registration names. Same as `accumulateDirectDispatchesSingle` but without
	 * requiring that the `dispatchMarker` be the same as the dispatched ID.
	 */
	function accumulateDispatches(id, ignoredDirection, event) {
	  if (event && event.dispatchConfig.registrationName) {
	    var registrationName = event.dispatchConfig.registrationName;
	    var listener = getListener(id, registrationName);
	    if (listener) {
	      event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
	      event._dispatchIDs = accumulateInto(event._dispatchIDs, id);
	    }
	  }
	}
	
	/**
	 * Accumulates dispatches on an `SyntheticEvent`, but only for the
	 * `dispatchMarker`.
	 * @param {SyntheticEvent} event
	 */
	function accumulateDirectDispatchesSingle(event) {
	  if (event && event.dispatchConfig.registrationName) {
	    accumulateDispatches(event.dispatchMarker, null, event);
	  }
	}
	
	function accumulateTwoPhaseDispatches(events) {
	  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
	}
	
	function accumulateTwoPhaseDispatchesSkipTarget(events) {
	  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);
	}
	
	function accumulateEnterLeaveDispatches(leave, enter, fromID, toID) {
	  EventPluginHub.injection.getInstanceHandle().traverseEnterLeave(fromID, toID, accumulateDispatches, leave, enter);
	}
	
	function accumulateDirectDispatches(events) {
	  forEachAccumulated(events, accumulateDirectDispatchesSingle);
	}
	
	/**
	 * A small set of propagation patterns, each of which will accept a small amount
	 * of information, and generate a set of "dispatch ready event objects" - which
	 * are sets of events that have already been annotated with a set of dispatched
	 * listener functions/ids. The API is designed this way to discourage these
	 * propagation strategies from actually executing the dispatches, since we
	 * always want to collect the entire set of dispatches before executing event a
	 * single one.
	 *
	 * @constructor EventPropagators
	 */
	var EventPropagators = {
	  accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
	  accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,
	  accumulateDirectDispatches: accumulateDirectDispatches,
	  accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches
	};
	
	module.exports = EventPropagators;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 62 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInstanceMap
	 */
	
	'use strict';
	
	/**
	 * `ReactInstanceMap` maintains a mapping from a public facing stateful
	 * instance (key) and the internal representation (value). This allows public
	 * methods to accept the user facing instance as an argument and map them back
	 * to internal methods.
	 */
	
	// TODO: Replace this with ES6: var ReactInstanceMap = new Map();
	var ReactInstanceMap = {
	
	  /**
	   * This API should be called `delete` but we'd have to make sure to always
	   * transform these to strings for IE support. When this transform is fully
	   * supported we can rename it.
	   */
	  remove: function (key) {
	    key._reactInternalInstance = undefined;
	  },
	
	  get: function (key) {
	    return key._reactInternalInstance;
	  },
	
	  has: function (key) {
	    return key._reactInternalInstance !== undefined;
	  },
	
	  set: function (key, value) {
	    key._reactInternalInstance = value;
	  }
	
	};
	
	module.exports = ReactInstanceMap;

/***/ },
/* 63 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticUIEvent
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(44);
	
	var getEventTarget = __webpack_require__(112);
	
	/**
	 * @interface UIEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var UIEventInterface = {
	  view: function (event) {
	    if (event.view) {
	      return event.view;
	    }
	
	    var target = getEventTarget(event);
	    if (target != null && target.window === target) {
	      // target is a window object
	      return target;
	    }
	
	    var doc = target.ownerDocument;
	    // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
	    if (doc) {
	      return doc.defaultView || doc.parentWindow;
	    } else {
	      return window;
	    }
	  },
	  detail: function (event) {
	    return event.detail || 0;
	  }
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticEvent}
	 */
	function SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);
	
	module.exports = SyntheticUIEvent;

/***/ },
/* 64 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule emptyObject
	 */
	
	'use strict';
	
	var emptyObject = {};
	
	if (process.env.NODE_ENV !== 'production') {
	  Object.freeze(emptyObject);
	}
	
	module.exports = emptyObject;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 65 */
/***/ function(module, exports, __webpack_require__) {

	var colorSort;
	
	colorSort = __webpack_require__(121);
	
	module.exports = function(a, b, keys, sort, colors, vars, depth) {
	  var i, k, retVal;
	  if (!sort) {
	    sort = "asc";
	  }
	  if (!(colors instanceof Array)) {
	    colors = [colors];
	  }
	  if (!(keys instanceof Array)) {
	    keys = [keys];
	  }
	  if (vars && depth !== void 0 && typeof depth !== "number") {
	    depth = vars.id.nesting.indexOf(depth);
	  }
	  retVal = 0;
	  i = 0;
	  while (i < keys.length) {
	    k = keys[i];
	    a = vars && a.d3plus && a.d3plus.sortKeys ? a.d3plus.sortKeys[k] : a[k];
	    b = vars && b.d3plus && b.d3plus.sortKeys ? b.d3plus.sortKeys[k] : b[k];
	    if (vars && colors.indexOf(k) >= 0) {
	      retVal = colorSort(a, b);
	    } else {
	      retVal = a < b ? -1 : 1;
	    }
	    if (retVal !== 0 || i === keys.length - 1) {
	      break;
	    }
	    i++;
	  }
	  if (sort === "asc") {
	    return retVal;
	  } else {
	    return -retVal;
	  }
	};


/***/ },
/* 66 */
/***/ function(module, exports) {

	module.exports = function(c1, c2, o1, o2) {
	  var b, g, r;
	  if (!o1) {
	    o1 = 1;
	  }
	  if (!o2) {
	    o2 = 1;
	  }
	  c1 = d3.rgb(c1);
	  c2 = d3.rgb(c2);
	  r = (o1 * c1.r + o2 * c2.r - o1 * o2 * c2.r) / (o1 + o2 - o1 * o2);
	  g = (o1 * c1.g + o2 * c2.g - o1 * o2 * c2.g) / (o1 + o2 - o1 * o2);
	  b = (o1 * c1.b + o2 * c2.b - o1 * o2 * c2.b) / (o1 + o2 - o1 * o2);
	  return d3.rgb(r, g, b).toString();
	};


/***/ },
/* 67 */
/***/ function(module, exports) {

	module.exports = function(radians, distance, shape) {
	  var adjacentLegLength, coords, diagonal, oppositeLegLength;
	  coords = {
	    x: 0,
	    y: 0
	  };
	  if (radians < 0) {
	    radians = Math.PI * 2 + radians;
	  }
	  if (shape === "square") {
	    diagonal = 45 * (Math.PI / 180);
	    if (radians <= Math.PI) {
	      if (radians < (Math.PI / 2)) {
	        if (radians < diagonal) {
	          coords.x += distance;
	          oppositeLegLength = Math.tan(radians) * distance;
	          coords.y += oppositeLegLength;
	        } else {
	          coords.y += distance;
	          adjacentLegLength = distance / Math.tan(radians);
	          coords.x += adjacentLegLength;
	        }
	      } else {
	        if (radians < (Math.PI - diagonal)) {
	          coords.y += distance;
	          adjacentLegLength = distance / Math.tan(Math.PI - radians);
	          coords.x -= adjacentLegLength;
	        } else {
	          coords.x -= distance;
	          oppositeLegLength = Math.tan(Math.PI - radians) * distance;
	          coords.y += oppositeLegLength;
	        }
	      }
	    } else {
	      if (radians < (3 * Math.PI / 2)) {
	        if (radians < (diagonal + Math.PI)) {
	          coords.x -= distance;
	          oppositeLegLength = Math.tan(radians - Math.PI) * distance;
	          coords.y -= oppositeLegLength;
	        } else {
	          coords.y -= distance;
	          adjacentLegLength = distance / Math.tan(radians - Math.PI);
	          coords.x -= adjacentLegLength;
	        }
	      } else {
	        if (radians < (2 * Math.PI - diagonal)) {
	          coords.y -= distance;
	          adjacentLegLength = distance / Math.tan(2 * Math.PI - radians);
	          coords.x += adjacentLegLength;
	        } else {
	          coords.x += distance;
	          oppositeLegLength = Math.tan(2 * Math.PI - radians) * distance;
	          coords.y -= oppositeLegLength;
	        }
	      }
	    }
	  } else {
	    coords.x += distance * Math.cos(radians);
	    coords.y += distance * Math.sin(radians);
	  }
	  return coords;
	};


/***/ },
/* 68 */
/***/ function(module, exports, __webpack_require__) {

	var print;
	
	print = __webpack_require__(2);
	
	module.exports = function(edges, options) {
	  var K, a, b, directed, distance, edge, edge2distance, endpoint, errormsg, i, id, id1, idA, idB, j, k, l, len, len1, len2, node, nodeA, nodeB, nodeid, nodes, ref, ref1, source, startpoint, target, vdebug;
	  source = options.source, target = options.target, directed = options.directed, distance = options.distance, nodeid = options.nodeid, startpoint = options.startpoint, endpoint = options.endpoint, K = options.K, vdebug = options.vdebug;
	  if (!directed) {
	    directed = false;
	  }
	  if (K == null) {
	    K = 1;
	  }
	  if (nodeid == null) {
	    nodeid = function(node) {
	      return node;
	    };
	  } else if (typeof nodeid === 'string') {
	    nodeid = (function(nodeid) {
	      return function(node) {
	        return node[nodeid];
	      };
	    })(nodeid);
	  }
	  if ((source != null) && typeof source === 'object') {
	    source = nodeid(source);
	  }
	  if ((target != null) && typeof target === 'object') {
	    target = nodeid(target);
	  }
	  if (startpoint == null) {
	    startpoint = function(edge) {
	      return edge.source;
	    };
	  } else if (typeof startpoint === 'string') {
	    startpoint = (function(startpoint) {
	      return function(edge) {
	        return edge[startpoint];
	      };
	    })(startpoint);
	  }
	  if (endpoint == null) {
	    endpoint = function(edge) {
	      return edge.target;
	    };
	  } else if (typeof endpoint === 'string') {
	    endpoint = (function(endpoint) {
	      return function(edge) {
	        return edge[endpoint];
	      };
	    })(endpoint);
	  }
	  if (distance == null) {
	    distance = function(edge) {
	      return 1;
	    };
	  } else if (typeof distance === 'number') {
	    distance = (function(distance) {
	      return function(edge) {
	        return distance;
	      };
	    })(distance);
	  } else if (typeof distance === 'string') {
	    distance = (function(distance) {
	      return function(edge) {
	        return edge[distance];
	      };
	    })(distance);
	  } else if (distance instanceof Array) {
	    edge2distance = {};
	    for (i = j = 0, len = edges.length; j < len; i = ++j) {
	      edge = edges[i];
	      a = nodeid(startpoint(edge));
	      b = nodeid(endpoint(edge));
	      edge2distance[a + '_' + b] = distance[i];
	    }
	    distance = function(edge) {
	      a = nodeid(startpoint(edge));
	      b = nodeid(endpoint(edge));
	      return edge2distance[a + '_' + b];
	    };
	  }
	  nodes = {};
	  for (k = 0, len1 = edges.length; k < len1; k++) {
	    edge = edges[k];
	    nodeA = startpoint(edge);
	    nodeB = endpoint(edge);
	    idA = nodeid(nodeA);
	    idB = nodeid(nodeB);
	    ref = [nodeA, nodeB];
	    for (l = 0, len2 = ref.length; l < len2; l++) {
	      node = ref[l];
	      id = nodeid(node);
	      if (!(id in nodes)) {
	        nodes[id] = {
	          node: node,
	          outedges: []
	        };
	      }
	    }
	    nodes[idA].outedges.push(edge);
	    if (!directed) {
	      nodes[idB].outedges.push(edge);
	    }
	  }
	  errormsg = null;
	  if (edges.length === 0) {
	    errormsg = 'The length of edges is 0';
	  } else if (K < 0) {
	    errormsg = 'K can not have negative value';
	  } else if (distance(edges[0]) == null) {
	    errormsg = 'Check the distance function/attribute';
	  } else if (startpoint(edges[0]) == null) {
	    errormsg = 'Check the startpoint function/attribute';
	  } else if (endpoint(edges[0]) == null) {
	    errormsg = 'Check the endpoint function/attribute';
	  } else {
	    id1 = nodeid(startpoint(edges[0]));
	    if ((id1 == null) || ((ref1 = typeof id1) !== 'string' && ref1 !== 'number')) {
	      errormsg = 'Check the nodeid function/attribute';
	    } else if ((source != null) && !(source in nodes)) {
	      errormsg = 'The source is not in the graph';
	    } else if ((target != null) && !(target in nodes)) {
	      errormsg = 'The target is not in the graph';
	    }
	  }
	  if (errormsg != null) {
	    print.error(errormsg);
	    return null;
	  }
	  return [
	    edges, {
	      source: source,
	      target: target,
	      directed: directed,
	      distance: distance,
	      nodeid: nodeid,
	      startpoint: startpoint,
	      endpoint: endpoint,
	      K: K,
	      nodes: nodes,
	      vdebug: vdebug
	    }
	  ];
	};


/***/ },
/* 69 */
/***/ function(module, exports, __webpack_require__) {

	var defaultLocale;
	
	defaultLocale = __webpack_require__(53);
	
	module.exports = function(text, opts) {
	  var biglow, bigs, key, locale, smalls;
	  if (!text) {
	    return "";
	  }
	  if (!opts) {
	    opts = {};
	  }
	  key = opts.key;
	  if (text.charAt(text.length - 1) === ".") {
	    return text.charAt(0).toUpperCase() + text.substr(1);
	  }
	  locale = "locale" in this ? this.locale.value : defaultLocale;
	  smalls = locale.lowercase.map(function(b) {
	    return b.toLowerCase();
	  });
	  bigs = locale.uppercase;
	  bigs = bigs.concat(bigs.map(function(b) {
	    return b + "s";
	  }));
	  biglow = bigs.map(function(b) {
	    return b.toLowerCase();
	  });
	  return text.replace(/[^\s!-#%&(-\x2A,-:;\x3F@\x5B-\x5D_\x7B}\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u0AF0\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166D\u166E\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2010-\u2027\u2030-\u2043\u2045-\u2051\u2053-\u205E\u207D\u207E\u208D\u208E\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E3B\u3001-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]*/g, function(txt, i) {
	    var bigindex, new_txt;
	    if (txt) {
	      bigindex = biglow.indexOf(txt.toLowerCase());
	      if (bigindex >= 0) {
	        return new_txt = bigs[bigindex];
	      } else if (smalls.indexOf(txt.toLowerCase()) >= 0 && i !== 0 && i !== text.length - 1) {
	        return new_txt = txt.toLowerCase();
	      } else {
	        return new_txt = txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();
	      }
	    } else {
	      return "";
	    }
	  });
	};


/***/ },
/* 70 */
/***/ function(module, exports, __webpack_require__) {

	var arraySort = __webpack_require__(19),
	    dataNest   = __webpack_require__(59),
	    fetchValue = __webpack_require__(3),
	    fetchColor = __webpack_require__(20),
	    fetchText  = __webpack_require__(17);
	//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	// Merges data underneath the size threshold
	//-------------------------------------------------------------------
	module.exports = function( vars , rawData , split ) {
	
	  var threshold;
	  if ( vars.size.threshold.value === false ) {
	    threshold = 0;
	  }
	  else if (typeof vars.size.threshold.value === "number") {
	    threshold = vars.size.threshold.value;
	  }
	  else if (typeof vars.size.threshold.value === "function") {
	    threshold = vars.size.threshold.value(vars);
	  }
	  else if (typeof vars.types[vars.type.value].threshold === "number") {
	    threshold = vars.types[vars.type.value].threshold;
	  }
	  else if (typeof vars.types[vars.type.value].threshold === "function") {
	    threshold = vars.types[vars.type.value].threshold(vars);
	  }
	  else {
	    threshold = 0.02;
	  }
	
	  if (typeof threshold == "number" && threshold > 0) {
	
	    var largeEnough = [],
	        cutoff = vars.depth.value === 0 ? 0 : {},
	        removed = [],
	        parents = [],
	        labelException = [],
	        largest = {};
	
	    var nest = d3.nest();
	
	    if (split) {
	      nest
	        .key(function(d){
	          return fetchValue(vars, d, split);
	        });
	    }
	
	    nest
	      .rollup(function(leaves){
	        var total = leaves.length;
	        if (vars.aggs.value[vars.size.value]) {
	          if (typeof vars.aggs.value[vars.size.value] == "function") {
	            total = vars.aggs.value[vars.size.value](leaves);
	          }
	          else if (typeof vars.aggs.value[vars.size.value] == "string") {
	            total = d3[vars.aggs.value[vars.size.value]](leaves,function(l){
	              return fetchValue(vars,l,vars.size.value);
	            });
	          }
	        }
	        else {
	          total = d3.sum(leaves,function(l){
	            return fetchValue(vars,l,vars.size.value);
	          });
	        }
	        var x = split ? fetchValue(vars,leaves[0],split) : "all";
	        largest[x] = total;
	        return total;
	      })
	      .entries(rawData);
	
	    rawData.forEach(function(d){
	      var id = fetchValue(vars, d, vars.id.value),
	          val = fetchValue(vars, d, vars.size.value),
	          x = split ? fetchValue(vars, d, split) : "all",
	          allowed = val/largest[x] >= threshold;
	
	      if (allowed && largeEnough.indexOf(id) < 0) {
	        largeEnough.push(id);
	        if (vars.depth.value) {
	          var p = fetchValue(vars, d, vars.id.nesting[vars.depth.value-1]);
	          if (parents.indexOf(p) < 0) {
	            parents.push(p);
	          }
	        }
	      }
	
	    });
	
	    var filteredData = rawData.filter(function(d){
	
	      var id = fetchValue(vars, d, vars.id.value),
	          allowed = largeEnough.indexOf(id) >= 0;
	
	      var p = vars.depth.value ?
	              fetchValue(vars, d, vars.id.nesting[vars.depth.value-1]) :
	              null;
	
	      if (p !== null && parents.indexOf(p) < 0 && labelException.indexOf(p) < 0) {
	        labelException.push(p);
	      }
	
	      if (!allowed) {
	        var val = fetchValue(vars, d, vars.size.value);
	        if (val > 0) {
	          if (vars.depth.value === 0) {
	            if (val > cutoff) cutoff = val;
	          }
	          else {
	            if (!(p in cutoff)) cutoff[p] = 0;
	            if (val > cutoff[p]) cutoff[p] = val;
	          }
	          removed.push(d);
	        }
	      }
	      return allowed;
	
	    });
	
	    if ( removed.length > 1 ) {
	
	      removed = arraySort( removed , vars.size.value , "desc" , [] , vars );
	
	      var levels = vars.id.nesting.slice(0,vars.depth.value);
	      if (vars.types[vars.type.value].requirements.indexOf(vars.axes.discrete) >= 0) {
	        levels.push(vars[vars.axes.discrete].value);
	      }
	      var merged = dataNest(vars, removed, levels);
	
	      merged.forEach(function(m){
	
	        var parent = vars.id.nesting[vars.depth.value-1];
	        var p_id = fetchValue(vars, m, parent);
	        children = parent ? removed.filter(function(r){
	          return fetchValue(vars, r, parent) === p_id;
	        }) : removed;
	
	        if (children.length > 1) {
	
	          vars.id.nesting.forEach(function(d,i){
	
	            if (vars.depth.value == i) {
	              var prev = m[d];
	              if ( typeof prev === "string" ) {
	                m[d] = "d3plus_other_"+prev;
	              }
	              else {
	                m[d] = "d3plus_other";
	              }
	            }
	            else if (i > vars.depth.value) {
	              delete m[d];
	            }
	          });
	
	          if (vars.color.value && vars.color.type === "string") {
	            if (vars.depth.value === 0) {
	              m[vars.color.value] = vars.color.missing;
	            }
	            else {
	              m[vars.color.value] = fetchValue(vars,p_id,vars.color.value,parent);
	            }
	          }
	
	          if (vars.icon.value) {
	            m[vars.icon.value] = fetchValue(vars,p_id,vars.icon.value,parent);
	          }
	
	          if (p_id) {
	            m.d3plus.depth = vars.depth.value;
	          }
	
	          var textLabel;
	          if (vars.depth.value === 0) {
	            textLabel = vars.format.value(vars.format.locale.value.ui.values, {"key": "threshold", "vars": vars});
	            textLabel += " < "+vars.format.value(cutoff, {"key": vars.size.value, "vars": vars});
	          }
	          else {
	            textLabel = fetchText(vars,m,vars.depth.value-1);
	            textLabel = textLabel.length ? textLabel[0].split(" < ")[0] : vars.format.value(vars.format.locale.value.ui.values, {"key": "threshold", "vars": vars});
	            if (p_id, labelException.indexOf(p_id) < 0) {
	              textLabel += " < "+vars.format.value(cutoff[p_id], {"key": vars.size.value, "vars": vars});
	            }
	          }
	          if (p_id, labelException.indexOf(p_id) < 0) {
	            textLabel += " ("+vars.format.value(threshold*100, {"key": "share", "vars": vars})+")";
	          }
	
	          m.d3plus.threshold = cutoff;
	          m.d3plus.merged = children;
	
	          if (vars.text.value) {
	            m[vars.text.value] = textLabel;
	          }
	          m.d3plus.text = textLabel;
	
	        }
	
	      });
	
	    }
	    else {
	      merged = removed;
	    }
	
	    return filteredData.concat(merged);
	
	  }
	
	  return rawData;
	
	};


/***/ },
/* 71 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactBrowserEventEmitter
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var EventConstants = __webpack_require__(34);
	var EventPluginHub = __webpack_require__(60);
	var EventPluginRegistry = __webpack_require__(152);
	var ReactEventEmitterMixin = __webpack_require__(449);
	var ReactPerf = __webpack_require__(22);
	var ViewportMetrics = __webpack_require__(173);
	
	var assign = __webpack_require__(5);
	var isEventSupported = __webpack_require__(115);
	
	/**
	 * Summary of `ReactBrowserEventEmitter` event handling:
	 *
	 *  - Top-level delegation is used to trap most native browser events. This
	 *    may only occur in the main thread and is the responsibility of
	 *    ReactEventListener, which is injected and can therefore support pluggable
	 *    event sources. This is the only work that occurs in the main thread.
	 *
	 *  - We normalize and de-duplicate events to account for browser quirks. This
	 *    may be done in the worker thread.
	 *
	 *  - Forward these native events (with the associated top-level type used to
	 *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want
	 *    to extract any synthetic events.
	 *
	 *  - The `EventPluginHub` will then process each event by annotating them with
	 *    "dispatches", a sequence of listeners and IDs that care about that event.
	 *
	 *  - The `EventPluginHub` then dispatches the events.
	 *
	 * Overview of React and the event system:
	 *
	 * +------------+    .
	 * |    DOM     |    .
	 * +------------+    .
	 *       |           .
	 *       v           .
	 * +------------+    .
	 * | ReactEvent |    .
	 * |  Listener  |    .
	 * +------------+    .                         +-----------+
	 *       |           .               +--------+|SimpleEvent|
	 *       |           .               |         |Plugin     |
	 * +-----|------+    .               v         +-----------+
	 * |     |      |    .    +--------------+                    +------------+
	 * |     +-----------.--->|EventPluginHub|                    |    Event   |
	 * |            |    .    |              |     +-----------+  | Propagators|
	 * | ReactEvent |    .    |              |     |TapEvent   |  |------------|
	 * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|
	 * |            |    .    |              |     +-----------+  |  utilities |
	 * |     +-----------.--->|              |                    +------------+
	 * |     |      |    .    +--------------+
	 * +-----|------+    .                ^        +-----------+
	 *       |           .                |        |Enter/Leave|
	 *       +           .                +-------+|Plugin     |
	 * +-------------+   .                         +-----------+
	 * | application |   .
	 * |-------------|   .
	 * |             |   .
	 * |             |   .
	 * +-------------+   .
	 *                   .
	 *    React Core     .  General Purpose Event Plugin System
	 */
	
	var alreadyListeningTo = {};
	var isMonitoringScrollValue = false;
	var reactTopListenersCounter = 0;
	
	// For events like 'submit' which don't consistently bubble (which we trap at a
	// lower node than `document`), binding at `document` would cause duplicate
	// events so we don't include them here
	var topEventMapping = {
	  topAbort: 'abort',
	  topBlur: 'blur',
	  topCanPlay: 'canplay',
	  topCanPlayThrough: 'canplaythrough',
	  topChange: 'change',
	  topClick: 'click',
	  topCompositionEnd: 'compositionend',
	  topCompositionStart: 'compositionstart',
	  topCompositionUpdate: 'compositionupdate',
	  topContextMenu: 'contextmenu',
	  topCopy: 'copy',
	  topCut: 'cut',
	  topDoubleClick: 'dblclick',
	  topDrag: 'drag',
	  topDragEnd: 'dragend',
	  topDragEnter: 'dragenter',
	  topDragExit: 'dragexit',
	  topDragLeave: 'dragleave',
	  topDragOver: 'dragover',
	  topDragStart: 'dragstart',
	  topDrop: 'drop',
	  topDurationChange: 'durationchange',
	  topEmptied: 'emptied',
	  topEncrypted: 'encrypted',
	  topEnded: 'ended',
	  topError: 'error',
	  topFocus: 'focus',
	  topInput: 'input',
	  topKeyDown: 'keydown',
	  topKeyPress: 'keypress',
	  topKeyUp: 'keyup',
	  topLoadedData: 'loadeddata',
	  topLoadedMetadata: 'loadedmetadata',
	  topLoadStart: 'loadstart',
	  topMouseDown: 'mousedown',
	  topMouseMove: 'mousemove',
	  topMouseOut: 'mouseout',
	  topMouseOver: 'mouseover',
	  topMouseUp: 'mouseup',
	  topPaste: 'paste',
	  topPause: 'pause',
	  topPlay: 'play',
	  topPlaying: 'playing',
	  topProgress: 'progress',
	  topRateChange: 'ratechange',
	  topScroll: 'scroll',
	  topSeeked: 'seeked',
	  topSeeking: 'seeking',
	  topSelectionChange: 'selectionchange',
	  topStalled: 'stalled',
	  topSuspend: 'suspend',
	  topTextInput: 'textInput',
	  topTimeUpdate: 'timeupdate',
	  topTouchCancel: 'touchcancel',
	  topTouchEnd: 'touchend',
	  topTouchMove: 'touchmove',
	  topTouchStart: 'touchstart',
	  topVolumeChange: 'volumechange',
	  topWaiting: 'waiting',
	  topWheel: 'wheel'
	};
	
	/**
	 * To ensure no conflicts with other potential React instances on the page
	 */
	var topListenersIDKey = '_reactListenersID' + String(Math.random()).slice(2);
	
	function getListeningForDocument(mountAt) {
	  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`
	  // directly.
	  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {
	    mountAt[topListenersIDKey] = reactTopListenersCounter++;
	    alreadyListeningTo[mountAt[topListenersIDKey]] = {};
	  }
	  return alreadyListeningTo[mountAt[topListenersIDKey]];
	}
	
	/**
	 * `ReactBrowserEventEmitter` is used to attach top-level event listeners. For
	 * example:
	 *
	 *   ReactBrowserEventEmitter.putListener('myID', 'onClick', myFunction);
	 *
	 * This would allocate a "registration" of `('onClick', myFunction)` on 'myID'.
	 *
	 * @internal
	 */
	var ReactBrowserEventEmitter = assign({}, ReactEventEmitterMixin, {
	
	  /**
	   * Injectable event backend
	   */
	  ReactEventListener: null,
	
	  injection: {
	    /**
	     * @param {object} ReactEventListener
	     */
	    injectReactEventListener: function (ReactEventListener) {
	      ReactEventListener.setHandleTopLevel(ReactBrowserEventEmitter.handleTopLevel);
	      ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;
	    }
	  },
	
	  /**
	   * Sets whether or not any created callbacks should be enabled.
	   *
	   * @param {boolean} enabled True if callbacks should be enabled.
	   */
	  setEnabled: function (enabled) {
	    if (ReactBrowserEventEmitter.ReactEventListener) {
	      ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);
	    }
	  },
	
	  /**
	   * @return {boolean} True if callbacks are enabled.
	   */
	  isEnabled: function () {
	    return !!(ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.isEnabled());
	  },
	
	  /**
	   * We listen for bubbled touch events on the document object.
	   *
	   * Firefox v8.01 (and possibly others) exhibited strange behavior when
	   * mounting `onmousemove` events at some node that was not the document
	   * element. The symptoms were that if your mouse is not moving over something
	   * contained within that mount point (for example on the background) the
	   * top-level listeners for `onmousemove` won't be called. However, if you
	   * register the `mousemove` on the document object, then it will of course
	   * catch all `mousemove`s. This along with iOS quirks, justifies restricting
	   * top-level listeners to the document object only, at least for these
	   * movement types of events and possibly all events.
	   *
	   * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
	   *
	   * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but
	   * they bubble to document.
	   *
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @param {object} contentDocumentHandle Document which owns the container
	   */
	  listenTo: function (registrationName, contentDocumentHandle) {
	    var mountAt = contentDocumentHandle;
	    var isListening = getListeningForDocument(mountAt);
	    var dependencies = EventPluginRegistry.registrationNameDependencies[registrationName];
	
	    var topLevelTypes = EventConstants.topLevelTypes;
	    for (var i = 0; i < dependencies.length; i++) {
	      var dependency = dependencies[i];
	      if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {
	        if (dependency === topLevelTypes.topWheel) {
	          if (isEventSupported('wheel')) {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'wheel', mountAt);
	          } else if (isEventSupported('mousewheel')) {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'mousewheel', mountAt);
	          } else {
	            // Firefox needs to capture a different mouse scroll event.
	            // @see http://www.quirksmode.org/dom/events/tests/scroll.html
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'DOMMouseScroll', mountAt);
	          }
	        } else if (dependency === topLevelTypes.topScroll) {
	
	          if (isEventSupported('scroll', true)) {
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topScroll, 'scroll', mountAt);
	          } else {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topScroll, 'scroll', ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE);
	          }
	        } else if (dependency === topLevelTypes.topFocus || dependency === topLevelTypes.topBlur) {
	
	          if (isEventSupported('focus', true)) {
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topFocus, 'focus', mountAt);
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topBlur, 'blur', mountAt);
	          } else if (isEventSupported('focusin')) {
	            // IE has `focusin` and `focusout` events which bubble.
	            // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topFocus, 'focusin', mountAt);
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topBlur, 'focusout', mountAt);
	          }
	
	          // to make sure blur and focus event listeners are only attached once
	          isListening[topLevelTypes.topBlur] = true;
	          isListening[topLevelTypes.topFocus] = true;
	        } else if (topEventMapping.hasOwnProperty(dependency)) {
	          ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(dependency, topEventMapping[dependency], mountAt);
	        }
	
	        isListening[dependency] = true;
	      }
	    }
	  },
	
	  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {
	    return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelType, handlerBaseName, handle);
	  },
	
	  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {
	    return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelType, handlerBaseName, handle);
	  },
	
	  /**
	   * Listens to window scroll and resize events. We cache scroll values so that
	   * application code can access them without triggering reflows.
	   *
	   * NOTE: Scroll events do not bubble.
	   *
	   * @see http://www.quirksmode.org/dom/events/scroll.html
	   */
	  ensureScrollValueMonitoring: function () {
	    if (!isMonitoringScrollValue) {
	      var refresh = ViewportMetrics.refreshScrollValues;
	      ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);
	      isMonitoringScrollValue = true;
	    }
	  },
	
	  eventNameDispatchConfigs: EventPluginHub.eventNameDispatchConfigs,
	
	  registrationNameModules: EventPluginHub.registrationNameModules,
	
	  putListener: EventPluginHub.putListener,
	
	  getListener: EventPluginHub.getListener,
	
	  deleteListener: EventPluginHub.deleteListener,
	
	  deleteAllListeners: EventPluginHub.deleteAllListeners
	
	});
	
	ReactPerf.measureMethods(ReactBrowserEventEmitter, 'ReactBrowserEventEmitter', {
	  putListener: 'putListener',
	  deleteListener: 'deleteListener'
	});
	
	module.exports = ReactBrowserEventEmitter;

/***/ },
/* 72 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPropTypeLocationNames
	 */
	
	'use strict';
	
	var ReactPropTypeLocationNames = {};
	
	if (process.env.NODE_ENV !== 'production') {
	  ReactPropTypeLocationNames = {
	    prop: 'prop',
	    context: 'context',
	    childContext: 'child context'
	  };
	}
	
	module.exports = ReactPropTypeLocationNames;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 73 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPropTypeLocations
	 */
	
	'use strict';
	
	var keyMirror = __webpack_require__(79);
	
	var ReactPropTypeLocations = keyMirror({
	  prop: null,
	  context: null,
	  childContext: null
	});
	
	module.exports = ReactPropTypeLocations;

/***/ },
/* 74 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticMouseEvent
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var SyntheticUIEvent = __webpack_require__(63);
	var ViewportMetrics = __webpack_require__(173);
	
	var getEventModifierState = __webpack_require__(111);
	
	/**
	 * @interface MouseEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var MouseEventInterface = {
	  screenX: null,
	  screenY: null,
	  clientX: null,
	  clientY: null,
	  ctrlKey: null,
	  shiftKey: null,
	  altKey: null,
	  metaKey: null,
	  getModifierState: getEventModifierState,
	  button: function (event) {
	    // Webkit, Firefox, IE9+
	    // which:  1 2 3
	    // button: 0 1 2 (standard)
	    var button = event.button;
	    if ('which' in event) {
	      return button;
	    }
	    // IE<9
	    // which:  undefined
	    // button: 0 0 0
	    // button: 1 4 2 (onmouseup)
	    return button === 2 ? 2 : button === 4 ? 1 : 0;
	  },
	  buttons: null,
	  relatedTarget: function (event) {
	    return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);
	  },
	  // "Proprietary" Interface.
	  pageX: function (event) {
	    return 'pageX' in event ? event.pageX : event.clientX + ViewportMetrics.currentScrollLeft;
	  },
	  pageY: function (event) {
	    return 'pageY' in event ? event.pageY : event.clientY + ViewportMetrics.currentScrollTop;
	  }
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);
	
	module.exports = SyntheticMouseEvent;

/***/ },
/* 75 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule Transaction
	 */
	
	'use strict';
	
	var invariant = __webpack_require__(4);
	
	/**
	 * `Transaction` creates a black box that is able to wrap any method such that
	 * certain invariants are maintained before and after the method is invoked
	 * (Even if an exception is thrown while invoking the wrapped method). Whoever
	 * instantiates a transaction can provide enforcers of the invariants at
	 * creation time. The `Transaction` class itself will supply one additional
	 * automatic invariant for you - the invariant that any transaction instance
	 * should not be run while it is already being run. You would typically create a
	 * single instance of a `Transaction` for reuse multiple times, that potentially
	 * is used to wrap several different methods. Wrappers are extremely simple -
	 * they only require implementing two methods.
	 *
	 * <pre>
	 *                       wrappers (injected at creation time)
	 *                                      +        +
	 *                                      |        |
	 *                    +-----------------|--------|--------------+
	 *                    |                 v        |              |
	 *                    |      +---------------+   |              |
	 *                    |   +--|    wrapper1   |---|----+         |
	 *                    |   |  +---------------+   v    |         |
	 *                    |   |          +-------------+  |         |
	 *                    |   |     +----|   wrapper2  |--------+   |
	 *                    |   |     |    +-------------+  |     |   |
	 *                    |   |     |                     |     |   |
	 *                    |   v     v                     v     v   | wrapper
	 *                    | +---+ +---+   +---------+   +---+ +---+ | invariants
	 * perform(anyMethod) | |   | |   |   |         |   |   | |   | | maintained
	 * +----------------->|-|---|-|---|-->|anyMethod|---|---|-|---|-|-------->
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | +---+ +---+   +---------+   +---+ +---+ |
	 *                    |  initialize                    close    |
	 *                    +-----------------------------------------+
	 * </pre>
	 *
	 * Use cases:
	 * - Preserving the input selection ranges before/after reconciliation.
	 *   Restoring selection even in the event of an unexpected error.
	 * - Deactivating events while rearranging the DOM, preventing blurs/focuses,
	 *   while guaranteeing that afterwards, the event system is reactivated.
	 * - Flushing a queue of collected DOM mutations to the main UI thread after a
	 *   reconciliation takes place in a worker thread.
	 * - Invoking any collected `componentDidUpdate` callbacks after rendering new
	 *   content.
	 * - (Future use case): Wrapping particular flushes of the `ReactWorker` queue
	 *   to preserve the `scrollTop` (an automatic scroll aware DOM).
	 * - (Future use case): Layout calculations before and after DOM updates.
	 *
	 * Transactional plugin API:
	 * - A module that has an `initialize` method that returns any precomputation.
	 * - and a `close` method that accepts the precomputation. `close` is invoked
	 *   when the wrapped process is completed, or has failed.
	 *
	 * @param {Array<TransactionalWrapper>} transactionWrapper Wrapper modules
	 * that implement `initialize` and `close`.
	 * @return {Transaction} Single transaction for reuse in thread.
	 *
	 * @class Transaction
	 */
	var Mixin = {
	  /**
	   * Sets up this instance so that it is prepared for collecting metrics. Does
	   * so such that this setup method may be used on an instance that is already
	   * initialized, in a way that does not consume additional memory upon reuse.
	   * That can be useful if you decide to make your subclass of this mixin a
	   * "PooledClass".
	   */
	  reinitializeTransaction: function () {
	    this.transactionWrappers = this.getTransactionWrappers();
	    if (this.wrapperInitData) {
	      this.wrapperInitData.length = 0;
	    } else {
	      this.wrapperInitData = [];
	    }
	    this._isInTransaction = false;
	  },
	
	  _isInTransaction: false,
	
	  /**
	   * @abstract
	   * @return {Array<TransactionWrapper>} Array of transaction wrappers.
	   */
	  getTransactionWrappers: null,
	
	  isInTransaction: function () {
	    return !!this._isInTransaction;
	  },
	
	  /**
	   * Executes the function within a safety window. Use this for the top level
	   * methods that result in large amounts of computation/mutations that would
	   * need to be safety checked. The optional arguments helps prevent the need
	   * to bind in many cases.
	   *
	   * @param {function} method Member of scope to call.
	   * @param {Object} scope Scope to invoke from.
	   * @param {Object?=} a Argument to pass to the method.
	   * @param {Object?=} b Argument to pass to the method.
	   * @param {Object?=} c Argument to pass to the method.
	   * @param {Object?=} d Argument to pass to the method.
	   * @param {Object?=} e Argument to pass to the method.
	   * @param {Object?=} f Argument to pass to the method.
	   *
	   * @return {*} Return value from `method`.
	   */
	  perform: function (method, scope, a, b, c, d, e, f) {
	    !!this.isInTransaction() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Transaction.perform(...): Cannot initialize a transaction when there ' + 'is already an outstanding transaction.') : invariant(false) : undefined;
	    var errorThrown;
	    var ret;
	    try {
	      this._isInTransaction = true;
	      // Catching errors makes debugging more difficult, so we start with
	      // errorThrown set to true before setting it to false after calling
	      // close -- if it's still set to true in the finally block, it means
	      // one of these calls threw.
	      errorThrown = true;
	      this.initializeAll(0);
	      ret = method.call(scope, a, b, c, d, e, f);
	      errorThrown = false;
	    } finally {
	      try {
	        if (errorThrown) {
	          // If `method` throws, prefer to show that stack trace over any thrown
	          // by invoking `closeAll`.
	          try {
	            this.closeAll(0);
	          } catch (err) {}
	        } else {
	          // Since `method` didn't throw, we don't want to silence the exception
	          // here.
	          this.closeAll(0);
	        }
	      } finally {
	        this._isInTransaction = false;
	      }
	    }
	    return ret;
	  },
	
	  initializeAll: function (startIndex) {
	    var transactionWrappers = this.transactionWrappers;
	    for (var i = startIndex; i < transactionWrappers.length; i++) {
	      var wrapper = transactionWrappers[i];
	      try {
	        // Catching errors makes debugging more difficult, so we start with the
	        // OBSERVED_ERROR state before overwriting it with the real return value
	        // of initialize -- if it's still set to OBSERVED_ERROR in the finally
	        // block, it means wrapper.initialize threw.
	        this.wrapperInitData[i] = Transaction.OBSERVED_ERROR;
	        this.wrapperInitData[i] = wrapper.initialize ? wrapper.initialize.call(this) : null;
	      } finally {
	        if (this.wrapperInitData[i] === Transaction.OBSERVED_ERROR) {
	          // The initializer for wrapper i threw an error; initialize the
	          // remaining wrappers but silence any exceptions from them to ensure
	          // that the first error is the one to bubble up.
	          try {
	            this.initializeAll(i + 1);
	          } catch (err) {}
	        }
	      }
	    }
	  },
	
	  /**
	   * Invokes each of `this.transactionWrappers.close[i]` functions, passing into
	   * them the respective return values of `this.transactionWrappers.init[i]`
	   * (`close`rs that correspond to initializers that failed will not be
	   * invoked).
	   */
	  closeAll: function (startIndex) {
	    !this.isInTransaction() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Transaction.closeAll(): Cannot close transaction when none are open.') : invariant(false) : undefined;
	    var transactionWrappers = this.transactionWrappers;
	    for (var i = startIndex; i < transactionWrappers.length; i++) {
	      var wrapper = transactionWrappers[i];
	      var initData = this.wrapperInitData[i];
	      var errorThrown;
	      try {
	        // Catching errors makes debugging more difficult, so we start with
	        // errorThrown set to true before setting it to false after calling
	        // close -- if it's still set to true in the finally block, it means
	        // wrapper.close threw.
	        errorThrown = true;
	        if (initData !== Transaction.OBSERVED_ERROR && wrapper.close) {
	          wrapper.close.call(this, initData);
	        }
	        errorThrown = false;
	      } finally {
	        if (errorThrown) {
	          // The closer for wrapper i threw an error; close the remaining
	          // wrappers but silence any exceptions from them to ensure that the
	          // first error is the one to bubble up.
	          try {
	            this.closeAll(i + 1);
	          } catch (e) {}
	        }
	      }
	    }
	    this.wrapperInitData.length = 0;
	  }
	};
	
	var Transaction = {
	
	  Mixin: Mixin,
	
	  /**
	   * Token to look for to determine if an error occurred.
	   */
	  OBSERVED_ERROR: {}
	
	};
	
	module.exports = Transaction;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 76 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule canDefineProperty
	 */
	
	'use strict';
	
	var canDefineProperty = false;
	if (process.env.NODE_ENV !== 'production') {
	  try {
	    Object.defineProperty({}, 'x', { get: function () {} });
	    canDefineProperty = true;
	  } catch (x) {
	    // IE will fail on defineProperty
	  }
	}
	
	module.exports = canDefineProperty;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 77 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule escapeTextContentForBrowser
	 */
	
	'use strict';
	
	var ESCAPE_LOOKUP = {
	  '&': '&amp;',
	  '>': '&gt;',
	  '<': '&lt;',
	  '"': '&quot;',
	  '\'': '&#x27;'
	};
	
	var ESCAPE_REGEX = /[&><"']/g;
	
	function escaper(match) {
	  return ESCAPE_LOOKUP[match];
	}
	
	/**
	 * Escapes text to prevent scripting attacks.
	 *
	 * @param {*} text Text value to escape.
	 * @return {string} An escaped string.
	 */
	function escapeTextContentForBrowser(text) {
	  return ('' + text).replace(ESCAPE_REGEX, escaper);
	}
	
	module.exports = escapeTextContentForBrowser;

/***/ },
/* 78 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule setInnerHTML
	 */
	
	/* globals MSApp */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(10);
	
	var WHITESPACE_TEST = /^[ \r\n\t\f]/;
	var NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/;
	
	/**
	 * Set the innerHTML property of a node, ensuring that whitespace is preserved
	 * even in IE8.
	 *
	 * @param {DOMElement} node
	 * @param {string} html
	 * @internal
	 */
	var setInnerHTML = function (node, html) {
	  node.innerHTML = html;
	};
	
	// Win8 apps: Allow all html to be inserted
	if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {
	  setInnerHTML = function (node, html) {
	    MSApp.execUnsafeLocalFunction(function () {
	      node.innerHTML = html;
	    });
	  };
	}
	
	if (ExecutionEnvironment.canUseDOM) {
	  // IE8: When updating a just created node with innerHTML only leading
	  // whitespace is removed. When updating an existing node with innerHTML
	  // whitespace in root TextNodes is also collapsed.
	  // @see quirksmode.org/bugreports/archives/2004/11/innerhtml_and_t.html
	
	  // Feature detection; only IE8 is known to behave improperly like this.
	  var testElement = document.createElement('div');
	  testElement.innerHTML = ' ';
	  if (testElement.innerHTML === '') {
	    setInnerHTML = function (node, html) {
	      // Magic theory: IE8 supposedly differentiates between added and updated
	      // nodes when processing innerHTML, innerHTML on updated nodes suffers
	      // from worse whitespace behavior. Re-adding a node like this triggers
	      // the initial and more favorable whitespace behavior.
	      // TODO: What to do on a detached node?
	      if (node.parentNode) {
	        node.parentNode.replaceChild(node, node);
	      }
	
	      // We also implement a workaround for non-visible tags disappearing into
	      // thin air on IE8, this only happens if there is no visible text
	      // in-front of the non-visible tags. Piggyback on the whitespace fix
	      // and simply check if any non-visible tags appear in the source.
	      if (WHITESPACE_TEST.test(html) || html[0] === '<' && NONVISIBLE_TEST.test(html)) {
	        // Recover leading whitespace by temporarily prepending any character.
	        // \uFEFF has the potential advantage of being zero-width/invisible.
	        // UglifyJS drops U+FEFF chars when parsing, so use String.fromCharCode
	        // in hopes that this is preserved even if "\uFEFF" is transformed to
	        // the actual Unicode character (by Babel, for example).
	        // https://github.com/mishoo/UglifyJS2/blob/v2.4.20/lib/parse.js#L216
	        node.innerHTML = String.fromCharCode(0xFEFF) + html;
	
	        // deleteData leaves an empty `TextNode` which offsets the index of all
	        // children. Definitely want to avoid this.
	        var textNode = node.firstChild;
	        if (textNode.data.length === 1) {
	          node.removeChild(textNode);
	        } else {
	          textNode.deleteData(0, 1);
	        }
	      } else {
	        node.innerHTML = html;
	      }
	    };
	  }
	}
	
	module.exports = setInnerHTML;

/***/ },
/* 79 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule keyMirror
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var invariant = __webpack_require__(4);
	
	/**
	 * Constructs an enumeration with keys equal to their value.
	 *
	 * For example:
	 *
	 *   var COLORS = keyMirror({blue: null, red: null});
	 *   var myColor = COLORS.blue;
	 *   var isColorValid = !!COLORS[myColor];
	 *
	 * The last line could not be performed if the values of the generated enum were
	 * not equal to their keys.
	 *
	 *   Input:  {key1: val1, key2: val2}
	 *   Output: {key1: key1, key2: key2}
	 *
	 * @param {object} obj
	 * @return {object}
	 */
	var keyMirror = function (obj) {
	  var ret = {};
	  var key;
	  !(obj instanceof Object && !Array.isArray(obj)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'keyMirror(...): Argument must be an object.') : invariant(false) : undefined;
	  for (key in obj) {
	    if (!obj.hasOwnProperty(key)) {
	      continue;
	    }
	    ret[key] = key;
	  }
	  return ret;
	};
	
	module.exports = keyMirror;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 80 */
/***/ function(module, exports) {

	module.exports = function(arr, x) {
	  if (x === void 0) {
	    return arr;
	  }
	  if (x === false) {
	    return [];
	  }
	  if (x instanceof Array) {
	    return x;
	  }
	  if (!(arr instanceof Array)) {
	    arr = [];
	  }
	  if (arr.indexOf(x) >= 0) {
	    arr.splice(arr.indexOf(x), 1);
	  } else {
	    arr.push(x);
	  }
	  return arr;
	};


/***/ },
/* 81 */
/***/ function(module, exports, __webpack_require__) {

	var defaultScale;
	
	defaultScale = __webpack_require__(82);
	
	module.exports = function(x, scale) {
	  var rand_int;
	  rand_int = x || Math.floor(Math.random() * 20);
	  scale = scale || defaultScale;
	  return scale(rand_int);
	};


/***/ },
/* 82 */
/***/ function(module, exports) {

	module.exports = d3.scale.ordinal().range(["#b22200", "#282F6B", "#EACE3F", "#B35C1E", "#224F20", "#5F487C", "#759143", "#419391", "#993F88", "#e89c89", "#ffee8d", "#afd5e8", "#f7ba77", "#a5c697", "#c5b5e5", "#d1d392", "#bbefd0", "#e099cf"]);


/***/ },
/* 83 */
/***/ function(module, exports, __webpack_require__) {

	var fetchValue;
	
	fetchValue = __webpack_require__(3);
	
	module.exports = function(vars, data, nesting) {
	  var d, groupedData, i, j, k, len, len1, n, strippedData, val;
	  groupedData = d3.nest();
	  if (vars.id.grouping.value) {
	    if (nesting === void 0) {
	      nesting = vars.id.nesting;
	    }
	    for (i = j = 0, len = nesting.length; j < len; i = ++j) {
	      n = nesting[i];
	      if (i < vars.depth.value) {
	        (function(n) {
	          return groupedData.key(function(d) {
	            return fetchValue(vars, d.d3plus, n);
	          });
	        })(n);
	      }
	    }
	  }
	  strippedData = [];
	  for (k = 0, len1 = data.length; k < len1; k++) {
	    d = data[k];
	    val = vars.size.value ? fetchValue(vars, d, vars.size.value) : 1;
	    if (val && typeof val === "number" && val > 0) {
	      delete d.d3plus.r;
	      delete d.d3plus.x;
	      delete d.d3plus.y;
	      strippedData.push({
	        d3plus: d,
	        id: d[vars.id.value],
	        value: val
	      });
	    }
	  }
	  return groupedData.entries(strippedData);
	};


/***/ },
/* 84 */
/***/ function(module, exports) {

	module.exports = function(type) {
	  var attrs, styles, tester;
	  if (["div", "svg"].indexOf(type) < 0) {
	    type = "div";
	  }
	  styles = {
	    position: "absolute",
	    left: "-9999px",
	    top: "-9999px",
	    visibility: "hidden",
	    display: "block"
	  };
	  attrs = type === "div" ? {} : {
	    position: "absolute"
	  };
	  tester = d3.select("body").selectAll(type + ".d3plus_tester").data([0]);
	  tester.enter().append(type).attr("class", "d3plus_tester").style(styles).attr(attrs);
	  return tester;
	};


/***/ },
/* 85 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = {
	  en_US: __webpack_require__(53),
	  es_ES: __webpack_require__(364),
	  fr_FR: __webpack_require__(365),
	  ko_KR: __webpack_require__(366),
	  mk_MK: __webpack_require__(367),
	  pt_BR: __webpack_require__(368),
	  pt_PT: __webpack_require__(369),
	  ru_RU: __webpack_require__(370),
	  zh_CN: __webpack_require__(371)
	};


/***/ },
/* 86 */
/***/ function(module, exports, __webpack_require__) {

	var checkObject, copy, createFunction, initialize, print, process, setMethod, stringFormat, validObject;
	
	copy = __webpack_require__(11);
	
	print = __webpack_require__(2);
	
	process = __webpack_require__(126);
	
	setMethod = __webpack_require__(193);
	
	stringFormat = __webpack_require__(14);
	
	validObject = __webpack_require__(7);
	
	module.exports = function(vars, methods) {
	  var method, obj, results;
	  results = [];
	  for (method in methods) {
	    obj = methods[method];
	    vars[method] = copy(obj);
	    vars[method].initialized = initialize(vars, vars[method], method);
	    results.push(vars.self[method] = createFunction(vars, method));
	  }
	  return results;
	};
	
	initialize = function(vars, obj, method, p) {
	  var d, deps, i, len, o;
	  obj.previous = false;
	  obj.changed = false;
	  obj.initialized = false;
	  obj.callback = false;
	  if ("init" in obj && (!("value" in obj))) {
	    obj.value = obj.init(vars);
	    delete obj.init;
	  }
	  if ("process" in obj) {
	    obj.value = process(vars, obj, obj.value);
	  }
	  for (o in obj) {
	    if (o === "deprecates") {
	      deps = obj[o] instanceof Array ? obj[o] : [obj[o]];
	      for (i = 0, len = deps.length; i < len; i++) {
	        d = deps[i];
	        vars.self[d] = (function(dep, n) {
	          return function(x) {
	            var doc, rec, str;
	            str = vars.format.locale.value.dev.deprecated;
	            dep = "." + dep + "()";
	            rec = p ? "\"" + n + "\" in ." + p + "()" : "." + n + "()";
	            doc = p || n;
	            print.error(stringFormat(str, dep, rec), doc);
	            return vars.self;
	          };
	        })(d, method);
	      }
	    } else if (o === "global") {
	      if (!(method in vars)) {
	        vars[method] = [];
	      }
	    } else if (o !== "value") {
	      if (validObject(obj[o])) {
	        initialize(vars, obj[o], o, method);
	      }
	    }
	  }
	  return true;
	};
	
	createFunction = function(vars, key) {
	  return function(user, callback) {
	    var accepted, checkFont, checkValue, fontAttr, fontAttrValue, s, starting, str;
	    accepted = "accepted" in vars[key] ? vars[key].accepted : null;
	    if (typeof accepted === "function") {
	      accepted = accepted(vars);
	    }
	    if (!(accepted instanceof Array)) {
	      accepted = [accepted];
	    }
	    if (user === Object) {
	      return vars[key];
	    } else if (!arguments.length && accepted.indexOf(void 0) < 0) {
	      if ("value" in vars[key]) {
	        return vars[key].value;
	      } else {
	        return vars[key];
	      }
	    }
	    if (key === "style" && typeof user === "object") {
	      str = vars.format.locale.value.dev.oldStyle;
	      for (s in user) {
	        print.warning(stringFormat(str, "\"" + s + "\"", s), s);
	        vars.self[s](user[s]);
	      }
	    }
	    if (key === "font") {
	      if (typeof user === "string") {
	        user = {
	          family: user
	        };
	      }
	      starting = true;
	      checkValue = function(o, a, m, v) {
	        if (validObject(o[m]) && a in o[m]) {
	          if (validObject(o[m][a])) {
	            if (o[m][a].process) {
	              o[m][a].value = o[m][a].process(v);
	            } else {
	              o[m][a].value = v;
	            }
	          } else {
	            o[m][a] = v;
	          }
	        }
	      };
	      checkFont = function(o, a, v) {
	        var m;
	        if (validObject(o)) {
	          if (starting) {
	            for (m in o) {
	              checkValue(o, a, m, v);
	            }
	          } else if ("font" in o) {
	            checkValue(o, a, "font", v);
	          }
	          starting = false;
	          for (m in o) {
	            checkFont(o[m], a, v);
	          }
	        }
	      };
	      for (fontAttr in user) {
	        fontAttrValue = user[fontAttr];
	        if (fontAttr !== "secondary") {
	          if (validObject(fontAttrValue)) {
	            fontAttrValue = fontAttrValue.value;
	          }
	          if (fontAttrValue) {
	            checkFont(vars, fontAttr, fontAttrValue);
	          }
	        }
	      }
	    }
	    checkObject(vars, key, vars, key, user);
	    if (typeof callback === "function") {
	      vars[key].callback = callback;
	    }
	    if (vars[key].chainable === false) {
	      return vars[key].value;
	    } else {
	      return vars.self;
	    }
	  };
	};
	
	checkObject = function(vars, method, object, key, value) {
	  var approvedObject, d, objectOnly, passingObject;
	  if (["accepted", "changed", "initialized", "previous", "process"].indexOf(key) < 0) {
	    passingObject = validObject(value);
	    objectOnly = validObject(object[key]) && "objectAccess" in object[key] && object[key]["objectAccess"] === false;
	    approvedObject = passingObject && (objectOnly || ((!("value" in value)) && ((!validObject(object[key])) || (!(d3.keys(value)[0] in object[key])))));
	    if (value === null || !passingObject || approvedObject) {
	      setMethod(vars, method, object, key, value);
	    } else if (passingObject) {
	      for (d in value) {
	        checkObject(vars, method, object[key], d, value[d]);
	      }
	    }
	  }
	};


/***/ },
/* 87 */
/***/ function(module, exports) {

	module.exports = function(value, self) {
	  var i, j, k, l, len, len1, len2, len3, m, results, side, sides, v;
	  if (typeof value === "string") {
	    value = value.split(" ");
	    for (i = j = 0, len = value.length; j < len; i = ++j) {
	      v = value[i];
	      value[i] = parseFloat(v, 10);
	    }
	    if (value.length === 1) {
	      value = value[0];
	    } else if (value.length === 2) {
	      value = {
	        top: value[0],
	        right: value[1],
	        bottom: value[0],
	        left: value[1]
	      };
	    } else if (value.length === 3) {
	      value = {
	        top: value[0],
	        right: value[1],
	        bottom: value[2],
	        left: value[1]
	      };
	    } else if (value.length === 4) {
	      value = {
	        top: value[0],
	        right: value[1],
	        bottom: value[2],
	        left: value[3]
	      };
	    } else {
	      value = 0;
	    }
	  }
	  sides = ["top", "right", "bottom", "left"];
	  if (typeof value === "number") {
	    for (k = 0, len1 = sides.length; k < len1; k++) {
	      side = sides[k];
	      self[side] = value;
	    }
	  } else {
	    for (l = 0, len2 = sides.length; l < len2; l++) {
	      side = sides[l];
	      self[side] = value[side];
	    }
	  }
	  self.css = "";
	  results = [];
	  for (i = m = 0, len3 = sides.length; m < len3; i = ++m) {
	    side = sides[i];
	    if (i) {
	      self.css += " ";
	    }
	    results.push(self.css += self[side] + "px");
	  }
	  return results;
	};


/***/ },
/* 88 */
/***/ function(module, exports) {

	module.exports = function(rendering) {
	  var accepted;
	  accepted = ["auto", "optimizeSpeed", "crispEdges", "geometricPrecision"];
	  if (!(accepted.indexOf(rendering) >= 0)) {
	    rendering = "crispEdges";
	  }
	  return {
	    accepted: accepted,
	    value: rendering
	  };
	};


/***/ },
/* 89 */
/***/ function(module, exports, __webpack_require__) {

	var offset;
	
	offset = __webpack_require__(67);
	
	module.exports = function(path) {
	  var angle, i, j, last, len, length, o, obtuse, p, poly, prev, radius, segments, start, step, width;
	  if (!path) {
	    return [];
	  }
	  path = path.slice(1).slice(0, -1).split(/L|A/);
	  poly = [];
	  for (j = 0, len = path.length; j < len; j++) {
	    p = path[j];
	    p = p.split(" ");
	    if (p.length === 1) {
	      poly.push(p[0].split(",").map(function(d) {
	        return parseFloat(d);
	      }));
	    } else {
	      prev = poly[poly.length - 1];
	      last = p.pop().split(",").map(function(d) {
	        return parseFloat(d);
	      });
	      radius = parseFloat(p.shift().split(",")[0]);
	      width = Math.sqrt(Math.pow(last[0] - prev[0], 2) + Math.pow(last[1] - prev[1], 2));
	      angle = Math.acos((radius * radius + radius * radius - width * width) / (2 * radius * radius));
	      obtuse = p[1].split(",")[0] === "1";
	      if (obtuse) {
	        angle = Math.PI * 2 - angle;
	      }
	      length = angle / (Math.PI * 2) * (radius * Math.PI * 2);
	      segments = length / 5;
	      start = Math.atan2(-prev[1], -prev[0]) - Math.PI;
	      step = angle / segments;
	      i = step;
	      while (i < angle) {
	        o = offset(start + i, radius);
	        poly.push([o.x, o.y]);
	        i += step;
	      }
	      poly.push(last);
	    }
	  }
	  return poly;
	};


/***/ },
/* 90 */
/***/ function(module, exports) {

	module.exports = function(n1, n2) {
	  var xx, yy;
	  if (!(n1 instanceof Array)) {
	    n1 = [n1.x, n1.y];
	  }
	  if (!(n2 instanceof Array)) {
	    n2 = [n2.x, n2.y];
	  }
	  xx = Math.abs(n1[0] - n2[0]);
	  yy = Math.abs(n1[1] - n2[1]);
	  return Math.sqrt((xx * xx) + (yy * yy));
	};


/***/ },
/* 91 */
/***/ function(module, exports, __webpack_require__) {

	var distance;
	
	distance = __webpack_require__(90);
	
	module.exports = function(arr, opts) {
	  var distances, quad;
	  if (!opts) {
	    opts = {};
	  }
	  distances = [];
	  quad = d3.geom.quadtree().x(function(d) {
	    if (opts.accessor) {
	      return opts.accessor(d)[0];
	    } else {
	      return d[0];
	    }
	  }).y(function(d) {
	    if (opts.accessor) {
	      return opts.accessor(d)[1];
	    } else {
	      return d[1];
	    }
	  });
	  quad(arr).visit(function(node) {
	    var i, j, len, len1, n1, n2, ref, ref1;
	    if (!node.leaf) {
	      ref = node.nodes;
	      for (i = 0, len = ref.length; i < len; i++) {
	        n1 = ref[i];
	        if (n1 && n1.point) {
	          if (opts.origin) {
	            distances.push(distance(n1, opts));
	          } else {
	            ref1 = node.nodes;
	            for (j = 0, len1 = ref1.length; j < len1; j++) {
	              n2 = ref1[j];
	              if (n2 && n2.point && n2.point !== n1.point) {
	                distances.push(distance(n1, n2));
	              }
	            }
	          }
	        }
	      }
	    }
	    return false;
	  });
	  if (opts.all) {
	    return distances.sort(function(aa, bb) {
	      return aa - bb;
	    });
	  } else {
	    return d3.min(distances);
	  }
	};


/***/ },
/* 92 */
/***/ function(module, exports, __webpack_require__) {

	var defaultLocale;
	
	defaultLocale = __webpack_require__(53);
	
	module.exports = function(number, opts) {
	  var affixes, format, key, labels, length, locale, ret, sigs, symbol, time, vars, zeros;
	  if (!opts) {
	    opts = {};
	  }
	  if ("locale" in opts) {
	    locale = opts.locale;
	  } else {
	    locale = defaultLocale;
	  }
	  time = locale.time.slice();
	  format = d3.locale(locale.format);
	  if (!opts) {
	    opts = {};
	  }
	  vars = opts.vars || {};
	  key = opts.key;
	  labels = "labels" in opts ? opts.labels : true;
	  length = number.toString().split(".")[0].length;
	  if (vars.time && vars.time.value) {
	    time.push(vars.time.value);
	  }
	  if (typeof key === "string" && time.indexOf(key.toLowerCase()) >= 0) {
	    ret = number;
	  } else if (key === "share") {
	    if (number === 0) {
	      ret = 0;
	    } else if (number >= 100) {
	      ret = format.numberFormat(",f")(number);
	    } else if (number > 99) {
	      ret = format.numberFormat(".3g")(number);
	    } else {
	      ret = format.numberFormat(".2g")(number);
	    }
	    ret += "%";
	  } else if (number < 10 && number > -10) {
	    length = number.toString().split(".");
	    sigs = 1;
	    if (length.length > 1) {
	      sigs = d3.min([parseFloat(length[1]).toString().length, 2]);
	      if (!((-1 < number && number < 1))) {
	        zeros = length[1].length - parseFloat(length[1]).toString().length;
	        sigs += 1 + zeros;
	      }
	    }
	    ret = format.numberFormat("." + sigs + "g")(number);
	  } else if (length > 3) {
	    symbol = d3.formatPrefix(number).symbol;
	    symbol = symbol.replace("G", "B");
	    number = d3.formatPrefix(number).scale(number);
	    number = format.numberFormat(".3g")(number);
	    number = number.replace(locale.format.decimal, ".");
	    number = parseFloat(number) + "";
	    number = number.replace(".", locale.format.decimal);
	    ret = number + symbol;
	  } else if (length === 3) {
	    ret = format.numberFormat(",f")(number);
	  } else if (number === 0) {
	    ret = 0;
	  } else {
	    if (number === parseInt(number, 10)) {
	      ret = format.numberFormat(".2")(number);
	    } else {
	      ret = format.numberFormat(".3g")(number);
	    }
	  }
	  if (ret.length > 2 && "" + ret.indexOf(".0") === ret.length - 2) {
	    ret = ret.slice(0, ret.length - 2);
	  }
	  if (labels && key && "format" in vars && key in vars.format.affixes.value) {
	    affixes = vars.format.affixes.value[key];
	    return affixes[0] + ret + affixes[1];
	  } else {
	    return ret;
	  }
	};


/***/ },
/* 93 */
/***/ function(module, exports, __webpack_require__) {

	var d3selection;
	
	d3selection = __webpack_require__(31);
	
	module.exports = function(parent, child) {
	  var node;
	  if (!parent || !child) {
	    return false;
	  }
	  if (d3selection(parent)) {
	    parent = parent.node();
	  }
	  if (d3selection(parent)) {
	    child = child.node();
	  }
	  node = child.parentNode;
	  while (node !== null) {
	    if (node === parent) {
	      return true;
	    }
	    node = node.parentNode;
	  }
	  return false;
	};


/***/ },
/* 94 */
/***/ function(module, exports, __webpack_require__) {

	var print;
	
	print = __webpack_require__(2);
	
	module.exports = function(vars) {
	  var opacity, scale;
	  if (vars.dev.value) {
	    print.time("determining label visibility");
	  }
	  scale = vars.zoom.behavior.scaleExtent();
	  opacity = function(text) {
	    return text.attr("opacity", function(d) {
	      var size;
	      if (!d) {
	        d = {};
	      }
	      size = parseFloat(d3.select(this).attr("font-size"), 10);
	      d.visible = size * (vars.zoom.scale / scale[1]) >= 2;
	      if (d.visible) {
	        return 1;
	      } else {
	        return 0;
	      }
	    });
	  };
	  if (vars.draw.timing) {
	    vars.g.viz.selectAll("text.d3plus_label").transition().duration(vars.draw.timing).call(opacity);
	  } else {
	    vars.g.viz.selectAll("text.d3plus_label").call(opacity);
	  }
	  if (vars.dev.value) {
	    return print.timeEnd("determining label visibility");
	  }
	};


/***/ },
/* 95 */
/***/ function(module, exports, __webpack_require__) {

	var fetchValue, stringStrip, uniqueValues;
	
	fetchValue = __webpack_require__(3);
	
	stringStrip = __webpack_require__(33);
	
	uniqueValues = __webpack_require__(8);
	
	module.exports = function(vars, data, keys) {
	  var discrete, extras, key, opposite, serialized, ticks, timeAxis;
	  if (keys === void 0) {
	    keys = vars.id.nesting.slice(0, vars.depth.value + 1);
	  } else if (keys.constructor !== Array) {
	    keys = [keys];
	  }
	  if (extras === void 0) {
	    extras = [];
	  }
	  if (!data) {
	    data = vars.data.viz;
	  }
	  discrete = vars[vars.axes.discrete];
	  opposite = vars[vars.axes.opposite];
	  timeAxis = discrete.value === vars.time.value;
	  if (timeAxis) {
	    ticks = vars.data.time.ticks;
	    key = vars.time.solo.value.length ? "solo" : "mute";
	    if (vars.time[key].value.length) {
	      serialized = vars.time[key].value.slice().map(function(f) {
	        if (f.constructor !== Date) {
	          f = f + "";
	          if (f.length === 4 && parseInt(f) + "" === f) {
	            f += "/01/01";
	          }
	          f = new Date(f);
	        }
	        return +f;
	      });
	      ticks = ticks.filter(function(f) {
	        if (key === "solo") {
	          return serialized.indexOf(+f) >= 0;
	        } else {
	          return serialized.indexOf(+f) < 0;
	        }
	      });
	    }
	  } else if (discrete.ticks.values) {
	    ticks = discrete.ticks.values;
	  } else {
	    ticks = uniqueValues(data, discrete.value, fetchValue, vars);
	  }
	  return d3.nest().key(function(d) {
	    var id, j, len, return_id, val;
	    return_id = "nesting";
	    for (j = 0, len = keys.length; j < len; j++) {
	      id = keys[j];
	      val = fetchValue(vars, d, id);
	      if (val instanceof Array) {
	        val = val.join("_");
	      }
	      return_id += "_" + stringStrip(val);
	    }
	    return return_id;
	  }).rollup(function(leaves) {
	    var availables, filler, i, j, k, len, len1, obj, ref, tester, tick, timeVar;
	    availables = uniqueValues(leaves, discrete.value, fetchValue, vars);
	    timeVar = availables.length && availables[0].constructor === Date;
	    if (timeVar) {
	      availables = availables.map(Number);
	    }
	    if (discrete.zerofill.value) {
	      if (discrete.scale.value === "log") {
	        if (opposite.scale.viz.domain().every(function(d) {
	          return d < 0;
	        })) {
	          filler = -1;
	        } else {
	          filler = 1;
	        }
	      } else {
	        filler = 0;
	      }
	      for (i = j = 0, len = ticks.length; j < len; i = ++j) {
	        tick = ticks[i];
	        tester = timeAxis ? +tick : tick;
	        if (availables.indexOf(tester) < 0) {
	          obj = {
	            d3plus: {}
	          };
	          ref = vars.id.nesting;
	          for (k = 0, len1 = ref.length; k < len1; k++) {
	            key = ref[k];
	            if (key in leaves[0]) {
	              obj[key] = leaves[0][key];
	            }
	          }
	          obj[discrete.value] = tick;
	          obj[opposite.value] = 0;
	          obj[opposite.value] = filler;
	          leaves.splice(i, 0, obj);
	        }
	      }
	    }
	    if (typeof leaves[0][discrete.value] === "string") {
	      return leaves;
	    } else {
	      return leaves.sort(function(a, b) {
	        var ad, ao, bd, bo, xsort;
	        ad = fetchValue(vars, a, discrete.value);
	        bd = fetchValue(vars, b, discrete.value);
	        xsort = ad - bd;
	        if (xsort) {
	          return xsort;
	        }
	        ao = fetchValue(vars, a, opposite.value);
	        bo = fetchValue(vars, b, opposite.value);
	        return ao - bo;
	      });
	    }
	  }).entries(data);
	};


/***/ },
/* 96 */
/***/ function(module, exports, __webpack_require__) {

	var fetchValue;
	
	fetchValue = __webpack_require__(3);
	
	module.exports = function(vars, data) {
	  var d, flip, i, j, len, len1, margin, neg, negativeData, offset, opposite, positiveData, scale, stack, stacked, v, val;
	  stacked = vars.axes.stacked || vars.axes.opposite;
	  flip = vars[stacked].scale.viz(0);
	  scale = vars[stacked].scale.value;
	  opposite = stacked === "x" ? "y" : "x";
	  margin = stacked === "y" ? vars.axes.margin.top : vars.axes.margin.left;
	  offset = scale === "share" ? "expand" : "zero";
	  stack = d3.layout.stack().values(function(d) {
	    return d.values || [d];
	  }).offset(offset).x(function(d) {
	    return d.d3plus[opposite];
	  }).y(function(d) {
	    return flip - vars[stacked].scale.viz(fetchValue(vars, d, vars[stacked].value));
	  }).out(function(d, y0, y) {
	    var negative, value;
	    value = fetchValue(vars, d, vars[stacked].value);
	    negative = value < 0;
	    if (scale === "share") {
	      d.d3plus[stacked + "0"] = (1 - y0) * flip;
	      d.d3plus[stacked] = d.d3plus[stacked + "0"] - (y * flip);
	    } else {
	      d.d3plus[stacked + "0"] = flip;
	      if (vars.axes.stacked) {
	        d.d3plus[stacked + "0"] -= y0;
	      }
	      d.d3plus[stacked] = d.d3plus[stacked + "0"] - y;
	    }
	    d.d3plus[stacked] += margin;
	    return d.d3plus[stacked + "0"] += margin;
	  });
	  positiveData = [];
	  negativeData = [];
	  for (i = 0, len = data.length; i < len; i++) {
	    d = data[i];
	    val = fetchValue(vars, d, vars[stacked].value);
	    if (val instanceof Array) {
	      neg = true;
	      for (j = 0, len1 = val.length; j < len1; j++) {
	        v = val[j];
	        if (v >= 0) {
	          neg = false;
	          break;
	        }
	      }
	      if (neg) {
	        negativeData.push(d);
	      } else {
	        positiveData.push(d);
	      }
	    } else {
	      if (val >= 0) {
	        positiveData.push(d);
	      }
	      if (val < 0) {
	        negativeData.push(d);
	      }
	    }
	  }
	  if (positiveData.length === 0 || negativeData.length === 0) {
	    return stack(data);
	  } else {
	    if (positiveData.length) {
	      positiveData = stack(positiveData);
	    }
	    if (negativeData.length) {
	      negativeData = stack(negativeData);
	    }
	    return positiveData.concat(negativeData);
	  }
	};


/***/ },
/* 97 */
/***/ function(module, exports, __webpack_require__) {

	var iota = __webpack_require__(358)
	var isBuffer = __webpack_require__(359)
	
	var hasTypedArrays  = ((typeof Float64Array) !== "undefined")
	
	function compare1st(a, b) {
	  return a[0] - b[0]
	}
	
	function order() {
	  var stride = this.stride
	  var terms = new Array(stride.length)
	  var i
	  for(i=0; i<terms.length; ++i) {
	    terms[i] = [Math.abs(stride[i]), i]
	  }
	  terms.sort(compare1st)
	  var result = new Array(terms.length)
	  for(i=0; i<result.length; ++i) {
	    result[i] = terms[i][1]
	  }
	  return result
	}
	
	function compileConstructor(dtype, dimension) {
	  var className = ["View", dimension, "d", dtype].join("")
	  if(dimension < 0) {
	    className = "View_Nil" + dtype
	  }
	  var useGetters = (dtype === "generic")
	
	  if(dimension === -1) {
	    //Special case for trivial arrays
	    var code =
	      "function "+className+"(a){this.data=a;};\
	var proto="+className+".prototype;\
	proto.dtype='"+dtype+"';\
	proto.index=function(){return -1};\
	proto.size=0;\
	proto.dimension=-1;\
	proto.shape=proto.stride=proto.order=[];\
	proto.lo=proto.hi=proto.transpose=proto.step=\
	function(){return new "+className+"(this.data);};\
	proto.get=proto.set=function(){};\
	proto.pick=function(){return null};\
	return function construct_"+className+"(a){return new "+className+"(a);}"
	    var procedure = new Function(code)
	    return procedure()
	  } else if(dimension === 0) {
	    //Special case for 0d arrays
	    var code =
	      "function "+className+"(a,d) {\
	this.data = a;\
	this.offset = d\
	};\
	var proto="+className+".prototype;\
	proto.dtype='"+dtype+"';\
	proto.index=function(){return this.offset};\
	proto.dimension=0;\
	proto.size=1;\
	proto.shape=\
	proto.stride=\
	proto.order=[];\
	proto.lo=\
	proto.hi=\
	proto.transpose=\
	proto.step=function "+className+"_copy() {\
	return new "+className+"(this.data,this.offset)\
	};\
	proto.pick=function "+className+"_pick(){\
	return TrivialArray(this.data);\
	};\
	proto.valueOf=proto.get=function "+className+"_get(){\
	return "+(useGetters ? "this.data.get(this.offset)" : "this.data[this.offset]")+
	"};\
	proto.set=function "+className+"_set(v){\
	return "+(useGetters ? "this.data.set(this.offset,v)" : "this.data[this.offset]=v")+"\
	};\
	return function construct_"+className+"(a,b,c,d){return new "+className+"(a,d)}"
	    var procedure = new Function("TrivialArray", code)
	    return procedure(CACHED_CONSTRUCTORS[dtype][0])
	  }
	
	  var code = ["'use strict'"]
	
	  //Create constructor for view
	  var indices = iota(dimension)
	  var args = indices.map(function(i) { return "i"+i })
	  var index_str = "this.offset+" + indices.map(function(i) {
	        return "this.stride[" + i + "]*i" + i
	      }).join("+")
	  var shapeArg = indices.map(function(i) {
	      return "b"+i
	    }).join(",")
	  var strideArg = indices.map(function(i) {
	      return "c"+i
	    }).join(",")
	  code.push(
	    "function "+className+"(a," + shapeArg + "," + strideArg + ",d){this.data=a",
	      "this.shape=[" + shapeArg + "]",
	      "this.stride=[" + strideArg + "]",
	      "this.offset=d|0}",
	    "var proto="+className+".prototype",
	    "proto.dtype='"+dtype+"'",
	    "proto.dimension="+dimension)
	
	  //view.size:
	  code.push("Object.defineProperty(proto,'size',{get:function "+className+"_size(){\
	return "+indices.map(function(i) { return "this.shape["+i+"]" }).join("*"),
	"}})")
	
	  //view.order:
	  if(dimension === 1) {
	    code.push("proto.order=[0]")
	  } else {
	    code.push("Object.defineProperty(proto,'order',{get:")
	    if(dimension < 4) {
	      code.push("function "+className+"_order(){")
	      if(dimension === 2) {
	        code.push("return (Math.abs(this.stride[0])>Math.abs(this.stride[1]))?[1,0]:[0,1]}})")
	      } else if(dimension === 3) {
	        code.push(
	"var s0=Math.abs(this.stride[0]),s1=Math.abs(this.stride[1]),s2=Math.abs(this.stride[2]);\
	if(s0>s1){\
	if(s1>s2){\
	return [2,1,0];\
	}else if(s0>s2){\
	return [1,2,0];\
	}else{\
	return [1,0,2];\
	}\
	}else if(s0>s2){\
	return [2,0,1];\
	}else if(s2>s1){\
	return [0,1,2];\
	}else{\
	return [0,2,1];\
	}}})")
	      }
	    } else {
	      code.push("ORDER})")
	    }
	  }
	
	  //view.set(i0, ..., v):
	  code.push(
	"proto.set=function "+className+"_set("+args.join(",")+",v){")
	  if(useGetters) {
	    code.push("return this.data.set("+index_str+",v)}")
	  } else {
	    code.push("return this.data["+index_str+"]=v}")
	  }
	
	  //view.get(i0, ...):
	  code.push("proto.get=function "+className+"_get("+args.join(",")+"){")
	  if(useGetters) {
	    code.push("return this.data.get("+index_str+")}")
	  } else {
	    code.push("return this.data["+index_str+"]}")
	  }
	
	  //view.index:
	  code.push(
	    "proto.index=function "+className+"_index(", args.join(), "){return "+index_str+"}")
	
	  //view.hi():
	  code.push("proto.hi=function "+className+"_hi("+args.join(",")+"){return new "+className+"(this.data,"+
	    indices.map(function(i) {
	      return ["(typeof i",i,"!=='number'||i",i,"<0)?this.shape[", i, "]:i", i,"|0"].join("")
	    }).join(",")+","+
	    indices.map(function(i) {
	      return "this.stride["+i + "]"
	    }).join(",")+",this.offset)}")
	
	  //view.lo():
	  var a_vars = indices.map(function(i) { return "a"+i+"=this.shape["+i+"]" })
	  var c_vars = indices.map(function(i) { return "c"+i+"=this.stride["+i+"]" })
	  code.push("proto.lo=function "+className+"_lo("+args.join(",")+"){var b=this.offset,d=0,"+a_vars.join(",")+","+c_vars.join(","))
	  for(var i=0; i<dimension; ++i) {
	    code.push(
	"if(typeof i"+i+"==='number'&&i"+i+">=0){\
	d=i"+i+"|0;\
	b+=c"+i+"*d;\
	a"+i+"-=d}")
	  }
	  code.push("return new "+className+"(this.data,"+
	    indices.map(function(i) {
	      return "a"+i
	    }).join(",")+","+
	    indices.map(function(i) {
	      return "c"+i
	    }).join(",")+",b)}")
	
	  //view.step():
	  code.push("proto.step=function "+className+"_step("+args.join(",")+"){var "+
	    indices.map(function(i) {
	      return "a"+i+"=this.shape["+i+"]"
	    }).join(",")+","+
	    indices.map(function(i) {
	      return "b"+i+"=this.stride["+i+"]"
	    }).join(",")+",c=this.offset,d=0,ceil=Math.ceil")
	  for(var i=0; i<dimension; ++i) {
	    code.push(
	"if(typeof i"+i+"==='number'){\
	d=i"+i+"|0;\
	if(d<0){\
	c+=b"+i+"*(a"+i+"-1);\
	a"+i+"=ceil(-a"+i+"/d)\
	}else{\
	a"+i+"=ceil(a"+i+"/d)\
	}\
	b"+i+"*=d\
	}")
	  }
	  code.push("return new "+className+"(this.data,"+
	    indices.map(function(i) {
	      return "a" + i
	    }).join(",")+","+
	    indices.map(function(i) {
	      return "b" + i
	    }).join(",")+",c)}")
	
	  //view.transpose():
	  var tShape = new Array(dimension)
	  var tStride = new Array(dimension)
	  for(var i=0; i<dimension; ++i) {
	    tShape[i] = "a[i"+i+"]"
	    tStride[i] = "b[i"+i+"]"
	  }
	  code.push("proto.transpose=function "+className+"_transpose("+args+"){"+
	    args.map(function(n,idx) { return n + "=(" + n + "===undefined?" + idx + ":" + n + "|0)"}).join(";"),
	    "var a=this.shape,b=this.stride;return new "+className+"(this.data,"+tShape.join(",")+","+tStride.join(",")+",this.offset)}")
	
	  //view.pick():
	  code.push("proto.pick=function "+className+"_pick("+args+"){var a=[],b=[],c=this.offset")
	  for(var i=0; i<dimension; ++i) {
	    code.push("if(typeof i"+i+"==='number'&&i"+i+">=0){c=(c+this.stride["+i+"]*i"+i+")|0}else{a.push(this.shape["+i+"]);b.push(this.stride["+i+"])}")
	  }
	  code.push("var ctor=CTOR_LIST[a.length+1];return ctor(this.data,a,b,c)}")
	
	  //Add return statement
	  code.push("return function construct_"+className+"(data,shape,stride,offset){return new "+className+"(data,"+
	    indices.map(function(i) {
	      return "shape["+i+"]"
	    }).join(",")+","+
	    indices.map(function(i) {
	      return "stride["+i+"]"
	    }).join(",")+",offset)}")
	
	  //Compile procedure
	  var procedure = new Function("CTOR_LIST", "ORDER", code.join("\n"))
	  return procedure(CACHED_CONSTRUCTORS[dtype], order)
	}
	
	function arrayDType(data) {
	  if(isBuffer(data)) {
	    return "buffer"
	  }
	  if(hasTypedArrays) {
	    switch(Object.prototype.toString.call(data)) {
	      case "[object Float64Array]":
	        return "float64"
	      case "[object Float32Array]":
	        return "float32"
	      case "[object Int8Array]":
	        return "int8"
	      case "[object Int16Array]":
	        return "int16"
	      case "[object Int32Array]":
	        return "int32"
	      case "[object Uint8Array]":
	        return "uint8"
	      case "[object Uint16Array]":
	        return "uint16"
	      case "[object Uint32Array]":
	        return "uint32"
	      case "[object Uint8ClampedArray]":
	        return "uint8_clamped"
	    }
	  }
	  if(Array.isArray(data)) {
	    return "array"
	  }
	  return "generic"
	}
	
	var CACHED_CONSTRUCTORS = {
	  "float32":[],
	  "float64":[],
	  "int8":[],
	  "int16":[],
	  "int32":[],
	  "uint8":[],
	  "uint16":[],
	  "uint32":[],
	  "array":[],
	  "uint8_clamped":[],
	  "buffer":[],
	  "generic":[]
	}
	
	;(function() {
	  for(var id in CACHED_CONSTRUCTORS) {
	    CACHED_CONSTRUCTORS[id].push(compileConstructor(id, -1))
	  }
	});
	
	function wrappedNDArrayCtor(data, shape, stride, offset) {
	  if(data === undefined) {
	    var ctor = CACHED_CONSTRUCTORS.array[0]
	    return ctor([])
	  } else if(typeof data === "number") {
	    data = [data]
	  }
	  if(shape === undefined) {
	    shape = [ data.length ]
	  }
	  var d = shape.length
	  if(stride === undefined) {
	    stride = new Array(d)
	    for(var i=d-1, sz=1; i>=0; --i) {
	      stride[i] = sz
	      sz *= shape[i]
	    }
	  }
	  if(offset === undefined) {
	    offset = 0
	    for(var i=0; i<d; ++i) {
	      if(stride[i] < 0) {
	        offset -= (shape[i]-1)*stride[i]
	      }
	    }
	  }
	  var dtype = arrayDType(data)
	  var ctor_list = CACHED_CONSTRUCTORS[dtype]
	  while(ctor_list.length <= d+1) {
	    ctor_list.push(compileConstructor(dtype, ctor_list.length-1))
	  }
	  var ctor = ctor_list[d+1]
	  return ctor(data, shape, stride, offset)
	}
	
	module.exports = wrappedNDArrayCtor


/***/ },
/* 98 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global, Buffer) {'use strict'
	
	var bits = __webpack_require__(142)
	var dup = __webpack_require__(360)
	
	//Legacy pool support
	if(!global.__TYPEDARRAY_POOL) {
	  global.__TYPEDARRAY_POOL = {
	      UINT8   : dup([32, 0])
	    , UINT16  : dup([32, 0])
	    , UINT32  : dup([32, 0])
	    , INT8    : dup([32, 0])
	    , INT16   : dup([32, 0])
	    , INT32   : dup([32, 0])
	    , FLOAT   : dup([32, 0])
	    , DOUBLE  : dup([32, 0])
	    , DATA    : dup([32, 0])
	    , UINT8C  : dup([32, 0])
	    , BUFFER  : dup([32, 0])
	  }
	}
	
	var hasUint8C = (typeof Uint8ClampedArray) !== 'undefined'
	var POOL = global.__TYPEDARRAY_POOL
	
	//Upgrade pool
	if(!POOL.UINT8C) {
	  POOL.UINT8C = dup([32, 0])
	}
	if(!POOL.BUFFER) {
	  POOL.BUFFER = dup([32, 0])
	}
	
	//New technique: Only allocate from ArrayBufferView and Buffer
	var DATA    = POOL.DATA
	  , BUFFER  = POOL.BUFFER
	
	exports.free = function free(array) {
	  if(Buffer.isBuffer(array)) {
	    BUFFER[bits.log2(array.length)].push(array)
	  } else {
	    if(Object.prototype.toString.call(array) !== '[object ArrayBuffer]') {
	      array = array.buffer
	    }
	    if(!array) {
	      return
	    }
	    var n = array.length || array.byteLength
	    var log_n = bits.log2(n)|0
	    DATA[log_n].push(array)
	  }
	}
	
	function freeArrayBuffer(buffer) {
	  if(!buffer) {
	    return
	  }
	  var n = buffer.length || buffer.byteLength
	  var log_n = bits.log2(n)
	  DATA[log_n].push(buffer)
	}
	
	function freeTypedArray(array) {
	  freeArrayBuffer(array.buffer)
	}
	
	exports.freeUint8 =
	exports.freeUint16 =
	exports.freeUint32 =
	exports.freeInt8 =
	exports.freeInt16 =
	exports.freeInt32 =
	exports.freeFloat32 = 
	exports.freeFloat =
	exports.freeFloat64 = 
	exports.freeDouble = 
	exports.freeUint8Clamped = 
	exports.freeDataView = freeTypedArray
	
	exports.freeArrayBuffer = freeArrayBuffer
	
	exports.freeBuffer = function freeBuffer(array) {
	  BUFFER[bits.log2(array.length)].push(array)
	}
	
	exports.malloc = function malloc(n, dtype) {
	  if(dtype === undefined || dtype === 'arraybuffer') {
	    return mallocArrayBuffer(n)
	  } else {
	    switch(dtype) {
	      case 'uint8':
	        return mallocUint8(n)
	      case 'uint16':
	        return mallocUint16(n)
	      case 'uint32':
	        return mallocUint32(n)
	      case 'int8':
	        return mallocInt8(n)
	      case 'int16':
	        return mallocInt16(n)
	      case 'int32':
	        return mallocInt32(n)
	      case 'float':
	      case 'float32':
	        return mallocFloat(n)
	      case 'double':
	      case 'float64':
	        return mallocDouble(n)
	      case 'uint8_clamped':
	        return mallocUint8Clamped(n)
	      case 'buffer':
	        return mallocBuffer(n)
	      case 'data':
	      case 'dataview':
	        return mallocDataView(n)
	
	      default:
	        return null
	    }
	  }
	  return null
	}
	
	function mallocArrayBuffer(n) {
	  var n = bits.nextPow2(n)
	  var log_n = bits.log2(n)
	  var d = DATA[log_n]
	  if(d.length > 0) {
	    return d.pop()
	  }
	  return new ArrayBuffer(n)
	}
	exports.mallocArrayBuffer = mallocArrayBuffer
	
	function mallocUint8(n) {
	  return new Uint8Array(mallocArrayBuffer(n), 0, n)
	}
	exports.mallocUint8 = mallocUint8
	
	function mallocUint16(n) {
	  return new Uint16Array(mallocArrayBuffer(2*n), 0, n)
	}
	exports.mallocUint16 = mallocUint16
	
	function mallocUint32(n) {
	  return new Uint32Array(mallocArrayBuffer(4*n), 0, n)
	}
	exports.mallocUint32 = mallocUint32
	
	function mallocInt8(n) {
	  return new Int8Array(mallocArrayBuffer(n), 0, n)
	}
	exports.mallocInt8 = mallocInt8
	
	function mallocInt16(n) {
	  return new Int16Array(mallocArrayBuffer(2*n), 0, n)
	}
	exports.mallocInt16 = mallocInt16
	
	function mallocInt32(n) {
	  return new Int32Array(mallocArrayBuffer(4*n), 0, n)
	}
	exports.mallocInt32 = mallocInt32
	
	function mallocFloat(n) {
	  return new Float32Array(mallocArrayBuffer(4*n), 0, n)
	}
	exports.mallocFloat32 = exports.mallocFloat = mallocFloat
	
	function mallocDouble(n) {
	  return new Float64Array(mallocArrayBuffer(8*n), 0, n)
	}
	exports.mallocFloat64 = exports.mallocDouble = mallocDouble
	
	function mallocUint8Clamped(n) {
	  if(hasUint8C) {
	    return new Uint8ClampedArray(mallocArrayBuffer(n), 0, n)
	  } else {
	    return mallocUint8(n)
	  }
	}
	exports.mallocUint8Clamped = mallocUint8Clamped
	
	function mallocDataView(n) {
	  return new DataView(mallocArrayBuffer(n), 0, n)
	}
	exports.mallocDataView = mallocDataView
	
	function mallocBuffer(n) {
	  n = bits.nextPow2(n)
	  var log_n = bits.log2(n)
	  var cache = BUFFER[log_n]
	  if(cache.length > 0) {
	    return cache.pop()
	  }
	  return new Buffer(n)
	}
	exports.mallocBuffer = mallocBuffer
	
	exports.clearCache = function clearCache() {
	  for(var i=0; i<32; ++i) {
	    POOL.UINT8[i].length = 0
	    POOL.UINT16[i].length = 0
	    POOL.UINT32[i].length = 0
	    POOL.INT8[i].length = 0
	    POOL.INT16[i].length = 0
	    POOL.INT32[i].length = 0
	    POOL.FLOAT[i].length = 0
	    POOL.DOUBLE[i].length = 0
	    POOL.UINT8C[i].length = 0
	    DATA[i].length = 0
	    BUFFER[i].length = 0
	  }
	}
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(186).Buffer))

/***/ },
/* 99 */
/***/ function(module, exports, __webpack_require__) {

	var dataFilter = __webpack_require__(363),
	    dataNest     = __webpack_require__(59),
	    print        = __webpack_require__(2),
	    stringFormat = __webpack_require__(14),
	    stringList   = __webpack_require__(46);
	
	//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	// Fetches specific years of data
	//-------------------------------------------------------------------
	module.exports = function(vars, years, depth) {
	
	  if (!vars.data.value) return [];
	
	  if (depth === undefined) depth = vars.depth.value;
	  var nestLevel = vars.id.nesting[depth];
	
	  if (years && !(years instanceof Array)) years = [years];
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // If "years" have not been requested, determine the years using .time()
	  // solo and mute
	  //----------------------------------------------------------------------------
	  if (!years && "time" in vars) {
	
	    years = [];
	
	    var key = vars.time.solo.value.length ? "solo" : "mute",
	        filterList = vars.time[key].value;
	
	    if (filterList.length) {
	
	      years = [];
	      for (var yi = 0; yi < filterList.length; yi++) {
	        var y = filterList[yi];
	
	        if (typeof y === "function") {
	          for (var ti = 0; ti < vars.data.time.values.length; ti++) {
	            var ms = vars.data.time.values[ti].getTime();
	            if (y(ms)) years.push(ms);
	          }
	        }
	        else if (y.constructor === Date) {
	          years.push(new Date(y).getTime());
	        }
	        else {
	          y += "";
	          if (y.length === 4 && parseInt(y)+"" === y) y = y + "/01/01";
	          var d = new Date(y);
	          if (d !== "Invalid Date") {
	            // d.setTime(d.getTime() + d.getTimezoneOffset() * 60 * 1000);
	            years.push(d.getTime());
	          }
	        }
	
	      }
	
	      if ( key === "mute" ) {
	        years = vars.data.time.values.filter(function( t ){
	          return years.indexOf(t.getTime()) < 0;
	        });
	      }
	
	    }
	    else years.push("all");
	
	  }
	  else {
	    years = ["all"];
	  }
	
	  if (years.indexOf("all") >= 0 && vars.data.time.values.length) {
	    years = vars.data.time.values.slice(0);
	    for (var i = 0; i < years.length; i++) {
	      years[i] = years[i].getTime();
	    }
	  }
	
	  var cacheID = [ vars.type.value , nestLevel , depth ]
	                  .concat( vars.data.filters )
	                  .concat( years ),
	      filter  = vars.data.solo.length ? "solo" : "mute",
	      cacheKeys = d3.keys(vars.data.cache),
	      vizFilter = vars.types[vars.type.value].filter || undefined;
	
	  if ( vars.data[filter].length ) {
	    for (var di = 0; di < vars.data[filter].length; di++) {
	      var f = vars.data[filter][di];
	      var vals = vars[f][filter].value.slice(0);
	      vals.unshift(f);
	      vals.unshift(filter);
	      cacheID = cacheID.concat(vals);
	    }
	  }
	
	  if (vars.axes && vars.axes.discrete) cacheID.push(vars.axes.discrete);
	
	  cacheID = cacheID.join("_");
	  vars.data.cacheID = cacheID;
	
	  var match = false;
	
	  for (var c = 0 ; c < cacheKeys.length ; c++) {
	
	    var matchKey = cacheKeys[c].split("_").slice(1).join("_");
	
	    if ( matchKey === cacheID ) {
	      cacheID = new Date().getTime() + "_" + cacheID;
	      vars.data.cache[cacheID] = vars.data.cache[cacheKeys[c]];
	      delete vars.data.cache[cacheKeys[c]];
	      break;
	    }
	
	  }
	
	  var returnData;
	
	  if ( vars.data.cache[cacheID] ) {
	
	    if ( vars.dev.value ) print.comment("data already cached");
	
	    returnData = vars.data.cache[cacheID].data;
	    if ("nodes" in vars) {
	      vars.nodes.restricted = vars.data.cache[cacheID].nodes;
	      vars.edges.restricted = vars.data.cache[cacheID].edges;
	    }
	
	    if ( typeof vizFilter === "function" ) {
	      returnData = vizFilter( vars ,  returnData );
	    }
	
	    return returnData;
	
	  }
	  else {
	
	    var missing = [];
	    returnData = [];
	
	    if (vars.data.value && vars.data.value.length) {
	
	      for (var yz = 0; yz < years.length; yz++) {
	        var year = years[yz];
	        if (vars.data.nested[year]) {
	          returnData = returnData.concat(vars.data.nested[year][nestLevel]);
	        }
	        else {
	          missing.push(year);
	        }
	      }
	
	    }
	
	    if (returnData.length === 0 && missing.length && !vars.error.internal) {
	
	      if (missing.length > 1) {
	        missing = d3.extent(missing);
	      }
	
	      missing = missing.map(function(m){
	        return vars.data.time.format(new Date(m));
	      });
	      missing = missing.join(" - ");
	
	      var str = vars.format.locale.value.error.dataYear,
	          and = vars.format.locale.value.ui.and;
	      missing = stringList(missing,and);
	      vars.error.internal = stringFormat(str,missing);
	      vars.time.missing = true;
	
	    }
	    else {
	
	      if (vars.time) vars.time.missing = false;
	
	      if ( years.length > 1 ) {
	
	        var separated = false;
	        ["x", "y", "x2", "y2"].forEach(function(a){
	          if (vars[a].value === vars.time.value &&
	              vars[a].scale.value === "discrete" ) {
	            separated = true;
	          }
	        });
	
	        if (!separated) {
	          var nested = vars.id.nesting.slice(0,depth+1);
	          returnData = dataNest(vars, returnData, nested);
	        }
	
	      }
	
	      if (!returnData) {
	        returnData = [];
	      }
	      else {
	        returnData = dataFilter(vars, returnData);
	      }
	
	      if ( cacheKeys.length === 20 ) {
	        cacheKeys.sort();
	        delete vars.data.cache[cacheKeys[0]];
	      }
	
	      cacheID = new Date().getTime() + "_" + cacheID;
	      vars.data.cache[cacheID] = {"data": returnData};
	      if ("nodes" in vars) {
	        vars.data.cache[cacheID].nodes = vars.nodes.restricted;
	        vars.data.cache[cacheID].edges = vars.edges.restricted;
	      }
	
	      if ( typeof vizFilter === "function" ) {
	        returnData = vizFilter( vars , returnData );
	      }
	
	      if ( vars.dev.value ) print.comment("storing data in cache");
	
	    }
	
	    return returnData;
	
	  }
	
	};


/***/ },
/* 100 */
/***/ function(module, exports, __webpack_require__) {

	var arraySort     = __webpack_require__(19),
	    createTooltip = __webpack_require__(148),
	    dataNest      = __webpack_require__(59),
	    fetchData     = __webpack_require__(411),
	    fetchColor    = __webpack_require__(20),
	    fetchText     = __webpack_require__(17),
	    fetchValue    = __webpack_require__(3),
	    mergeObject   = __webpack_require__(29),
	    removeTooltip = __webpack_require__(26),
	    segments      = __webpack_require__(56),
	    scroll        = __webpack_require__(58),
	    uniques       = __webpack_require__(8),
	    validObject   = __webpack_require__(7),
	    zoomDirection = __webpack_require__(137);
	//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	// Creates correctly formatted tooltip for Apps
	//-------------------------------------------------------------------
	module.exports = function(params) {
	
	  if ( !( "d3plus" in params.data ) ) {
	    params.data.d3plus = {}
	  }
	
	  var vars = params.vars,
	      d = params.data,
	      dataDepth = "d3plus" in d && "depth" in d.d3plus ? d.d3plus.depth : vars.depth.value,
	      ex = params.ex,
	      mouse = params.mouseevents ? params.mouseevents : false,
	      arrow = "arrow" in params ? params.arrow : true,
	      id = fetchValue(vars,d,vars.id.value),
	      tooltip_id = params.id || vars.type.value
	
	  if ((d3.event && d3.event.type == "click") && (vars.tooltip.html.value || vars.tooltip.value.long) && !("fullscreen" in params)) {
	    var fullscreen = true,
	        arrow = false,
	        mouse = true,
	        length = "long",
	        footer = vars.footer.value
	
	    vars.covered = true
	  }
	  else {
	    var fullscreen = false,
	        align = params.anchor || vars.tooltip.anchor,
	        length = params.length || "short",
	        zoom = zoomDirection(d, vars)
	
	    if (zoom === -1) {
	      var key = vars.id.nesting[dataDepth-1],
	          parent = fetchValue(vars,id,key)
	    }
	
	    var text = "";
	    if (!(!vars.mouse.click.value || (vars.mouse.viz && vars.mouse.viz.click === false))) {
	      if (zoom === 1 && vars.zoom.value) {
	        var text = vars.format.value(vars.format.locale.value.ui.expand)
	      }
	      else if (zoom === -1 && vars.zoom.value && vars.history.states.length && !vars.tooltip.value.long) {
	        var text = vars.format.value(vars.format.locale.value.ui.collapse)
	      }
	      else if (!vars.small && length == "short" && (vars.tooltip.html.value || vars.tooltip.value.long) && (vars.focus.value.length !== 1 || vars.focus.value[0] != id)) {
	        var text = vars.format.locale.value.ui.moreInfo
	      }
	      else if (length == "long") {
	        var text = vars.footer.value || ""
	      }
	    }
	
	    var footer = text.length ? vars.format.value(text,{"key": "footer", "vars": vars}) : false
	
	  }
	
	  if ("x" in params) {
	    var x = params.x;
	  }
	  else if (vars.types[vars.type.value].tooltip === "static") {
	    var x = d.d3plus.x;
	    if (vars.zoom.translate && vars.zoom.scale) {
	      x = vars.zoom.translate[0]+x*vars.zoom.scale;
	    }
	    x += vars.margin.left;
	    if (params.length !== "long") {
	      y += scroll.x();
	      x += vars.container.value.node().getBoundingClientRect().left;
	      x += parseFloat(vars.container.value.style("padding-left"), 10);
	    }
	  }
	  else {
	    var x = d3.mouse(d3.select("html").node())[0];
	  }
	
	  if ("y" in params) {
	    var y = params.y;
	  }
	  else if (vars.types[vars.type.value].tooltip == "static") {
	    var y = d.d3plus.y;
	    if (vars.zoom.translate && vars.zoom.scale) {
	      y = vars.zoom.translate[1]+y*vars.zoom.scale;
	    }
	    y += vars.margin.top;
	    if (params.length !== "long") {
	      y += scroll.y();
	      y += vars.container.value.node().getBoundingClientRect().top;
	      y += parseFloat(vars.container.value.style("padding-top"), 10);
	    }
	  }
	  else {
	    var y = d3.mouse(d3.select("html").node())[1];
	  }
	
	  if ("offset" in params) {
	    var offset = params.offset;
	  }
	  else if (vars.types[vars.type.value].tooltip == "static") {
	    var offset = d.d3plus.r ? d.d3plus.r : d.d3plus.height/2;
	    if (vars.zoom.scale) {
	      offset = offset * vars.zoom.scale;
	    }
	  }
	  else {
	    var offset = 3;
	  }
	
	  function make_tooltip(html) {
	
	    var titleDepth = "depth" in params ? params.depth : dataDepth;
	
	    var ex = {},
	        children,
	        depth     = vars.id.nesting[titleDepth+1] in d ? titleDepth + 1 : titleDepth,
	        nestKey   = vars.id.nesting[depth],
	        nameList  = "merged" in d.d3plus ? d.d3plus.merged : d[nestKey];
	
	    if (!(nameList instanceof Array)) nameList = [nameList];
	
	    var dataValue = fetchValue( vars , d , vars.size.value );
	
	    if (vars.tooltip.children.value) {
	
	      nameList = nameList.slice(0);
	      if (nameList.length > 1 && validObject(nameList[0])) nameList = dataNest(vars, nameList, [nestKey]);
	
	      if (vars.size.value && validObject(nameList[0])) {
	
	        var namesNoValues = [];
	        var namesWithValues = nameList.filter(function(n){
	          var val = fetchValue(vars, n, vars.size.value);
	          if (val !== null && (!("d3plus" in n) || !n.d3plus.merged)) {
	            return true;
	          }
	          else {
	            namesNoValues.push(n);
	          }
	        });
	
	        arraySort(namesWithValues, vars.size.value, "desc", [], vars);
	
	        nameList = namesWithValues.concat(namesNoValues);
	
	      }
	
	      var limit = length === "short" ? 3 : vars.data.large,
	          listLength = nameList.length,
	          max   = d3.min([listLength , limit]),
	          objs  = [];
	
	      children = {"values": []};
	      for (var i = 0; i < max; i++) {
	
	        if (!nameList.length) break;
	
	        var obj  = nameList.shift(),
	            name = fetchText(vars, obj, depth)[0],
	            id   = validObject(obj) ? fetchValue(vars, obj, nestKey, depth) : obj;
	
	        if (id !== d[vars.id.nesting[titleDepth]] && name && !children[name]) {
	
	          var value = validObject(obj) ? fetchValue(vars, obj, vars.size.value, nestKey) : null,
	              color = fetchColor(vars, obj, nestKey);
	
	          children[name] = value && !(value instanceof Array) ? vars.format.value(value, {"key": vars.size.value, "vars": vars, "data": obj}) : "";
	          var child = {};
	          child[name] = children[name];
	          children.values.push(child);
	
	          if (color) {
	            if ( !children.d3plus_colors ) children.d3plus_colors = {};
	            children.d3plus_colors[name] = color;
	          }
	
	        }
	        else {
	          i--;
	        }
	
	      }
	
	      if ( listLength > max ) {
	        children.d3plusMore = listLength - max;
	      }
	
	    }
	
	    if (d.d3plus.tooltip) {
	      ex = mergeObject(ex, d.d3plus.tooltip);
	    }
	
	    function getLabel(method) {
	      return typeof vars[method].value === "string" ? vars[method].value :
	             vars.format.locale.value.method[method];
	    }
	
	    if ( vars.tooltip.size.value ) {
	      if (dataValue && typeof vars.size.value !== "number") {
	        ex[getLabel("size")] = dataValue;
	      }
	      if (vars.axes.opposite && vars[vars.axes.opposite].value !== vars.size.value) {
	        ex[getLabel(vars.axes.opposite)] = fetchValue(vars, d, vars[vars.axes.opposite].value);
	      }
	      if (vars.axes.opposite && vars[vars.axes.opposite + "2"].value !== vars.size.value) {
	        ex[getLabel(vars.axes.opposite + "2")] = fetchValue(vars, d, vars[vars.axes.opposite + "2"].value);
	      }
	      if (vars.color.valueScale) {
	        ex[getLabel("color")] = fetchValue(vars, d, vars.color.value);
	      }
	    }
	
	    var active = segments(vars, d, "active"),
	        temp   = segments(vars, d, "temp"),
	        total  = segments(vars, d, "total");
	
	    if (typeof active == "number" && active > 0 && total) {
	      ex[getLabel("active")] = active+"/"+total+" ("+vars.format.value((active/total)*100, {"key": "share", "vars": vars, "data": d})+")";
	    }
	
	    if (typeof temp == "number" && temp > 0 && total) {
	      ex[getLabel("temp")] = temp+"/"+total+" ("+vars.format.value((temp/total)*100, {"key": "share", "vars": vars, "data": d})+")";
	    }
	
	    if ( vars.tooltip.share.value && d.d3plus.share ) {
	      ex.share = vars.format.value(d.d3plus.share*100, {"key": "share", "vars": vars, "data": d});
	    }
	
	    var depth = "depth" in params ? params.depth : dataDepth,
	        title = params.title || fetchText(vars,d,depth)[0],
	        icon = uniques(d, vars.icon.value, fetchValue, vars, vars.id.nesting[depth]),
	        tooltip_data = fetchData(vars,d,length,ex,children,depth)
	
	    if (icon.length === 1 && typeof icon[0] === "string") {
	      icon = icon[0];
	    }
	    else {
	      icon = false;
	    }
	
	    if ((tooltip_data.length > 0 || footer) || ((!d.d3plus_label && length == "short" && title) || (d.d3plus_label && (!("visible" in d.d3plus_label) || ("visible" in d.d3plus_label && d.d3plus_label.visible === false))))) {
	
	      if (!title) {
	        title = vars.format.value(id, {"key": vars.id.value, "vars": vars});
	      }
	
	      var depth = "d3plus" in d && "merged" in d.d3plus ? dataDepth - 1 : "depth" in params ? params.depth : dataDepth;
	
	      if (depth < 0) depth = 0
	
	      depth = vars.id.nesting[depth]
	
	      if (typeof vars.icon.style.value == "string") {
	        var icon_style = vars.icon.style.value
	      }
	      else if (typeof vars.icon.style.value == "object" && vars.icon.style.value[depth]) {
	        var icon_style = vars.icon.style.value[depth]
	      }
	      else {
	        var icon_style = "default"
	      }
	
	      var width = vars.tooltip.small;
	      if (params.width) {
	        width = params.width;
	      }
	      else if (fullscreen) {
	        width = vars.tooltip.large;
	      }
	
	      var parent = (!fullscreen && params.length !== "long") || (fullscreen && vars.tooltip.fullscreen.value) ? d3.select("body") : vars.container.value;
	
	      if (!params.description && d && vars.tooltip.sub.value) {
	        params.description = fetchValue(vars, d, vars.tooltip.sub.value);
	      }
	
	      createTooltip({
	        "align": align,
	        "arrow": arrow,
	        "locale": vars.format.locale.value,
	        "background": vars.tooltip.background,
	        "curtain": vars.tooltip.curtain.color,
	        "curtainopacity": vars.tooltip.curtain.opacity,
	        "fontcolor": vars.tooltip.font.color,
	        "fontfamily": vars.tooltip.font.family.value,
	        "fontsize": vars.tooltip.font.size,
	        "fontweight": vars.tooltip.font.weight,
	        "data": tooltip_data,
	        "color": fetchColor(vars, d),
	        "allColors": true,
	        "footer": params.footer === false ? params.footer : footer,
	        "fullscreen": fullscreen,
	        "html": html,
	        "js": params.js,
	        "icon": icon,
	        "id": tooltip_id,
	        "max_height": params.maxheight,
	        "max_width": width,
	        "mouseevents": mouse,
	        "offset": offset,
	        "parent": parent,
	        "stacked": vars.tooltip.stacked.value,
	        "style": icon_style,
	        "title": title,
	        "description": params.description,
	        "width": !params.width && !fullscreen && tooltip_data.length == 0 ? "auto" : width,
	        "x": x,
	        "y": y
	      })
	
	    }
	    else {
	      removeTooltip(tooltip_id)
	    }
	
	  }
	
	  if (fullscreen || params.length === "long") {
	
	    if (typeof vars.tooltip.html.value == "string") {
	      make_tooltip(vars.tooltip.html.value)
	    }
	    else if (typeof vars.tooltip.html.value == "function") {
	      make_tooltip(vars.tooltip.html.value(id))
	    }
	    else if (vars.tooltip.html.value && typeof vars.tooltip.html.value == "object" && vars.tooltip.html.value.url) {
	      var tooltip_url = vars.tooltip.html.value.url;
	      if (typeof tooltip_url === "function") tooltip_url = tooltip_url(id);
	      d3.json(tooltip_url,function(data){
	        var html = vars.tooltip.html.value.callback ? vars.tooltip.html.value.callback(data) : data
	        make_tooltip(html)
	      })
	    }
	    else {
	      make_tooltip(params.html)
	    }
	
	  }
	  else {
	    make_tooltip(params.html)
	  }
	
	}


/***/ },
/* 101 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule CallbackQueue
	 */
	
	'use strict';
	
	var PooledClass = __webpack_require__(37);
	
	var assign = __webpack_require__(5);
	var invariant = __webpack_require__(4);
	
	/**
	 * A specialized pseudo-event module to help keep track of components waiting to
	 * be notified when their DOM representations are available for use.
	 *
	 * This implements `PooledClass`, so you should never need to instantiate this.
	 * Instead, use `CallbackQueue.getPooled()`.
	 *
	 * @class ReactMountReady
	 * @implements PooledClass
	 * @internal
	 */
	function CallbackQueue() {
	  this._callbacks = null;
	  this._contexts = null;
	}
	
	assign(CallbackQueue.prototype, {
	
	  /**
	   * Enqueues a callback to be invoked when `notifyAll` is invoked.
	   *
	   * @param {function} callback Invoked when `notifyAll` is invoked.
	   * @param {?object} context Context to call `callback` with.
	   * @internal
	   */
	  enqueue: function (callback, context) {
	    this._callbacks = this._callbacks || [];
	    this._contexts = this._contexts || [];
	    this._callbacks.push(callback);
	    this._contexts.push(context);
	  },
	
	  /**
	   * Invokes all enqueued callbacks and clears the queue. This is invoked after
	   * the DOM representation of a component has been created or updated.
	   *
	   * @internal
	   */
	  notifyAll: function () {
	    var callbacks = this._callbacks;
	    var contexts = this._contexts;
	    if (callbacks) {
	      !(callbacks.length === contexts.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Mismatched list of contexts in callback queue') : invariant(false) : undefined;
	      this._callbacks = null;
	      this._contexts = null;
	      for (var i = 0; i < callbacks.length; i++) {
	        callbacks[i].call(contexts[i]);
	      }
	      callbacks.length = 0;
	      contexts.length = 0;
	    }
	  },
	
	  /**
	   * Resets the internal queue.
	   *
	   * @internal
	   */
	  reset: function () {
	    this._callbacks = null;
	    this._contexts = null;
	  },
	
	  /**
	   * `PooledClass` looks for this.
	   */
	  destructor: function () {
	    this.reset();
	  }
	
	});
	
	PooledClass.addPoolingTo(CallbackQueue);
	
	module.exports = CallbackQueue;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 102 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMPropertyOperations
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var DOMProperty = __webpack_require__(42);
	var ReactPerf = __webpack_require__(22);
	
	var quoteAttributeValueForBrowser = __webpack_require__(479);
	var warning = __webpack_require__(6);
	
	// Simplified subset
	var VALID_ATTRIBUTE_NAME_REGEX = /^[a-zA-Z_][\w\.\-]*$/;
	var illegalAttributeNameCache = {};
	var validatedAttributeNameCache = {};
	
	function isAttributeNameSafe(attributeName) {
	  if (validatedAttributeNameCache.hasOwnProperty(attributeName)) {
	    return true;
	  }
	  if (illegalAttributeNameCache.hasOwnProperty(attributeName)) {
	    return false;
	  }
	  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
	    validatedAttributeNameCache[attributeName] = true;
	    return true;
	  }
	  illegalAttributeNameCache[attributeName] = true;
	  process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid attribute name: `%s`', attributeName) : undefined;
	  return false;
	}
	
	function shouldIgnoreValue(propertyInfo, value) {
	  return value == null || propertyInfo.hasBooleanValue && !value || propertyInfo.hasNumericValue && isNaN(value) || propertyInfo.hasPositiveNumericValue && value < 1 || propertyInfo.hasOverloadedBooleanValue && value === false;
	}
	
	if (process.env.NODE_ENV !== 'production') {
	  var reactProps = {
	    children: true,
	    dangerouslySetInnerHTML: true,
	    key: true,
	    ref: true
	  };
	  var warnedProperties = {};
	
	  var warnUnknownProperty = function (name) {
	    if (reactProps.hasOwnProperty(name) && reactProps[name] || warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {
	      return;
	    }
	
	    warnedProperties[name] = true;
	    var lowerCasedName = name.toLowerCase();
	
	    // data-* attributes should be lowercase; suggest the lowercase version
	    var standardName = DOMProperty.isCustomAttribute(lowerCasedName) ? lowerCasedName : DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ? DOMProperty.getPossibleStandardName[lowerCasedName] : null;
	
	    // For now, only warn when we have a suggested correction. This prevents
	    // logging too much when using transferPropsTo.
	    process.env.NODE_ENV !== 'production' ? warning(standardName == null, 'Unknown DOM property %s. Did you mean %s?', name, standardName) : undefined;
	  };
	}
	
	/**
	 * Operations for dealing with DOM properties.
	 */
	var DOMPropertyOperations = {
	
	  /**
	   * Creates markup for the ID property.
	   *
	   * @param {string} id Unescaped ID.
	   * @return {string} Markup string.
	   */
	  createMarkupForID: function (id) {
	    return DOMProperty.ID_ATTRIBUTE_NAME + '=' + quoteAttributeValueForBrowser(id);
	  },
	
	  setAttributeForID: function (node, id) {
	    node.setAttribute(DOMProperty.ID_ATTRIBUTE_NAME, id);
	  },
	
	  /**
	   * Creates markup for a property.
	   *
	   * @param {string} name
	   * @param {*} value
	   * @return {?string} Markup string, or null if the property was invalid.
	   */
	  createMarkupForProperty: function (name, value) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      if (shouldIgnoreValue(propertyInfo, value)) {
	        return '';
	      }
	      var attributeName = propertyInfo.attributeName;
	      if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
	        return attributeName + '=""';
	      }
	      return attributeName + '=' + quoteAttributeValueForBrowser(value);
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      if (value == null) {
	        return '';
	      }
	      return name + '=' + quoteAttributeValueForBrowser(value);
	    } else if (process.env.NODE_ENV !== 'production') {
	      warnUnknownProperty(name);
	    }
	    return null;
	  },
	
	  /**
	   * Creates markup for a custom property.
	   *
	   * @param {string} name
	   * @param {*} value
	   * @return {string} Markup string, or empty string if the property was invalid.
	   */
	  createMarkupForCustomAttribute: function (name, value) {
	    if (!isAttributeNameSafe(name) || value == null) {
	      return '';
	    }
	    return name + '=' + quoteAttributeValueForBrowser(value);
	  },
	
	  /**
	   * Sets the value for a property on a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   * @param {*} value
	   */
	  setValueForProperty: function (node, name, value) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      var mutationMethod = propertyInfo.mutationMethod;
	      if (mutationMethod) {
	        mutationMethod(node, value);
	      } else if (shouldIgnoreValue(propertyInfo, value)) {
	        this.deleteValueForProperty(node, name);
	      } else if (propertyInfo.mustUseAttribute) {
	        var attributeName = propertyInfo.attributeName;
	        var namespace = propertyInfo.attributeNamespace;
	        // `setAttribute` with objects becomes only `[object]` in IE8/9,
	        // ('' + value) makes it output the correct toString()-value.
	        if (namespace) {
	          node.setAttributeNS(namespace, attributeName, '' + value);
	        } else if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
	          node.setAttribute(attributeName, '');
	        } else {
	          node.setAttribute(attributeName, '' + value);
	        }
	      } else {
	        var propName = propertyInfo.propertyName;
	        // Must explicitly cast values for HAS_SIDE_EFFECTS-properties to the
	        // property type before comparing; only `value` does and is string.
	        if (!propertyInfo.hasSideEffects || '' + node[propName] !== '' + value) {
	          // Contrary to `setAttribute`, object properties are properly
	          // `toString`ed by IE8/9.
	          node[propName] = value;
	        }
	      }
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      DOMPropertyOperations.setValueForAttribute(node, name, value);
	    } else if (process.env.NODE_ENV !== 'production') {
	      warnUnknownProperty(name);
	    }
	  },
	
	  setValueForAttribute: function (node, name, value) {
	    if (!isAttributeNameSafe(name)) {
	      return;
	    }
	    if (value == null) {
	      node.removeAttribute(name);
	    } else {
	      node.setAttribute(name, '' + value);
	    }
	  },
	
	  /**
	   * Deletes the value for a property on a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   */
	  deleteValueForProperty: function (node, name) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      var mutationMethod = propertyInfo.mutationMethod;
	      if (mutationMethod) {
	        mutationMethod(node, undefined);
	      } else if (propertyInfo.mustUseAttribute) {
	        node.removeAttribute(propertyInfo.attributeName);
	      } else {
	        var propName = propertyInfo.propertyName;
	        var defaultValue = DOMProperty.getDefaultValueForProperty(node.nodeName, propName);
	        if (!propertyInfo.hasSideEffects || '' + node[propName] !== defaultValue) {
	          node[propName] = defaultValue;
	        }
	      }
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      node.removeAttribute(name);
	    } else if (process.env.NODE_ENV !== 'production') {
	      warnUnknownProperty(name);
	    }
	  }
	
	};
	
	ReactPerf.measureMethods(DOMPropertyOperations, 'DOMPropertyOperations', {
	  setValueForProperty: 'setValueForProperty',
	  setValueForAttribute: 'setValueForAttribute',
	  deleteValueForProperty: 'deleteValueForProperty'
	});
	
	module.exports = DOMPropertyOperations;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 103 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule LinkedValueUtils
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var ReactPropTypes = __webpack_require__(171);
	var ReactPropTypeLocations = __webpack_require__(73);
	
	var invariant = __webpack_require__(4);
	var warning = __webpack_require__(6);
	
	var hasReadOnlyValue = {
	  'button': true,
	  'checkbox': true,
	  'image': true,
	  'hidden': true,
	  'radio': true,
	  'reset': true,
	  'submit': true
	};
	
	function _assertSingleLink(inputProps) {
	  !(inputProps.checkedLink == null || inputProps.valueLink == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a valueLink. If you want to use ' + 'checkedLink, you probably don\'t want to use valueLink and vice versa.') : invariant(false) : undefined;
	}
	function _assertValueLink(inputProps) {
	  _assertSingleLink(inputProps);
	  !(inputProps.value == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a valueLink and a value or onChange event. If you want ' + 'to use value or onChange, you probably don\'t want to use valueLink.') : invariant(false) : undefined;
	}
	
	function _assertCheckedLink(inputProps) {
	  _assertSingleLink(inputProps);
	  !(inputProps.checked == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a checked property or onChange event. ' + 'If you want to use checked or onChange, you probably don\'t want to ' + 'use checkedLink') : invariant(false) : undefined;
	}
	
	var propTypes = {
	  value: function (props, propName, componentName) {
	    if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {
	      return null;
	    }
	    return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
	  },
	  checked: function (props, propName, componentName) {
	    if (!props[propName] || props.onChange || props.readOnly || props.disabled) {
	      return null;
	    }
	    return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
	  },
	  onChange: ReactPropTypes.func
	};
	
	var loggedTypeFailures = {};
	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}
	
	/**
	 * Provide a linked `value` attribute for controlled forms. You should not use
	 * this outside of the ReactDOM controlled form components.
	 */
	var LinkedValueUtils = {
	  checkPropTypes: function (tagName, props, owner) {
	    for (var propName in propTypes) {
	      if (propTypes.hasOwnProperty(propName)) {
	        var error = propTypes[propName](props, propName, tagName, ReactPropTypeLocations.prop);
	      }
	      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	        // Only monitor this failure once because there tends to be a lot of the
	        // same error.
	        loggedTypeFailures[error.message] = true;
	
	        var addendum = getDeclarationErrorAddendum(owner);
	        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed form propType: %s%s', error.message, addendum) : undefined;
	      }
	    }
	  },
	
	  /**
	   * @param {object} inputProps Props for form component
	   * @return {*} current value of the input either from value prop or link.
	   */
	  getValue: function (inputProps) {
	    if (inputProps.valueLink) {
	      _assertValueLink(inputProps);
	      return inputProps.valueLink.value;
	    }
	    return inputProps.value;
	  },
	
	  /**
	   * @param {object} inputProps Props for form component
	   * @return {*} current checked status of the input either from checked prop
	   *             or link.
	   */
	  getChecked: function (inputProps) {
	    if (inputProps.checkedLink) {
	      _assertCheckedLink(inputProps);
	      return inputProps.checkedLink.value;
	    }
	    return inputProps.checked;
	  },
	
	  /**
	   * @param {object} inputProps Props for form component
	   * @param {SyntheticEvent} event change event to handle
	   */
	  executeOnChange: function (inputProps, event) {
	    if (inputProps.valueLink) {
	      _assertValueLink(inputProps);
	      return inputProps.valueLink.requestChange(event.target.value);
	    } else if (inputProps.checkedLink) {
	      _assertCheckedLink(inputProps);
	      return inputProps.checkedLink.requestChange(event.target.checked);
	    } else if (inputProps.onChange) {
	      return inputProps.onChange.call(undefined, event);
	    }
	  }
	};
	
	module.exports = LinkedValueUtils;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 104 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactComponentBrowserEnvironment
	 */
	
	'use strict';
	
	var ReactDOMIDOperations = __webpack_require__(106);
	var ReactMount = __webpack_require__(13);
	
	/**
	 * Abstracts away all functionality of the reconciler that requires knowledge of
	 * the browser context. TODO: These callers should be refactored to avoid the
	 * need for this injection.
	 */
	var ReactComponentBrowserEnvironment = {
	
	  processChildrenUpdates: ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,
	
	  replaceNodeWithMarkupByID: ReactDOMIDOperations.dangerouslyReplaceNodeWithMarkupByID,
	
	  /**
	   * If a particular environment requires that some resources be cleaned up,
	   * specify this in the injected Mixin. In the DOM, we would likely want to
	   * purge any cached node ID lookups.
	   *
	   * @private
	   */
	  unmountIDFromEnvironment: function (rootNodeID) {
	    ReactMount.purgeID(rootNodeID);
	  }
	
	};
	
	module.exports = ReactComponentBrowserEnvironment;

/***/ },
/* 105 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactComponentEnvironment
	 */
	
	'use strict';
	
	var invariant = __webpack_require__(4);
	
	var injected = false;
	
	var ReactComponentEnvironment = {
	
	  /**
	   * Optionally injectable environment dependent cleanup hook. (server vs.
	   * browser etc). Example: A browser system caches DOM nodes based on component
	   * ID and must remove that cache entry when this instance is unmounted.
	   */
	  unmountIDFromEnvironment: null,
	
	  /**
	   * Optionally injectable hook for swapping out mount images in the middle of
	   * the tree.
	   */
	  replaceNodeWithMarkupByID: null,
	
	  /**
	   * Optionally injectable hook for processing a queue of child updates. Will
	   * later move into MultiChildComponents.
	   */
	  processChildrenUpdates: null,
	
	  injection: {
	    injectEnvironment: function (environment) {
	      !!injected ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactCompositeComponent: injectEnvironment() can only be called once.') : invariant(false) : undefined;
	      ReactComponentEnvironment.unmountIDFromEnvironment = environment.unmountIDFromEnvironment;
	      ReactComponentEnvironment.replaceNodeWithMarkupByID = environment.replaceNodeWithMarkupByID;
	      ReactComponentEnvironment.processChildrenUpdates = environment.processChildrenUpdates;
	      injected = true;
	    }
	  }
	
	};
	
	module.exports = ReactComponentEnvironment;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 106 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMIDOperations
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var DOMChildrenOperations = __webpack_require__(151);
	var DOMPropertyOperations = __webpack_require__(102);
	var ReactMount = __webpack_require__(13);
	var ReactPerf = __webpack_require__(22);
	
	var invariant = __webpack_require__(4);
	
	/**
	 * Errors for properties that should not be updated with `updatePropertyByID()`.
	 *
	 * @type {object}
	 * @private
	 */
	var INVALID_PROPERTY_ERRORS = {
	  dangerouslySetInnerHTML: '`dangerouslySetInnerHTML` must be set using `updateInnerHTMLByID()`.',
	  style: '`style` must be set using `updateStylesByID()`.'
	};
	
	/**
	 * Operations used to process updates to DOM nodes.
	 */
	var ReactDOMIDOperations = {
	
	  /**
	   * Updates a DOM node with new property values. This should only be used to
	   * update DOM properties in `DOMProperty`.
	   *
	   * @param {string} id ID of the node to update.
	   * @param {string} name A valid property name, see `DOMProperty`.
	   * @param {*} value New value of the property.
	   * @internal
	   */
	  updatePropertyByID: function (id, name, value) {
	    var node = ReactMount.getNode(id);
	    !!INVALID_PROPERTY_ERRORS.hasOwnProperty(name) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'updatePropertyByID(...): %s', INVALID_PROPERTY_ERRORS[name]) : invariant(false) : undefined;
	
	    // If we're updating to null or undefined, we should remove the property
	    // from the DOM node instead of inadvertantly setting to a string. This
	    // brings us in line with the same behavior we have on initial render.
	    if (value != null) {
	      DOMPropertyOperations.setValueForProperty(node, name, value);
	    } else {
	      DOMPropertyOperations.deleteValueForProperty(node, name);
	    }
	  },
	
	  /**
	   * Replaces a DOM node that exists in the document with markup.
	   *
	   * @param {string} id ID of child to be replaced.
	   * @param {string} markup Dangerous markup to inject in place of child.
	   * @internal
	   * @see {Danger.dangerouslyReplaceNodeWithMarkup}
	   */
	  dangerouslyReplaceNodeWithMarkupByID: function (id, markup) {
	    var node = ReactMount.getNode(id);
	    DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup(node, markup);
	  },
	
	  /**
	   * Updates a component's children by processing a series of updates.
	   *
	   * @param {array<object>} updates List of update configurations.
	   * @param {array<string>} markup List of markup strings.
	   * @internal
	   */
	  dangerouslyProcessChildrenUpdates: function (updates, markup) {
	    for (var i = 0; i < updates.length; i++) {
	      updates[i].parentNode = ReactMount.getNode(updates[i].parentID);
	    }
	    DOMChildrenOperations.processUpdates(updates, markup);
	  }
	};
	
	ReactPerf.measureMethods(ReactDOMIDOperations, 'ReactDOMIDOperations', {
	  dangerouslyReplaceNodeWithMarkupByID: 'dangerouslyReplaceNodeWithMarkupByID',
	  dangerouslyProcessChildrenUpdates: 'dangerouslyProcessChildrenUpdates'
	});
	
	module.exports = ReactDOMIDOperations;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 107 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactUpdateQueue
	 */
	
	'use strict';
	
	var ReactCurrentOwner = __webpack_require__(35);
	var ReactElement = __webpack_require__(18);
	var ReactInstanceMap = __webpack_require__(62);
	var ReactUpdates = __webpack_require__(24);
	
	var assign = __webpack_require__(5);
	var invariant = __webpack_require__(4);
	var warning = __webpack_require__(6);
	
	function enqueueUpdate(internalInstance) {
	  ReactUpdates.enqueueUpdate(internalInstance);
	}
	
	function getInternalInstanceReadyForUpdate(publicInstance, callerName) {
	  var internalInstance = ReactInstanceMap.get(publicInstance);
	  if (!internalInstance) {
	    if (process.env.NODE_ENV !== 'production') {
	      // Only warn when we have a callerName. Otherwise we should be silent.
	      // We're probably calling from enqueueCallback. We don't want to warn
	      // there because we already warned for the corresponding lifecycle method.
	      process.env.NODE_ENV !== 'production' ? warning(!callerName, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, publicInstance.constructor.displayName) : undefined;
	    }
	    return null;
	  }
	
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '%s(...): Cannot update during an existing state transition ' + '(such as within `render`). Render methods should be a pure function ' + 'of props and state.', callerName) : undefined;
	  }
	
	  return internalInstance;
	}
	
	/**
	 * ReactUpdateQueue allows for state updates to be scheduled into a later
	 * reconciliation step.
	 */
	var ReactUpdateQueue = {
	
	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function (publicInstance) {
	    if (process.env.NODE_ENV !== 'production') {
	      var owner = ReactCurrentOwner.current;
	      if (owner !== null) {
	        process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : undefined;
	        owner._warnedAboutRefsInRender = true;
	      }
	    }
	    var internalInstance = ReactInstanceMap.get(publicInstance);
	    if (internalInstance) {
	      // During componentWillMount and render this will still be null but after
	      // that will always render to something. At least for now. So we can use
	      // this hack.
	      return !!internalInstance._renderedComponent;
	    } else {
	      return false;
	    }
	  },
	
	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @internal
	   */
	  enqueueCallback: function (publicInstance, callback) {
	    !(typeof callback === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'enqueueCallback(...): You called `setProps`, `replaceProps`, ' + '`setState`, `replaceState`, or `forceUpdate` with a callback that ' + 'isn\'t callable.') : invariant(false) : undefined;
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);
	
	    // Previously we would throw an error if we didn't have an internal
	    // instance. Since we want to make it a no-op instead, we mirror the same
	    // behavior we have in other enqueue* methods.
	    // We also need to ignore callbacks in componentWillMount. See
	    // enqueueUpdates.
	    if (!internalInstance) {
	      return null;
	    }
	
	    if (internalInstance._pendingCallbacks) {
	      internalInstance._pendingCallbacks.push(callback);
	    } else {
	      internalInstance._pendingCallbacks = [callback];
	    }
	    // TODO: The callback here is ignored when setState is called from
	    // componentWillMount. Either fix it or disallow doing so completely in
	    // favor of getInitialState. Alternatively, we can disallow
	    // componentWillMount during server-side rendering.
	    enqueueUpdate(internalInstance);
	  },
	
	  enqueueCallbackInternal: function (internalInstance, callback) {
	    !(typeof callback === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'enqueueCallback(...): You called `setProps`, `replaceProps`, ' + '`setState`, `replaceState`, or `forceUpdate` with a callback that ' + 'isn\'t callable.') : invariant(false) : undefined;
	    if (internalInstance._pendingCallbacks) {
	      internalInstance._pendingCallbacks.push(callback);
	    } else {
	      internalInstance._pendingCallbacks = [callback];
	    }
	    enqueueUpdate(internalInstance);
	  },
	
	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */
	  enqueueForceUpdate: function (publicInstance) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'forceUpdate');
	
	    if (!internalInstance) {
	      return;
	    }
	
	    internalInstance._pendingForceUpdate = true;
	
	    enqueueUpdate(internalInstance);
	  },
	
	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} completeState Next state.
	   * @internal
	   */
	  enqueueReplaceState: function (publicInstance, completeState) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'replaceState');
	
	    if (!internalInstance) {
	      return;
	    }
	
	    internalInstance._pendingStateQueue = [completeState];
	    internalInstance._pendingReplaceState = true;
	
	    enqueueUpdate(internalInstance);
	  },
	
	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialState Next partial state to be merged with state.
	   * @internal
	   */
	  enqueueSetState: function (publicInstance, partialState) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'setState');
	
	    if (!internalInstance) {
	      return;
	    }
	
	    var queue = internalInstance._pendingStateQueue || (internalInstance._pendingStateQueue = []);
	    queue.push(partialState);
	
	    enqueueUpdate(internalInstance);
	  },
	
	  /**
	   * Sets a subset of the props.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialProps Subset of the next props.
	   * @internal
	   */
	  enqueueSetProps: function (publicInstance, partialProps) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'setProps');
	    if (!internalInstance) {
	      return;
	    }
	    ReactUpdateQueue.enqueueSetPropsInternal(internalInstance, partialProps);
	  },
	
	  enqueueSetPropsInternal: function (internalInstance, partialProps) {
	    var topLevelWrapper = internalInstance._topLevelWrapper;
	    !topLevelWrapper ? process.env.NODE_ENV !== 'production' ? invariant(false, 'setProps(...): You called `setProps` on a ' + 'component with a parent. This is an anti-pattern since props will ' + 'get reactively updated when rendered. Instead, change the owner\'s ' + '`render` method to pass the correct value as props to the component ' + 'where it is created.') : invariant(false) : undefined;
	
	    // Merge with the pending element if it exists, otherwise with existing
	    // element props.
	    var wrapElement = topLevelWrapper._pendingElement || topLevelWrapper._currentElement;
	    var element = wrapElement.props;
	    var props = assign({}, element.props, partialProps);
	    topLevelWrapper._pendingElement = ReactElement.cloneAndReplaceProps(wrapElement, ReactElement.cloneAndReplaceProps(element, props));
	
	    enqueueUpdate(topLevelWrapper);
	  },
	
	  /**
	   * Replaces all of the props.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} props New props.
	   * @internal
	   */
	  enqueueReplaceProps: function (publicInstance, props) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'replaceProps');
	    if (!internalInstance) {
	      return;
	    }
	    ReactUpdateQueue.enqueueReplacePropsInternal(internalInstance, props);
	  },
	
	  enqueueReplacePropsInternal: function (internalInstance, props) {
	    var topLevelWrapper = internalInstance._topLevelWrapper;
	    !topLevelWrapper ? process.env.NODE_ENV !== 'production' ? invariant(false, 'replaceProps(...): You called `replaceProps` on a ' + 'component with a parent. This is an anti-pattern since props will ' + 'get reactively updated when rendered. Instead, change the owner\'s ' + '`render` method to pass the correct value as props to the component ' + 'where it is created.') : invariant(false) : undefined;
	
	    // Merge with the pending element if it exists, otherwise with existing
	    // element props.
	    var wrapElement = topLevelWrapper._pendingElement || topLevelWrapper._currentElement;
	    var element = wrapElement.props;
	    topLevelWrapper._pendingElement = ReactElement.cloneAndReplaceProps(wrapElement, ReactElement.cloneAndReplaceProps(element, props));
	
	    enqueueUpdate(topLevelWrapper);
	  },
	
	  enqueueElementInternal: function (internalInstance, newElement) {
	    internalInstance._pendingElement = newElement;
	    enqueueUpdate(internalInstance);
	  }
	
	};
	
	module.exports = ReactUpdateQueue;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 108 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactVersion
	 */
	
	'use strict';
	
	module.exports = '0.14.8';

/***/ },
/* 109 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule findDOMNode
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var ReactCurrentOwner = __webpack_require__(35);
	var ReactInstanceMap = __webpack_require__(62);
	var ReactMount = __webpack_require__(13);
	
	var invariant = __webpack_require__(4);
	var warning = __webpack_require__(6);
	
	/**
	 * Returns the DOM node rendered by this element.
	 *
	 * @param {ReactComponent|DOMElement} componentOrElement
	 * @return {?DOMElement} The root node of this element.
	 */
	function findDOMNode(componentOrElement) {
	  if (process.env.NODE_ENV !== 'production') {
	    var owner = ReactCurrentOwner.current;
	    if (owner !== null) {
	      process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing getDOMNode or findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : undefined;
	      owner._warnedAboutRefsInRender = true;
	    }
	  }
	  if (componentOrElement == null) {
	    return null;
	  }
	  if (componentOrElement.nodeType === 1) {
	    return componentOrElement;
	  }
	  if (ReactInstanceMap.has(componentOrElement)) {
	    return ReactMount.getNodeFromInstance(componentOrElement);
	  }
	  !(componentOrElement.render == null || typeof componentOrElement.render !== 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'findDOMNode was called on an unmounted component.') : invariant(false) : undefined;
	   true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Element appears to be neither ReactComponent nor DOMNode (keys: %s)', Object.keys(componentOrElement)) : invariant(false) : undefined;
	}
	
	module.exports = findDOMNode;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 110 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventCharCode
	 * @typechecks static-only
	 */
	
	'use strict';
	
	/**
	 * `charCode` represents the actual "character code" and is safe to use with
	 * `String.fromCharCode`. As such, only keys that correspond to printable
	 * characters produce a valid `charCode`, the only exception to this is Enter.
	 * The Tab-key is considered non-printable and does not have a `charCode`,
	 * presumably because it does not produce a tab-character in browsers.
	 *
	 * @param {object} nativeEvent Native browser event.
	 * @return {number} Normalized `charCode` property.
	 */
	function getEventCharCode(nativeEvent) {
	  var charCode;
	  var keyCode = nativeEvent.keyCode;
	
	  if ('charCode' in nativeEvent) {
	    charCode = nativeEvent.charCode;
	
	    // FF does not set `charCode` for the Enter-key, check against `keyCode`.
	    if (charCode === 0 && keyCode === 13) {
	      charCode = 13;
	    }
	  } else {
	    // IE8 does not implement `charCode`, but `keyCode` has the correct value.
	    charCode = keyCode;
	  }
	
	  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
	  // Must not discard the (non-)printable Enter-key.
	  if (charCode >= 32 || charCode === 13) {
	    return charCode;
	  }
	
	  return 0;
	}
	
	module.exports = getEventCharCode;

/***/ },
/* 111 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventModifierState
	 * @typechecks static-only
	 */
	
	'use strict';
	
	/**
	 * Translation from modifier key to the associated property in the event.
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
	 */
	
	var modifierKeyToProp = {
	  'Alt': 'altKey',
	  'Control': 'ctrlKey',
	  'Meta': 'metaKey',
	  'Shift': 'shiftKey'
	};
	
	// IE8 does not implement getModifierState so we simply map it to the only
	// modifier keys exposed by the event itself, does not support Lock-keys.
	// Currently, all major browsers except Chrome seems to support Lock-keys.
	function modifierStateGetter(keyArg) {
	  var syntheticEvent = this;
	  var nativeEvent = syntheticEvent.nativeEvent;
	  if (nativeEvent.getModifierState) {
	    return nativeEvent.getModifierState(keyArg);
	  }
	  var keyProp = modifierKeyToProp[keyArg];
	  return keyProp ? !!nativeEvent[keyProp] : false;
	}
	
	function getEventModifierState(nativeEvent) {
	  return modifierStateGetter;
	}
	
	module.exports = getEventModifierState;

/***/ },
/* 112 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventTarget
	 * @typechecks static-only
	 */
	
	'use strict';
	
	/**
	 * Gets the target node from a native browser event by accounting for
	 * inconsistencies in browser DOM APIs.
	 *
	 * @param {object} nativeEvent Native browser event.
	 * @return {DOMEventTarget} Target node.
	 */
	function getEventTarget(nativeEvent) {
	  var target = nativeEvent.target || nativeEvent.srcElement || window;
	  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
	  // @see http://www.quirksmode.org/js/events_properties.html
	  return target.nodeType === 3 ? target.parentNode : target;
	}
	
	module.exports = getEventTarget;

/***/ },
/* 113 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getIteratorFn
	 * @typechecks static-only
	 */
	
	'use strict';
	
	/* global Symbol */
	var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
	var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.
	
	/**
	 * Returns the iterator method function contained on the iterable object.
	 *
	 * Be sure to invoke the function with the iterable as context:
	 *
	 *     var iteratorFn = getIteratorFn(myIterable);
	 *     if (iteratorFn) {
	 *       var iterator = iteratorFn.call(myIterable);
	 *       ...
	 *     }
	 *
	 * @param {?object} maybeIterable
	 * @return {?function}
	 */
	function getIteratorFn(maybeIterable) {
	  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
	  if (typeof iteratorFn === 'function') {
	    return iteratorFn;
	  }
	}
	
	module.exports = getIteratorFn;

/***/ },
/* 114 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule instantiateReactComponent
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var ReactCompositeComponent = __webpack_require__(438);
	var ReactEmptyComponent = __webpack_require__(163);
	var ReactNativeComponent = __webpack_require__(169);
	
	var assign = __webpack_require__(5);
	var invariant = __webpack_require__(4);
	var warning = __webpack_require__(6);
	
	// To avoid a cyclic dependency, we create the final class in this module
	var ReactCompositeComponentWrapper = function () {};
	assign(ReactCompositeComponentWrapper.prototype, ReactCompositeComponent.Mixin, {
	  _instantiateReactComponent: instantiateReactComponent
	});
	
	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}
	
	/**
	 * Check if the type reference is a known internal type. I.e. not a user
	 * provided composite type.
	 *
	 * @param {function} type
	 * @return {boolean} Returns true if this is a valid internal type.
	 */
	function isInternalComponentType(type) {
	  return typeof type === 'function' && typeof type.prototype !== 'undefined' && typeof type.prototype.mountComponent === 'function' && typeof type.prototype.receiveComponent === 'function';
	}
	
	/**
	 * Given a ReactNode, create an instance that will actually be mounted.
	 *
	 * @param {ReactNode} node
	 * @return {object} A new instance of the element's constructor.
	 * @protected
	 */
	function instantiateReactComponent(node) {
	  var instance;
	
	  if (node === null || node === false) {
	    instance = new ReactEmptyComponent(instantiateReactComponent);
	  } else if (typeof node === 'object') {
	    var element = node;
	    !(element && (typeof element.type === 'function' || typeof element.type === 'string')) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Element type is invalid: expected a string (for built-in components) ' + 'or a class/function (for composite components) but got: %s.%s', element.type == null ? element.type : typeof element.type, getDeclarationErrorAddendum(element._owner)) : invariant(false) : undefined;
	
	    // Special case string values
	    if (typeof element.type === 'string') {
	      instance = ReactNativeComponent.createInternalComponent(element);
	    } else if (isInternalComponentType(element.type)) {
	      // This is temporarily available for custom components that are not string
	      // representations. I.e. ART. Once those are updated to use the string
	      // representation, we can drop this code path.
	      instance = new element.type(element);
	    } else {
	      instance = new ReactCompositeComponentWrapper();
	    }
	  } else if (typeof node === 'string' || typeof node === 'number') {
	    instance = ReactNativeComponent.createInstanceForText(node);
	  } else {
	     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Encountered invalid React node of type %s', typeof node) : invariant(false) : undefined;
	  }
	
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(typeof instance.construct === 'function' && typeof instance.mountComponent === 'function' && typeof instance.receiveComponent === 'function' && typeof instance.unmountComponent === 'function', 'Only React Components can be mounted.') : undefined;
	  }
	
	  // Sets up the instance. This can probably just move into the constructor now.
	  instance.construct(node);
	
	  // These two fields are used by the DOM and ART diffing algorithms
	  // respectively. Instead of using expandos on components, we should be
	  // storing the state needed by the diffing algorithms elsewhere.
	  instance._mountIndex = 0;
	  instance._mountImage = null;
	
	  if (process.env.NODE_ENV !== 'production') {
	    instance._isOwnerNecessary = false;
	    instance._warnedAboutRefsInRender = false;
	  }
	
	  // Internal instances should fully constructed at this point, so they should
	  // not get any new fields added to them at this point.
	  if (process.env.NODE_ENV !== 'production') {
	    if (Object.preventExtensions) {
	      Object.preventExtensions(instance);
	    }
	  }
	
	  return instance;
	}
	
	module.exports = instantiateReactComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 115 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule isEventSupported
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(10);
	
	var useHasFeature;
	if (ExecutionEnvironment.canUseDOM) {
	  useHasFeature = document.implementation && document.implementation.hasFeature &&
	  // always returns true in newer browsers as per the standard.
	  // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature
	  document.implementation.hasFeature('', '') !== true;
	}
	
	/**
	 * Checks if an event is supported in the current execution environment.
	 *
	 * NOTE: This will not work correctly for non-generic events such as `change`,
	 * `reset`, `load`, `error`, and `select`.
	 *
	 * Borrows from Modernizr.
	 *
	 * @param {string} eventNameSuffix Event name, e.g. "click".
	 * @param {?boolean} capture Check if the capture phase is supported.
	 * @return {boolean} True if the event is supported.
	 * @internal
	 * @license Modernizr 3.0.0pre (Custom Build) | MIT
	 */
	function isEventSupported(eventNameSuffix, capture) {
	  if (!ExecutionEnvironment.canUseDOM || capture && !('addEventListener' in document)) {
	    return false;
	  }
	
	  var eventName = 'on' + eventNameSuffix;
	  var isSupported = (eventName in document);
	
	  if (!isSupported) {
	    var element = document.createElement('div');
	    element.setAttribute(eventName, 'return;');
	    isSupported = typeof element[eventName] === 'function';
	  }
	
	  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {
	    // This is the only way to test support for the `wheel` event in IE9+.
	    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');
	  }
	
	  return isSupported;
	}
	
	module.exports = isEventSupported;

/***/ },
/* 116 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule setTextContent
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(10);
	var escapeTextContentForBrowser = __webpack_require__(77);
	var setInnerHTML = __webpack_require__(78);
	
	/**
	 * Set the textContent property of a node, ensuring that whitespace is preserved
	 * even in IE8. innerText is a poor substitute for textContent and, among many
	 * issues, inserts <br> instead of the literal newline chars. innerHTML behaves
	 * as it should.
	 *
	 * @param {DOMElement} node
	 * @param {string} text
	 * @internal
	 */
	var setTextContent = function (node, text) {
	  node.textContent = text;
	};
	
	if (ExecutionEnvironment.canUseDOM) {
	  if (!('textContent' in document.documentElement)) {
	    setTextContent = function (node, text) {
	      setInnerHTML(node, escapeTextContentForBrowser(text));
	    };
	  }
	}
	
	module.exports = setTextContent;

/***/ },
/* 117 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule shouldUpdateReactComponent
	 * @typechecks static-only
	 */
	
	'use strict';
	
	/**
	 * Given a `prevElement` and `nextElement`, determines if the existing
	 * instance should be updated as opposed to being destroyed or replaced by a new
	 * instance. Both arguments are elements. This ensures that this logic can
	 * operate on stateless trees without any backing instance.
	 *
	 * @param {?object} prevElement
	 * @param {?object} nextElement
	 * @return {boolean} True if the existing instance should be updated.
	 * @protected
	 */
	function shouldUpdateReactComponent(prevElement, nextElement) {
	  var prevEmpty = prevElement === null || prevElement === false;
	  var nextEmpty = nextElement === null || nextElement === false;
	  if (prevEmpty || nextEmpty) {
	    return prevEmpty === nextEmpty;
	  }
	
	  var prevType = typeof prevElement;
	  var nextType = typeof nextElement;
	  if (prevType === 'string' || prevType === 'number') {
	    return nextType === 'string' || nextType === 'number';
	  } else {
	    return nextType === 'object' && prevElement.type === nextElement.type && prevElement.key === nextElement.key;
	  }
	  return false;
	}
	
	module.exports = shouldUpdateReactComponent;

/***/ },
/* 118 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule traverseAllChildren
	 */
	
	'use strict';
	
	var ReactCurrentOwner = __webpack_require__(35);
	var ReactElement = __webpack_require__(18);
	var ReactInstanceHandles = __webpack_require__(49);
	
	var getIteratorFn = __webpack_require__(113);
	var invariant = __webpack_require__(4);
	var warning = __webpack_require__(6);
	
	var SEPARATOR = ReactInstanceHandles.SEPARATOR;
	var SUBSEPARATOR = ':';
	
	/**
	 * TODO: Test that a single child and an array with one item have the same key
	 * pattern.
	 */
	
	var userProvidedKeyEscaperLookup = {
	  '=': '=0',
	  '.': '=1',
	  ':': '=2'
	};
	
	var userProvidedKeyEscapeRegex = /[=.:]/g;
	
	var didWarnAboutMaps = false;
	
	function userProvidedKeyEscaper(match) {
	  return userProvidedKeyEscaperLookup[match];
	}
	
	/**
	 * Generate a key string that identifies a component within a set.
	 *
	 * @param {*} component A component that could contain a manual key.
	 * @param {number} index Index that is used if a manual key is not provided.
	 * @return {string}
	 */
	function getComponentKey(component, index) {
	  if (component && component.key != null) {
	    // Explicit key
	    return wrapUserProvidedKey(component.key);
	  }
	  // Implicit key determined by the index in the set
	  return index.toString(36);
	}
	
	/**
	 * Escape a component key so that it is safe to use in a reactid.
	 *
	 * @param {*} text Component key to be escaped.
	 * @return {string} An escaped string.
	 */
	function escapeUserProvidedKey(text) {
	  return ('' + text).replace(userProvidedKeyEscapeRegex, userProvidedKeyEscaper);
	}
	
	/**
	 * Wrap a `key` value explicitly provided by the user to distinguish it from
	 * implicitly-generated keys generated by a component's index in its parent.
	 *
	 * @param {string} key Value of a user-provided `key` attribute
	 * @return {string}
	 */
	function wrapUserProvidedKey(key) {
	  return '$' + escapeUserProvidedKey(key);
	}
	
	/**
	 * @param {?*} children Children tree container.
	 * @param {!string} nameSoFar Name of the key path so far.
	 * @param {!function} callback Callback to invoke with each child found.
	 * @param {?*} traverseContext Used to pass information throughout the traversal
	 * process.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
	  var type = typeof children;
	
	  if (type === 'undefined' || type === 'boolean') {
	    // All of the above are perceived as null.
	    children = null;
	  }
	
	  if (children === null || type === 'string' || type === 'number' || ReactElement.isValidElement(children)) {
	    callback(traverseContext, children,
	    // If it's the only child, treat the name as if it was wrapped in an array
	    // so that it's consistent if the number of children grows.
	    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
	    return 1;
	  }
	
	  var child;
	  var nextName;
	  var subtreeCount = 0; // Count of children found in the current subtree.
	  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;
	
	  if (Array.isArray(children)) {
	    for (var i = 0; i < children.length; i++) {
	      child = children[i];
	      nextName = nextNamePrefix + getComponentKey(child, i);
	      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	    }
	  } else {
	    var iteratorFn = getIteratorFn(children);
	    if (iteratorFn) {
	      var iterator = iteratorFn.call(children);
	      var step;
	      if (iteratorFn !== children.entries) {
	        var ii = 0;
	        while (!(step = iterator.next()).done) {
	          child = step.value;
	          nextName = nextNamePrefix + getComponentKey(child, ii++);
	          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	        }
	      } else {
	        if (process.env.NODE_ENV !== 'production') {
	          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.') : undefined;
	          didWarnAboutMaps = true;
	        }
	        // Iterator will provide entry [k,v] tuples rather than values.
	        while (!(step = iterator.next()).done) {
	          var entry = step.value;
	          if (entry) {
	            child = entry[1];
	            nextName = nextNamePrefix + wrapUserProvidedKey(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);
	            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	          }
	        }
	      }
	    } else if (type === 'object') {
	      var addendum = '';
	      if (process.env.NODE_ENV !== 'production') {
	        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';
	        if (children._isReactElement) {
	          addendum = ' It looks like you\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';
	        }
	        if (ReactCurrentOwner.current) {
	          var name = ReactCurrentOwner.current.getName();
	          if (name) {
	            addendum += ' Check the render method of `' + name + '`.';
	          }
	        }
	      }
	      var childrenString = String(children);
	       true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : invariant(false) : undefined;
	    }
	  }
	
	  return subtreeCount;
	}
	
	/**
	 * Traverses children that are typically specified as `props.children`, but
	 * might also be specified through attributes:
	 *
	 * - `traverseAllChildren(this.props.children, ...)`
	 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
	 *
	 * The `traverseContext` is an optional argument that is passed through the
	 * entire traversal. It can be used to store accumulations or anything else that
	 * the callback might find relevant.
	 *
	 * @param {?*} children Children tree object.
	 * @param {!function} callback To invoke upon traversing each child.
	 * @param {?*} traverseContext Context for traversal.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildren(children, callback, traverseContext) {
	  if (children == null) {
	    return 0;
	  }
	
	  return traverseAllChildrenImpl(children, '', callback, traverseContext);
	}
	
	module.exports = traverseAllChildren;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 119 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule validateDOMNesting
	 */
	
	'use strict';
	
	var assign = __webpack_require__(5);
	var emptyFunction = __webpack_require__(27);
	var warning = __webpack_require__(6);
	
	var validateDOMNesting = emptyFunction;
	
	if (process.env.NODE_ENV !== 'production') {
	  // This validation code was written based on the HTML5 parsing spec:
	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
	  //
	  // Note: this does not catch all invalid nesting, nor does it try to (as it's
	  // not clear what practical benefit doing so provides); instead, we warn only
	  // for cases where the parser will give a parse tree differing from what React
	  // intended. For example, <b><div></div></b> is invalid but we don't warn
	  // because it still parses correctly; we do warn for other cases like nested
	  // <p> tags where the beginning of the second element implicitly closes the
	  // first, causing a confusing mess.
	
	  // https://html.spec.whatwg.org/multipage/syntax.html#special
	  var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp'];
	
	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
	  var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template',
	
	  // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
	  // TODO: Distinguish by namespace here -- for <title>, including it here
	  // errs on the side of fewer warnings
	  'foreignObject', 'desc', 'title'];
	
	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope
	  var buttonScopeTags = inScopeTags.concat(['button']);
	
	  // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags
	  var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];
	
	  var emptyAncestorInfo = {
	    parentTag: null,
	
	    formTag: null,
	    aTagInScope: null,
	    buttonTagInScope: null,
	    nobrTagInScope: null,
	    pTagInButtonScope: null,
	
	    listItemTagAutoclosing: null,
	    dlItemTagAutoclosing: null
	  };
	
	  var updatedAncestorInfo = function (oldInfo, tag, instance) {
	    var ancestorInfo = assign({}, oldInfo || emptyAncestorInfo);
	    var info = { tag: tag, instance: instance };
	
	    if (inScopeTags.indexOf(tag) !== -1) {
	      ancestorInfo.aTagInScope = null;
	      ancestorInfo.buttonTagInScope = null;
	      ancestorInfo.nobrTagInScope = null;
	    }
	    if (buttonScopeTags.indexOf(tag) !== -1) {
	      ancestorInfo.pTagInButtonScope = null;
	    }
	
	    // See rules for 'li', 'dd', 'dt' start tags in
	    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
	    if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {
	      ancestorInfo.listItemTagAutoclosing = null;
	      ancestorInfo.dlItemTagAutoclosing = null;
	    }
	
	    ancestorInfo.parentTag = info;
	
	    if (tag === 'form') {
	      ancestorInfo.formTag = info;
	    }
	    if (tag === 'a') {
	      ancestorInfo.aTagInScope = info;
	    }
	    if (tag === 'button') {
	      ancestorInfo.buttonTagInScope = info;
	    }
	    if (tag === 'nobr') {
	      ancestorInfo.nobrTagInScope = info;
	    }
	    if (tag === 'p') {
	      ancestorInfo.pTagInButtonScope = info;
	    }
	    if (tag === 'li') {
	      ancestorInfo.listItemTagAutoclosing = info;
	    }
	    if (tag === 'dd' || tag === 'dt') {
	      ancestorInfo.dlItemTagAutoclosing = info;
	    }
	
	    return ancestorInfo;
	  };
	
	  /**
	   * Returns whether
	   */
	  var isTagValidWithParent = function (tag, parentTag) {
	    // First, let's check if we're in an unusual parsing mode...
	    switch (parentTag) {
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
	      case 'select':
	        return tag === 'option' || tag === 'optgroup' || tag === '#text';
	      case 'optgroup':
	        return tag === 'option' || tag === '#text';
	      // Strictly speaking, seeing an <option> doesn't mean we're in a <select>
	      // but
	      case 'option':
	        return tag === '#text';
	
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
	      // No special behavior since these rules fall back to "in body" mode for
	      // all except special table nodes which cause bad parsing behavior anyway.
	
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr
	      case 'tr':
	        return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';
	
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody
	      case 'tbody':
	      case 'thead':
	      case 'tfoot':
	        return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';
	
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup
	      case 'colgroup':
	        return tag === 'col' || tag === 'template';
	
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable
	      case 'table':
	        return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';
	
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead
	      case 'head':
	        return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';
	
	      // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element
	      case 'html':
	        return tag === 'head' || tag === 'body';
	    }
	
	    // Probably in the "in body" parsing mode, so we outlaw only tag combos
	    // where the parsing rules cause implicit opens or closes to be added.
	    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
	    switch (tag) {
	      case 'h1':
	      case 'h2':
	      case 'h3':
	      case 'h4':
	      case 'h5':
	      case 'h6':
	        return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';
	
	      case 'rp':
	      case 'rt':
	        return impliedEndTags.indexOf(parentTag) === -1;
	
	      case 'caption':
	      case 'col':
	      case 'colgroup':
	      case 'frame':
	      case 'head':
	      case 'tbody':
	      case 'td':
	      case 'tfoot':
	      case 'th':
	      case 'thead':
	      case 'tr':
	        // These tags are only valid with a few parents that have special child
	        // parsing rules -- if we're down here, then none of those matched and
	        // so we allow it only if we don't know what the parent is, as all other
	        // cases are invalid.
	        return parentTag == null;
	    }
	
	    return true;
	  };
	
	  /**
	   * Returns whether
	   */
	  var findInvalidAncestorForTag = function (tag, ancestorInfo) {
	    switch (tag) {
	      case 'address':
	      case 'article':
	      case 'aside':
	      case 'blockquote':
	      case 'center':
	      case 'details':
	      case 'dialog':
	      case 'dir':
	      case 'div':
	      case 'dl':
	      case 'fieldset':
	      case 'figcaption':
	      case 'figure':
	      case 'footer':
	      case 'header':
	      case 'hgroup':
	      case 'main':
	      case 'menu':
	      case 'nav':
	      case 'ol':
	      case 'p':
	      case 'section':
	      case 'summary':
	      case 'ul':
	
	      case 'pre':
	      case 'listing':
	
	      case 'table':
	
	      case 'hr':
	
	      case 'xmp':
	
	      case 'h1':
	      case 'h2':
	      case 'h3':
	      case 'h4':
	      case 'h5':
	      case 'h6':
	        return ancestorInfo.pTagInButtonScope;
	
	      case 'form':
	        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;
	
	      case 'li':
	        return ancestorInfo.listItemTagAutoclosing;
	
	      case 'dd':
	      case 'dt':
	        return ancestorInfo.dlItemTagAutoclosing;
	
	      case 'button':
	        return ancestorInfo.buttonTagInScope;
	
	      case 'a':
	        // Spec says something about storing a list of markers, but it sounds
	        // equivalent to this check.
	        return ancestorInfo.aTagInScope;
	
	      case 'nobr':
	        return ancestorInfo.nobrTagInScope;
	    }
	
	    return null;
	  };
	
	  /**
	   * Given a ReactCompositeComponent instance, return a list of its recursive
	   * owners, starting at the root and ending with the instance itself.
	   */
	  var findOwnerStack = function (instance) {
	    if (!instance) {
	      return [];
	    }
	
	    var stack = [];
	    /*eslint-disable space-after-keywords */
	    do {
	      /*eslint-enable space-after-keywords */
	      stack.push(instance);
	    } while (instance = instance._currentElement._owner);
	    stack.reverse();
	    return stack;
	  };
	
	  var didWarn = {};
	
	  validateDOMNesting = function (childTag, childInstance, ancestorInfo) {
	    ancestorInfo = ancestorInfo || emptyAncestorInfo;
	    var parentInfo = ancestorInfo.parentTag;
	    var parentTag = parentInfo && parentInfo.tag;
	
	    var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
	    var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
	    var problematic = invalidParent || invalidAncestor;
	
	    if (problematic) {
	      var ancestorTag = problematic.tag;
	      var ancestorInstance = problematic.instance;
	
	      var childOwner = childInstance && childInstance._currentElement._owner;
	      var ancestorOwner = ancestorInstance && ancestorInstance._currentElement._owner;
	
	      var childOwners = findOwnerStack(childOwner);
	      var ancestorOwners = findOwnerStack(ancestorOwner);
	
	      var minStackLen = Math.min(childOwners.length, ancestorOwners.length);
	      var i;
	
	      var deepestCommon = -1;
	      for (i = 0; i < minStackLen; i++) {
	        if (childOwners[i] === ancestorOwners[i]) {
	          deepestCommon = i;
	        } else {
	          break;
	        }
	      }
	
	      var UNKNOWN = '(unknown)';
	      var childOwnerNames = childOwners.slice(deepestCommon + 1).map(function (inst) {
	        return inst.getName() || UNKNOWN;
	      });
	      var ancestorOwnerNames = ancestorOwners.slice(deepestCommon + 1).map(function (inst) {
	        return inst.getName() || UNKNOWN;
	      });
	      var ownerInfo = [].concat(
	      // If the parent and child instances have a common owner ancestor, start
	      // with that -- otherwise we just start with the parent's owners.
	      deepestCommon !== -1 ? childOwners[deepestCommon].getName() || UNKNOWN : [], ancestorOwnerNames, ancestorTag,
	      // If we're warning about an invalid (non-parent) ancestry, add '...'
	      invalidAncestor ? ['...'] : [], childOwnerNames, childTag).join(' > ');
	
	      var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + ownerInfo;
	      if (didWarn[warnKey]) {
	        return;
	      }
	      didWarn[warnKey] = true;
	
	      if (invalidParent) {
	        var info = '';
	        if (ancestorTag === 'table' && childTag === 'tr') {
	          info += ' Add a <tbody> to your code to match the DOM tree generated by ' + 'the browser.';
	        }
	        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): <%s> cannot appear as a child of <%s>. ' + 'See %s.%s', childTag, ancestorTag, ownerInfo, info) : undefined;
	      } else {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): <%s> cannot appear as a descendant of ' + '<%s>. See %s.', childTag, ancestorTag, ownerInfo) : undefined;
	      }
	    }
	  };
	
	  validateDOMNesting.ancestorInfoContextKey = '__validateDOMNesting_ancestorInfo$' + Math.random().toString(36).slice(2);
	
	  validateDOMNesting.updatedAncestorInfo = updatedAncestorInfo;
	
	  // For testing
	  validateDOMNesting.isTagValidInContext = function (tag, ancestorInfo) {
	    ancestorInfo = ancestorInfo || emptyAncestorInfo;
	    var parentInfo = ancestorInfo.parentTag;
	    var parentTag = parentInfo && parentInfo.tag;
	    return isTagValidWithParent(tag, parentTag) && !findInvalidAncestorForTag(tag, ancestorInfo);
	  };
	}
	
	module.exports = validateDOMNesting;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 120 */
/***/ function(module, exports) {

	module.exports = function(arr, value) {
	  var constructor;
	  if (arr instanceof Array) {
	    constructor = value === void 0 || value === null ? value : value.constructor;
	    return arr.indexOf(value) >= 0 || arr.indexOf(constructor) >= 0;
	  } else {
	    return false;
	  }
	};


/***/ },
/* 121 */
/***/ function(module, exports) {

	module.exports = function(a, b) {
	  var aHSL, bHSL;
	  aHSL = d3.hsl(a);
	  bHSL = d3.hsl(b);
	  a = aHSL.s === 0 ? 361 : aHSL.h;
	  b = bHSL.s === 0 ? 361 : bHSL.h;
	  if (a === b) {
	    return aHSL.l - bHSL.l;
	  } else {
	    return a - b;
	  }
	};


/***/ },
/* 122 */
/***/ function(module, exports) {

	module.exports = function(color) {
	  var blackColors, testColor, userBlack;
	  color = color + "";
	  color = color.replace(RegExp(" ", "g"), "");
	  if (color.indexOf("rgb") === 0) {
	    color = color.split("(")[1].split(")")[0].split(",").slice(0, 3).join(",");
	  }
	  if (color.indexOf("hsl") === 0) {
	    color = color.split(",")[2].split(")")[0];
	  }
	  testColor = d3.rgb(color).toString();
	  blackColors = ["black", "#000", "#000000", "0%", "0,0,0"];
	  userBlack = blackColors.indexOf(color) >= 0;
	  return testColor !== "#000000" || userBlack;
	};


/***/ },
/* 123 */
/***/ function(module, exports, __webpack_require__) {

	var print, validObject,
	  indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };
	
	print = __webpack_require__(2);
	
	validObject = __webpack_require__(7);
	
	module.exports = function(vars, type) {
	  var get_keys, k, kk, lengthMatch, ref, ref1, timerString, v, vv;
	  timerString = type + " key analysis";
	  if (vars.dev.value) {
	    print.time(timerString);
	  }
	  vars[type].keys = {};
	  get_keys = function(arr) {
	    var a, i, k, len, results, results1, v;
	    if (arr instanceof Array) {
	      results = [];
	      for (i = 0, len = arr.length; i < len; i++) {
	        a = arr[i];
	        results.push(get_keys(a));
	      }
	      return results;
	    } else if (validObject(arr)) {
	      results1 = [];
	      for (k in arr) {
	        v = arr[k];
	        if (k.indexOf("d3plus") !== 0 && !(indexOf.call(vars[type].keys, k) >= 0) && v !== null) {
	          results1.push(vars[type].keys[k] = typeof v);
	        } else {
	          results1.push(void 0);
	        }
	      }
	      return results1;
	    }
	  };
	  if (validObject(vars[type].value)) {
	    lengthMatch = d3.keys(vars[type].value).length === vars.id.nesting.length;
	    ref = vars[type].value;
	    for (k in ref) {
	      v = ref[k];
	      if (lengthMatch && vars.id.nesting.indexOf(k) >= 0 && validObject(v)) {
	        for (kk in v) {
	          vv = v[kk];
	          get_keys(vv);
	        }
	      } else {
	        get_keys(v);
	      }
	    }
	  } else {
	    ref1 = vars[type].value;
	    for (k in ref1) {
	      v = ref1[k];
	      get_keys(v);
	    }
	  }
	  if (vars.dev.value) {
	    return print.time(timerString);
	  }
	};


/***/ },
/* 124 */
/***/ function(module, exports, __webpack_require__) {

	var print, validObject;
	
	print = __webpack_require__(2);
	
	validObject = __webpack_require__(7);
	
	module.exports = function(vars, key, next) {
	  var consoleMessage, fileType, parser, url;
	  consoleMessage = vars.dev.value;
	  if (consoleMessage) {
	    print.time("loading " + key);
	  }
	  url = vars[key].url;
	  if (!vars[key].filetype.value) {
	    fileType = url.slice(url.length - 5).split(".");
	    if (fileType.length > 1) {
	      fileType = fileType[1];
	    } else {
	      fileType = false;
	    }
	    if (fileType) {
	      if (fileType === "txt") {
	        fileType = "text";
	      }
	      if (vars[key].filetype.accepted.indexOf(fileType) < 0) {
	        fileType = "json";
	      }
	    } else {
	      fileType = "json";
	    }
	  } else {
	    fileType = vars[key].filetype.value;
	  }
	  if (fileType === "dsv") {
	    parser = d3.dsv(vars[key].delimiter.value, "text/plain");
	  } else {
	    parser = d3[fileType];
	  }
	  return parser(url, function(error, data) {
	    var k, ret;
	    if (!error && data) {
	      if (typeof vars[key].callback === "function") {
	        ret = vars[key].callback(data);
	        if (ret) {
	          if (validObject(ret) && key in ret) {
	            for (k in ret) {
	              if (k in vars) {
	                vars[k].value = ret[k];
	              }
	            }
	          } else {
	            vars[key].value = ret;
	          }
	        }
	      } else {
	        vars[key].value = data;
	      }
	      if (["json"].indexOf(fileType) < 0) {
	        vars[key].value.forEach(function(d) {
	          var results;
	          results = [];
	          for (k in d) {
	            if (!isNaN(d[k])) {
	              results.push(d[k] = parseFloat(d[k]));
	            } else if (d[k].toLowerCase() === "false") {
	              results.push(d[k] = false);
	            } else if (d[k].toLowerCase() === "true") {
	              results.push(d[k] = true);
	            } else if (d[k].toLowerCase() === "null") {
	              results.push(d[k] = null);
	            } else {
	              if (d[k].toLowerCase() === "undefined") {
	                results.push(d[k] = void 0);
	              } else {
	                results.push(void 0);
	              }
	            }
	          }
	          return results;
	        });
	      }
	      vars[key].changed = true;
	      vars[key].loaded = true;
	    } else {
	      vars.error.internal = "Could not load data from: \"" + url + "\"";
	    }
	    if (consoleMessage) {
	      print.timeEnd("loading " + key);
	    }
	    return next();
	  });
	};


/***/ },
/* 125 */
/***/ function(module, exports, __webpack_require__) {

	var sizes;
	
	sizes = __webpack_require__(36);
	
	module.exports = function(vars, opts) {
	  var f, format, func, getFormat, limit, locale, p, periods, pp, prev, render, small, step, style, time, total, vals, values;
	  values = opts.values || vars.data.time.ticks;
	  style = opts.style || {};
	  limit = opts.limit || vars.width.value;
	  time = {};
	  periods = vars.data.time.periods;
	  step = vars.data.time.stepType;
	  total = vars.data.time.totalType;
	  func = vars.data.time.functions;
	  getFormat = vars.data.time.getFormat;
	  locale = vars.format.locale.value.format;
	  if (vars.time.format.value) {
	    time.format = vars.data.time.format;
	    time.values = values;
	    time.sizes = sizes(values.map(function(v) {
	      return time.format(v);
	    }), style);
	  } else {
	    p = periods.indexOf(step);
	    while (p <= periods.indexOf(total)) {
	      vals = values.filter(function(t) {
	        var match, pp;
	        if (p === periods.indexOf(step)) {
	          return true;
	        }
	        match = true;
	        pp = p - 1;
	        if (p < 0) {
	          return true;
	        }
	        while (pp >= periods.indexOf(step)) {
	          if (!match) {
	            break;
	          }
	          match = !func[pp](t);
	          pp--;
	        }
	        return match;
	      });
	      if (periods[p] === total) {
	        format = d3.locale(locale).timeFormat(getFormat(periods[p], total));
	      } else {
	        pp = p;
	        format = [];
	        while (pp <= periods.indexOf(total)) {
	          prev = pp - 1 < periods.indexOf(step) ? pp : pp - 1;
	          prev = periods[prev];
	          small = periods[pp] === prev && step !== total;
	          f = getFormat(prev, periods[pp], small);
	          format.push([f, func[pp]]);
	          pp++;
	        }
	        format[format.length - 1][1] = function() {
	          return true;
	        };
	        format = d3.locale(locale).timeFormat.multi(format);
	      }
	      render = sizes(vals.map(function(v) {
	        return format(v);
	      }), style);
	      if (d3.sum(render, function(r) {
	        return r.width;
	      }) < limit || p === periods.indexOf(total)) {
	        time.format = format;
	        time.values = vals;
	        time.sizes = render;
	        break;
	      }
	      p++;
	    }
	  }
	  return time;
	};


/***/ },
/* 126 */
/***/ function(module, exports, __webpack_require__) {

	var copy, update;
	
	copy = __webpack_require__(11);
	
	update = __webpack_require__(80);
	
	module.exports = function(vars, object, value) {
	  if (object.process === Array) {
	    return update(copy(object.value), value);
	  } else if (typeof object.process === "object" && typeof value === "string") {
	    return object.process[value];
	  } else if (typeof object.process === "function") {
	    return object.process(value, vars, object);
	  } else {
	    return value;
	  }
	};


/***/ },
/* 127 */
/***/ function(module, exports, __webpack_require__) {

	var stylesheet;
	
	stylesheet = __webpack_require__(50);
	
	module.exports = function(value, vars, method) {
	  if (value === false || value.indexOf("fa-") < 0 || (value.indexOf("fa-") === 0 && stylesheet("font-awesome"))) {
	    return value;
	  } else {
	    return method.fallback;
	  }
	};


/***/ },
/* 128 */
/***/ function(module, exports, __webpack_require__) {

	var contains, format, list, print;
	
	contains = __webpack_require__(120);
	
	format = __webpack_require__(14);
	
	list = __webpack_require__(46);
	
	print = __webpack_require__(2);
	
	module.exports = function(vars, accepted, value, method, text) {
	  var a, allowed, app, i, len, recs, str, val;
	  if (typeof accepted === "function") {
	    accepted = accepted(vars);
	  }
	  if (!(accepted instanceof Array)) {
	    accepted = [accepted];
	  }
	  allowed = contains(accepted, value);
	  if (allowed === false && value !== void 0) {
	    recs = [];
	    val = JSON.stringify(value);
	    if (typeof value !== "string") {
	      val = "\"" + val + "\"";
	    }
	    for (i = 0, len = accepted.length; i < len; i++) {
	      a = accepted[i];
	      if (typeof a === "string") {
	        recs.push("\"" + a + "\"");
	      } else if (typeof a === "function") {
	        recs.push(a.toString().split("()")[0].substring(9));
	      } else if (a === void 0) {
	        recs.push("undefined");
	      } else {
	        recs.push(JSON.stringify(a));
	      }
	    }
	    recs = list(recs, vars.format.locale.value.ui.or);
	    if (vars.type && ["mode", "shape"].indexOf(method) >= 0) {
	      str = vars.format.locale.value.error.accepted;
	      app = vars.format.locale.value.visualization[vars.type.value] || vars.type.value;
	      print.warning(format(str, val, method, app, recs), method);
	    } else {
	      str = vars.format.locale.value.dev.accepted;
	      print.warning(format(str, val, text, recs), method);
	    }
	  }
	  return !allowed;
	};


/***/ },
/* 129 */
/***/ function(module, exports, __webpack_require__) {

	var reset, validObject;
	
	validObject = __webpack_require__(7);
	
	reset = function(obj, method) {
	  var o;
	  if (obj.changed) {
	    obj.changed = false;
	  }
	  if (method === "draw") {
	    obj.frozen = false;
	    obj.update = true;
	    obj.first = false;
	  }
	  for (o in obj) {
	    if (o.indexOf("d3plus") < 0 && validObject(obj[o])) {
	      reset(obj[o], o);
	    }
	  }
	};
	
	module.exports = reset;


/***/ },
/* 130 */
/***/ function(module, exports, __webpack_require__) {

	var fontTester, validate;
	
	fontTester = __webpack_require__(84);
	
	validate = function(fontList) {
	  var completed, family, font, fontString, i, j, len, len1, monospace, proportional, testElement, testWidth, tester, valid;
	  if (!(fontList instanceof Array)) {
	    fontList = fontList.split(",");
	  }
	  for (i = 0, len = fontList.length; i < len; i++) {
	    font = fontList[i];
	    font.trim();
	  }
	  fontString = fontList.join(", ");
	  completed = validate.complete;
	  if (fontString in completed) {
	    return completed[fontString];
	  }
	  testElement = function(font) {
	    return tester.append("span").style("font-family", font).style("font-size", "32px").style("padding", "0px").style("margin", "0px").text("abcdefghiABCDEFGHI_!@#$%^&*()_+1234567890");
	  };
	  testWidth = function(font, control) {
	    var elem, width1, width2;
	    elem = testElement(font);
	    width1 = elem.node().offsetWidth;
	    width2 = control.node().offsetWidth;
	    elem.remove();
	    return width1 !== width2;
	  };
	  tester = fontTester("div");
	  monospace = testElement("monospace");
	  proportional = testElement("sans-serif");
	  for (j = 0, len1 = fontList.length; j < len1; j++) {
	    family = fontList[j];
	    valid = testWidth(family + ",monospace", monospace);
	    if (!valid) {
	      valid = testWidth(family + ",sans-serif", proportional);
	    }
	    if (valid) {
	      valid = family;
	      break;
	    }
	  }
	  if (!valid) {
	    valid = "sans-serif";
	  }
	  monospace.remove();
	  proportional.remove();
	  completed[fontString] = valid;
	  return valid;
	};
	
	validate.complete = {};
	
	module.exports = validate;


/***/ },
/* 131 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = function(elem, vars) {
	  var legible, lighter, textColor;
	  legible = __webpack_require__(28);
	  lighter = __webpack_require__(52);
	  textColor = __webpack_require__(25);
	  return elem.style("background-color", function(d) {
	    var color;
	    if (vars.focus.value === d[vars.id.value]) {
	      color = vars.ui.color.secondary.value;
	    } else {
	      color = vars.ui.color.primary.value;
	    }
	    if (vars.hover.value === d[vars.id.value]) {
	      color = d3.rgb(color).darker(0.15).toString();
	    }
	    return color;
	  }).style("color", function(d) {
	    var bg, color, image, opacity;
	    if (vars.focus.value === d[vars.id.value]) {
	      opacity = 0.75;
	    } else {
	      opacity = 1;
	    }
	    image = d[vars.icon.value] && vars.data.viz.length < vars.data.large;
	    if (!image && d[vars.color.value]) {
	      color = legible(d[vars.color.value]);
	    } else {
	      if (vars.focus.value === d[vars.id.value]) {
	        bg = vars.ui.color.secondary.value;
	      } else {
	        bg = vars.ui.color.primary.value;
	      }
	      if (vars.hover.value === d[vars.id.value]) {
	        bg = d3.rgb(bg).darker(0.15).toString();
	      }
	      color = textColor(bg);
	    }
	    color = d3.rgb(color);
	    return "rgba(" + color.r + "," + color.g + "," + color.b + "," + opacity + ")";
	  }).style('border-color', vars.ui.color.secondary.value);
	};


/***/ },
/* 132 */
/***/ function(module, exports, __webpack_require__) {

	var active, copy, form, print;
	
	active = __webpack_require__(380);
	
	copy = __webpack_require__(11);
	
	form = __webpack_require__(48);
	
	print = __webpack_require__(2);
	
	module.exports = function(vars) {
	  var deepest, large, order;
	  if (vars.open.value) {
	    if (vars.dev.value) {
	      print.time("updating list items");
	    }
	    if (!("items" in vars.container)) {
	      vars.container.items = form().container(vars.container.list).type("button").ui({
	        border: 0,
	        display: "block",
	        margin: 0
	      }).width(false);
	    }
	    large = vars.draw.timing ? vars.data.large : 1;
	    order = copy(vars.order);
	    order.value = vars.search.term.length ? "d3plus_order" : vars.order.value;
	    deepest = vars.depth.value === vars.id.nesting.length - 1;
	    if (vars.focus.changed || vars.container.items.focus() === false) {
	      vars.container.items.focus(vars.focus.value, function(value) {
	        var change, data, depth, solo;
	        data = vars.data.filtered.filter(function(f) {
	          return f[vars.id.value] === value;
	        })[0];
	        if (vars.depth.value < vars.id.nesting.length - 1 && vars.id.nesting[vars.depth.value + 1] in data) {
	          depth = vars.depth.value;
	          solo = vars.id.solo.value;
	          vars.history.states.push(function() {
	            return vars.self.depth(depth).id({
	              solo: solo
	            }).draw();
	          });
	          vars.self.depth(vars.depth.value + 1).id({
	            solo: [value]
	          }).draw();
	        } else {
	          if (!vars.depth.changed) {
	            vars.self.open(false);
	          }
	          change = value !== vars.focus.value;
	          if (change && vars.active.value) {
	            change = active(vars, value);
	          }
	          if (change) {
	            vars.self.focus(value).draw();
	          }
	        }
	      });
	    }
	    vars.container.items.active(vars.active.value).data({
	      large: large,
	      sort: vars.data.sort.value,
	      value: vars.data.filtered
	    }).draw({
	      update: vars.draw.update
	    }).font(vars.font.secondary).format(vars.format).hover(vars.hover.value).id(vars.id.value).icon({
	      button: (deepest ? false : vars.icon.next),
	      select: (deepest ? vars.icon.select : false),
	      value: vars.icon.value
	    }).order(order).text(vars.text.secondary.value || vars.text.value).timing({
	      ui: vars.draw.timing
	    }).ui({
	      color: {
	        primary: (vars.id.nesting.length === 1 ? vars.ui.color.primary.value : vars.ui.color.secondary.value),
	        secondary: vars.ui.color.secondary.value
	      },
	      padding: vars.ui.padding.css
	    }).draw();
	    if (vars.dev.value) {
	      print.timeEnd("updating list items");
	    }
	  }
	};


/***/ },
/* 133 */
/***/ function(module, exports, __webpack_require__) {

	var Heap, normalize;
	
	Heap = __webpack_require__(338);
	
	normalize = __webpack_require__(68);
	
	module.exports = function(edges, source, options) {
	  var K, a, alt, b, directed, distance, edge, endpoint, getPath, heap, i, id, j, len, len1, maxsize, node, nodeid, nodes, path, ref, ref1, ref2, res, result, startpoint, target, u, visited;
	  if (options == null) {
	    options = {};
	  }
	  options.source = source;
	  if ((options.nodes == null) || typeof options.nodes !== 'object') {
	    ref = normalize(edges, options), edges = ref[0], options = ref[1];
	    if (options === null) {
	      return null;
	    }
	  }
	  source = options.source, target = options.target, directed = options.directed, distance = options.distance, nodeid = options.nodeid, startpoint = options.startpoint, endpoint = options.endpoint, K = options.K, nodes = options.nodes;
	  for (id in nodes) {
	    node = nodes[id];
	    node.count = 0;
	  }
	  heap = new Heap(function(a, b) {
	    return a.distance - b.distance;
	  });
	  visited = {};
	  if (target == null) {
	    visited[source] = true;
	  }
	  heap.push({
	    edge: null,
	    target: source,
	    distance: 0
	  });
	  maxsize = 0;
	  result = [];
	  while (!heap.empty()) {
	    maxsize = Math.max(maxsize, heap.size());
	    path = heap.pop();
	    u = path.target;
	    nodes[u].count++;
	    if (target == null) {
	      result.push(path);
	    } else if (u === target) {
	      result.push(path);
	    }
	    if (result.length === K) {
	      break;
	    }
	    if (nodes[u].count <= K) {
	      ref1 = nodes[u].outedges;
	      for (i = 0, len = ref1.length; i < len; i++) {
	        edge = ref1[i];
	        a = nodeid(startpoint(edge));
	        b = nodeid(endpoint(edge));
	        if (!directed && b === u) {
	          ref2 = [b, a], a = ref2[0], b = ref2[1];
	        }
	        if (target == null) {
	          if (visited[b]) {
	            continue;
	          }
	          visited[b] = true;
	        }
	        alt = path.distance + distance(edge);
	        heap.push({
	          edge: edge,
	          previous: path,
	          target: b,
	          distance: alt
	        });
	      }
	    }
	  }
	  getPath = function(path) {
	    edges = [];
	    while (path.edge != null) {
	      edges.push(path.edge);
	      path = path.previous;
	    }
	    return edges.reverse();
	  };
	  for (j = 0, len1 = result.length; j < len1; j++) {
	    res = result[j];
	    if (target != null) {
	      delete res.target;
	      res.edges = getPath(res);
	    }
	    delete res.edge;
	    delete res.previous;
	  }
	  return result;
	};


/***/ },
/* 134 */
/***/ function(module, exports, __webpack_require__) {

	var arrowStyle, scroll;
	
	scroll = __webpack_require__(58);
	
	module.exports = function(x, y, id) {
	  var d, mins, tooltip;
	  if (!id) {
	    id = "default";
	  }
	  tooltip = d3.select("div#d3plus_tooltip_id_" + id);
	  if (tooltip.node()) {
	    d = tooltip.datum();
	    d.cx = x;
	    d.cy = y;
	    if (!d.fixed) {
	      if (d.parent.node().tagName.toLowerCase() === "body") {
	        mins = [scroll.x(), scroll.y()];
	      } else {
	        mins = [0, 0];
	      }
	      if (d.anchor.y !== "center") {
	        if (d.anchor.x === "right") {
	          d.x = d.cx - d.arrow_offset - 4;
	        } else if (d.anchor.x === "center") {
	          d.x = d.cx - d.width / 2;
	        } else {
	          if (d.anchor.x === "left") {
	            d.x = d.cx - d.width + d.arrow_offset + 2;
	          }
	        }
	        if (d.anchor.y === "bottom") {
	          d.flip = d.cy + d.height + d.offset <= d.limit[1];
	        } else {
	          if (d.anchor.y === "top") {
	            d.flip = d.cy - d.height - d.offset < mins[1];
	          }
	        }
	        if (d.flip) {
	          d.y = d.cy + d.offset + d.arrow_offset;
	        } else {
	          d.y = d.cy - d.height - d.offset - d.arrow_offset;
	        }
	      } else {
	        d.y = d.cy - d.height / 2;
	        if (d.anchor.x === "right") {
	          d.flip = d.cx + d.width + d.offset <= d.limit[0];
	        } else {
	          if (d.anchor.x === "left") {
	            d.flip = d.cx - d.width - d.offset < mins[0];
	          }
	        }
	        if (d.anchor.x === "center") {
	          d.flip = false;
	          d.x = d.cx - d.width / 2;
	        } else if (d.flip) {
	          d.x = d.cx + d.offset + d.arrow_offset;
	        } else {
	          d.x = d.cx - d.width - d.offset;
	        }
	      }
	      if (d.x < mins[0]) {
	        d.x = mins[0];
	      } else {
	        if (d.x + d.width > d.limit[0]) {
	          d.x = d.limit[0] - d.width;
	        }
	      }
	      if (d.y < mins[1]) {
	        d.y = mins[1];
	      } else {
	        if (d.y + d.height > d.limit[1]) {
	          d.y = d.limit[1] - d.height;
	        }
	      }
	    }
	    tooltip.style("top", d.y + "px").style("left", d.x + "px");
	    if (d.arrow) {
	      tooltip.selectAll(".d3plus_tooltip_arrow").call(arrowStyle);
	    }
	  }
	  return tooltip;
	};
	
	arrowStyle = function(arrow) {
	  return arrow.style("bottom", function(d) {
	    if (d.anchor.y !== "center" && !d.flip) {
	      return "-5px";
	    } else {
	      return "auto";
	    }
	  }).style("right", function(d) {
	    if (d.anchor.y === "center" && !d.flip) {
	      return "-5px";
	    } else {
	      return "auto";
	    }
	  }).style("top", function(d) {
	    if (d.anchor.y !== "center" && d.flip) {
	      return "-5px";
	    } else if (d.anchor.y === "center") {
	      return "50%";
	    } else {
	      return "auto";
	    }
	  }).style("left", function(d) {
	    if (d.anchor.y === "center" && d.flip) {
	      return "-5px";
	    } else if (d.anchor.y !== "center") {
	      return "50%";
	    } else {
	      return "auto";
	    }
	  }).style("margin-left", function(d) {
	    var arrow_x;
	    if (d.anchor.y === "center") {
	      return "auto";
	    } else {
	      if (d.anchor.x === "right") {
	        arrow_x = -d.width / 2 + d.arrow_offset / 2;
	      } else if (d.anchor.x === "left") {
	        arrow_x = d.width / 2 - d.arrow_offset * 2 - 5;
	      } else {
	        arrow_x = -5;
	      }
	      if (d.cx - d.width / 2 - 5 < arrow_x) {
	        arrow_x = d.cx - d.width / 2 - 5;
	        if (arrow_x < 2 - d.width / 2) {
	          arrow_x = 2 - d.width / 2;
	        }
	      } else if (-(d.limit[0] - d.cx - d.width / 2 + 5) > arrow_x) {
	        arrow_x = -(d.limit[0] - d.cx - d.width / 2 + 5);
	        if (arrow_x > d.width / 2 - 11) {
	          arrow_x = d.width / 2 - 11;
	        }
	      }
	      return arrow_x + "px";
	    }
	  }).style("margin-top", function(d) {
	    var arrow_y;
	    if (d.anchor.y !== "center") {
	      return "auto";
	    } else {
	      if (d.anchor.y === "bottom") {
	        arrow_y = -d.height / 2 + d.arrow_offset / 2 - 1;
	      } else if (d.anchor.y === "top") {
	        arrow_y = d.height / 2 - d.arrow_offset * 2 - 2;
	      } else {
	        arrow_y = -9;
	      }
	      if (d.cy - d.height / 2 - d.arrow_offset < arrow_y) {
	        arrow_y = d.cy - d.height / 2 - d.arrow_offset;
	        if (arrow_y < 4 - d.height / 2) {
	          arrow_y = 4 - d.height / 2;
	        }
	      } else if (-(d.limit[1] - d.cy - d.height / 2 + d.arrow_offset) > arrow_y) {
	        arrow_y = -(d.limit[1] - d.cy - d.height / 2 + d.arrow_offset);
	        if (arrow_y > d.height / 2 - 22) {
	          arrow_y = d.height / 2 - 22;
	        }
	      }
	      return arrow_y + "px";
	    }
	  });
	};


/***/ },
/* 135 */
/***/ function(module, exports) {

	module.exports = function(url, callback) {
	  var img;
	  img = new Image();
	  img.src = url;
	  img.crossOrigin = "Anonymous";
	  img.onload = function() {
	    var canvas, context;
	    canvas = document.createElement("canvas");
	    canvas.width = this.width;
	    canvas.height = this.height;
	    context = canvas.getContext("2d");
	    context.drawImage(this, 0, 0);
	    callback.call(this, canvas.toDataURL("image/png"));
	    canvas = null;
	  };
	};


/***/ },
/* 136 */
/***/ function(module, exports, __webpack_require__) {

	var fetchColor, fetchValue, lighter, segments;
	
	fetchValue = __webpack_require__(3);
	
	fetchColor = __webpack_require__(20);
	
	lighter = __webpack_require__(52);
	
	segments = __webpack_require__(56);
	
	module.exports = function(d, vars, stroke) {
	  var active, shape, temp, total;
	  shape = d.d3plus.shape || vars.shape.value;
	  if (vars.shape.value === "line" && shape !== "circle") {
	    return "none";
	  } else if (vars.shape.value === "area" || shape === "active" || vars.shape.value === "line") {
	    return fetchColor(vars, d);
	  } else if (shape === "temp") {
	    if (stroke) {
	      return fetchColor(vars, d);
	    } else {
	      return "url(#d3plus_hatch_" + d.d3plus.id + ")";
	    }
	  } else if (d.d3plus["static"]) {
	    return lighter(fetchColor(vars, d), .75);
	  }
	  active = segments(vars, d, "active");
	  temp = segments(vars, d, "temp");
	  total = segments(vars, d, "total");
	  if ((!vars.active.value && !vars.temp.value) || active === true || (active && total && active >= total && !temp) || (active && !total)) {
	    return fetchColor(vars, d);
	  } else if (vars.active.spotlight.value) {
	    return vars.color.missing;
	  } else {
	    return lighter(fetchColor(vars, d), .75);
	  }
	};


/***/ },
/* 137 */
/***/ function(module, exports) {

	module.exports = function(data, vars) {
	  var depth, max_depth, nextDepth;
	  max_depth = vars.id.nesting.length - 1;
	  depth = vars.depth.value;
	  nextDepth = vars.id.nesting[depth + 1];
	  if (vars.types[vars.type.value].nesting === false) {
	    return 0;
	  } else if ((data.d3plus.merged || (nextDepth in data && depth < max_depth)) && (!data || nextDepth in data)) {
	    return 1;
	  } else if (((depth === max_depth && depth > 0) || (data && nextDepth && (!(nextDepth in data)))) && (vars.small || !vars.tooltip.html.value)) {
	    return -1;
	  } else {
	    return 0;
	  }
	};


/***/ },
/* 138 */
/***/ function(module, exports) {

	module.exports = function(vars, event) {
	  var enabled, zoom, zoomable, zoomed;
	  zoom = vars.zoom;
	  if (!event) {
	    event = d3.event;
	  }
	  zoomed = zoom.scale > zoom.behavior.scaleExtent()[0];
	  enabled = vars.types[vars.type.value].zoom && zoom.value && zoom.scroll.value;
	  zoomable = event.touches && event.touches.length > 1 && enabled;
	  if (!zoomable && !zoomed) {
	    event.stopPropagation();
	  }
	};


/***/ },
/* 139 */
/***/ function(module, exports) {

	module.exports = function(vars, timing) {
	  var translate;
	  if (typeof timing !== "number") {
	    timing = vars.timing.transitions;
	  }
	  translate = "translate(" + vars.zoom.translate + ")";
	  translate += "scale(" + vars.zoom.scale + ")";
	  if (timing) {
	    return vars.g.viz.transition().duration(timing).attr("transform", translate);
	  } else {
	    return vars.g.viz.attr("transform", translate);
	  }
	};


/***/ },
/* 140 */
/***/ function(module, exports, __webpack_require__) {

	var area, closest, fetchValue, graph, nest, sort, stack, threshold;
	
	closest = __webpack_require__(47);
	
	fetchValue = __webpack_require__(3);
	
	graph = __webpack_require__(57);
	
	nest = __webpack_require__(95);
	
	sort = __webpack_require__(19);
	
	stack = __webpack_require__(96);
	
	threshold = __webpack_require__(70);
	
	area = function(vars) {
	  var d, data, discrete, domains, i, j, len, len1, opposite, point, ref;
	  graph(vars, {
	    buffer: vars.axes.opposite,
	    zero: true
	  });
	  domains = vars.x.domain.viz.concat(vars.y.domain.viz);
	  if (domains.indexOf(void 0) >= 0) {
	    return [];
	  }
	  data = sort(vars.data.viz, null, null, null, vars);
	  discrete = vars[vars.axes.discrete];
	  opposite = vars[vars.axes.opposite];
	  for (i = 0, len = data.length; i < len; i++) {
	    point = data[i];
	    if (!point.d3plus) {
	      point.d3plus = {};
	    }
	    ref = point.values;
	    for (j = 0, len1 = ref.length; j < len1; j++) {
	      d = ref[j];
	      if (!d.d3plus) {
	        d.d3plus = {};
	      }
	      d.d3plus.x = discrete.scale.viz(fetchValue(vars, d, discrete.value));
	      d.d3plus.x += vars.axes.margin.left;
	      d.d3plus.y = opposite.scale.viz(fetchValue(vars, d, opposite.value));
	      d.d3plus.y += vars.axes.margin.top;
	      if (d.d3plus.merged instanceof Array) {
	        if (!point.d3plus.merged) {
	          point.d3plus.merged = [];
	        }
	        point.d3plus.merged = point.d3plus.merged.concat(d.d3plus.merged);
	      }
	      if (d.d3plus.text && !point.d3plus.text) {
	        point.d3plus.text = d.d3plus.text;
	      }
	    }
	  }
	  return stack(vars, data);
	};
	
	area.filter = function(vars, data) {
	  return nest(vars, threshold(vars, data, vars[vars.axes.discrete].value));
	};
	
	area.requirements = ["data", "x", "y"];
	
	area.setup = function(vars) {
	  var axis, size, y;
	  if (!vars.axes.discrete) {
	    axis = vars.time.value === vars.y.value ? "y" : "x";
	    vars.self[axis]({
	      scale: "discrete"
	    });
	  }
	  if (!vars[vars.axes.discrete].zerofill.value) {
	    vars.self[vars.axes.discrete]({
	      zerofill: true
	    });
	  }
	  if (!vars[vars.axes.opposite].stacked.value && vars.type.value === "stacked") {
	    vars.self[vars.axes.opposite]({
	      stacked: true
	    });
	  }
	  y = vars[vars.axes.opposite];
	  size = vars.size;
	  if ((!y.value && size.value) || (size.changed && size.previous === y.value)) {
	    return vars.self[vars.axes.opposite](size.value);
	  } else if ((!size.value && y.value) || (y.changed && y.previous === size.value)) {
	    return vars.self.size(y.value);
	  }
	};
	
	area.shapes = ["area"];
	
	area.threshold = function(vars) {
	  return 20 / vars.height.viz;
	};
	
	area.tooltip = "static";
	
	module.exports = area;


/***/ },
/* 141 */
/***/ function(module, exports, __webpack_require__) {

	var buckets, closest;
	
	buckets = __webpack_require__(30);
	
	closest = __webpack_require__(47);
	
	module.exports = function(vars, axis, buffer) {
	  var add, additional, allNegative, allPositive, closestTime, copy, d, diff, difference, domain, domainCompare, domainHigh, domainLow, i, lowerDiff, lowerMod, lowerScale, lowerValue, maxSize, opp, orig_domain, range, rangeMax, second, strings, timeIndex, upperDiff, upperMod, upperScale, upperValue, zero;
	  if (vars[axis].scale.value !== "share" && !vars[axis].range.value && vars[axis].reset) {
	    if (axis === vars.axes.discrete) {
	      domain = vars[axis].scale.viz.domain();
	      if (typeof domain[0] === "string") {
	        i = domain.length;
	        while (i >= 0) {
	          domain.splice(i, 0, "d3plus_buffer_" + i);
	          i--;
	        }
	        range = vars[axis].scale.viz.range();
	        range = buckets(d3.extent(range), domain.length);
	        return vars[axis].scale.viz.domain(domain).range(range);
	      } else {
	        if (axis.indexOf("y") === 0) {
	          domain = domain.slice().reverse();
	        }
	        if (vars[axis].ticks.values.length === 1) {
	          if (vars[axis].value === vars.time.value && vars.data.time.ticks.length !== 1) {
	            closestTime = closest(vars.data.time.ticks, domain[0]);
	            timeIndex = vars.data.time.ticks.indexOf(closestTime);
	            if (timeIndex > 0) {
	              domain[0] = vars.data.time.ticks[timeIndex - 1];
	            } else {
	              diff = vars.data.time.ticks[timeIndex + 1] - closestTime;
	              domain[0] = new Date(closestTime.getTime() - diff);
	            }
	            if (timeIndex < vars.data.time.ticks.length - 1) {
	              domain[1] = vars.data.time.ticks[timeIndex + 1];
	            } else {
	              diff = closestTime - vars.data.time.ticks[timeIndex - 1];
	              domain[1] = new Date(closestTime.getTime() + diff);
	            }
	          } else {
	            domain[0] -= 1;
	            domain[1] += 1;
	          }
	        } else if (vars.axes.scale) {
	          difference = Math.abs(domain[1] - domain[0]);
	          additional = difference / (vars[axis].ticks.values.length - 1);
	          additional = additional / 2;
	          rangeMax = vars[axis].scale.viz.range()[1];
	          maxSize = vars.axes.scale.range()[1] * 1.5;
	          domainLow = vars[axis].scale.viz.invert(-maxSize);
	          domainHigh = vars[axis].scale.viz.invert(rangeMax + maxSize);
	          if (domain[0] - additional < domainLow) {
	            domain[0] = domain[0] - additional;
	            domain[1] = domain[1] + additional;
	          } else {
	            domain = [domainLow, domainHigh];
	            if (axis.indexOf("y") === 0) {
	              domain = domain.reverse();
	            }
	            domainCompare = vars[axis].scale.viz.domain();
	            domainCompare = domainCompare[1] - domainCompare[0];
	            if (!domainCompare) {
	              domain[0] -= 1;
	              domain[1] += 1;
	            }
	          }
	        } else if (vars[axis].value === vars.time.value) {
	          difference = Math.abs(domain[1] - domain[0]);
	          additional = difference / (vars[axis].ticks.values.length - 1);
	          additional = additional / 2;
	          domain[0] = domain[0] - additional;
	          domain[1] = domain[1] + additional;
	        } else {
	          difference = Math.abs(domain[1] - domain[0]);
	          add = difference / 2;
	          i = domain.length;
	          orig_domain = domain.slice();
	          while (i >= 0) {
	            d = i ? orig_domain[i - 1] + add : orig_domain[i] - add;
	            domain.splice(i, 0, d);
	            i--;
	          }
	          range = vars[axis].scale.viz.range();
	          range = buckets(d3.extent(range), domain.length);
	          vars[axis].scale.viz.domain(domain).range(range);
	        }
	        if (axis.indexOf("y") === 0) {
	          domain = domain.reverse();
	        }
	        return vars[axis].scale.viz.domain(domain);
	      }
	    } else if ((buffer === "x" && axis.indexOf("x") === 0) || (buffer === "y" && axis.indexOf("y") === 0) || (buffer === true)) {
	      domain = vars[axis].scale.viz.domain();
	      allPositive = domain[0] >= 0 && domain[1] >= 0;
	      allNegative = domain[0] <= 0 && domain[1] <= 0;
	      if (vars[axis].scale.value === "log") {
	        zero = allPositive ? 1 : -1;
	        if (allPositive && axis.indexOf("y") === 0) {
	          domain = domain.slice().reverse();
	        }
	        lowerScale = Math.pow(10, parseInt(Math.abs(domain[0])).toString().length - 1) * zero;
	        lowerMod = domain[0] % lowerScale;
	        lowerDiff = lowerMod;
	        if (lowerMod && lowerDiff / lowerScale <= 0.1) {
	          lowerDiff += lowerScale * zero;
	        }
	        lowerValue = lowerMod === 0 ? lowerScale : lowerDiff;
	        domain[0] -= lowerValue;
	        if (domain[0] === 0) {
	          domain[0] = zero;
	        }
	        upperScale = Math.pow(10, parseInt(Math.abs(domain[1])).toString().length - 1) * zero;
	        upperMod = domain[1] % upperScale;
	        upperDiff = Math.abs(upperScale - upperMod);
	        if (upperMod && upperDiff / upperScale <= 0.1) {
	          upperDiff += upperScale * zero;
	        }
	        upperValue = upperMod === 0 ? upperScale : upperDiff;
	        domain[1] += upperValue;
	        if (domain[1] === 0) {
	          domain[1] = zero;
	        }
	        if (allPositive && axis.indexOf("y") === 0) {
	          domain = domain.reverse();
	        }
	      } else {
	        zero = 0;
	        if (axis.indexOf("y") === 0) {
	          domain = domain.slice().reverse();
	        }
	        strings = domain.filter(function(d) {
	          return d.constructor === String;
	        });
	        additional = Math.abs(domain[1] - domain[0]) * 0.05 || 1;
	        if (!strings.length) {
	          domain[0] = domain[0] - additional;
	          domain[1] = domain[1] + additional;
	          if ((allPositive && domain[0] < zero) || (allNegative && domain[0] > zero)) {
	            domain[0] = zero;
	          }
	          if ((allPositive && domain[1] < zero) || (allNegative && domain[1] > zero)) {
	            domain[1] = zero;
	          }
	        }
	        if (axis.indexOf("y") === 0) {
	          domain = domain.reverse();
	        }
	      }
	      return vars[axis].scale.viz.domain(domain);
	    } else if (vars.axes.scale) {
	      copy = false;
	      if (vars.axes.mirror.value) {
	        opp = axis.indexOf("y") === 0 ? "x" : "y";
	        copy = vars[opp].scale.viz;
	        second = vars.width.viz > vars.height.viz ? "x" : "y";
	      }
	      if (axis === second && copy) {
	        domain = copy.domain().slice().reverse();
	      } else {
	        rangeMax = vars[axis].scale.viz.range()[1];
	        maxSize = vars.axes.scale.range()[1];
	        domainLow = vars[axis].scale.viz.invert(-maxSize * 1.5);
	        domainHigh = vars[axis].scale.viz.invert(rangeMax + maxSize * 1.5);
	        domain = [domainLow, domainHigh];
	        if (axis.indexOf("y") === 0) {
	          domain = domain.reverse();
	        }
	        domainCompare = vars[axis].scale.viz.domain();
	        domainCompare = domainCompare[1] - domainCompare[0];
	        if (!domainCompare) {
	          domain[0] -= 1;
	          domain[1] += 1;
	        }
	        if (axis.indexOf("y") === 0) {
	          domain = domain.reverse();
	        }
	      }
	      return vars[axis].scale.viz.domain(domain);
	    }
	  }
	};


/***/ },
/* 142 */
/***/ function(module, exports) {

	/**
	 * Bit twiddling hacks for JavaScript.
	 *
	 * Author: Mikola Lysenko
	 *
	 * Ported from Stanford bit twiddling hack library:
	 *    http://graphics.stanford.edu/~seander/bithacks.html
	 */
	
	"use strict"; "use restrict";
	
	//Number of bits in an integer
	var INT_BITS = 32;
	
	//Constants
	exports.INT_BITS  = INT_BITS;
	exports.INT_MAX   =  0x7fffffff;
	exports.INT_MIN   = -1<<(INT_BITS-1);
	
	//Returns -1, 0, +1 depending on sign of x
	exports.sign = function(v) {
	  return (v > 0) - (v < 0);
	}
	
	//Computes absolute value of integer
	exports.abs = function(v) {
	  var mask = v >> (INT_BITS-1);
	  return (v ^ mask) - mask;
	}
	
	//Computes minimum of integers x and y
	exports.min = function(x, y) {
	  return y ^ ((x ^ y) & -(x < y));
	}
	
	//Computes maximum of integers x and y
	exports.max = function(x, y) {
	  return x ^ ((x ^ y) & -(x < y));
	}
	
	//Checks if a number is a power of two
	exports.isPow2 = function(v) {
	  return !(v & (v-1)) && (!!v);
	}
	
	//Computes log base 2 of v
	exports.log2 = function(v) {
	  var r, shift;
	  r =     (v > 0xFFFF) << 4; v >>>= r;
	  shift = (v > 0xFF  ) << 3; v >>>= shift; r |= shift;
	  shift = (v > 0xF   ) << 2; v >>>= shift; r |= shift;
	  shift = (v > 0x3   ) << 1; v >>>= shift; r |= shift;
	  return r | (v >> 1);
	}
	
	//Computes log base 10 of v
	exports.log10 = function(v) {
	  return  (v >= 1000000000) ? 9 : (v >= 100000000) ? 8 : (v >= 10000000) ? 7 :
	          (v >= 1000000) ? 6 : (v >= 100000) ? 5 : (v >= 10000) ? 4 :
	          (v >= 1000) ? 3 : (v >= 100) ? 2 : (v >= 10) ? 1 : 0;
	}
	
	//Counts number of bits
	exports.popCount = function(v) {
	  v = v - ((v >>> 1) & 0x55555555);
	  v = (v & 0x33333333) + ((v >>> 2) & 0x33333333);
	  return ((v + (v >>> 4) & 0xF0F0F0F) * 0x1010101) >>> 24;
	}
	
	//Counts number of trailing zeros
	function countTrailingZeros(v) {
	  var c = 32;
	  v &= -v;
	  if (v) c--;
	  if (v & 0x0000FFFF) c -= 16;
	  if (v & 0x00FF00FF) c -= 8;
	  if (v & 0x0F0F0F0F) c -= 4;
	  if (v & 0x33333333) c -= 2;
	  if (v & 0x55555555) c -= 1;
	  return c;
	}
	exports.countTrailingZeros = countTrailingZeros;
	
	//Rounds to next power of 2
	exports.nextPow2 = function(v) {
	  v += v === 0;
	  --v;
	  v |= v >>> 1;
	  v |= v >>> 2;
	  v |= v >>> 4;
	  v |= v >>> 8;
	  v |= v >>> 16;
	  return v + 1;
	}
	
	//Rounds down to previous power of 2
	exports.prevPow2 = function(v) {
	  v |= v >>> 1;
	  v |= v >>> 2;
	  v |= v >>> 4;
	  v |= v >>> 8;
	  v |= v >>> 16;
	  return v - (v>>>1);
	}
	
	//Computes parity of word
	exports.parity = function(v) {
	  v ^= v >>> 16;
	  v ^= v >>> 8;
	  v ^= v >>> 4;
	  v &= 0xf;
	  return (0x6996 >>> v) & 1;
	}
	
	var REVERSE_TABLE = new Array(256);
	
	(function(tab) {
	  for(var i=0; i<256; ++i) {
	    var v = i, r = i, s = 7;
	    for (v >>>= 1; v; v >>>= 1) {
	      r <<= 1;
	      r |= v & 1;
	      --s;
	    }
	    tab[i] = (r << s) & 0xff;
	  }
	})(REVERSE_TABLE);
	
	//Reverse bits in a 32 bit word
	exports.reverse = function(v) {
	  return  (REVERSE_TABLE[ v         & 0xff] << 24) |
	          (REVERSE_TABLE[(v >>> 8)  & 0xff] << 16) |
	          (REVERSE_TABLE[(v >>> 16) & 0xff] << 8)  |
	           REVERSE_TABLE[(v >>> 24) & 0xff];
	}
	
	//Interleave bits of 2 coordinates with 16 bits.  Useful for fast quadtree codes
	exports.interleave2 = function(x, y) {
	  x &= 0xFFFF;
	  x = (x | (x << 8)) & 0x00FF00FF;
	  x = (x | (x << 4)) & 0x0F0F0F0F;
	  x = (x | (x << 2)) & 0x33333333;
	  x = (x | (x << 1)) & 0x55555555;
	
	  y &= 0xFFFF;
	  y = (y | (y << 8)) & 0x00FF00FF;
	  y = (y | (y << 4)) & 0x0F0F0F0F;
	  y = (y | (y << 2)) & 0x33333333;
	  y = (y | (y << 1)) & 0x55555555;
	
	  return x | (y << 1);
	}
	
	//Extracts the nth interleaved component
	exports.deinterleave2 = function(v, n) {
	  v = (v >>> n) & 0x55555555;
	  v = (v | (v >>> 1))  & 0x33333333;
	  v = (v | (v >>> 2))  & 0x0F0F0F0F;
	  v = (v | (v >>> 4))  & 0x00FF00FF;
	  v = (v | (v >>> 16)) & 0x000FFFF;
	  return (v << 16) >> 16;
	}
	
	
	//Interleave bits of 3 coordinates, each with 10 bits.  Useful for fast octree codes
	exports.interleave3 = function(x, y, z) {
	  x &= 0x3FF;
	  x  = (x | (x<<16)) & 4278190335;
	  x  = (x | (x<<8))  & 251719695;
	  x  = (x | (x<<4))  & 3272356035;
	  x  = (x | (x<<2))  & 1227133513;
	
	  y &= 0x3FF;
	  y  = (y | (y<<16)) & 4278190335;
	  y  = (y | (y<<8))  & 251719695;
	  y  = (y | (y<<4))  & 3272356035;
	  y  = (y | (y<<2))  & 1227133513;
	  x |= (y << 1);
	  
	  z &= 0x3FF;
	  z  = (z | (z<<16)) & 4278190335;
	  z  = (z | (z<<8))  & 251719695;
	  z  = (z | (z<<4))  & 3272356035;
	  z  = (z | (z<<2))  & 1227133513;
	  
	  return x | (z << 2);
	}
	
	//Extracts nth interleaved component of a 3-tuple
	exports.deinterleave3 = function(v, n) {
	  v = (v >>> n)       & 1227133513;
	  v = (v | (v>>>2))   & 3272356035;
	  v = (v | (v>>>4))   & 251719695;
	  v = (v | (v>>>8))   & 4278190335;
	  v = (v | (v>>>16))  & 0x3FF;
	  return (v<<22)>>22;
	}
	
	//Computes next combination in colexicographic order (this is mistakenly called nextPermutation on the bit twiddling hacks page)
	exports.nextCombination = function(v) {
	  var t = v | (v - 1);
	  return (t + 1) | (((~t & -~t) - 1) >>> (countTrailingZeros(v) + 1));
	}
	


/***/ },
/* 143 */
/***/ function(module, exports, __webpack_require__) {

	"use strict"
	
	var compile = __webpack_require__(346)
	
	var EmptyProc = {
	  body: "",
	  args: [],
	  thisVars: [],
	  localVars: []
	}
	
	function fixup(x) {
	  if(!x) {
	    return EmptyProc
	  }
	  for(var i=0; i<x.args.length; ++i) {
	    var a = x.args[i]
	    if(i === 0) {
	      x.args[i] = {name: a, lvalue:true, rvalue: !!x.rvalue, count:x.count||1 }
	    } else {
	      x.args[i] = {name: a, lvalue:false, rvalue:true, count: 1}
	    }
	  }
	  if(!x.thisVars) {
	    x.thisVars = []
	  }
	  if(!x.localVars) {
	    x.localVars = []
	  }
	  return x
	}
	
	function pcompile(user_args) {
	  return compile({
	    args:     user_args.args,
	    pre:      fixup(user_args.pre),
	    body:     fixup(user_args.body),
	    post:     fixup(user_args.proc),
	    funcName: user_args.funcName
	  })
	}
	
	function makeOp(user_args) {
	  var args = []
	  for(var i=0; i<user_args.args.length; ++i) {
	    args.push("a"+i)
	  }
	  var wrapper = new Function("P", [
	    "return function ", user_args.funcName, "_ndarrayops(", args.join(","), ") {P(", args.join(","), ");return a0}"
	  ].join(""))
	  return wrapper(pcompile(user_args))
	}
	
	var assign_ops = {
	  add:  "+",
	  sub:  "-",
	  mul:  "*",
	  div:  "/",
	  mod:  "%",
	  band: "&",
	  bor:  "|",
	  bxor: "^",
	  lshift: "<<",
	  rshift: ">>",
	  rrshift: ">>>"
	}
	;(function(){
	  for(var id in assign_ops) {
	    var op = assign_ops[id]
	    exports[id] = makeOp({
	      args: ["array","array","array"],
	      body: {args:["a","b","c"],
	             body: "a=b"+op+"c"},
	      funcName: id
	    })
	    exports[id+"eq"] = makeOp({
	      args: ["array","array"],
	      body: {args:["a","b"],
	             body:"a"+op+"=b"},
	      rvalue: true,
	      funcName: id+"eq"
	    })
	    exports[id+"s"] = makeOp({
	      args: ["array", "array", "scalar"],
	      body: {args:["a","b","s"],
	             body:"a=b"+op+"s"},
	      funcName: id+"s"
	    })
	    exports[id+"seq"] = makeOp({
	      args: ["array","scalar"],
	      body: {args:["a","s"],
	             body:"a"+op+"=s"},
	      rvalue: true,
	      funcName: id+"seq"
	    })
	  }
	})();
	
	var unary_ops = {
	  not: "!",
	  bnot: "~",
	  neg: "-",
	  recip: "1.0/"
	}
	;(function(){
	  for(var id in unary_ops) {
	    var op = unary_ops[id]
	    exports[id] = makeOp({
	      args: ["array", "array"],
	      body: {args:["a","b"],
	             body:"a="+op+"b"},
	      funcName: id
	    })
	    exports[id+"eq"] = makeOp({
	      args: ["array"],
	      body: {args:["a"],
	             body:"a="+op+"a"},
	      rvalue: true,
	      count: 2,
	      funcName: id+"eq"
	    })
	  }
	})();
	
	var binary_ops = {
	  and: "&&",
	  or: "||",
	  eq: "===",
	  neq: "!==",
	  lt: "<",
	  gt: ">",
	  leq: "<=",
	  geq: ">="
	}
	;(function() {
	  for(var id in binary_ops) {
	    var op = binary_ops[id]
	    exports[id] = makeOp({
	      args: ["array","array","array"],
	      body: {args:["a", "b", "c"],
	             body:"a=b"+op+"c"},
	      funcName: id
	    })
	    exports[id+"s"] = makeOp({
	      args: ["array","array","scalar"],
	      body: {args:["a", "b", "s"],
	             body:"a=b"+op+"s"},
	      funcName: id+"s"
	    })
	    exports[id+"eq"] = makeOp({
	      args: ["array", "array"],
	      body: {args:["a", "b"],
	             body:"a=a"+op+"b"},
	      rvalue:true,
	      count:2,
	      funcName: id+"eq"
	    })
	    exports[id+"seq"] = makeOp({
	      args: ["array", "scalar"],
	      body: {args:["a","s"],
	             body:"a=a"+op+"s"},
	      rvalue:true,
	      count:2,
	      funcName: id+"seq"
	    })
	  }
	})();
	
	var math_unary = [
	  "abs",
	  "acos",
	  "asin",
	  "atan",
	  "ceil",
	  "cos",
	  "exp",
	  "floor",
	  "log",
	  "round",
	  "sin",
	  "sqrt",
	  "tan"
	]
	;(function() {
	  for(var i=0; i<math_unary.length; ++i) {
	    var f = math_unary[i]
	    exports[f] = makeOp({
	                    args: ["array", "array"],
	                    pre: {args:[], body:"this_f=Math."+f, thisVars:["this_f"]},
	                    body: {args:["a","b"], body:"a=this_f(b)", thisVars:["this_f"]},
	                    funcName: f
	                  })
	    exports[f+"eq"] = makeOp({
	                      args: ["array"],
	                      pre: {args:[], body:"this_f=Math."+f, thisVars:["this_f"]},
	                      body: {args: ["a"], body:"a=this_f(a)", thisVars:["this_f"]},
	                      rvalue: true,
	                      count: 2,
	                      funcName: f+"eq"
	                    })
	  }
	})();
	
	var math_comm = [
	  "max",
	  "min",
	  "atan2",
	  "pow"
	]
	;(function(){
	  for(var i=0; i<math_comm.length; ++i) {
	    var f= math_comm[i]
	    exports[f] = makeOp({
	                  args:["array", "array", "array"],
	                  pre: {args:[], body:"this_f=Math."+f, thisVars:["this_f"]},
	                  body: {args:["a","b","c"], body:"a=this_f(b,c)", thisVars:["this_f"]},
	                  funcName: f
	                })
	    exports[f+"s"] = makeOp({
	                  args:["array", "array", "scalar"],
	                  pre: {args:[], body:"this_f=Math."+f, thisVars:["this_f"]},
	                  body: {args:["a","b","c"], body:"a=this_f(b,c)", thisVars:["this_f"]},
	                  funcName: f+"s"
	                  })
	    exports[f+"eq"] = makeOp({ args:["array", "array"],
	                  pre: {args:[], body:"this_f=Math."+f, thisVars:["this_f"]},
	                  body: {args:["a","b"], body:"a=this_f(a,b)", thisVars:["this_f"]},
	                  rvalue: true,
	                  count: 2,
	                  funcName: f+"eq"
	                  })
	    exports[f+"seq"] = makeOp({ args:["array", "scalar"],
	                  pre: {args:[], body:"this_f=Math."+f, thisVars:["this_f"]},
	                  body: {args:["a","b"], body:"a=this_f(a,b)", thisVars:["this_f"]},
	                  rvalue:true,
	                  count:2,
	                  funcName: f+"seq"
	                  })
	  }
	})();
	
	var math_noncomm = [
	  "atan2",
	  "pow"
	]
	;(function(){
	  for(var i=0; i<math_noncomm.length; ++i) {
	    var f= math_noncomm[i]
	    exports[f+"op"] = makeOp({
	                  args:["array", "array", "array"],
	                  pre: {args:[], body:"this_f=Math."+f, thisVars:["this_f"]},
	                  body: {args:["a","b","c"], body:"a=this_f(c,b)", thisVars:["this_f"]},
	                  funcName: f+"op"
	                })
	    exports[f+"ops"] = makeOp({
	                  args:["array", "array", "scalar"],
	                  pre: {args:[], body:"this_f=Math."+f, thisVars:["this_f"]},
	                  body: {args:["a","b","c"], body:"a=this_f(c,b)", thisVars:["this_f"]},
	                  funcName: f+"ops"
	                  })
	    exports[f+"opeq"] = makeOp({ args:["array", "array"],
	                  pre: {args:[], body:"this_f=Math."+f, thisVars:["this_f"]},
	                  body: {args:["a","b"], body:"a=this_f(b,a)", thisVars:["this_f"]},
	                  rvalue: true,
	                  count: 2,
	                  funcName: f+"opeq"
	                  })
	    exports[f+"opseq"] = makeOp({ args:["array", "scalar"],
	                  pre: {args:[], body:"this_f=Math."+f, thisVars:["this_f"]},
	                  body: {args:["a","b"], body:"a=this_f(b,a)", thisVars:["this_f"]},
	                  rvalue:true,
	                  count:2,
	                  funcName: f+"opseq"
	                  })
	  }
	})();
	
	exports.any = compile({
	  args:["array"],
	  pre: EmptyProc,
	  body: {args:[{name:"a", lvalue:false, rvalue:true, count:1}], body: "if(a){return true}", localVars: [], thisVars: []},
	  post: {args:[], localVars:[], thisVars:[], body:"return false"},
	  funcName: "any"
	})
	
	exports.all = compile({
	  args:["array"],
	  pre: EmptyProc,
	  body: {args:[{name:"x", lvalue:false, rvalue:true, count:1}], body: "if(!x){return false}", localVars: [], thisVars: []},
	  post: {args:[], localVars:[], thisVars:[], body:"return true"},
	  funcName: "all"
	})
	
	exports.sum = compile({
	  args:["array"],
	  pre: {args:[], localVars:[], thisVars:["this_s"], body:"this_s=0"},
	  body: {args:[{name:"a", lvalue:false, rvalue:true, count:1}], body: "this_s+=a", localVars: [], thisVars: ["this_s"]},
	  post: {args:[], localVars:[], thisVars:["this_s"], body:"return this_s"},
	  funcName: "sum"
	})
	
	exports.prod = compile({
	  args:["array"],
	  pre: {args:[], localVars:[], thisVars:["this_s"], body:"this_s=1"},
	  body: {args:[{name:"a", lvalue:false, rvalue:true, count:1}], body: "this_s*=a", localVars: [], thisVars: ["this_s"]},
	  post: {args:[], localVars:[], thisVars:["this_s"], body:"return this_s"},
	  funcName: "prod"
	})
	
	exports.norm2squared = compile({
	  args:["array"],
	  pre: {args:[], localVars:[], thisVars:["this_s"], body:"this_s=0"},
	  body: {args:[{name:"a", lvalue:false, rvalue:true, count:2}], body: "this_s+=a*a", localVars: [], thisVars: ["this_s"]},
	  post: {args:[], localVars:[], thisVars:["this_s"], body:"return this_s"},
	  funcName: "norm2squared"
	})
	  
	exports.norm2 = compile({
	  args:["array"],
	  pre: {args:[], localVars:[], thisVars:["this_s"], body:"this_s=0"},
	  body: {args:[{name:"a", lvalue:false, rvalue:true, count:2}], body: "this_s+=a*a", localVars: [], thisVars: ["this_s"]},
	  post: {args:[], localVars:[], thisVars:["this_s"], body:"return Math.sqrt(this_s)"},
	  funcName: "norm2"
	})
	  
	
	exports.norminf = compile({
	  args:["array"],
	  pre: {args:[], localVars:[], thisVars:["this_s"], body:"this_s=0"},
	  body: {args:[{name:"a", lvalue:false, rvalue:true, count:4}], body:"if(-a>this_s){this_s=-a}else if(a>this_s){this_s=a}", localVars: [], thisVars: ["this_s"]},
	  post: {args:[], localVars:[], thisVars:["this_s"], body:"return this_s"},
	  funcName: "norminf"
	})
	
	exports.norm1 = compile({
	  args:["array"],
	  pre: {args:[], localVars:[], thisVars:["this_s"], body:"this_s=0"},
	  body: {args:[{name:"a", lvalue:false, rvalue:true, count:3}], body: "this_s+=a<0?-a:a", localVars: [], thisVars: ["this_s"]},
	  post: {args:[], localVars:[], thisVars:["this_s"], body:"return this_s"},
	  funcName: "norm1"
	})
	
	exports.sup = compile({
	  args: [ "array" ],
	  pre:
	   { body: "this_h=-Infinity",
	     args: [],
	     thisVars: [ "this_h" ],
	     localVars: [] },
	  body:
	   { body: "if(_inline_1_arg0_>this_h)this_h=_inline_1_arg0_",
	     args: [{"name":"_inline_1_arg0_","lvalue":false,"rvalue":true,"count":2} ],
	     thisVars: [ "this_h" ],
	     localVars: [] },
	  post:
	   { body: "return this_h",
	     args: [],
	     thisVars: [ "this_h" ],
	     localVars: [] }
	 })
	
	exports.inf = compile({
	  args: [ "array" ],
	  pre:
	   { body: "this_h=Infinity",
	     args: [],
	     thisVars: [ "this_h" ],
	     localVars: [] },
	  body:
	   { body: "if(_inline_1_arg0_<this_h)this_h=_inline_1_arg0_",
	     args: [{"name":"_inline_1_arg0_","lvalue":false,"rvalue":true,"count":2} ],
	     thisVars: [ "this_h" ],
	     localVars: [] },
	  post:
	   { body: "return this_h",
	     args: [],
	     thisVars: [ "this_h" ],
	     localVars: [] }
	 })
	
	exports.argmin = compile({
	  args:["index","array","shape"],
	  pre:{
	    body:"{this_v=Infinity;this_i=_inline_0_arg2_.slice(0)}",
	    args:[
	      {name:"_inline_0_arg0_",lvalue:false,rvalue:false,count:0},
	      {name:"_inline_0_arg1_",lvalue:false,rvalue:false,count:0},
	      {name:"_inline_0_arg2_",lvalue:false,rvalue:true,count:1}
	      ],
	    thisVars:["this_i","this_v"],
	    localVars:[]},
	  body:{
	    body:"{if(_inline_1_arg1_<this_v){this_v=_inline_1_arg1_;for(var _inline_1_k=0;_inline_1_k<_inline_1_arg0_.length;++_inline_1_k){this_i[_inline_1_k]=_inline_1_arg0_[_inline_1_k]}}}",
	    args:[
	      {name:"_inline_1_arg0_",lvalue:false,rvalue:true,count:2},
	      {name:"_inline_1_arg1_",lvalue:false,rvalue:true,count:2}],
	    thisVars:["this_i","this_v"],
	    localVars:["_inline_1_k"]},
	  post:{
	    body:"{return this_i}",
	    args:[],
	    thisVars:["this_i"],
	    localVars:[]}
	})
	
	exports.argmax = compile({
	  args:["index","array","shape"],
	  pre:{
	    body:"{this_v=-Infinity;this_i=_inline_0_arg2_.slice(0)}",
	    args:[
	      {name:"_inline_0_arg0_",lvalue:false,rvalue:false,count:0},
	      {name:"_inline_0_arg1_",lvalue:false,rvalue:false,count:0},
	      {name:"_inline_0_arg2_",lvalue:false,rvalue:true,count:1}
	      ],
	    thisVars:["this_i","this_v"],
	    localVars:[]},
	  body:{
	    body:"{if(_inline_1_arg1_>this_v){this_v=_inline_1_arg1_;for(var _inline_1_k=0;_inline_1_k<_inline_1_arg0_.length;++_inline_1_k){this_i[_inline_1_k]=_inline_1_arg0_[_inline_1_k]}}}",
	    args:[
	      {name:"_inline_1_arg0_",lvalue:false,rvalue:true,count:2},
	      {name:"_inline_1_arg1_",lvalue:false,rvalue:true,count:2}],
	    thisVars:["this_i","this_v"],
	    localVars:["_inline_1_k"]},
	  post:{
	    body:"{return this_i}",
	    args:[],
	    thisVars:["this_i"],
	    localVars:[]}
	})  
	
	exports.random = makeOp({
	  args: ["array"],
	  pre: {args:[], body:"this_f=Math.random", thisVars:["this_f"]},
	  body: {args: ["a"], body:"a=this_f()", thisVars:["this_f"]},
	  funcName: "random"
	})
	
	exports.assign = makeOp({
	  args:["array", "array"],
	  body: {args:["a", "b"], body:"a=b"},
	  funcName: "assign" })
	
	exports.assigns = makeOp({
	  args:["array", "scalar"],
	  body: {args:["a", "b"], body:"a=b"},
	  funcName: "assigns" })
	
	
	exports.equals = compile({
	  args:["array", "array"],
	  pre: EmptyProc,
	  body: {args:[{name:"x", lvalue:false, rvalue:true, count:1},
	               {name:"y", lvalue:false, rvalue:true, count:1}], 
	        body: "if(x!==y){return false}", 
	        localVars: [], 
	        thisVars: []},
	  post: {args:[], localVars:[], thisVars:[], body:"return true"},
	  funcName: "equals"
	})
	
	


/***/ },
/* 144 */
/***/ function(module, exports, __webpack_require__) {

	var dataNest   = __webpack_require__(59),
	    fetchValue = __webpack_require__(3),
	    print      = __webpack_require__(2),
	    uniques    = __webpack_require__(8);
	//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	// Formats raw data by time and nesting
	//------------------------------------------------------------------------------
	module.exports = function( vars ) {
	
	  var timerString;
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // Gets all unique time values
	  //----------------------------------------------------------------------------
	  vars.data.time = {"values": []};
	  if (vars.time && vars.time.value) {
	
	    if ( vars.dev.value ) {
	      timerString = "analyzing time periods";
	      print.time( timerString );
	    }
	
	    vars.data.time.values = uniques(vars.data.value, vars.time.value, fetchValue, vars);
	
	    vars.data.time.values.sort(function(a,b){ return a-b; });
	
	    var step = [];
	    vars.data.time.values.forEach(function(y,i){
	      if (i !== 0) {
	        var prev = vars.data.time.values[i-1];
	        step.push(y-prev);
	        if (i === vars.data.time.values.length - 1) {
	          vars.data.time.total = y - vars.data.time.values[0];
	        }
	      }
	    });
	
	    step = d3.min(step);
	    vars.data.time.step = step;
	
	    var periods = ["Milliseconds","Seconds","Minutes","Hours","Date","Month","FullYear"],
	        conversions = [1000,60,60,24,30,12,1];
	
	    vars.data.time.periods = periods;
	
	    var getDiff = function(start,end,i) {
	
	      if (!vars.data.time.stepDivider) {
	        arr = conversions.slice(0,i);
	        if (arr.length) {
	          vars.data.time.stepDivider = arr.reduce(function(a,b){ return a*b; });
	        }
	        else {
	          vars.data.time.stepDivider = 1;
	        }
	      }
	
	      return Math.round(Math.floor(end-start)/vars.data.time.stepDivider);
	
	    };
	
	    var total = vars.data.time.total;
	    periods.forEach(function(p,i){
	      var c = p === "Date" ? 28 : conversions[i];
	      if (!vars.data.time.stepType && (i === periods.length-1 || Math.round(step) < c)) {
	        vars.data.time.stepType = p;
	        var start = vars.data.time.values[0],
	            end = vars.data.time.values[vars.data.time.values.length-1];
	        vars.data.time.stepIntervals = getDiff(start,end,i);
	      }
	
	      if (!vars.data.time.totalType && (i === periods.length-1 || Math.round(total) < c)) {
	        vars.data.time.totalType = p;
	      }
	
	      step = step/c;
	      total = total/c;
	    });
	
	    vars.data.time.values.forEach(function(y,i){
	      if (i !== 0) {
	        var prev = vars.data.time.values[0];
	        vars.data.time.dataSteps.push(getDiff(prev,y,periods.indexOf(vars.data.time.stepType)));
	      }
	      else {
	        vars.data.time.dataSteps = [0];
	      }
	    });
	
	    var userFormat = vars.time.format.value,
	        locale = vars.format.locale.value,
	        functions = [
	          function(d) { return d.getMilliseconds(); },
	          function(d) { return d.getSeconds(); },
	          function(d) { return d.getMinutes(); },
	          function(d) { return d.getHours(); },
	          function(d) { return d.getDate() != 1; },
	          function(d) { return d.getMonth(); },
	          function(d) { return true; }
	        ];
	
	    vars.data.time.functions = functions;
	
	    var getFormat = function(s,t,small) {
	
	      if (s === t) {
	        return small && locale.timeFormat[s+"Small"] ? locale.timeFormat[s+"Small"] : locale.timeFormat[s];
	      }
	      else {
	        if (periods.indexOf(s) >= 4 || periods.indexOf(t) <= 3) {
	          return locale.timeFormat[t+"-"+s];
	        }
	        else {
	
	          var format;
	
	          if (t === "Date") {
	            format = locale.timeFormat[t];
	          }
	          else {
	            format = locale.timeFormat[t+"-Date"];
	          }
	
	          if (s === "Hours") {
	            return format +" "+ locale.timeFormat[s];
	          }
	          else {
	            return format +" "+ locale.timeFormat["Hours-"+s];
	          }
	
	        }
	      }
	
	    };
	
	    vars.data.time.getFormat = getFormat;
	
	    if (userFormat) {
	
	      if (typeof userFormat === "string") {
	        vars.data.time.format = d3.locale(locale.format).timeFormat(userFormat);
	      }
	      else if (typeof userFormat === "function") {
	        vars.data.time.format = userFormat;
	      }
	      else if (userFormat instanceof Array) {
	        vars.data.time.format = d3.locale(locale.format).timeFormat.multi(userFormat);
	      }
	      vars.data.time.multiFormat = vars.data.time.format;
	
	    }
	    else {
	
	      var stepType = vars.data.time.stepType,
	          totalType = vars.data.time.totalType;
	
	      var multi = [];
	
	      for (var p = periods.indexOf(stepType); p <= periods.indexOf(totalType); p++) {
	        var prev = p-1 < periods.indexOf(stepType) ? periods[p] : periods[p-1];
	        var small = periods[p] === prev && stepType !== totalType;
	        var format = getFormat(prev,periods[p],small);
	        multi.push([format,functions[p]]);
	      }
	
	      vars.data.time.format = d3.locale(locale.format).timeFormat(getFormat(stepType,totalType));
	      if (multi.length > 1) {
	        multi[multi.length-1][1] = function (d) { return true; }
	        vars.data.time.multiFormat = d3.locale(locale.format).timeFormat.multi(multi);
	      }
	      else {
	        vars.data.time.multiFormat = vars.data.time.format;
	      }
	
	    }
	
	    vars.data.time.ticks = [];
	    var min = d3.min(vars.data.time.values);
	    var max = d3.max(vars.data.time.values);
	    for (var s = 0; s <= vars.data.time.stepIntervals; s++) {
	      var m = new Date(min);
	      m["set"+vars.data.time.stepType](m["get"+vars.data.time.stepType]() + s);
	      if (m <= max) vars.data.time.ticks.push(m);
	    }
	
	    if ( vars.dev.value ) print.timeEnd( timerString );
	
	  }
	
	  if ( vars.dev.value ) {
	    timerString = "nesting data by time and depths";
	    print.time( timerString );
	  }
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // Gets all unique time values
	  //----------------------------------------------------------------------------
	  vars.data.nested = {};
	  if (vars.data.time.values.length === 0) {
	
	    vars.data.nested.all = {};
	    vars.id.nesting.forEach( function( depth , i ) {
	
	      var nestingDepth = vars.id.nesting.slice( 0 , i + 1 );
	      vars.data.nested.all[ depth ] = dataNest(vars, vars.data.value, nestingDepth);
	
	    });
	
	  }
	  else {
	
	    var timeData = vars.data.value.reduce(function(o, d){
	      var ms = fetchValue(vars, d, vars.time.value).getTime();
	      if (!(ms in o)) o[ms] = [];
	      o[ms].push(d);
	      return o;
	    }, {});
	
	    vars.data.time.values.forEach( function( t ) {
	
	      var ms = t.getTime();
	
	      vars.data.nested[ms] = {};
	
	      vars.id.nesting.forEach( function( depth , i ) {
	        var nestingDepth = vars.id.nesting.slice(0, i + 1);
	        vars.data.nested[ ms ][ depth ] = dataNest(vars, timeData[ms], nestingDepth);
	      });
	
	    });
	
	  }
	
	  if ( vars.dev.value ) print.timeEnd( timerString );
	
	};


/***/ },
/* 145 */
/***/ function(module, exports) {

	module.exports = function(elem) {
	
	  elem
	    .style("position","absolute","important")
	    .style("clip","rect(1px 1px 1px 1px)","important")
	    .style("clip","rect(1px, 1px, 1px, 1px)","important")
	    .style("width","1px","important")
	    .style("height","1px","important")
	    .style("margin","-1px","important")
	    .style("padding","0","important")
	    .style("border","0","important")
	    .style("overflow","hidden","important");
	
	}


/***/ },
/* 146 */
/***/ function(module, exports, __webpack_require__) {

	var stringFormat = __webpack_require__(14),
	    stringStrip = __webpack_require__(33);
	
	//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	// Creates and populates the dropdown list of items.
	//------------------------------------------------------------------------------
	module.exports = function ( vars ) {
	
	  if ( vars.data.url && !vars.data.loaded ) {
	    var loadingObject = {};
	    loadingObject[vars.text.value || vars.id.value] = vars.format.value(vars.format.locale.value.ui.loading);
	    vars.data.filtered = [loadingObject];
	    vars.data.changed = vars.data.lastFilter !== "loading";
	    vars.data.lastFilter = "loading";
	  }
	  else if (vars.open.value) {
	
	    if (!vars.search.term) {
	      vars.data.filtered = vars.data.viz;
	      vars.data.changed = vars.data.lastFilter !== "viz";
	      vars.data.lastFilter = "viz";
	      if (vars.id.nesting.length > 1 && vars.depth.value < vars.id.nesting.length-1) {
	        vars.data.filtered = vars.data.filtered.filter(function(d){
	          if ("endPoint" in d.d3plus && d.d3plus.endPoint === vars.depth.value) {
	            d.d3plus.icon = false;
	          }
	          return true;
	        });
	        vars.data.changed = vars.data.lastFilter !== "depth";
	        vars.data.lastFilter = "depth";
	      }
	    }
	    else {
	
	      var searchWords = stringStrip(vars.search.term).split("_"),
	          searchKeys  = [vars.id.value, vars.text.value, vars.alt.value, vars.keywords.value ];
	
	      searchKeys = searchKeys.filter(function(t){ return t; });
	      searchWords = searchWords.filter(function(t){ return t !== ""; });
	
	      var startMatches = [],
	          exactMatches = [],
	          softMatches  = [],
	          searchData   = [];
	
	      vars.id.nesting.forEach(function(n){
	        searchData = searchData.concat(vars.data.nested.all[n]);
	      });
	
	      searchData.forEach(function(d){
	
	        var match = false;
	
	        searchKeys.forEach(function(key){
	
	          if ( !match && key in d && typeof d[key] === "string" ) {
	
	            var text = d[key].toLowerCase();
	
	            if ( [vars.text.value,vars.id.value].indexOf(key) >= 0 && text.indexOf(vars.search.term) === 0 ) {
	              startMatches.push(d);
	              match = true;
	            }
	            else if ( text.indexOf(vars.search.term) >= 0 ) {
	              exactMatches.push(d);
	              match = true;
	            }
	            else {
	
	              var texts = stringStrip(text).split("_");
	
	              for (var t in texts) {
	
	                if ( !match ) {
	
	                  for (var s in searchWords) {
	                    if (texts[t].indexOf(searchWords[s]) === 0) {
	                      softMatches.push(d);
	                      match = true;
	                      break;
	                    }
	                  }
	
	                }
	                else {
	                  break;
	                }
	
	              }
	
	            }
	          }
	
	        });
	
	      });
	
	      vars.data.filtered = d3.merge([ startMatches , exactMatches , softMatches ]);
	
	      vars.data.filtered.forEach(function(d,i){
	        d.d3plus_order = i;
	      });
	
	      vars.data.changed = true;
	      vars.data.lastFilter = "search";
	
	      if ( vars.data.filtered.length === 0 ) {
	
	        var noData = {}, str = vars.format.value(vars.format.locale.value.ui.noResults);
	        noData[vars.text.value || vars.id.value] = stringFormat(str,"\""+vars.search.term+"\"");
	        vars.data.filtered = [ noData ];
	
	      }
	
	    }
	
	  }
	  else {
	    vars.data.filtered = [];
	  }
	
	};


/***/ },
/* 147 */
/***/ function(module, exports, __webpack_require__) {

	var items = __webpack_require__(132),
	    height     = __webpack_require__(383),
	    print      = __webpack_require__(2),
	    scrolllist = __webpack_require__(385),
	    arrow      = __webpack_require__(381)
	
	//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	// Redraws only the drop down list.
	//------------------------------------------------------------------------------
	module.exports = function ( vars ) {
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // If the menu is open, set the container element's z-index to '9999'.
	  //----------------------------------------------------------------------------
	  if ( vars.draw.timing ) {
	
	    vars.container.ui.transition().duration(vars.draw.timing)
	      .each("start",function(){
	        if (vars.open.value) {
	          d3.select(this).style("z-index",9999)
	        }
	      })
	      .style("margin",vars.ui.margin.css)
	      .each("end",function(){
	        if (!vars.open.value) {
	          d3.select(this).style("z-index","auto")
	        }
	      })
	
	  }
	  else {
	
	    vars.container.ui
	      .style("margin",vars.ui.margin.css)
	      .style("z-index",function(){
	        if (vars.open.value) {
	          return 9999
	        }
	        else {
	          return "auto"
	        }
	      })
	
	  }
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // Update list items based on filtered data.
	  //----------------------------------------------------------------------------
	  items( vars )
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // Calculate the height and orientation of the dropdown list.
	  //----------------------------------------------------------------------------
	  height( vars )
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // Calculate scroll position of dropdown menu.
	  //----------------------------------------------------------------------------
	  scrolllist( vars )
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // Rotate the dropdown button arrow appropriately.
	  //----------------------------------------------------------------------------
	  arrow( vars )
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // Update List
	  //----------------------------------------------------------------------------
	  if ( vars.dev.value ) print.time("drawing list")
	
	  function position(elem) {
	    var flipped = vars.open.flipped.value
	    elem
	      .style("top",function(){
	        return flipped ? "auto" : vars.margin.top-vars.ui.border+"px";
	      })
	      .style("bottom",function(){
	        return flipped ? vars.margin.top+vars.ui.border+"px" : "auto";
	      });
	  }
	
	  function update(elem) {
	
	    elem
	      .style("left",function(){
	        if (vars.font.align.value === "left") {
	          return vars.margin.left+"px";
	        }
	        else if (vars.font.align.value === "center") {
	          return vars.margin.left-((vars.width.secondary-vars.width.value)/2)+"px";
	        }
	        else {
	          return "auto";
	        }
	      })
	      .style("right",function(){
	        return vars.font.align.value === "right" ? "0px" : "auto";
	      })
	      .style("height",vars.container.listHeight+"px")
	      .style("padding",vars.ui.border+"px")
	      .style("background-color",vars.ui.color.secondary.value)
	      .style("z-index",function(){
	        return vars.open.value ? "9999" : "-1";
	      })
	      .style("width",(vars.width.secondary-(vars.ui.border*2))+"px")
	      .style("opacity",vars.open.value ? 1 : 0)
	      .call(position);
	
	  }
	
	  function finish(elem) {
	
	    elem.style("display", vars.open.value ? null : "none")
	      .call(position);
	
	
	    if (vars.search.enabled && vars.open.value) {
	      vars.container.selector.select("div.d3plus_drop_search input").node().focus()
	    }
	
	  }
	
	  var max_height = vars.open.value ? vars.height.secondary - vars.margin.title: 0;
	
	  if (!vars.draw.timing) {
	
	    vars.container.selector.call(update).call(finish)
	
	    vars.container.list
	      .style("width",vars.width.secondary-vars.ui.border*2+"px")
	      .style("max-height", max_height + "px")
	      .property("scrollTop",vars.container.listScroll);
	
	  }
	  else {
	    vars.container.selector.transition().duration(vars.draw.timing)
	      .each("start",function(){
	        d3.select(this)
	          .style("display",vars.open.value ? "block" : null)
	      })
	      .call(update)
	      .each("end",function(){
	
	        d3.select(this).transition().duration(vars.draw.timing)
	          .call(finish)
	
	      })
	
	    function scrollTopTween(scrollTop) {
	        return function() {
	            var i = d3.interpolateNumber(this.scrollTop, scrollTop);
	            return function(t) { this.scrollTop = i(t); };
	        };
	    }
	
	    vars.container.list.transition().duration(vars.draw.timing)
	      .style("width",vars.width.secondary-vars.ui.border*2+"px")
	      .style("max-height",max_height+"px")
	      .tween("scroll",scrollTopTween(vars.container.listScroll))
	  }
	
	  if ( vars.dev.value ) print.timeEnd("drawing list")
	
	}


/***/ },
/* 148 */
/***/ function(module, exports, __webpack_require__) {

	var defaultLocale = __webpack_require__(53),
	    events        = __webpack_require__(9),
	    legible       = __webpack_require__(28),
	    move          = __webpack_require__(134),
	    prefix        = __webpack_require__(39),
	    rtl           = __webpack_require__(40),
	    removeTooltip = __webpack_require__(26),
	    scroll        = __webpack_require__(58),
	    stringList    = __webpack_require__(46),
	    textColor     = __webpack_require__(25)
	
	//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	// Create a Tooltip
	//-------------------------------------------------------------------
	module.exports = function(params) {
	
	  var default_width = params.fullscreen ? 250 : 200
	    , vendor = prefix()
	  params.width = params.width || default_width
	  params.max_width = params.max_width || 386
	  params.id = params.id || "default"
	  params.size = params.fullscreen || params.html ? "large" : "small"
	  params.offset = params.offset || 0
	  params.arrow_offset = params.arrow ? 8 : 0
	  params.x = params.x || 0
	  params.y = params.y || 0
	  params.parent = params.parent || d3.select("body")
	  params.curtain = params.curtain || "#fff"
	  params.curtainopacity = params.curtainopacity || 0.8
	  params.background = params.background || "#fff"
	  params.fontcolor = params.fontcolor || "#444"
	  params.fontfamily = params.fontfamily || "sans-serif"
	  params.fontweight = params.fontweight || "normal"
	  params.fontsize = params.fontsize || "12px"
	  params.style = params.style || "default"
	  params.zindex = params.size == "small" ? 2000 : 500
	  params.locale = params.locale || defaultLocale
	  params.stacked = params.stacked || false;
	
	
	  var parentHeight = params.parent ? params.parent.node().offsetHeight
	                  || params.parent.node().getBoundingClientRect().height : 0
	
	  if (!params.iconsize) {
	    params.iconsize = params.size == "small" ? 22 : 50
	  }
	
	  if (params.parent.node() === document.body) {
	    params.limit = [window.innerWidth + scroll.x(), window.innerHeight + scroll.y()];
	  }
	  else {
	    params.limit = [
	      parseFloat(params.parent.style("width"),10),
	      parseFloat(params.parent.style("height"),10)
	    ];
	  }
	
	  if ( params.title instanceof Array ) {
	
	    var and = params.locale.ui.and
	      , more = params.locale.ui.more
	
	    params.title = stringList( params.title , and , 3 , more )
	
	  }
	
	  removeTooltip(params.id)
	
	  params.anchor = {}
	  if (params.fullscreen) {
	    params.anchor.x = "center"
	    params.anchor.y = "center"
	    params.x = params.parent ? params.parent.node().offsetWidth/2 : window.innerWidth/2
	    params.y = params.parent ? parentHeight/2 : window.innerHeight/2
	  }
	  else if (params.align) {
	    var a = params.align.split(" ")
	    params.anchor.y = a[0]
	    if (a[1]) params.anchor.x = a[1]
	    else params.anchor.x = "center"
	  }
	  else {
	    params.anchor.x = "center"
	    params.anchor.y = "top"
	  }
	
	  var title_width = params.width - 30
	
	  if (params.fullscreen) {
	    var curtain = params.parent.append("div")
	      .attr("id","d3plus_tooltip_curtain_"+params.id)
	      .attr("class","d3plus_tooltip_curtain")
	      .style("background-color",params.curtain)
	      .style("opacity",params.curtainopacity)
	      .style("position","absolute")
	      .style("z-index",499)
	      .style("top","0px")
	      .style("right","0px")
	      .style("bottom","0px")
	      .style("left","0px")
	      .on(events.click,function(){
	        removeTooltip(params.id)
	      })
	  }
	
	  var tooltip = params.parent.append("div")
	    .datum(params)
	    .attr("id","d3plus_tooltip_id_"+params.id)
	    .attr("class","d3plus_tooltip d3plus_tooltip_"+params.size)
	    .style("color",params.fontcolor)
	    .style("font-family",params.fontfamily)
	    .style("font-weight",params.fontweight)
	    .style("font-size",params.fontsize+"px")
	    .style(vendor+"box-shadow","0px 1px 3px rgba(0, 0, 0, 0.25)")
	    .style("position","absolute")
	    // .style("z-index",params.zindex)
	    .on(events.out, close_descriptions)
	
	  if (params.max_height) {
	    tooltip.style("max-height",params.max_height+"px")
	  }
	
	  if (params.fixed) {
	    tooltip.style("z-index",500)
	    params.mouseevents = true
	  }
	  else {
	    tooltip.style("z-index",2000)
	  }
	
	  var container = tooltip.append("div")
	    .datum(params)
	    .attr("class","d3plus_tooltip_container")
	    .style("background-color",params.background)
	    .style("padding","6px")
	
	  if (params.fullscreen && params.html && !params.stacked) {
	
	    w = params.parent ? params.parent.node().offsetWidth*0.75 : window.innerWidth*0.75
	    h = params.parent ? parentHeight*0.75 : window.innerHeight*0.75
	
	    container
	      .style("width",w+"px")
	      .style("height",h+"px")
	
	    var body = container.append("div")
	      .attr("class","d3plus_tooltip_body")
	      .style("padding-right","6px")
	      .style("display","inline-block")
	      .style("z-index",1)
	      .style("width",params.width+"px")
	
	  }
	  else {
	
	    if (params.width == "auto") {
	      var w = "auto"
	      container.style("max-width",params.max_width+"px")
	    }
	    else var w = params.width-14+"px"
	
	    var body = container
	      .style("width",w)
	
	  }
	
	  if (params.title || params.icon) {
	    var header = body.append("div")
	      .attr("class","d3plus_tooltip_header")
	      .style("position","relative")
	      .style("z-index",1)
	  }
	
	  if (params.fullscreen) {
	    var close = tooltip.append("div")
	      .attr("class","d3plus_tooltip_close")
	      .style("background-color",params.color)
	      .style("color",textColor(params.color))
	      .style("position","absolute")
	      .style(vendor+"box-shadow","0 1px 3px rgba(0, 0, 0, 0.25)")
	      .style("font-size","20px")
	      .style("height","18px")
	      .style("line-height","14px")
	      .style("text-align","center")
	      .style("right","16px")
	      .style("top","-10px")
	      .style("width","18px")
	      .style("z-index",10)
	      .html("\&times;")
	      .on(events.over,function(){
	        d3.select(this)
	          .style("cursor","pointer")
	          .style(vendor+"box-shadow","0 1px 3px rgba(0, 0, 0, 0.5)")
	      })
	      .on(events.out,function(){
	        d3.select(this)
	          .style("cursor","auto")
	          .style(vendor+"box-shadow","0 1px 3px rgba(0, 0, 0, 0.25)")
	      })
	      .on(events.click,function(){
	        removeTooltip(params.id)
	      })
	
	    d3.select("body").on("keydown.esc_" + params.id, function(){
	      if (d3.event.keyCode === 27) {
	        removeTooltip(params.id);
	        d3.select("body").on("keydown.esc_" + params.id, null);
	      }
	    })
	
	  }
	
	  if (!params.mouseevents) {
	    tooltip.style("pointer-events","none")
	  }
	  else if (params.mouseevents !== true) {
	
	    var oldout = d3.select(params.mouseevents).on(events.out)
	
	    var newout = function() {
	
	      var target = d3.event.toElement || d3.event.relatedTarget
	      if (target) {
	        var c = typeof target.className == "string" ? target.className : target.className.baseVal
	        var istooltip = c.indexOf("d3plus_tooltip") == 0
	      }
	      else {
	        var istooltip = false
	      }
	      if (!target || (!ischild(tooltip.node(),target) && !ischild(params.mouseevents,target) && !istooltip)) {
	        oldout(d3.select(params.mouseevents).datum())
	        close_descriptions()
	        d3.select(params.mouseevents).on(events.out,oldout)
	      }
	    }
	
	    var ischild = function(parent, child) {
	       var node = child.parentNode;
	       while (node !== null) {
	         if (node == parent) {
	           return true;
	         }
	         node = node.parentNode;
	       }
	       return false;
	    }
	
	    d3.select(params.mouseevents).on(events.out,newout)
	    tooltip.on(events.out,newout)
	
	    var move_event = d3.select(params.mouseevents).on(events.move)
	    if (move_event) {
	      tooltip.on(events.move,move_event)
	    }
	
	  }
	
	  if (params.arrow) {
	    var arrow = tooltip.append("div")
	      .attr("class","d3plus_tooltip_arrow")
	      .style("background-color",params.background)
	      .style(vendor+"box-shadow","0px 1px 3px rgba(0, 0, 0, 0.25)")
	      .style("position","absolute")
	      .style("bottom","-5px")
	      .style("height","10px")
	      .style("left","50%")
	      .style("margin-left","-5px")
	      .style("width","10px")
	      .style(vendor+"transform","rotate(45deg)")
	      .style("z-index",-1)
	  }
	
	  if (params.icon) {
	
	    var title_icon = header.append("div")
	      .attr("class","d3plus_tooltip_icon")
	      .style("width",params.iconsize+"px")
	      .style("height",params.iconsize+"px")
	      .style("z-index",1)
	      .style("background-position","50%")
	      .style("background-size","100%")
	      .style("background-image","url("+params.icon+")")
	      .style("display","inline-block")
	      .style("margin","0px 3px 3px 0px")
	
	    if (params.style == "knockout") {
	      title_icon.style("background-color",params.color)
	    }
	
	    title_width -= title_icon.node().offsetWidth
	  }
	
	  if (params.title) {
	    var mw = params.max_width-6
	    if ( params.icon ) mw -= (params.iconsize+6)
	    mw += "px"
	
	    var title = header.append("div")
	      .attr("class","d3plus_tooltip_title")
	      .style("max-width",mw)
	      .style("color",!params.icon ? legible(params.color) : params.fontcolor)
	      .style("vertical-align","top")
	      .style("width",title_width+"px")
	      .style("display","inline-block")
	      .style("overflow","hidden")
	      .style("text-overflow","ellipsis")
	      .style("word-wrap","break-word")
	      .style("z-index",1)
	      .style("font-size",params.size === "large" ? "18px" : "16px")
	      .style("line-height",params.size === "large" ? "20px" : "17px")
	      .style("padding",params.size === "large" ? "3px 6px" : "3px")
	      .text(params.title)
	  }
	
	  if (params.description) {
	    var description = body.append("div")
	      .attr("class","d3plus_tooltip_description")
	      .style("font-size","12px")
	      .style("padding","6px")
	      .text(params.description)
	  }
	
	  if (params.data || params.html && !params.fullscreen) {
	
	    var data_container = body.append("div")
	      .attr("class","d3plus_tooltip_data_container")
	      .style("overflow-y","auto")
	      .style("z-index",-1)
	  }
	
	  if (params.data) {
	
	    var val_width = 0, val_heights = {}
	
	    var last_group = null
	    params.data.forEach(function(d,i){
	
	      if (d.group) {
	        if (last_group != d.group) {
	          last_group = d.group
	          data_container.append("div")
	            .attr("class","d3plus_tooltip_data_title")
	            .style("font-size","12px")
	            .style("font-weight","bold")
	            .style("padding","6px 3px 0px 3px")
	            .text(d.group)
	        }
	      }
	
	      var block = data_container.append("div")
	        .attr("class","d3plus_tooltip_data_block")
	        .style("font-size","12px")
	        .style("padding","3px 6px")
	        .style("position","relative")
	        .datum(d)
	
	      if ( d.highlight === true ) {
	        block.style("color",legible(params.color))
	      }
	      else if ( d.allColors || d.highlight !== params.color ) {
	        block.style("color",legible(d.highlight))
	      }
	
	      var name = block.append("div")
	          .attr("class","d3plus_tooltip_data_name")
	          .style("display","inline-block")
	          .html(d.name)
	          .on(events.out,function(){
	            d3.event.stopPropagation()
	          })
	
	      if (d.link) {
	        name
	          .style("cursor","pointer")
	          .on(events.click,d.link)
	      }
	
	      if ( d.value instanceof Array ) {
	
	        var and = params.locale.ui.and
	          , more = params.locale.ui.more
	
	        d.value = list( d.value , and , 3 , more )
	
	      }
	
	      var val = block.append("div")
	          .attr("class","d3plus_tooltip_data_value")
	          .style("display","block")
	          .style("position","absolute")
	          .style("text-align","right")
	          .style("top","3px")
	          .html(d.value)
	          .on(events.out,function(){
	            d3.event.stopPropagation()
	          })
	
	      if (rtl) {
	        val.style("left","6px")
	      }
	      else {
	        val.style("right","6px")
	      }
	
	      if (params.mouseevents && d.desc) {
	        var desc = block.append("div")
	          .attr("class","d3plus_tooltip_data_desc")
	          .style("color","#888")
	          .style("overflow","hidden")
	          .style(vendor+"transition","height 0.5s")
	          .style("width","85%")
	          .text(d.desc)
	          .on(events.out,function(){
	            d3.event.stopPropagation()
	          })
	
	        var dh = desc.node().offsetHeight || desc.node().getBoundingClientRect().height
	
	        desc.style("height","0px")
	
	        var help = name.append("div")
	          .attr("class","d3plus_tooltip_data_help")
	          .style("background-color","#ccc")
	          .style(vendor+"border-radius","5px")
	          .style("color","#fff")
	          .style("cursor","pointer")
	          .style("display","inline-block")
	          .style("font-size","8px")
	          .style("font-weight","bold")
	          .style("height","10px")
	          .style("margin","3px 0px 0px 3px")
	          .style("padding-right","1px")
	          .style("text-align","center")
	          .style("width","10px")
	          .style("vertical-align","top")
	          .style(prefix+"transition","background-color 0.5s")
	          .text("?")
	          .on(events.over,function(){
	            var c = d3.select(this.parentNode.parentNode).style("color")
	            d3.select(this).style("background-color",c)
	            desc.style("height",dh+"px")
	          })
	          .on(events.out,function(){
	            d3.event.stopPropagation()
	          })
	
	        name
	          .style("cursor","pointer")
	          .on(events.over,function(){
	            close_descriptions()
	            var c = d3.select(this.parentNode).style("color")
	            help.style("background-color",c)
	            desc.style("height",dh+"px")
	          })
	
	        block.on(events.out,function(){
	          d3.event.stopPropagation()
	          close_descriptions()
	        })
	      }
	
	      var w = parseFloat(val.style("width"),10)
	      if (w > params.width/2) w = params.width/2
	      if (w > val_width) val_width = w
	
	      if (i != params.data.length-1) {
	        if ((d.group && d.group == params.data[i+1].group) || !d.group && !params.data[i+1].group)
	        data_container.append("div")
	          .attr("class","d3plus_tooltip_data_seperator")
	          .style("background-color","#ddd")
	          .style("display","block")
	          .style("height","1px")
	          .style("margin","0px 3px")
	      }
	
	    })
	
	    data_container.selectAll(".d3plus_tooltip_data_name")
	      .style("width",function(){
	        var w = parseFloat(d3.select(this.parentNode).style("width"),10)
	        return (w-val_width-30)+"px"
	      })
	
	    data_container.selectAll(".d3plus_tooltip_data_value")
	      .style("width",val_width+"px")
	      .each(function(d){
	        var h = parseFloat(d3.select(this).style("height"),10)
	        val_heights[d.name] = h
	      })
	
	    data_container.selectAll(".d3plus_tooltip_data_name")
	      .style("min-height",function(d){
	        return val_heights[d.name]+"px"
	      })
	
	  }
	
	  if (params.html && (!params.fullscreen || params.stacked)) {
	    data_container.append("div")
	      .html(params.html)
	    if (params.js) {
	      params.js(container)
	    }
	  }
	
	  var footer = body.append("div")
	    .attr("class","d3plus_tooltip_footer")
	    .style("font-size","10px")
	    .style("position","relative")
	    .style("text-align","center")
	
	  if (params.footer) {
	    footer.html(params.footer)
	  }
	
	  params.height = tooltip.node().offsetHeight || tooltip.node().getBoundingClientRect().height
	
	  if (params.html && params.fullscreen && !params.stacked) {
	    var h = params.height-12
	    var w = tooltip.node().offsetWidth-params.width-44
	    container.append("div")
	      .attr("class","d3plus_tooltip_html")
	      .style("width",w+"px")
	      .style("height",h+"px")
	      .style("display","inline-block")
	      .style("vertical-align","top")
	      .style("overflow-y","auto")
	      .style("padding","0px 12px")
	      .style("position","absolute")
	      .html(params.html)
	    if (params.js) {
	      params.js(container)
	    }
	  }
	
	  params.width = tooltip.node().offsetWidth
	
	  if (params.anchor.y != "center") params.height += params.arrow_offset
	  else params.width += params.arrow_offset
	
	  if (params.data || ((!params.fullscreen || params.stacked) && params.html)) {
	
	    if (!params.fullscreen || params.stacked) {
	      var limit = params.fixed ? parentHeight-params.y-10 : parentHeight-10
	      var h = params.height < limit ? params.height : limit
	    }
	    else {
	      var h = params.height
	    }
	    h -= parseFloat(container.style("padding-top"),10)
	    h -= parseFloat(container.style("padding-bottom"),10)
	    if (header) {
	      h -= header.node().offsetHeight || header.node().getBoundingClientRect().height
	      h -= parseFloat(header.style("padding-top"),10)
	      h -= parseFloat(header.style("padding-bottom"),10)
	    }
	    if (footer) {
	      h -= footer.node().offsetHeight || footer.node().getBoundingClientRect().height
	      h -= parseFloat(footer.style("padding-top"),10)
	      h -= parseFloat(footer.style("padding-bottom"),10)
	    }
	
	    data_container
	      .style("max-height",h+"px")
	  }
	
	  params.height = tooltip.node().offsetHeight || tooltip.node().getBoundingClientRect().height
	
	  move(params.x, params.y, params.id);
	
	}
	
	
	
	//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	// Function that closes ALL Descriptions
	//-------------------------------------------------------------------
	function close_descriptions() {
	  d3.selectAll("div.d3plus_tooltip_data_desc").style("height","0px");
	  d3.selectAll("div.d3plus_tooltip_data_help").style("background-color","#ccc");
	}


/***/ },
/* 149 */
/***/ function(module, exports, __webpack_require__) {

	var events = __webpack_require__(9),
	    textColor = __webpack_require__(25);
	
	//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	// Creates Centered Server Message
	//------------------------------------------------------------------------------
	module.exports = function(vars,message) {
	
	  message = vars.messages.value ? message : null;
	
	  var size = vars.messages.style.value || (message === vars.error.internal ?
	             "large" : vars.messages.style.backup);
	
	  if (size === "large") {
	    var font = vars.messages,
	        position = "center"
	  }
	  else {
	
	    if (vars.footer.value) {
	      var font = vars.footer
	    }
	    else if (vars.title.value) {
	      var font = vars.title
	    }
	    else if (vars.title.sub.value) {
	      var font = vars.title.sub
	    }
	    else if (vars.title.total.value) {
	      var font = vars.title.total
	    }
	    else {
	      var font = vars.title.sub
	    }
	
	    var position = font.position
	
	  }
	
	  var font = {
	    "color": font.font.color,
	    "font-family": font.font.family.value,
	    "font-weight": font.font.weight,
	    "font-size": font.font.size+"px",
	    "padding": font.padding+"px"
	  }
	
	  var bg = vars.messages.background.value;
	  if (!bg) {
	    bg = vars.background.value;
	    if (bg === "none" || bg === "transparent") {
	      bg = textColor(font.color);
	    }
	  }
	
	  function style(elem) {
	
	    elem
	      .style(font)
	      .style("position", "absolute")
	      .style("background-color", bg)
	      .style("text-align", "center")
	      .style("left",function(){
	        return position == "center" ? "50%" : "0px"
	      })
	      .style("width",function(){
	        return position == "center" ? "auto" : vars.width.value+"px"
	      })
	      .style("margin-left",function(){
	        return position == "center" ? -(this.offsetWidth/2)+"px" : "0px";
	      })
	      .style("top",function(){
	        if (position == "center") {
	          return "50%";
	        }
	        else if (position == "top") {
	          return "0px"
	        }
	        else {
	          return "auto"
	        }
	      })
	      .style("bottom",function(){
	        if (position == "bottom") {
	          return "0px"
	        }
	        else {
	          return "auto"
	        }
	      })
	      .style("margin-top",function(){
	        if (size == "large") {
	          var height = this.offsetHeight || this.getBoundingClientRect().height
	          return -height/2+"px"
	        }
	        return "0px"
	      })
	
	  }
	
	  // Enter Message Group
	  vars.g.message = vars.container.value.selectAll("div#d3plus_message")
	    .data(["message"])
	
	  var enter = vars.g.message.enter().append("div")
	    .attr("id","d3plus_message")
	    .attr("opacity",0);
	
	  enter.append("div")
	    .attr("class", "d3plus_message_text")
	    .style("display", "block");
	
	  vars.g.message.select(".d3plus_message_text")
	    .text(message ? message : vars.g.message.text())
	
	  var online = navigator.onLine, square = 75;
	
	  var branding = vars.g.message.selectAll(".d3plus_message_branding")
	    .data(vars.messages.branding.value && position === "center" ? [0] : []);
	
	  branding.enter().append("div")
	    .attr("class", "d3plus_message_branding")
	    .style("margin-top", "15px")
	    .style("padding-top", "0px")
	    .style("display", "block")
	    .style("font-size", "11px")
	    .style("background-size", square + "px")
	    .style("background-position", "center 10px")
	    .style("background-repeat", "no-repeat")
	    .style("cursor", "pointer")
	    .on(events.click, function(){
	      window.open("http://www.d3plus.org/", "_blank");
	    });
	
	  var logo = d3.hsl(bg).l < 0.5 ? vars.messages.branding.image.dark : vars.messages.branding.image.light;
	
	  branding
	    .text(online ? "Powered by:" : "Powered by D3plus")
	    .style("background-color", online ? bg : "transparent")
	    .style("background-image", online ? "url('" + logo + "')" : "none")
	    .style("min-width", online ? square + "px" : "auto")
	    .style("height", online ? square + "px" : "auto");
	
	  branding.exit().remove();
	
	  vars.g.message
	    .style("display", message ? "inline-block" : "none")
	    .call(style).style("opacity", message ? 1 : 0)
	
	}


/***/ },
/* 150 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule CSSProperty
	 */
	
	'use strict';
	
	/**
	 * CSS properties which accept numbers but are not in units of "px".
	 */
	var isUnitlessNumber = {
	  animationIterationCount: true,
	  boxFlex: true,
	  boxFlexGroup: true,
	  boxOrdinalGroup: true,
	  columnCount: true,
	  flex: true,
	  flexGrow: true,
	  flexPositive: true,
	  flexShrink: true,
	  flexNegative: true,
	  flexOrder: true,
	  fontWeight: true,
	  lineClamp: true,
	  lineHeight: true,
	  opacity: true,
	  order: true,
	  orphans: true,
	  tabSize: true,
	  widows: true,
	  zIndex: true,
	  zoom: true,
	
	  // SVG-related properties
	  fillOpacity: true,
	  stopOpacity: true,
	  strokeDashoffset: true,
	  strokeOpacity: true,
	  strokeWidth: true
	};
	
	/**
	 * @param {string} prefix vendor-specific prefix, eg: Webkit
	 * @param {string} key style name, eg: transitionDuration
	 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
	 * WebkitTransitionDuration
	 */
	function prefixKey(prefix, key) {
	  return prefix + key.charAt(0).toUpperCase() + key.substring(1);
	}
	
	/**
	 * Support style names that may come passed in prefixed by adding permutations
	 * of vendor prefixes.
	 */
	var prefixes = ['Webkit', 'ms', 'Moz', 'O'];
	
	// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
	// infinite loop, because it iterates over the newly added props too.
	Object.keys(isUnitlessNumber).forEach(function (prop) {
	  prefixes.forEach(function (prefix) {
	    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
	  });
	});
	
	/**
	 * Most style properties can be unset by doing .style[prop] = '' but IE8
	 * doesn't like doing that with shorthand properties so for the properties that
	 * IE8 breaks on, which are listed here, we instead unset each of the
	 * individual properties. See http://bugs.jquery.com/ticket/12385.
	 * The 4-value 'clock' properties like margin, padding, border-width seem to
	 * behave without any problems. Curiously, list-style works too without any
	 * special prodding.
	 */
	var shorthandPropertyExpansions = {
	  background: {
	    backgroundAttachment: true,
	    backgroundColor: true,
	    backgroundImage: true,
	    backgroundPositionX: true,
	    backgroundPositionY: true,
	    backgroundRepeat: true
	  },
	  backgroundPosition: {
	    backgroundPositionX: true,
	    backgroundPositionY: true
	  },
	  border: {
	    borderWidth: true,
	    borderStyle: true,
	    borderColor: true
	  },
	  borderBottom: {
	    borderBottomWidth: true,
	    borderBottomStyle: true,
	    borderBottomColor: true
	  },
	  borderLeft: {
	    borderLeftWidth: true,
	    borderLeftStyle: true,
	    borderLeftColor: true
	  },
	  borderRight: {
	    borderRightWidth: true,
	    borderRightStyle: true,
	    borderRightColor: true
	  },
	  borderTop: {
	    borderTopWidth: true,
	    borderTopStyle: true,
	    borderTopColor: true
	  },
	  font: {
	    fontStyle: true,
	    fontVariant: true,
	    fontWeight: true,
	    fontSize: true,
	    lineHeight: true,
	    fontFamily: true
	  },
	  outline: {
	    outlineWidth: true,
	    outlineStyle: true,
	    outlineColor: true
	  }
	};
	
	var CSSProperty = {
	  isUnitlessNumber: isUnitlessNumber,
	  shorthandPropertyExpansions: shorthandPropertyExpansions
	};
	
	module.exports = CSSProperty;

/***/ },
/* 151 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMChildrenOperations
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var Danger = __webpack_require__(429);
	var ReactMultiChildUpdateTypes = __webpack_require__(168);
	var ReactPerf = __webpack_require__(22);
	
	var setInnerHTML = __webpack_require__(78);
	var setTextContent = __webpack_require__(116);
	var invariant = __webpack_require__(4);
	
	/**
	 * Inserts `childNode` as a child of `parentNode` at the `index`.
	 *
	 * @param {DOMElement} parentNode Parent node in which to insert.
	 * @param {DOMElement} childNode Child node to insert.
	 * @param {number} index Index at which to insert the child.
	 * @internal
	 */
	function insertChildAt(parentNode, childNode, index) {
	  // By exploiting arrays returning `undefined` for an undefined index, we can
	  // rely exclusively on `insertBefore(node, null)` instead of also using
	  // `appendChild(node)`. However, using `undefined` is not allowed by all
	  // browsers so we must replace it with `null`.
	
	  // fix render order error in safari
	  // IE8 will throw error when index out of list size.
	  var beforeChild = index >= parentNode.childNodes.length ? null : parentNode.childNodes.item(index);
	
	  parentNode.insertBefore(childNode, beforeChild);
	}
	
	/**
	 * Operations for updating with DOM children.
	 */
	var DOMChildrenOperations = {
	
	  dangerouslyReplaceNodeWithMarkup: Danger.dangerouslyReplaceNodeWithMarkup,
	
	  updateTextContent: setTextContent,
	
	  /**
	   * Updates a component's children by processing a series of updates. The
	   * update configurations are each expected to have a `parentNode` property.
	   *
	   * @param {array<object>} updates List of update configurations.
	   * @param {array<string>} markupList List of markup strings.
	   * @internal
	   */
	  processUpdates: function (updates, markupList) {
	    var update;
	    // Mapping from parent IDs to initial child orderings.
	    var initialChildren = null;
	    // List of children that will be moved or removed.
	    var updatedChildren = null;
	
	    for (var i = 0; i < updates.length; i++) {
	      update = updates[i];
	      if (update.type === ReactMultiChildUpdateTypes.MOVE_EXISTING || update.type === ReactMultiChildUpdateTypes.REMOVE_NODE) {
	        var updatedIndex = update.fromIndex;
	        var updatedChild = update.parentNode.childNodes[updatedIndex];
	        var parentID = update.parentID;
	
	        !updatedChild ? process.env.NODE_ENV !== 'production' ? invariant(false, 'processUpdates(): Unable to find child %s of element. This ' + 'probably means the DOM was unexpectedly mutated (e.g., by the ' + 'browser), usually due to forgetting a <tbody> when using tables, ' + 'nesting tags like <form>, <p>, or <a>, or using non-SVG elements ' + 'in an <svg> parent. Try inspecting the child nodes of the element ' + 'with React ID `%s`.', updatedIndex, parentID) : invariant(false) : undefined;
	
	        initialChildren = initialChildren || {};
	        initialChildren[parentID] = initialChildren[parentID] || [];
	        initialChildren[parentID][updatedIndex] = updatedChild;
	
	        updatedChildren = updatedChildren || [];
	        updatedChildren.push(updatedChild);
	      }
	    }
	
	    var renderedMarkup;
	    // markupList is either a list of markup or just a list of elements
	    if (markupList.length && typeof markupList[0] === 'string') {
	      renderedMarkup = Danger.dangerouslyRenderMarkup(markupList);
	    } else {
	      renderedMarkup = markupList;
	    }
	
	    // Remove updated children first so that `toIndex` is consistent.
	    if (updatedChildren) {
	      for (var j = 0; j < updatedChildren.length; j++) {
	        updatedChildren[j].parentNode.removeChild(updatedChildren[j]);
	      }
	    }
	
	    for (var k = 0; k < updates.length; k++) {
	      update = updates[k];
	      switch (update.type) {
	        case ReactMultiChildUpdateTypes.INSERT_MARKUP:
	          insertChildAt(update.parentNode, renderedMarkup[update.markupIndex], update.toIndex);
	          break;
	        case ReactMultiChildUpdateTypes.MOVE_EXISTING:
	          insertChildAt(update.parentNode, initialChildren[update.parentID][update.fromIndex], update.toIndex);
	          break;
	        case ReactMultiChildUpdateTypes.SET_MARKUP:
	          setInnerHTML(update.parentNode, update.content);
	          break;
	        case ReactMultiChildUpdateTypes.TEXT_CONTENT:
	          setTextContent(update.parentNode, update.content);
	          break;
	        case ReactMultiChildUpdateTypes.REMOVE_NODE:
	          // Already removed by the for-loop above.
	          break;
	      }
	    }
	  }
	
	};
	
	ReactPerf.measureMethods(DOMChildrenOperations, 'DOMChildrenOperations', {
	  updateTextContent: 'updateTextContent'
	});
	
	module.exports = DOMChildrenOperations;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 152 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPluginRegistry
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var invariant = __webpack_require__(4);
	
	/**
	 * Injectable ordering of event plugins.
	 */
	var EventPluginOrder = null;
	
	/**
	 * Injectable mapping from names to event plugin modules.
	 */
	var namesToPlugins = {};
	
	/**
	 * Recomputes the plugin list using the injected plugins and plugin ordering.
	 *
	 * @private
	 */
	function recomputePluginOrdering() {
	  if (!EventPluginOrder) {
	    // Wait until an `EventPluginOrder` is injected.
	    return;
	  }
	  for (var pluginName in namesToPlugins) {
	    var PluginModule = namesToPlugins[pluginName];
	    var pluginIndex = EventPluginOrder.indexOf(pluginName);
	    !(pluginIndex > -1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugins that do not exist in ' + 'the plugin ordering, `%s`.', pluginName) : invariant(false) : undefined;
	    if (EventPluginRegistry.plugins[pluginIndex]) {
	      continue;
	    }
	    !PluginModule.extractEvents ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Event plugins must implement an `extractEvents` ' + 'method, but `%s` does not.', pluginName) : invariant(false) : undefined;
	    EventPluginRegistry.plugins[pluginIndex] = PluginModule;
	    var publishedEvents = PluginModule.eventTypes;
	    for (var eventName in publishedEvents) {
	      !publishEventForPlugin(publishedEvents[eventName], PluginModule, eventName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', eventName, pluginName) : invariant(false) : undefined;
	    }
	  }
	}
	
	/**
	 * Publishes an event so that it can be dispatched by the supplied plugin.
	 *
	 * @param {object} dispatchConfig Dispatch configuration for the event.
	 * @param {object} PluginModule Plugin publishing the event.
	 * @return {boolean} True if the event was successfully published.
	 * @private
	 */
	function publishEventForPlugin(dispatchConfig, PluginModule, eventName) {
	  !!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same ' + 'event name, `%s`.', eventName) : invariant(false) : undefined;
	  EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;
	
	  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
	  if (phasedRegistrationNames) {
	    for (var phaseName in phasedRegistrationNames) {
	      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
	        var phasedRegistrationName = phasedRegistrationNames[phaseName];
	        publishRegistrationName(phasedRegistrationName, PluginModule, eventName);
	      }
	    }
	    return true;
	  } else if (dispatchConfig.registrationName) {
	    publishRegistrationName(dispatchConfig.registrationName, PluginModule, eventName);
	    return true;
	  }
	  return false;
	}
	
	/**
	 * Publishes a registration name that is used to identify dispatched events and
	 * can be used with `EventPluginHub.putListener` to register listeners.
	 *
	 * @param {string} registrationName Registration name to add.
	 * @param {object} PluginModule Plugin publishing the event.
	 * @private
	 */
	function publishRegistrationName(registrationName, PluginModule, eventName) {
	  !!EventPluginRegistry.registrationNameModules[registrationName] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same ' + 'registration name, `%s`.', registrationName) : invariant(false) : undefined;
	  EventPluginRegistry.registrationNameModules[registrationName] = PluginModule;
	  EventPluginRegistry.registrationNameDependencies[registrationName] = PluginModule.eventTypes[eventName].dependencies;
	}
	
	/**
	 * Registers plugins so that they can extract and dispatch events.
	 *
	 * @see {EventPluginHub}
	 */
	var EventPluginRegistry = {
	
	  /**
	   * Ordered list of injected plugins.
	   */
	  plugins: [],
	
	  /**
	   * Mapping from event name to dispatch config
	   */
	  eventNameDispatchConfigs: {},
	
	  /**
	   * Mapping from registration name to plugin module
	   */
	  registrationNameModules: {},
	
	  /**
	   * Mapping from registration name to event name
	   */
	  registrationNameDependencies: {},
	
	  /**
	   * Injects an ordering of plugins (by plugin name). This allows the ordering
	   * to be decoupled from injection of the actual plugins so that ordering is
	   * always deterministic regardless of packaging, on-the-fly injection, etc.
	   *
	   * @param {array} InjectedEventPluginOrder
	   * @internal
	   * @see {EventPluginHub.injection.injectEventPluginOrder}
	   */
	  injectEventPluginOrder: function (InjectedEventPluginOrder) {
	    !!EventPluginOrder ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugin ordering more than ' + 'once. You are likely trying to load more than one copy of React.') : invariant(false) : undefined;
	    // Clone the ordering so it cannot be dynamically mutated.
	    EventPluginOrder = Array.prototype.slice.call(InjectedEventPluginOrder);
	    recomputePluginOrdering();
	  },
	
	  /**
	   * Injects plugins to be used by `EventPluginHub`. The plugin names must be
	   * in the ordering injected by `injectEventPluginOrder`.
	   *
	   * Plugins can be injected as part of page initialization or on-the-fly.
	   *
	   * @param {object} injectedNamesToPlugins Map from names to plugin modules.
	   * @internal
	   * @see {EventPluginHub.injection.injectEventPluginsByName}
	   */
	  injectEventPluginsByName: function (injectedNamesToPlugins) {
	    var isOrderingDirty = false;
	    for (var pluginName in injectedNamesToPlugins) {
	      if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
	        continue;
	      }
	      var PluginModule = injectedNamesToPlugins[pluginName];
	      if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== PluginModule) {
	        !!namesToPlugins[pluginName] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject two different event plugins ' + 'using the same name, `%s`.', pluginName) : invariant(false) : undefined;
	        namesToPlugins[pluginName] = PluginModule;
	        isOrderingDirty = true;
	      }
	    }
	    if (isOrderingDirty) {
	      recomputePluginOrdering();
	    }
	  },
	
	  /**
	   * Looks up the plugin for the supplied event.
	   *
	   * @param {object} event A synthetic event.
	   * @return {?object} The plugin that created the supplied event.
	   * @internal
	   */
	  getPluginModuleForEvent: function (event) {
	    var dispatchConfig = event.dispatchConfig;
	    if (dispatchConfig.registrationName) {
	      return EventPluginRegistry.registrationNameModules[dispatchConfig.registrationName] || null;
	    }
	    for (var phase in dispatchConfig.phasedRegistrationNames) {
	      if (!dispatchConfig.phasedRegistrationNames.hasOwnProperty(phase)) {
	        continue;
	      }
	      var PluginModule = EventPluginRegistry.registrationNameModules[dispatchConfig.phasedRegistrationNames[phase]];
	      if (PluginModule) {
	        return PluginModule;
	      }
	    }
	    return null;
	  },
	
	  /**
	   * Exposed for unit testing.
	   * @private
	   */
	  _resetEventPlugins: function () {
	    EventPluginOrder = null;
	    for (var pluginName in namesToPlugins) {
	      if (namesToPlugins.hasOwnProperty(pluginName)) {
	        delete namesToPlugins[pluginName];
	      }
	    }
	    EventPluginRegistry.plugins.length = 0;
	
	    var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;
	    for (var eventName in eventNameDispatchConfigs) {
	      if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {
	        delete eventNameDispatchConfigs[eventName];
	      }
	    }
	
	    var registrationNameModules = EventPluginRegistry.registrationNameModules;
	    for (var registrationName in registrationNameModules) {
	      if (registrationNameModules.hasOwnProperty(registrationName)) {
	        delete registrationNameModules[registrationName];
	      }
	    }
	  }
	
	};
	
	module.exports = EventPluginRegistry;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 153 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactChildren
	 */
	
	'use strict';
	
	var PooledClass = __webpack_require__(37);
	var ReactElement = __webpack_require__(18);
	
	var emptyFunction = __webpack_require__(27);
	var traverseAllChildren = __webpack_require__(118);
	
	var twoArgumentPooler = PooledClass.twoArgumentPooler;
	var fourArgumentPooler = PooledClass.fourArgumentPooler;
	
	var userProvidedKeyEscapeRegex = /\/(?!\/)/g;
	function escapeUserProvidedKey(text) {
	  return ('' + text).replace(userProvidedKeyEscapeRegex, '//');
	}
	
	/**
	 * PooledClass representing the bookkeeping associated with performing a child
	 * traversal. Allows avoiding binding callbacks.
	 *
	 * @constructor ForEachBookKeeping
	 * @param {!function} forEachFunction Function to perform traversal with.
	 * @param {?*} forEachContext Context to perform context with.
	 */
	function ForEachBookKeeping(forEachFunction, forEachContext) {
	  this.func = forEachFunction;
	  this.context = forEachContext;
	  this.count = 0;
	}
	ForEachBookKeeping.prototype.destructor = function () {
	  this.func = null;
	  this.context = null;
	  this.count = 0;
	};
	PooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);
	
	function forEachSingleChild(bookKeeping, child, name) {
	  var func = bookKeeping.func;
	  var context = bookKeeping.context;
	
	  func.call(context, child, bookKeeping.count++);
	}
	
	/**
	 * Iterates through children that are typically specified as `props.children`.
	 *
	 * The provided forEachFunc(child, index) will be called for each
	 * leaf child.
	 *
	 * @param {?*} children Children tree container.
	 * @param {function(*, int)} forEachFunc
	 * @param {*} forEachContext Context for forEachContext.
	 */
	function forEachChildren(children, forEachFunc, forEachContext) {
	  if (children == null) {
	    return children;
	  }
	  var traverseContext = ForEachBookKeeping.getPooled(forEachFunc, forEachContext);
	  traverseAllChildren(children, forEachSingleChild, traverseContext);
	  ForEachBookKeeping.release(traverseContext);
	}
	
	/**
	 * PooledClass representing the bookkeeping associated with performing a child
	 * mapping. Allows avoiding binding callbacks.
	 *
	 * @constructor MapBookKeeping
	 * @param {!*} mapResult Object containing the ordered map of results.
	 * @param {!function} mapFunction Function to perform mapping with.
	 * @param {?*} mapContext Context to perform mapping with.
	 */
	function MapBookKeeping(mapResult, keyPrefix, mapFunction, mapContext) {
	  this.result = mapResult;
	  this.keyPrefix = keyPrefix;
	  this.func = mapFunction;
	  this.context = mapContext;
	  this.count = 0;
	}
	MapBookKeeping.prototype.destructor = function () {
	  this.result = null;
	  this.keyPrefix = null;
	  this.func = null;
	  this.context = null;
	  this.count = 0;
	};
	PooledClass.addPoolingTo(MapBookKeeping, fourArgumentPooler);
	
	function mapSingleChildIntoContext(bookKeeping, child, childKey) {
	  var result = bookKeeping.result;
	  var keyPrefix = bookKeeping.keyPrefix;
	  var func = bookKeeping.func;
	  var context = bookKeeping.context;
	
	  var mappedChild = func.call(context, child, bookKeeping.count++);
	  if (Array.isArray(mappedChild)) {
	    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);
	  } else if (mappedChild != null) {
	    if (ReactElement.isValidElement(mappedChild)) {
	      mappedChild = ReactElement.cloneAndReplaceKey(mappedChild,
	      // Keep both the (mapped) and old keys if they differ, just as
	      // traverseAllChildren used to do for objects as children
	      keyPrefix + (mappedChild !== child ? escapeUserProvidedKey(mappedChild.key || '') + '/' : '') + childKey);
	    }
	    result.push(mappedChild);
	  }
	}
	
	function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
	  var escapedPrefix = '';
	  if (prefix != null) {
	    escapedPrefix = escapeUserProvidedKey(prefix) + '/';
	  }
	  var traverseContext = MapBookKeeping.getPooled(array, escapedPrefix, func, context);
	  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
	  MapBookKeeping.release(traverseContext);
	}
	
	/**
	 * Maps children that are typically specified as `props.children`.
	 *
	 * The provided mapFunction(child, key, index) will be called for each
	 * leaf child.
	 *
	 * @param {?*} children Children tree container.
	 * @param {function(*, int)} func The map function.
	 * @param {*} context Context for mapFunction.
	 * @return {object} Object containing the ordered map of results.
	 */
	function mapChildren(children, func, context) {
	  if (children == null) {
	    return children;
	  }
	  var result = [];
	  mapIntoWithKeyPrefixInternal(children, result, null, func, context);
	  return result;
	}
	
	function forEachSingleChildDummy(traverseContext, child, name) {
	  return null;
	}
	
	/**
	 * Count the number of children that are typically specified as
	 * `props.children`.
	 *
	 * @param {?*} children Children tree container.
	 * @return {number} The number of children.
	 */
	function countChildren(children, context) {
	  return traverseAllChildren(children, forEachSingleChildDummy, null);
	}
	
	/**
	 * Flatten a children object (typically specified as `props.children`) and
	 * return an array with appropriately re-keyed children.
	 */
	function toArray(children) {
	  var result = [];
	  mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);
	  return result;
	}
	
	var ReactChildren = {
	  forEach: forEachChildren,
	  map: mapChildren,
	  mapIntoWithKeyPrefixInternal: mapIntoWithKeyPrefixInternal,
	  count: countChildren,
	  toArray: toArray
	};
	
	module.exports = ReactChildren;

/***/ },
/* 154 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactClass
	 */
	
	'use strict';
	
	var ReactComponent = __webpack_require__(155);
	var ReactElement = __webpack_require__(18);
	var ReactPropTypeLocations = __webpack_require__(73);
	var ReactPropTypeLocationNames = __webpack_require__(72);
	var ReactNoopUpdateQueue = __webpack_require__(170);
	
	var assign = __webpack_require__(5);
	var emptyObject = __webpack_require__(64);
	var invariant = __webpack_require__(4);
	var keyMirror = __webpack_require__(79);
	var keyOf = __webpack_require__(38);
	var warning = __webpack_require__(6);
	
	var MIXINS_KEY = keyOf({ mixins: null });
	
	/**
	 * Policies that describe methods in `ReactClassInterface`.
	 */
	var SpecPolicy = keyMirror({
	  /**
	   * These methods may be defined only once by the class specification or mixin.
	   */
	  DEFINE_ONCE: null,
	  /**
	   * These methods may be defined by both the class specification and mixins.
	   * Subsequent definitions will be chained. These methods must return void.
	   */
	  DEFINE_MANY: null,
	  /**
	   * These methods are overriding the base class.
	   */
	  OVERRIDE_BASE: null,
	  /**
	   * These methods are similar to DEFINE_MANY, except we assume they return
	   * objects. We try to merge the keys of the return values of all the mixed in
	   * functions. If there is a key conflict we throw.
	   */
	  DEFINE_MANY_MERGED: null
	});
	
	var injectedMixins = [];
	
	var warnedSetProps = false;
	function warnSetProps() {
	  if (!warnedSetProps) {
	    warnedSetProps = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'setProps(...) and replaceProps(...) are deprecated. ' + 'Instead, call render again at the top level.') : undefined;
	  }
	}
	
	/**
	 * Composite components are higher-level components that compose other composite
	 * or native components.
	 *
	 * To create a new type of `ReactClass`, pass a specification of
	 * your new class to `React.createClass`. The only requirement of your class
	 * specification is that you implement a `render` method.
	 *
	 *   var MyComponent = React.createClass({
	 *     render: function() {
	 *       return <div>Hello World</div>;
	 *     }
	 *   });
	 *
	 * The class specification supports a specific protocol of methods that have
	 * special meaning (e.g. `render`). See `ReactClassInterface` for
	 * more the comprehensive protocol. Any other properties and methods in the
	 * class specification will be available on the prototype.
	 *
	 * @interface ReactClassInterface
	 * @internal
	 */
	var ReactClassInterface = {
	
	  /**
	   * An array of Mixin objects to include when defining your component.
	   *
	   * @type {array}
	   * @optional
	   */
	  mixins: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * An object containing properties and methods that should be defined on
	   * the component's constructor instead of its prototype (static methods).
	   *
	   * @type {object}
	   * @optional
	   */
	  statics: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * Definition of prop types for this component.
	   *
	   * @type {object}
	   * @optional
	   */
	  propTypes: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * Definition of context types for this component.
	   *
	   * @type {object}
	   * @optional
	   */
	  contextTypes: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * Definition of context types this component sets for its children.
	   *
	   * @type {object}
	   * @optional
	   */
	  childContextTypes: SpecPolicy.DEFINE_MANY,
	
	  // ==== Definition methods ====
	
	  /**
	   * Invoked when the component is mounted. Values in the mapping will be set on
	   * `this.props` if that prop is not specified (i.e. using an `in` check).
	   *
	   * This method is invoked before `getInitialState` and therefore cannot rely
	   * on `this.state` or use `this.setState`.
	   *
	   * @return {object}
	   * @optional
	   */
	  getDefaultProps: SpecPolicy.DEFINE_MANY_MERGED,
	
	  /**
	   * Invoked once before the component is mounted. The return value will be used
	   * as the initial value of `this.state`.
	   *
	   *   getInitialState: function() {
	   *     return {
	   *       isOn: false,
	   *       fooBaz: new BazFoo()
	   *     }
	   *   }
	   *
	   * @return {object}
	   * @optional
	   */
	  getInitialState: SpecPolicy.DEFINE_MANY_MERGED,
	
	  /**
	   * @return {object}
	   * @optional
	   */
	  getChildContext: SpecPolicy.DEFINE_MANY_MERGED,
	
	  /**
	   * Uses props from `this.props` and state from `this.state` to render the
	   * structure of the component.
	   *
	   * No guarantees are made about when or how often this method is invoked, so
	   * it must not have side effects.
	   *
	   *   render: function() {
	   *     var name = this.props.name;
	   *     return <div>Hello, {name}!</div>;
	   *   }
	   *
	   * @return {ReactComponent}
	   * @nosideeffects
	   * @required
	   */
	  render: SpecPolicy.DEFINE_ONCE,
	
	  // ==== Delegate methods ====
	
	  /**
	   * Invoked when the component is initially created and about to be mounted.
	   * This may have side effects, but any external subscriptions or data created
	   * by this method must be cleaned up in `componentWillUnmount`.
	   *
	   * @optional
	   */
	  componentWillMount: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * Invoked when the component has been mounted and has a DOM representation.
	   * However, there is no guarantee that the DOM node is in the document.
	   *
	   * Use this as an opportunity to operate on the DOM when the component has
	   * been mounted (initialized and rendered) for the first time.
	   *
	   * @param {DOMElement} rootNode DOM element representing the component.
	   * @optional
	   */
	  componentDidMount: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * Invoked before the component receives new props.
	   *
	   * Use this as an opportunity to react to a prop transition by updating the
	   * state using `this.setState`. Current props are accessed via `this.props`.
	   *
	   *   componentWillReceiveProps: function(nextProps, nextContext) {
	   *     this.setState({
	   *       likesIncreasing: nextProps.likeCount > this.props.likeCount
	   *     });
	   *   }
	   *
	   * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop
	   * transition may cause a state change, but the opposite is not true. If you
	   * need it, you are probably looking for `componentWillUpdate`.
	   *
	   * @param {object} nextProps
	   * @optional
	   */
	  componentWillReceiveProps: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * Invoked while deciding if the component should be updated as a result of
	   * receiving new props, state and/or context.
	   *
	   * Use this as an opportunity to `return false` when you're certain that the
	   * transition to the new props/state/context will not require a component
	   * update.
	   *
	   *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {
	   *     return !equal(nextProps, this.props) ||
	   *       !equal(nextState, this.state) ||
	   *       !equal(nextContext, this.context);
	   *   }
	   *
	   * @param {object} nextProps
	   * @param {?object} nextState
	   * @param {?object} nextContext
	   * @return {boolean} True if the component should update.
	   * @optional
	   */
	  shouldComponentUpdate: SpecPolicy.DEFINE_ONCE,
	
	  /**
	   * Invoked when the component is about to update due to a transition from
	   * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`
	   * and `nextContext`.
	   *
	   * Use this as an opportunity to perform preparation before an update occurs.
	   *
	   * NOTE: You **cannot** use `this.setState()` in this method.
	   *
	   * @param {object} nextProps
	   * @param {?object} nextState
	   * @param {?object} nextContext
	   * @param {ReactReconcileTransaction} transaction
	   * @optional
	   */
	  componentWillUpdate: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * Invoked when the component's DOM representation has been updated.
	   *
	   * Use this as an opportunity to operate on the DOM when the component has
	   * been updated.
	   *
	   * @param {object} prevProps
	   * @param {?object} prevState
	   * @param {?object} prevContext
	   * @param {DOMElement} rootNode DOM element representing the component.
	   * @optional
	   */
	  componentDidUpdate: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * Invoked when the component is about to be removed from its parent and have
	   * its DOM representation destroyed.
	   *
	   * Use this as an opportunity to deallocate any external resources.
	   *
	   * NOTE: There is no `componentDidUnmount` since your component will have been
	   * destroyed by that point.
	   *
	   * @optional
	   */
	  componentWillUnmount: SpecPolicy.DEFINE_MANY,
	
	  // ==== Advanced methods ====
	
	  /**
	   * Updates the component's currently mounted DOM representation.
	   *
	   * By default, this implements React's rendering and reconciliation algorithm.
	   * Sophisticated clients may wish to override this.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   * @overridable
	   */
	  updateComponent: SpecPolicy.OVERRIDE_BASE
	
	};
	
	/**
	 * Mapping from class specification keys to special processing functions.
	 *
	 * Although these are declared like instance properties in the specification
	 * when defining classes using `React.createClass`, they are actually static
	 * and are accessible on the constructor instead of the prototype. Despite
	 * being static, they must be defined outside of the "statics" key under
	 * which all other static methods are defined.
	 */
	var RESERVED_SPEC_KEYS = {
	  displayName: function (Constructor, displayName) {
	    Constructor.displayName = displayName;
	  },
	  mixins: function (Constructor, mixins) {
	    if (mixins) {
	      for (var i = 0; i < mixins.length; i++) {
	        mixSpecIntoComponent(Constructor, mixins[i]);
	      }
	    }
	  },
	  childContextTypes: function (Constructor, childContextTypes) {
	    if (process.env.NODE_ENV !== 'production') {
	      validateTypeDef(Constructor, childContextTypes, ReactPropTypeLocations.childContext);
	    }
	    Constructor.childContextTypes = assign({}, Constructor.childContextTypes, childContextTypes);
	  },
	  contextTypes: function (Constructor, contextTypes) {
	    if (process.env.NODE_ENV !== 'production') {
	      validateTypeDef(Constructor, contextTypes, ReactPropTypeLocations.context);
	    }
	    Constructor.contextTypes = assign({}, Constructor.contextTypes, contextTypes);
	  },
	  /**
	   * Special case getDefaultProps which should move into statics but requires
	   * automatic merging.
	   */
	  getDefaultProps: function (Constructor, getDefaultProps) {
	    if (Constructor.getDefaultProps) {
	      Constructor.getDefaultProps = createMergedResultFunction(Constructor.getDefaultProps, getDefaultProps);
	    } else {
	      Constructor.getDefaultProps = getDefaultProps;
	    }
	  },
	  propTypes: function (Constructor, propTypes) {
	    if (process.env.NODE_ENV !== 'production') {
	      validateTypeDef(Constructor, propTypes, ReactPropTypeLocations.prop);
	    }
	    Constructor.propTypes = assign({}, Constructor.propTypes, propTypes);
	  },
	  statics: function (Constructor, statics) {
	    mixStaticSpecIntoComponent(Constructor, statics);
	  },
	  autobind: function () {} };
	
	// noop
	function validateTypeDef(Constructor, typeDef, location) {
	  for (var propName in typeDef) {
	    if (typeDef.hasOwnProperty(propName)) {
	      // use a warning instead of an invariant so components
	      // don't show up in prod but not in __DEV__
	      process.env.NODE_ENV !== 'production' ? warning(typeof typeDef[propName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', Constructor.displayName || 'ReactClass', ReactPropTypeLocationNames[location], propName) : undefined;
	    }
	  }
	}
	
	function validateMethodOverride(proto, name) {
	  var specPolicy = ReactClassInterface.hasOwnProperty(name) ? ReactClassInterface[name] : null;
	
	  // Disallow overriding of base class methods unless explicitly allowed.
	  if (ReactClassMixin.hasOwnProperty(name)) {
	    !(specPolicy === SpecPolicy.OVERRIDE_BASE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to override ' + '`%s` from your class specification. Ensure that your method names ' + 'do not overlap with React methods.', name) : invariant(false) : undefined;
	  }
	
	  // Disallow defining methods more than once unless explicitly allowed.
	  if (proto.hasOwnProperty(name)) {
	    !(specPolicy === SpecPolicy.DEFINE_MANY || specPolicy === SpecPolicy.DEFINE_MANY_MERGED) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to define ' + '`%s` on your component more than once. This conflict may be due ' + 'to a mixin.', name) : invariant(false) : undefined;
	  }
	}
	
	/**
	 * Mixin helper which handles policy validation and reserved
	 * specification keys when building React classses.
	 */
	function mixSpecIntoComponent(Constructor, spec) {
	  if (!spec) {
	    return;
	  }
	
	  !(typeof spec !== 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You\'re attempting to ' + 'use a component class as a mixin. Instead, just use a regular object.') : invariant(false) : undefined;
	  !!ReactElement.isValidElement(spec) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You\'re attempting to ' + 'use a component as a mixin. Instead, just use a regular object.') : invariant(false) : undefined;
	
	  var proto = Constructor.prototype;
	
	  // By handling mixins before any other properties, we ensure the same
	  // chaining order is applied to methods with DEFINE_MANY policy, whether
	  // mixins are listed before or after these methods in the spec.
	  if (spec.hasOwnProperty(MIXINS_KEY)) {
	    RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
	  }
	
	  for (var name in spec) {
	    if (!spec.hasOwnProperty(name)) {
	      continue;
	    }
	
	    if (name === MIXINS_KEY) {
	      // We have already handled mixins in a special case above.
	      continue;
	    }
	
	    var property = spec[name];
	    validateMethodOverride(proto, name);
	
	    if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
	      RESERVED_SPEC_KEYS[name](Constructor, property);
	    } else {
	      // Setup methods on prototype:
	      // The following member methods should not be automatically bound:
	      // 1. Expected ReactClass methods (in the "interface").
	      // 2. Overridden methods (that were mixed in).
	      var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);
	      var isAlreadyDefined = proto.hasOwnProperty(name);
	      var isFunction = typeof property === 'function';
	      var shouldAutoBind = isFunction && !isReactClassMethod && !isAlreadyDefined && spec.autobind !== false;
	
	      if (shouldAutoBind) {
	        if (!proto.__reactAutoBindMap) {
	          proto.__reactAutoBindMap = {};
	        }
	        proto.__reactAutoBindMap[name] = property;
	        proto[name] = property;
	      } else {
	        if (isAlreadyDefined) {
	          var specPolicy = ReactClassInterface[name];
	
	          // These cases should already be caught by validateMethodOverride.
	          !(isReactClassMethod && (specPolicy === SpecPolicy.DEFINE_MANY_MERGED || specPolicy === SpecPolicy.DEFINE_MANY)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: Unexpected spec policy %s for key %s ' + 'when mixing in component specs.', specPolicy, name) : invariant(false) : undefined;
	
	          // For methods which are defined more than once, call the existing
	          // methods before calling the new property, merging if appropriate.
	          if (specPolicy === SpecPolicy.DEFINE_MANY_MERGED) {
	            proto[name] = createMergedResultFunction(proto[name], property);
	          } else if (specPolicy === SpecPolicy.DEFINE_MANY) {
	            proto[name] = createChainedFunction(proto[name], property);
	          }
	        } else {
	          proto[name] = property;
	          if (process.env.NODE_ENV !== 'production') {
	            // Add verbose displayName to the function, which helps when looking
	            // at profiling tools.
	            if (typeof property === 'function' && spec.displayName) {
	              proto[name].displayName = spec.displayName + '_' + name;
	            }
	          }
	        }
	      }
	    }
	  }
	}
	
	function mixStaticSpecIntoComponent(Constructor, statics) {
	  if (!statics) {
	    return;
	  }
	  for (var name in statics) {
	    var property = statics[name];
	    if (!statics.hasOwnProperty(name)) {
	      continue;
	    }
	
	    var isReserved = (name in RESERVED_SPEC_KEYS);
	    !!isReserved ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You are attempting to define a reserved ' + 'property, `%s`, that shouldn\'t be on the "statics" key. Define it ' + 'as an instance property instead; it will still be accessible on the ' + 'constructor.', name) : invariant(false) : undefined;
	
	    var isInherited = (name in Constructor);
	    !!isInherited ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You are attempting to define ' + '`%s` on your component more than once. This conflict may be ' + 'due to a mixin.', name) : invariant(false) : undefined;
	    Constructor[name] = property;
	  }
	}
	
	/**
	 * Merge two objects, but throw if both contain the same key.
	 *
	 * @param {object} one The first object, which is mutated.
	 * @param {object} two The second object
	 * @return {object} one after it has been mutated to contain everything in two.
	 */
	function mergeIntoWithNoDuplicateKeys(one, two) {
	  !(one && two && typeof one === 'object' && typeof two === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.') : invariant(false) : undefined;
	
	  for (var key in two) {
	    if (two.hasOwnProperty(key)) {
	      !(one[key] === undefined) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): ' + 'Tried to merge two objects with the same key: `%s`. This conflict ' + 'may be due to a mixin; in particular, this may be caused by two ' + 'getInitialState() or getDefaultProps() methods returning objects ' + 'with clashing keys.', key) : invariant(false) : undefined;
	      one[key] = two[key];
	    }
	  }
	  return one;
	}
	
	/**
	 * Creates a function that invokes two functions and merges their return values.
	 *
	 * @param {function} one Function to invoke first.
	 * @param {function} two Function to invoke second.
	 * @return {function} Function that invokes the two argument functions.
	 * @private
	 */
	function createMergedResultFunction(one, two) {
	  return function mergedResult() {
	    var a = one.apply(this, arguments);
	    var b = two.apply(this, arguments);
	    if (a == null) {
	      return b;
	    } else if (b == null) {
	      return a;
	    }
	    var c = {};
	    mergeIntoWithNoDuplicateKeys(c, a);
	    mergeIntoWithNoDuplicateKeys(c, b);
	    return c;
	  };
	}
	
	/**
	 * Creates a function that invokes two functions and ignores their return vales.
	 *
	 * @param {function} one Function to invoke first.
	 * @param {function} two Function to invoke second.
	 * @return {function} Function that invokes the two argument functions.
	 * @private
	 */
	function createChainedFunction(one, two) {
	  return function chainedFunction() {
	    one.apply(this, arguments);
	    two.apply(this, arguments);
	  };
	}
	
	/**
	 * Binds a method to the component.
	 *
	 * @param {object} component Component whose method is going to be bound.
	 * @param {function} method Method to be bound.
	 * @return {function} The bound method.
	 */
	function bindAutoBindMethod(component, method) {
	  var boundMethod = method.bind(component);
	  if (process.env.NODE_ENV !== 'production') {
	    boundMethod.__reactBoundContext = component;
	    boundMethod.__reactBoundMethod = method;
	    boundMethod.__reactBoundArguments = null;
	    var componentName = component.constructor.displayName;
	    var _bind = boundMethod.bind;
	    /* eslint-disable block-scoped-var, no-undef */
	    boundMethod.bind = function (newThis) {
	      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	        args[_key - 1] = arguments[_key];
	      }
	
	      // User is trying to bind() an autobound method; we effectively will
	      // ignore the value of "this" that the user is trying to use, so
	      // let's warn.
	      if (newThis !== component && newThis !== null) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): React component methods may only be bound to the ' + 'component instance. See %s', componentName) : undefined;
	      } else if (!args.length) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): You are binding a component method to the component. ' + 'React does this for you automatically in a high-performance ' + 'way, so you can safely remove this call. See %s', componentName) : undefined;
	        return boundMethod;
	      }
	      var reboundMethod = _bind.apply(boundMethod, arguments);
	      reboundMethod.__reactBoundContext = component;
	      reboundMethod.__reactBoundMethod = method;
	      reboundMethod.__reactBoundArguments = args;
	      return reboundMethod;
	      /* eslint-enable */
	    };
	  }
	  return boundMethod;
	}
	
	/**
	 * Binds all auto-bound methods in a component.
	 *
	 * @param {object} component Component whose method is going to be bound.
	 */
	function bindAutoBindMethods(component) {
	  for (var autoBindKey in component.__reactAutoBindMap) {
	    if (component.__reactAutoBindMap.hasOwnProperty(autoBindKey)) {
	      var method = component.__reactAutoBindMap[autoBindKey];
	      component[autoBindKey] = bindAutoBindMethod(component, method);
	    }
	  }
	}
	
	/**
	 * Add more to the ReactClass base class. These are all legacy features and
	 * therefore not already part of the modern ReactComponent.
	 */
	var ReactClassMixin = {
	
	  /**
	   * TODO: This will be deprecated because state should always keep a consistent
	   * type signature and the only use case for this, is to avoid that.
	   */
	  replaceState: function (newState, callback) {
	    this.updater.enqueueReplaceState(this, newState);
	    if (callback) {
	      this.updater.enqueueCallback(this, callback);
	    }
	  },
	
	  /**
	   * Checks whether or not this composite component is mounted.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function () {
	    return this.updater.isMounted(this);
	  },
	
	  /**
	   * Sets a subset of the props.
	   *
	   * @param {object} partialProps Subset of the next props.
	   * @param {?function} callback Called after props are updated.
	   * @final
	   * @public
	   * @deprecated
	   */
	  setProps: function (partialProps, callback) {
	    if (process.env.NODE_ENV !== 'production') {
	      warnSetProps();
	    }
	    this.updater.enqueueSetProps(this, partialProps);
	    if (callback) {
	      this.updater.enqueueCallback(this, callback);
	    }
	  },
	
	  /**
	   * Replace all the props.
	   *
	   * @param {object} newProps Subset of the next props.
	   * @param {?function} callback Called after props are updated.
	   * @final
	   * @public
	   * @deprecated
	   */
	  replaceProps: function (newProps, callback) {
	    if (process.env.NODE_ENV !== 'production') {
	      warnSetProps();
	    }
	    this.updater.enqueueReplaceProps(this, newProps);
	    if (callback) {
	      this.updater.enqueueCallback(this, callback);
	    }
	  }
	};
	
	var ReactClassComponent = function () {};
	assign(ReactClassComponent.prototype, ReactComponent.prototype, ReactClassMixin);
	
	/**
	 * Module for creating composite components.
	 *
	 * @class ReactClass
	 */
	var ReactClass = {
	
	  /**
	   * Creates a composite component class given a class specification.
	   *
	   * @param {object} spec Class specification (which must define `render`).
	   * @return {function} Component constructor function.
	   * @public
	   */
	  createClass: function (spec) {
	    var Constructor = function (props, context, updater) {
	      // This constructor is overridden by mocks. The argument is used
	      // by mocks to assert on what gets mounted.
	
	      if (process.env.NODE_ENV !== 'production') {
	        process.env.NODE_ENV !== 'production' ? warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https://fb.me/react-legacyfactory') : undefined;
	      }
	
	      // Wire up auto-binding
	      if (this.__reactAutoBindMap) {
	        bindAutoBindMethods(this);
	      }
	
	      this.props = props;
	      this.context = context;
	      this.refs = emptyObject;
	      this.updater = updater || ReactNoopUpdateQueue;
	
	      this.state = null;
	
	      // ReactClasses doesn't have constructors. Instead, they use the
	      // getInitialState and componentWillMount methods for initialization.
	
	      var initialState = this.getInitialState ? this.getInitialState() : null;
	      if (process.env.NODE_ENV !== 'production') {
	        // We allow auto-mocks to proceed as if they're returning null.
	        if (typeof initialState === 'undefined' && this.getInitialState._isMockFunction) {
	          // This is probably bad practice. Consider warning here and
	          // deprecating this convenience.
	          initialState = null;
	        }
	      }
	      !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent') : invariant(false) : undefined;
	
	      this.state = initialState;
	    };
	    Constructor.prototype = new ReactClassComponent();
	    Constructor.prototype.constructor = Constructor;
	
	    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));
	
	    mixSpecIntoComponent(Constructor, spec);
	
	    // Initialize the defaultProps property after all mixins have been merged.
	    if (Constructor.getDefaultProps) {
	      Constructor.defaultProps = Constructor.getDefaultProps();
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      // This is a tag to indicate that the use of these method names is ok,
	      // since it's used with createClass. If it's not, then it's likely a
	      // mistake so we'll warn you to use the static property, property
	      // initializer or constructor respectively.
	      if (Constructor.getDefaultProps) {
	        Constructor.getDefaultProps.isReactClassApproved = {};
	      }
	      if (Constructor.prototype.getInitialState) {
	        Constructor.prototype.getInitialState.isReactClassApproved = {};
	      }
	    }
	
	    !Constructor.prototype.render ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createClass(...): Class specification must implement a `render` method.') : invariant(false) : undefined;
	
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentShouldUpdate, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', spec.displayName || 'A component') : undefined;
	      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentWillRecieveProps, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', spec.displayName || 'A component') : undefined;
	    }
	
	    // Reduce time spent doing lookups by setting these on the prototype.
	    for (var methodName in ReactClassInterface) {
	      if (!Constructor.prototype[methodName]) {
	        Constructor.prototype[methodName] = null;
	      }
	    }
	
	    return Constructor;
	  },
	
	  injection: {
	    injectMixin: function (mixin) {
	      injectedMixins.push(mixin);
	    }
	  }
	
	};
	
	module.exports = ReactClass;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 155 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactComponent
	 */
	
	'use strict';
	
	var ReactNoopUpdateQueue = __webpack_require__(170);
	
	var canDefineProperty = __webpack_require__(76);
	var emptyObject = __webpack_require__(64);
	var invariant = __webpack_require__(4);
	var warning = __webpack_require__(6);
	
	/**
	 * Base class helpers for the updating state of a component.
	 */
	function ReactComponent(props, context, updater) {
	  this.props = props;
	  this.context = context;
	  this.refs = emptyObject;
	  // We initialize the default updater but the real one gets injected by the
	  // renderer.
	  this.updater = updater || ReactNoopUpdateQueue;
	}
	
	ReactComponent.prototype.isReactComponent = {};
	
	/**
	 * Sets a subset of the state. Always use this to mutate
	 * state. You should treat `this.state` as immutable.
	 *
	 * There is no guarantee that `this.state` will be immediately updated, so
	 * accessing `this.state` after calling this method may return the old value.
	 *
	 * There is no guarantee that calls to `setState` will run synchronously,
	 * as they may eventually be batched together.  You can provide an optional
	 * callback that will be executed when the call to setState is actually
	 * completed.
	 *
	 * When a function is provided to setState, it will be called at some point in
	 * the future (not synchronously). It will be called with the up to date
	 * component arguments (state, props, context). These values can be different
	 * from this.* because your function may be called after receiveProps but before
	 * shouldComponentUpdate, and this new state, props, and context will not yet be
	 * assigned to this.
	 *
	 * @param {object|function} partialState Next partial state or function to
	 *        produce next partial state to be merged with current state.
	 * @param {?function} callback Called after state is updated.
	 * @final
	 * @protected
	 */
	ReactComponent.prototype.setState = function (partialState, callback) {
	  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'setState(...): takes an object of state variables to update or a ' + 'function which returns an object of state variables.') : invariant(false) : undefined;
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(partialState != null, 'setState(...): You passed an undefined or null state object; ' + 'instead, use forceUpdate().') : undefined;
	  }
	  this.updater.enqueueSetState(this, partialState);
	  if (callback) {
	    this.updater.enqueueCallback(this, callback);
	  }
	};
	
	/**
	 * Forces an update. This should only be invoked when it is known with
	 * certainty that we are **not** in a DOM transaction.
	 *
	 * You may want to call this when you know that some deeper aspect of the
	 * component's state has changed but `setState` was not called.
	 *
	 * This will not invoke `shouldComponentUpdate`, but it will invoke
	 * `componentWillUpdate` and `componentDidUpdate`.
	 *
	 * @param {?function} callback Called after update is complete.
	 * @final
	 * @protected
	 */
	ReactComponent.prototype.forceUpdate = function (callback) {
	  this.updater.enqueueForceUpdate(this);
	  if (callback) {
	    this.updater.enqueueCallback(this, callback);
	  }
	};
	
	/**
	 * Deprecated APIs. These APIs used to exist on classic React classes but since
	 * we would like to deprecate them, we're not going to move them over to this
	 * modern base class. Instead, we define a getter that warns if it's accessed.
	 */
	if (process.env.NODE_ENV !== 'production') {
	  var deprecatedAPIs = {
	    getDOMNode: ['getDOMNode', 'Use ReactDOM.findDOMNode(component) instead.'],
	    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
	    replaceProps: ['replaceProps', 'Instead, call render again at the top level.'],
	    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).'],
	    setProps: ['setProps', 'Instead, call render again at the top level.']
	  };
	  var defineDeprecationWarning = function (methodName, info) {
	    if (canDefineProperty) {
	      Object.defineProperty(ReactComponent.prototype, methodName, {
	        get: function () {
	          process.env.NODE_ENV !== 'production' ? warning(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]) : undefined;
	          return undefined;
	        }
	      });
	    }
	  };
	  for (var fnName in deprecatedAPIs) {
	    if (deprecatedAPIs.hasOwnProperty(fnName)) {
	      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
	    }
	  }
	}
	
	module.exports = ReactComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 156 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOM
	 */
	
	/* globals __REACT_DEVTOOLS_GLOBAL_HOOK__*/
	
	'use strict';
	
	var ReactCurrentOwner = __webpack_require__(35);
	var ReactDOMTextComponent = __webpack_require__(159);
	var ReactDefaultInjection = __webpack_require__(161);
	var ReactInstanceHandles = __webpack_require__(49);
	var ReactMount = __webpack_require__(13);
	var ReactPerf = __webpack_require__(22);
	var ReactReconciler = __webpack_require__(43);
	var ReactUpdates = __webpack_require__(24);
	var ReactVersion = __webpack_require__(108);
	
	var findDOMNode = __webpack_require__(109);
	var renderSubtreeIntoContainer = __webpack_require__(480);
	var warning = __webpack_require__(6);
	
	ReactDefaultInjection.inject();
	
	var render = ReactPerf.measure('React', 'render', ReactMount.render);
	
	var React = {
	  findDOMNode: findDOMNode,
	  render: render,
	  unmountComponentAtNode: ReactMount.unmountComponentAtNode,
	  version: ReactVersion,
	
	  /* eslint-disable camelcase */
	  unstable_batchedUpdates: ReactUpdates.batchedUpdates,
	  unstable_renderSubtreeIntoContainer: renderSubtreeIntoContainer
	};
	
	// Inject the runtime into a devtools global hook regardless of browser.
	// Allows for debugging when the hook is injected on the page.
	/* eslint-enable camelcase */
	if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {
	  __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
	    CurrentOwner: ReactCurrentOwner,
	    InstanceHandles: ReactInstanceHandles,
	    Mount: ReactMount,
	    Reconciler: ReactReconciler,
	    TextComponent: ReactDOMTextComponent
	  });
	}
	
	if (process.env.NODE_ENV !== 'production') {
	  var ExecutionEnvironment = __webpack_require__(10);
	  if (ExecutionEnvironment.canUseDOM && window.top === window.self) {
	
	    // First check if devtools is not installed
	    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {
	      // If we're in Chrome or Firefox, provide a download link if not installed.
	      if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {
	        console.debug('Download the React DevTools for a better development experience: ' + 'https://fb.me/react-devtools');
	      }
	    }
	
	    // If we're in IE8, check to see if we are in compatibility mode and provide
	    // information on preventing compatibility mode
	    var ieCompatibilityMode = document.documentMode && document.documentMode < 8;
	
	    process.env.NODE_ENV !== 'production' ? warning(!ieCompatibilityMode, 'Internet Explorer is running in compatibility mode; please add the ' + 'following tag to your HTML to prevent this from happening: ' + '<meta http-equiv="X-UA-Compatible" content="IE=edge" />') : undefined;
	
	    var expectedFeatures = [
	    // shims
	    Array.isArray, Array.prototype.every, Array.prototype.forEach, Array.prototype.indexOf, Array.prototype.map, Date.now, Function.prototype.bind, Object.keys, String.prototype.split, String.prototype.trim,
	
	    // shams
	    Object.create, Object.freeze];
	
	    for (var i = 0; i < expectedFeatures.length; i++) {
	      if (!expectedFeatures[i]) {
	        console.error('One or more ES5 shim/shams expected by React are not available: ' + 'https://fb.me/react-warning-polyfills');
	        break;
	      }
	    }
	  }
	}
	
	module.exports = React;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 157 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMFeatureFlags
	 */
	
	'use strict';
	
	var ReactDOMFeatureFlags = {
	  useCreateElement: false
	};
	
	module.exports = ReactDOMFeatureFlags;

/***/ },
/* 158 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMSelect
	 */
	
	'use strict';
	
	var LinkedValueUtils = __webpack_require__(103);
	var ReactMount = __webpack_require__(13);
	var ReactUpdates = __webpack_require__(24);
	
	var assign = __webpack_require__(5);
	var warning = __webpack_require__(6);
	
	var valueContextKey = '__ReactDOMSelect_value$' + Math.random().toString(36).slice(2);
	
	function updateOptionsIfPendingUpdateAndMounted() {
	  if (this._rootNodeID && this._wrapperState.pendingUpdate) {
	    this._wrapperState.pendingUpdate = false;
	
	    var props = this._currentElement.props;
	    var value = LinkedValueUtils.getValue(props);
	
	    if (value != null) {
	      updateOptions(this, Boolean(props.multiple), value);
	    }
	  }
	}
	
	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}
	
	var valuePropNames = ['value', 'defaultValue'];
	
	/**
	 * Validation function for `value` and `defaultValue`.
	 * @private
	 */
	function checkSelectPropTypes(inst, props) {
	  var owner = inst._currentElement._owner;
	  LinkedValueUtils.checkPropTypes('select', props, owner);
	
	  for (var i = 0; i < valuePropNames.length; i++) {
	    var propName = valuePropNames[i];
	    if (props[propName] == null) {
	      continue;
	    }
	    if (props.multiple) {
	      process.env.NODE_ENV !== 'production' ? warning(Array.isArray(props[propName]), 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum(owner)) : undefined;
	    } else {
	      process.env.NODE_ENV !== 'production' ? warning(!Array.isArray(props[propName]), 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum(owner)) : undefined;
	    }
	  }
	}
	
	/**
	 * @param {ReactDOMComponent} inst
	 * @param {boolean} multiple
	 * @param {*} propValue A stringable (with `multiple`, a list of stringables).
	 * @private
	 */
	function updateOptions(inst, multiple, propValue) {
	  var selectedValue, i;
	  var options = ReactMount.getNode(inst._rootNodeID).options;
	
	  if (multiple) {
	    selectedValue = {};
	    for (i = 0; i < propValue.length; i++) {
	      selectedValue['' + propValue[i]] = true;
	    }
	    for (i = 0; i < options.length; i++) {
	      var selected = selectedValue.hasOwnProperty(options[i].value);
	      if (options[i].selected !== selected) {
	        options[i].selected = selected;
	      }
	    }
	  } else {
	    // Do not set `select.value` as exact behavior isn't consistent across all
	    // browsers for all cases.
	    selectedValue = '' + propValue;
	    for (i = 0; i < options.length; i++) {
	      if (options[i].value === selectedValue) {
	        options[i].selected = true;
	        return;
	      }
	    }
	    if (options.length) {
	      options[0].selected = true;
	    }
	  }
	}
	
	/**
	 * Implements a <select> native component that allows optionally setting the
	 * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
	 * stringable. If `multiple` is true, the prop must be an array of stringables.
	 *
	 * If `value` is not supplied (or null/undefined), user actions that change the
	 * selected option will trigger updates to the rendered options.
	 *
	 * If it is supplied (and not null/undefined), the rendered options will not
	 * update in response to user actions. Instead, the `value` prop must change in
	 * order for the rendered options to update.
	 *
	 * If `defaultValue` is provided, any options with the supplied values will be
	 * selected.
	 */
	var ReactDOMSelect = {
	  valueContextKey: valueContextKey,
	
	  getNativeProps: function (inst, props, context) {
	    return assign({}, props, {
	      onChange: inst._wrapperState.onChange,
	      value: undefined
	    });
	  },
	
	  mountWrapper: function (inst, props) {
	    if (process.env.NODE_ENV !== 'production') {
	      checkSelectPropTypes(inst, props);
	    }
	
	    var value = LinkedValueUtils.getValue(props);
	    inst._wrapperState = {
	      pendingUpdate: false,
	      initialValue: value != null ? value : props.defaultValue,
	      onChange: _handleChange.bind(inst),
	      wasMultiple: Boolean(props.multiple)
	    };
	  },
	
	  processChildContext: function (inst, props, context) {
	    // Pass down initial value so initial generated markup has correct
	    // `selected` attributes
	    var childContext = assign({}, context);
	    childContext[valueContextKey] = inst._wrapperState.initialValue;
	    return childContext;
	  },
	
	  postUpdateWrapper: function (inst) {
	    var props = inst._currentElement.props;
	
	    // After the initial mount, we control selected-ness manually so don't pass
	    // the context value down
	    inst._wrapperState.initialValue = undefined;
	
	    var wasMultiple = inst._wrapperState.wasMultiple;
	    inst._wrapperState.wasMultiple = Boolean(props.multiple);
	
	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	      inst._wrapperState.pendingUpdate = false;
	      updateOptions(inst, Boolean(props.multiple), value);
	    } else if (wasMultiple !== Boolean(props.multiple)) {
	      // For simplicity, reapply `defaultValue` if `multiple` is toggled.
	      if (props.defaultValue != null) {
	        updateOptions(inst, Boolean(props.multiple), props.defaultValue);
	      } else {
	        // Revert the select back to its default unselected state.
	        updateOptions(inst, Boolean(props.multiple), props.multiple ? [] : '');
	      }
	    }
	  }
	};
	
	function _handleChange(event) {
	  var props = this._currentElement.props;
	  var returnValue = LinkedValueUtils.executeOnChange(props, event);
	
	  this._wrapperState.pendingUpdate = true;
	  ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted, this);
	  return returnValue;
	}
	
	module.exports = ReactDOMSelect;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 159 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMTextComponent
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var DOMChildrenOperations = __webpack_require__(151);
	var DOMPropertyOperations = __webpack_require__(102);
	var ReactComponentBrowserEnvironment = __webpack_require__(104);
	var ReactMount = __webpack_require__(13);
	
	var assign = __webpack_require__(5);
	var escapeTextContentForBrowser = __webpack_require__(77);
	var setTextContent = __webpack_require__(116);
	var validateDOMNesting = __webpack_require__(119);
	
	/**
	 * Text nodes violate a couple assumptions that React makes about components:
	 *
	 *  - When mounting text into the DOM, adjacent text nodes are merged.
	 *  - Text nodes cannot be assigned a React root ID.
	 *
	 * This component is used to wrap strings in elements so that they can undergo
	 * the same reconciliation that is applied to elements.
	 *
	 * TODO: Investigate representing React components in the DOM with text nodes.
	 *
	 * @class ReactDOMTextComponent
	 * @extends ReactComponent
	 * @internal
	 */
	var ReactDOMTextComponent = function (props) {
	  // This constructor and its argument is currently used by mocks.
	};
	
	assign(ReactDOMTextComponent.prototype, {
	
	  /**
	   * @param {ReactText} text
	   * @internal
	   */
	  construct: function (text) {
	    // TODO: This is really a ReactText (ReactNode), not a ReactElement
	    this._currentElement = text;
	    this._stringText = '' + text;
	
	    // Properties
	    this._rootNodeID = null;
	    this._mountIndex = 0;
	  },
	
	  /**
	   * Creates the markup for this text node. This node is not intended to have
	   * any features besides containing text content.
	   *
	   * @param {string} rootID DOM ID of the root node.
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @return {string} Markup for this text node.
	   * @internal
	   */
	  mountComponent: function (rootID, transaction, context) {
	    if (process.env.NODE_ENV !== 'production') {
	      if (context[validateDOMNesting.ancestorInfoContextKey]) {
	        validateDOMNesting('span', null, context[validateDOMNesting.ancestorInfoContextKey]);
	      }
	    }
	
	    this._rootNodeID = rootID;
	    if (transaction.useCreateElement) {
	      var ownerDocument = context[ReactMount.ownerDocumentContextKey];
	      var el = ownerDocument.createElement('span');
	      DOMPropertyOperations.setAttributeForID(el, rootID);
	      // Populate node cache
	      ReactMount.getID(el);
	      setTextContent(el, this._stringText);
	      return el;
	    } else {
	      var escapedText = escapeTextContentForBrowser(this._stringText);
	
	      if (transaction.renderToStaticMarkup) {
	        // Normally we'd wrap this in a `span` for the reasons stated above, but
	        // since this is a situation where React won't take over (static pages),
	        // we can simply return the text as it is.
	        return escapedText;
	      }
	
	      return '<span ' + DOMPropertyOperations.createMarkupForID(rootID) + '>' + escapedText + '</span>';
	    }
	  },
	
	  /**
	   * Updates this component by updating the text content.
	   *
	   * @param {ReactText} nextText The next text content
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  receiveComponent: function (nextText, transaction) {
	    if (nextText !== this._currentElement) {
	      this._currentElement = nextText;
	      var nextStringText = '' + nextText;
	      if (nextStringText !== this._stringText) {
	        // TODO: Save this as pending props and use performUpdateIfNecessary
	        // and/or updateComponent to do the actual update for consistency with
	        // other component types?
	        this._stringText = nextStringText;
	        var node = ReactMount.getNode(this._rootNodeID);
	        DOMChildrenOperations.updateTextContent(node, nextStringText);
	      }
	    }
	  },
	
	  unmountComponent: function () {
	    ReactComponentBrowserEnvironment.unmountIDFromEnvironment(this._rootNodeID);
	  }
	
	});
	
	module.exports = ReactDOMTextComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 160 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDefaultBatchingStrategy
	 */
	
	'use strict';
	
	var ReactUpdates = __webpack_require__(24);
	var Transaction = __webpack_require__(75);
	
	var assign = __webpack_require__(5);
	var emptyFunction = __webpack_require__(27);
	
	var RESET_BATCHED_UPDATES = {
	  initialize: emptyFunction,
	  close: function () {
	    ReactDefaultBatchingStrategy.isBatchingUpdates = false;
	  }
	};
	
	var FLUSH_BATCHED_UPDATES = {
	  initialize: emptyFunction,
	  close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)
	};
	
	var TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];
	
	function ReactDefaultBatchingStrategyTransaction() {
	  this.reinitializeTransaction();
	}
	
	assign(ReactDefaultBatchingStrategyTransaction.prototype, Transaction.Mixin, {
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  }
	});
	
	var transaction = new ReactDefaultBatchingStrategyTransaction();
	
	var ReactDefaultBatchingStrategy = {
	  isBatchingUpdates: false,
	
	  /**
	   * Call the provided function in a context within which calls to `setState`
	   * and friends are batched such that components aren't updated unnecessarily.
	   */
	  batchedUpdates: function (callback, a, b, c, d, e) {
	    var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;
	
	    ReactDefaultBatchingStrategy.isBatchingUpdates = true;
	
	    // The code is written this way to avoid extra allocations
	    if (alreadyBatchingUpdates) {
	      callback(a, b, c, d, e);
	    } else {
	      transaction.perform(callback, null, a, b, c, d, e);
	    }
	  }
	};
	
	module.exports = ReactDefaultBatchingStrategy;

/***/ },
/* 161 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDefaultInjection
	 */
	
	'use strict';
	
	var BeforeInputEventPlugin = __webpack_require__(425);
	var ChangeEventPlugin = __webpack_require__(427);
	var ClientReactRootIndex = __webpack_require__(428);
	var DefaultEventPluginOrder = __webpack_require__(430);
	var EnterLeaveEventPlugin = __webpack_require__(431);
	var ExecutionEnvironment = __webpack_require__(10);
	var HTMLDOMPropertyConfig = __webpack_require__(434);
	var ReactBrowserComponentMixin = __webpack_require__(436);
	var ReactComponentBrowserEnvironment = __webpack_require__(104);
	var ReactDefaultBatchingStrategy = __webpack_require__(160);
	var ReactDOMComponent = __webpack_require__(440);
	var ReactDOMTextComponent = __webpack_require__(159);
	var ReactEventListener = __webpack_require__(450);
	var ReactInjection = __webpack_require__(451);
	var ReactInstanceHandles = __webpack_require__(49);
	var ReactMount = __webpack_require__(13);
	var ReactReconcileTransaction = __webpack_require__(455);
	var SelectEventPlugin = __webpack_require__(461);
	var ServerReactRootIndex = __webpack_require__(462);
	var SimpleEventPlugin = __webpack_require__(463);
	var SVGDOMPropertyConfig = __webpack_require__(460);
	
	var alreadyInjected = false;
	
	function inject() {
	  if (alreadyInjected) {
	    // TODO: This is currently true because these injections are shared between
	    // the client and the server package. They should be built independently
	    // and not share any injection state. Then this problem will be solved.
	    return;
	  }
	  alreadyInjected = true;
	
	  ReactInjection.EventEmitter.injectReactEventListener(ReactEventListener);
	
	  /**
	   * Inject modules for resolving DOM hierarchy and plugin ordering.
	   */
	  ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);
	  ReactInjection.EventPluginHub.injectInstanceHandle(ReactInstanceHandles);
	  ReactInjection.EventPluginHub.injectMount(ReactMount);
	
	  /**
	   * Some important event plugins included by default (without having to require
	   * them).
	   */
	  ReactInjection.EventPluginHub.injectEventPluginsByName({
	    SimpleEventPlugin: SimpleEventPlugin,
	    EnterLeaveEventPlugin: EnterLeaveEventPlugin,
	    ChangeEventPlugin: ChangeEventPlugin,
	    SelectEventPlugin: SelectEventPlugin,
	    BeforeInputEventPlugin: BeforeInputEventPlugin
	  });
	
	  ReactInjection.NativeComponent.injectGenericComponentClass(ReactDOMComponent);
	
	  ReactInjection.NativeComponent.injectTextComponentClass(ReactDOMTextComponent);
	
	  ReactInjection.Class.injectMixin(ReactBrowserComponentMixin);
	
	  ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);
	  ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);
	
	  ReactInjection.EmptyComponent.injectEmptyComponent('noscript');
	
	  ReactInjection.Updates.injectReconcileTransaction(ReactReconcileTransaction);
	  ReactInjection.Updates.injectBatchingStrategy(ReactDefaultBatchingStrategy);
	
	  ReactInjection.RootIndex.injectCreateReactRootIndex(ExecutionEnvironment.canUseDOM ? ClientReactRootIndex.createReactRootIndex : ServerReactRootIndex.createReactRootIndex);
	
	  ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);
	
	  if (process.env.NODE_ENV !== 'production') {
	    var url = ExecutionEnvironment.canUseDOM && window.location.href || '';
	    if (/[?&]react_perf\b/.test(url)) {
	      var ReactDefaultPerf = __webpack_require__(447);
	      ReactDefaultPerf.start();
	    }
	  }
	}
	
	module.exports = {
	  inject: inject
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 162 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactElementValidator
	 */
	
	/**
	 * ReactElementValidator provides a wrapper around a element factory
	 * which validates the props passed to the element. This is intended to be
	 * used only in DEV and could be replaced by a static type checker for languages
	 * that support it.
	 */
	
	'use strict';
	
	var ReactElement = __webpack_require__(18);
	var ReactPropTypeLocations = __webpack_require__(73);
	var ReactPropTypeLocationNames = __webpack_require__(72);
	var ReactCurrentOwner = __webpack_require__(35);
	
	var canDefineProperty = __webpack_require__(76);
	var getIteratorFn = __webpack_require__(113);
	var invariant = __webpack_require__(4);
	var warning = __webpack_require__(6);
	
	function getDeclarationErrorAddendum() {
	  if (ReactCurrentOwner.current) {
	    var name = ReactCurrentOwner.current.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}
	
	/**
	 * Warn if there's no key explicitly set on dynamic arrays of children or
	 * object keys are not valid. This allows us to keep track of children between
	 * updates.
	 */
	var ownerHasKeyUseWarning = {};
	
	var loggedTypeFailures = {};
	
	/**
	 * Warn if the element doesn't have an explicit key assigned to it.
	 * This element is in an array. The array could grow and shrink or be
	 * reordered. All children that haven't already been validated are required to
	 * have a "key" property assigned to it.
	 *
	 * @internal
	 * @param {ReactElement} element Element that requires a key.
	 * @param {*} parentType element's parent's type.
	 */
	function validateExplicitKey(element, parentType) {
	  if (!element._store || element._store.validated || element.key != null) {
	    return;
	  }
	  element._store.validated = true;
	
	  var addenda = getAddendaForKeyUse('uniqueKey', element, parentType);
	  if (addenda === null) {
	    // we already showed the warning
	    return;
	  }
	  process.env.NODE_ENV !== 'production' ? warning(false, 'Each child in an array or iterator should have a unique "key" prop.' + '%s%s%s', addenda.parentOrOwner || '', addenda.childOwner || '', addenda.url || '') : undefined;
	}
	
	/**
	 * Shared warning and monitoring code for the key warnings.
	 *
	 * @internal
	 * @param {string} messageType A key used for de-duping warnings.
	 * @param {ReactElement} element Component that requires a key.
	 * @param {*} parentType element's parent's type.
	 * @returns {?object} A set of addenda to use in the warning message, or null
	 * if the warning has already been shown before (and shouldn't be shown again).
	 */
	function getAddendaForKeyUse(messageType, element, parentType) {
	  var addendum = getDeclarationErrorAddendum();
	  if (!addendum) {
	    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;
	    if (parentName) {
	      addendum = ' Check the top-level render call using <' + parentName + '>.';
	    }
	  }
	
	  var memoizer = ownerHasKeyUseWarning[messageType] || (ownerHasKeyUseWarning[messageType] = {});
	  if (memoizer[addendum]) {
	    return null;
	  }
	  memoizer[addendum] = true;
	
	  var addenda = {
	    parentOrOwner: addendum,
	    url: ' See https://fb.me/react-warning-keys for more information.',
	    childOwner: null
	  };
	
	  // Usually the current owner is the offender, but if it accepts children as a
	  // property, it may be the creator of the child that's responsible for
	  // assigning it a key.
	  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
	    // Give the component that originally created this child.
	    addenda.childOwner = ' It was passed a child from ' + element._owner.getName() + '.';
	  }
	
	  return addenda;
	}
	
	/**
	 * Ensure that every element either is passed in a static location, in an
	 * array with an explicit keys property defined, or in an object literal
	 * with valid key property.
	 *
	 * @internal
	 * @param {ReactNode} node Statically passed child of any type.
	 * @param {*} parentType node's parent's type.
	 */
	function validateChildKeys(node, parentType) {
	  if (typeof node !== 'object') {
	    return;
	  }
	  if (Array.isArray(node)) {
	    for (var i = 0; i < node.length; i++) {
	      var child = node[i];
	      if (ReactElement.isValidElement(child)) {
	        validateExplicitKey(child, parentType);
	      }
	    }
	  } else if (ReactElement.isValidElement(node)) {
	    // This element was passed in a valid location.
	    if (node._store) {
	      node._store.validated = true;
	    }
	  } else if (node) {
	    var iteratorFn = getIteratorFn(node);
	    // Entry iterators provide implicit keys.
	    if (iteratorFn) {
	      if (iteratorFn !== node.entries) {
	        var iterator = iteratorFn.call(node);
	        var step;
	        while (!(step = iterator.next()).done) {
	          if (ReactElement.isValidElement(step.value)) {
	            validateExplicitKey(step.value, parentType);
	          }
	        }
	      }
	    }
	  }
	}
	
	/**
	 * Assert that the props are valid
	 *
	 * @param {string} componentName Name of the component for error messages.
	 * @param {object} propTypes Map of prop name to a ReactPropType
	 * @param {object} props
	 * @param {string} location e.g. "prop", "context", "child context"
	 * @private
	 */
	function checkPropTypes(componentName, propTypes, props, location) {
	  for (var propName in propTypes) {
	    if (propTypes.hasOwnProperty(propName)) {
	      var error;
	      // Prop type validation may throw. In case they do, we don't want to
	      // fail the render phase where it didn't fail before. So we log it.
	      // After these have been cleaned up, we'll let them throw.
	      try {
	        // This is intentionally an invariant that gets caught. It's the same
	        // behavior as without this statement except with a better message.
	        !(typeof propTypes[propName] === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], propName) : invariant(false) : undefined;
	        error = propTypes[propName](props, propName, componentName, location);
	      } catch (ex) {
	        error = ex;
	      }
	      process.env.NODE_ENV !== 'production' ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', ReactPropTypeLocationNames[location], propName, typeof error) : undefined;
	      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	        // Only monitor this failure once because there tends to be a lot of the
	        // same error.
	        loggedTypeFailures[error.message] = true;
	
	        var addendum = getDeclarationErrorAddendum();
	        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed propType: %s%s', error.message, addendum) : undefined;
	      }
	    }
	  }
	}
	
	/**
	 * Given an element, validate that its props follow the propTypes definition,
	 * provided by the type.
	 *
	 * @param {ReactElement} element
	 */
	function validatePropTypes(element) {
	  var componentClass = element.type;
	  if (typeof componentClass !== 'function') {
	    return;
	  }
	  var name = componentClass.displayName || componentClass.name;
	  if (componentClass.propTypes) {
	    checkPropTypes(name, componentClass.propTypes, element.props, ReactPropTypeLocations.prop);
	  }
	  if (typeof componentClass.getDefaultProps === 'function') {
	    process.env.NODE_ENV !== 'production' ? warning(componentClass.getDefaultProps.isReactClassApproved, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.') : undefined;
	  }
	}
	
	var ReactElementValidator = {
	
	  createElement: function (type, props, children) {
	    var validType = typeof type === 'string' || typeof type === 'function';
	    // We warn in this case but don't throw. We expect the element creation to
	    // succeed and there will likely be errors in render.
	    process.env.NODE_ENV !== 'production' ? warning(validType, 'React.createElement: type should not be null, undefined, boolean, or ' + 'number. It should be a string (for DOM elements) or a ReactClass ' + '(for composite components).%s', getDeclarationErrorAddendum()) : undefined;
	
	    var element = ReactElement.createElement.apply(this, arguments);
	
	    // The result can be nullish if a mock or a custom function is used.
	    // TODO: Drop this when these are no longer allowed as the type argument.
	    if (element == null) {
	      return element;
	    }
	
	    // Skip key warning if the type isn't valid since our key validation logic
	    // doesn't expect a non-string/function type and can throw confusing errors.
	    // We don't want exception behavior to differ between dev and prod.
	    // (Rendering will throw with a helpful message and as soon as the type is
	    // fixed, the key warnings will appear.)
	    if (validType) {
	      for (var i = 2; i < arguments.length; i++) {
	        validateChildKeys(arguments[i], type);
	      }
	    }
	
	    validatePropTypes(element);
	
	    return element;
	  },
	
	  createFactory: function (type) {
	    var validatedFactory = ReactElementValidator.createElement.bind(null, type);
	    // Legacy hook TODO: Warn if this is accessed
	    validatedFactory.type = type;
	
	    if (process.env.NODE_ENV !== 'production') {
	      if (canDefineProperty) {
	        Object.defineProperty(validatedFactory, 'type', {
	          enumerable: false,
	          get: function () {
	            process.env.NODE_ENV !== 'production' ? warning(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.') : undefined;
	            Object.defineProperty(this, 'type', {
	              value: type
	            });
	            return type;
	          }
	        });
	      }
	    }
	
	    return validatedFactory;
	  },
	
	  cloneElement: function (element, props, children) {
	    var newElement = ReactElement.cloneElement.apply(this, arguments);
	    for (var i = 2; i < arguments.length; i++) {
	      validateChildKeys(arguments[i], newElement.type);
	    }
	    validatePropTypes(newElement);
	    return newElement;
	  }
	
	};
	
	module.exports = ReactElementValidator;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 163 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactEmptyComponent
	 */
	
	'use strict';
	
	var ReactElement = __webpack_require__(18);
	var ReactEmptyComponentRegistry = __webpack_require__(164);
	var ReactReconciler = __webpack_require__(43);
	
	var assign = __webpack_require__(5);
	
	var placeholderElement;
	
	var ReactEmptyComponentInjection = {
	  injectEmptyComponent: function (component) {
	    placeholderElement = ReactElement.createElement(component);
	  }
	};
	
	function registerNullComponentID() {
	  ReactEmptyComponentRegistry.registerNullComponentID(this._rootNodeID);
	}
	
	var ReactEmptyComponent = function (instantiate) {
	  this._currentElement = null;
	  this._rootNodeID = null;
	  this._renderedComponent = instantiate(placeholderElement);
	};
	assign(ReactEmptyComponent.prototype, {
	  construct: function (element) {},
	  mountComponent: function (rootID, transaction, context) {
	    transaction.getReactMountReady().enqueue(registerNullComponentID, this);
	    this._rootNodeID = rootID;
	    return ReactReconciler.mountComponent(this._renderedComponent, rootID, transaction, context);
	  },
	  receiveComponent: function () {},
	  unmountComponent: function (rootID, transaction, context) {
	    ReactReconciler.unmountComponent(this._renderedComponent);
	    ReactEmptyComponentRegistry.deregisterNullComponentID(this._rootNodeID);
	    this._rootNodeID = null;
	    this._renderedComponent = null;
	  }
	});
	
	ReactEmptyComponent.injection = ReactEmptyComponentInjection;
	
	module.exports = ReactEmptyComponent;

/***/ },
/* 164 */
/***/ function(module, exports) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactEmptyComponentRegistry
	 */
	
	'use strict';
	
	// This registry keeps track of the React IDs of the components that rendered to
	// `null` (in reality a placeholder such as `noscript`)
	var nullComponentIDsRegistry = {};
	
	/**
	 * @param {string} id Component's `_rootNodeID`.
	 * @return {boolean} True if the component is rendered to null.
	 */
	function isNullComponentID(id) {
	  return !!nullComponentIDsRegistry[id];
	}
	
	/**
	 * Mark the component as having rendered to null.
	 * @param {string} id Component's `_rootNodeID`.
	 */
	function registerNullComponentID(id) {
	  nullComponentIDsRegistry[id] = true;
	}
	
	/**
	 * Unmark the component as having rendered to null: it renders to something now.
	 * @param {string} id Component's `_rootNodeID`.
	 */
	function deregisterNullComponentID(id) {
	  delete nullComponentIDsRegistry[id];
	}
	
	var ReactEmptyComponentRegistry = {
	  isNullComponentID: isNullComponentID,
	  registerNullComponentID: registerNullComponentID,
	  deregisterNullComponentID: deregisterNullComponentID
	};
	
	module.exports = ReactEmptyComponentRegistry;

/***/ },
/* 165 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactErrorUtils
	 * @typechecks
	 */
	
	'use strict';
	
	var caughtError = null;
	
	/**
	 * Call a function while guarding against errors that happens within it.
	 *
	 * @param {?String} name of the guard to use for logging or debugging
	 * @param {Function} func The function to invoke
	 * @param {*} a First argument
	 * @param {*} b Second argument
	 */
	function invokeGuardedCallback(name, func, a, b) {
	  try {
	    return func(a, b);
	  } catch (x) {
	    if (caughtError === null) {
	      caughtError = x;
	    }
	    return undefined;
	  }
	}
	
	var ReactErrorUtils = {
	  invokeGuardedCallback: invokeGuardedCallback,
	
	  /**
	   * Invoked by ReactTestUtils.Simulate so that any errors thrown by the event
	   * handler are sure to be rethrown by rethrowCaughtError.
	   */
	  invokeGuardedCallbackWithCatch: invokeGuardedCallback,
	
	  /**
	   * During execution of guarded functions we will capture the first error which
	   * we will rethrow to be handled by the top level error handler.
	   */
	  rethrowCaughtError: function () {
	    if (caughtError) {
	      var error = caughtError;
	      caughtError = null;
	      throw error;
	    }
	  }
	};
	
	if (process.env.NODE_ENV !== 'production') {
	  /**
	   * To help development we can get better devtools integration by simulating a
	   * real browser event.
	   */
	  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {
	    var fakeNode = document.createElement('react');
	    ReactErrorUtils.invokeGuardedCallback = function (name, func, a, b) {
	      var boundFunc = func.bind(null, a, b);
	      var evtType = 'react-' + name;
	      fakeNode.addEventListener(evtType, boundFunc, false);
	      var evt = document.createEvent('Event');
	      evt.initEvent(evtType, false, false);
	      fakeNode.dispatchEvent(evt);
	      fakeNode.removeEventListener(evtType, boundFunc, false);
	    };
	  }
	}
	
	module.exports = ReactErrorUtils;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 166 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInputSelection
	 */
	
	'use strict';
	
	var ReactDOMSelection = __webpack_require__(444);
	
	var containsNode = __webpack_require__(179);
	var focusNode = __webpack_require__(180);
	var getActiveElement = __webpack_require__(181);
	
	function isInDocument(node) {
	  return containsNode(document.documentElement, node);
	}
	
	/**
	 * @ReactInputSelection: React input selection module. Based on Selection.js,
	 * but modified to be suitable for react and has a couple of bug fixes (doesn't
	 * assume buttons have range selections allowed).
	 * Input selection module for React.
	 */
	var ReactInputSelection = {
	
	  hasSelectionCapabilities: function (elem) {
	    var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
	    return nodeName && (nodeName === 'input' && elem.type === 'text' || nodeName === 'textarea' || elem.contentEditable === 'true');
	  },
	
	  getSelectionInformation: function () {
	    var focusedElem = getActiveElement();
	    return {
	      focusedElem: focusedElem,
	      selectionRange: ReactInputSelection.hasSelectionCapabilities(focusedElem) ? ReactInputSelection.getSelection(focusedElem) : null
	    };
	  },
	
	  /**
	   * @restoreSelection: If any selection information was potentially lost,
	   * restore it. This is useful when performing operations that could remove dom
	   * nodes and place them back in, resulting in focus being lost.
	   */
	  restoreSelection: function (priorSelectionInformation) {
	    var curFocusedElem = getActiveElement();
	    var priorFocusedElem = priorSelectionInformation.focusedElem;
	    var priorSelectionRange = priorSelectionInformation.selectionRange;
	    if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
	      if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {
	        ReactInputSelection.setSelection(priorFocusedElem, priorSelectionRange);
	      }
	      focusNode(priorFocusedElem);
	    }
	  },
	
	  /**
	   * @getSelection: Gets the selection bounds of a focused textarea, input or
	   * contentEditable node.
	   * -@input: Look up selection bounds of this input
	   * -@return {start: selectionStart, end: selectionEnd}
	   */
	  getSelection: function (input) {
	    var selection;
	
	    if ('selectionStart' in input) {
	      // Modern browser with input or textarea.
	      selection = {
	        start: input.selectionStart,
	        end: input.selectionEnd
	      };
	    } else if (document.selection && (input.nodeName && input.nodeName.toLowerCase() === 'input')) {
	      // IE8 input.
	      var range = document.selection.createRange();
	      // There can only be one selection per document in IE, so it must
	      // be in our element.
	      if (range.parentElement() === input) {
	        selection = {
	          start: -range.moveStart('character', -input.value.length),
	          end: -range.moveEnd('character', -input.value.length)
	        };
	      }
	    } else {
	      // Content editable or old IE textarea.
	      selection = ReactDOMSelection.getOffsets(input);
	    }
	
	    return selection || { start: 0, end: 0 };
	  },
	
	  /**
	   * @setSelection: Sets the selection bounds of a textarea or input and focuses
	   * the input.
	   * -@input     Set selection bounds of this input or textarea
	   * -@offsets   Object of same form that is returned from get*
	   */
	  setSelection: function (input, offsets) {
	    var start = offsets.start;
	    var end = offsets.end;
	    if (typeof end === 'undefined') {
	      end = start;
	    }
	
	    if ('selectionStart' in input) {
	      input.selectionStart = start;
	      input.selectionEnd = Math.min(end, input.value.length);
	    } else if (document.selection && (input.nodeName && input.nodeName.toLowerCase() === 'input')) {
	      var range = input.createTextRange();
	      range.collapse(true);
	      range.moveStart('character', start);
	      range.moveEnd('character', end - start);
	      range.select();
	    } else {
	      ReactDOMSelection.setOffsets(input, offsets);
	    }
	  }
	};
	
	module.exports = ReactInputSelection;

/***/ },
/* 167 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMarkupChecksum
	 */
	
	'use strict';
	
	var adler32 = __webpack_require__(472);
	
	var TAG_END = /\/?>/;
	
	var ReactMarkupChecksum = {
	  CHECKSUM_ATTR_NAME: 'data-react-checksum',
	
	  /**
	   * @param {string} markup Markup string
	   * @return {string} Markup string with checksum attribute attached
	   */
	  addChecksumToMarkup: function (markup) {
	    var checksum = adler32(markup);
	
	    // Add checksum (handle both parent tags and self-closing tags)
	    return markup.replace(TAG_END, ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="' + checksum + '"$&');
	  },
	
	  /**
	   * @param {string} markup to use
	   * @param {DOMElement} element root React element
	   * @returns {boolean} whether or not the markup is the same
	   */
	  canReuseMarkup: function (markup, element) {
	    var existingChecksum = element.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
	    existingChecksum = existingChecksum && parseInt(existingChecksum, 10);
	    var markupChecksum = adler32(markup);
	    return markupChecksum === existingChecksum;
	  }
	};
	
	module.exports = ReactMarkupChecksum;

/***/ },
/* 168 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMultiChildUpdateTypes
	 */
	
	'use strict';
	
	var keyMirror = __webpack_require__(79);
	
	/**
	 * When a component's children are updated, a series of update configuration
	 * objects are created in order to batch and serialize the required changes.
	 *
	 * Enumerates all the possible types of update configurations.
	 *
	 * @internal
	 */
	var ReactMultiChildUpdateTypes = keyMirror({
	  INSERT_MARKUP: null,
	  MOVE_EXISTING: null,
	  REMOVE_NODE: null,
	  SET_MARKUP: null,
	  TEXT_CONTENT: null
	});
	
	module.exports = ReactMultiChildUpdateTypes;

/***/ },
/* 169 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactNativeComponent
	 */
	
	'use strict';
	
	var assign = __webpack_require__(5);
	var invariant = __webpack_require__(4);
	
	var autoGenerateWrapperClass = null;
	var genericComponentClass = null;
	// This registry keeps track of wrapper classes around native tags.
	var tagToComponentClass = {};
	var textComponentClass = null;
	
	var ReactNativeComponentInjection = {
	  // This accepts a class that receives the tag string. This is a catch all
	  // that can render any kind of tag.
	  injectGenericComponentClass: function (componentClass) {
	    genericComponentClass = componentClass;
	  },
	  // This accepts a text component class that takes the text string to be
	  // rendered as props.
	  injectTextComponentClass: function (componentClass) {
	    textComponentClass = componentClass;
	  },
	  // This accepts a keyed object with classes as values. Each key represents a
	  // tag. That particular tag will use this class instead of the generic one.
	  injectComponentClasses: function (componentClasses) {
	    assign(tagToComponentClass, componentClasses);
	  }
	};
	
	/**
	 * Get a composite component wrapper class for a specific tag.
	 *
	 * @param {ReactElement} element The tag for which to get the class.
	 * @return {function} The React class constructor function.
	 */
	function getComponentClassForElement(element) {
	  if (typeof element.type === 'function') {
	    return element.type;
	  }
	  var tag = element.type;
	  var componentClass = tagToComponentClass[tag];
	  if (componentClass == null) {
	    tagToComponentClass[tag] = componentClass = autoGenerateWrapperClass(tag);
	  }
	  return componentClass;
	}
	
	/**
	 * Get a native internal component class for a specific tag.
	 *
	 * @param {ReactElement} element The element to create.
	 * @return {function} The internal class constructor function.
	 */
	function createInternalComponent(element) {
	  !genericComponentClass ? process.env.NODE_ENV !== 'production' ? invariant(false, 'There is no registered component for the tag %s', element.type) : invariant(false) : undefined;
	  return new genericComponentClass(element.type, element.props);
	}
	
	/**
	 * @param {ReactText} text
	 * @return {ReactComponent}
	 */
	function createInstanceForText(text) {
	  return new textComponentClass(text);
	}
	
	/**
	 * @param {ReactComponent} component
	 * @return {boolean}
	 */
	function isTextComponent(component) {
	  return component instanceof textComponentClass;
	}
	
	var ReactNativeComponent = {
	  getComponentClassForElement: getComponentClassForElement,
	  createInternalComponent: createInternalComponent,
	  createInstanceForText: createInstanceForText,
	  isTextComponent: isTextComponent,
	  injection: ReactNativeComponentInjection
	};
	
	module.exports = ReactNativeComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 170 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactNoopUpdateQueue
	 */
	
	'use strict';
	
	var warning = __webpack_require__(6);
	
	function warnTDZ(publicInstance, callerName) {
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, publicInstance.constructor && publicInstance.constructor.displayName || '') : undefined;
	  }
	}
	
	/**
	 * This is the abstract API for an update queue.
	 */
	var ReactNoopUpdateQueue = {
	
	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function (publicInstance) {
	    return false;
	  },
	
	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @internal
	   */
	  enqueueCallback: function (publicInstance, callback) {},
	
	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */
	  enqueueForceUpdate: function (publicInstance) {
	    warnTDZ(publicInstance, 'forceUpdate');
	  },
	
	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} completeState Next state.
	   * @internal
	   */
	  enqueueReplaceState: function (publicInstance, completeState) {
	    warnTDZ(publicInstance, 'replaceState');
	  },
	
	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialState Next partial state to be merged with state.
	   * @internal
	   */
	  enqueueSetState: function (publicInstance, partialState) {
	    warnTDZ(publicInstance, 'setState');
	  },
	
	  /**
	   * Sets a subset of the props.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialProps Subset of the next props.
	   * @internal
	   */
	  enqueueSetProps: function (publicInstance, partialProps) {
	    warnTDZ(publicInstance, 'setProps');
	  },
	
	  /**
	   * Replaces all of the props.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} props New props.
	   * @internal
	   */
	  enqueueReplaceProps: function (publicInstance, props) {
	    warnTDZ(publicInstance, 'replaceProps');
	  }
	
	};
	
	module.exports = ReactNoopUpdateQueue;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 171 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPropTypes
	 */
	
	'use strict';
	
	var ReactElement = __webpack_require__(18);
	var ReactPropTypeLocationNames = __webpack_require__(72);
	
	var emptyFunction = __webpack_require__(27);
	var getIteratorFn = __webpack_require__(113);
	
	/**
	 * Collection of methods that allow declaration and validation of props that are
	 * supplied to React components. Example usage:
	 *
	 *   var Props = require('ReactPropTypes');
	 *   var MyArticle = React.createClass({
	 *     propTypes: {
	 *       // An optional string prop named "description".
	 *       description: Props.string,
	 *
	 *       // A required enum prop named "category".
	 *       category: Props.oneOf(['News','Photos']).isRequired,
	 *
	 *       // A prop named "dialog" that requires an instance of Dialog.
	 *       dialog: Props.instanceOf(Dialog).isRequired
	 *     },
	 *     render: function() { ... }
	 *   });
	 *
	 * A more formal specification of how these methods are used:
	 *
	 *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
	 *   decl := ReactPropTypes.{type}(.isRequired)?
	 *
	 * Each and every declaration produces a function with the same signature. This
	 * allows the creation of custom validation functions. For example:
	 *
	 *  var MyLink = React.createClass({
	 *    propTypes: {
	 *      // An optional string or URI prop named "href".
	 *      href: function(props, propName, componentName) {
	 *        var propValue = props[propName];
	 *        if (propValue != null && typeof propValue !== 'string' &&
	 *            !(propValue instanceof URI)) {
	 *          return new Error(
	 *            'Expected a string or an URI for ' + propName + ' in ' +
	 *            componentName
	 *          );
	 *        }
	 *      }
	 *    },
	 *    render: function() {...}
	 *  });
	 *
	 * @internal
	 */
	
	var ANONYMOUS = '<<anonymous>>';
	
	var ReactPropTypes = {
	  array: createPrimitiveTypeChecker('array'),
	  bool: createPrimitiveTypeChecker('boolean'),
	  func: createPrimitiveTypeChecker('function'),
	  number: createPrimitiveTypeChecker('number'),
	  object: createPrimitiveTypeChecker('object'),
	  string: createPrimitiveTypeChecker('string'),
	
	  any: createAnyTypeChecker(),
	  arrayOf: createArrayOfTypeChecker,
	  element: createElementTypeChecker(),
	  instanceOf: createInstanceTypeChecker,
	  node: createNodeChecker(),
	  objectOf: createObjectOfTypeChecker,
	  oneOf: createEnumTypeChecker,
	  oneOfType: createUnionTypeChecker,
	  shape: createShapeTypeChecker
	};
	
	function createChainableTypeChecker(validate) {
	  function checkType(isRequired, props, propName, componentName, location, propFullName) {
	    componentName = componentName || ANONYMOUS;
	    propFullName = propFullName || propName;
	    if (props[propName] == null) {
	      var locationName = ReactPropTypeLocationNames[location];
	      if (isRequired) {
	        return new Error('Required ' + locationName + ' `' + propFullName + '` was not specified in ' + ('`' + componentName + '`.'));
	      }
	      return null;
	    } else {
	      return validate(props, propName, componentName, location, propFullName);
	    }
	  }
	
	  var chainedCheckType = checkType.bind(null, false);
	  chainedCheckType.isRequired = checkType.bind(null, true);
	
	  return chainedCheckType;
	}
	
	function createPrimitiveTypeChecker(expectedType) {
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== expectedType) {
	      var locationName = ReactPropTypeLocationNames[location];
	      // `propValue` being instance of, say, date/regexp, pass the 'object'
	      // check, but we can offer a more precise error message here rather than
	      // 'of type `object`'.
	      var preciseType = getPreciseType(propValue);
	
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createAnyTypeChecker() {
	  return createChainableTypeChecker(emptyFunction.thatReturns(null));
	}
	
	function createArrayOfTypeChecker(typeChecker) {
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    if (!Array.isArray(propValue)) {
	      var locationName = ReactPropTypeLocationNames[location];
	      var propType = getPropType(propValue);
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
	    }
	    for (var i = 0; i < propValue.length; i++) {
	      var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']');
	      if (error instanceof Error) {
	        return error;
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createElementTypeChecker() {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (!ReactElement.isValidElement(props[propName])) {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a single ReactElement.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createInstanceTypeChecker(expectedClass) {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (!(props[propName] instanceof expectedClass)) {
	      var locationName = ReactPropTypeLocationNames[location];
	      var expectedClassName = expectedClass.name || ANONYMOUS;
	      var actualClassName = getClassName(props[propName]);
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createEnumTypeChecker(expectedValues) {
	  if (!Array.isArray(expectedValues)) {
	    return createChainableTypeChecker(function () {
	      return new Error('Invalid argument supplied to oneOf, expected an instance of array.');
	    });
	  }
	
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    for (var i = 0; i < expectedValues.length; i++) {
	      if (propValue === expectedValues[i]) {
	        return null;
	      }
	    }
	
	    var locationName = ReactPropTypeLocationNames[location];
	    var valuesString = JSON.stringify(expectedValues);
	    return new Error('Invalid ' + locationName + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createObjectOfTypeChecker(typeChecker) {
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== 'object') {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
	    }
	    for (var key in propValue) {
	      if (propValue.hasOwnProperty(key)) {
	        var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key);
	        if (error instanceof Error) {
	          return error;
	        }
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createUnionTypeChecker(arrayOfTypeCheckers) {
	  if (!Array.isArray(arrayOfTypeCheckers)) {
	    return createChainableTypeChecker(function () {
	      return new Error('Invalid argument supplied to oneOfType, expected an instance of array.');
	    });
	  }
	
	  function validate(props, propName, componentName, location, propFullName) {
	    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
	      var checker = arrayOfTypeCheckers[i];
	      if (checker(props, propName, componentName, location, propFullName) == null) {
	        return null;
	      }
	    }
	
	    var locationName = ReactPropTypeLocationNames[location];
	    return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createNodeChecker() {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (!isNode(props[propName])) {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createShapeTypeChecker(shapeTypes) {
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== 'object') {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
	    }
	    for (var key in shapeTypes) {
	      var checker = shapeTypes[key];
	      if (!checker) {
	        continue;
	      }
	      var error = checker(propValue, key, componentName, location, propFullName + '.' + key);
	      if (error) {
	        return error;
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function isNode(propValue) {
	  switch (typeof propValue) {
	    case 'number':
	    case 'string':
	    case 'undefined':
	      return true;
	    case 'boolean':
	      return !propValue;
	    case 'object':
	      if (Array.isArray(propValue)) {
	        return propValue.every(isNode);
	      }
	      if (propValue === null || ReactElement.isValidElement(propValue)) {
	        return true;
	      }
	
	      var iteratorFn = getIteratorFn(propValue);
	      if (iteratorFn) {
	        var iterator = iteratorFn.call(propValue);
	        var step;
	        if (iteratorFn !== propValue.entries) {
	          while (!(step = iterator.next()).done) {
	            if (!isNode(step.value)) {
	              return false;
	            }
	          }
	        } else {
	          // Iterator will provide entry [k,v] tuples rather than values.
	          while (!(step = iterator.next()).done) {
	            var entry = step.value;
	            if (entry) {
	              if (!isNode(entry[1])) {
	                return false;
	              }
	            }
	          }
	        }
	      } else {
	        return false;
	      }
	
	      return true;
	    default:
	      return false;
	  }
	}
	
	// Equivalent of `typeof` but with special handling for array and regexp.
	function getPropType(propValue) {
	  var propType = typeof propValue;
	  if (Array.isArray(propValue)) {
	    return 'array';
	  }
	  if (propValue instanceof RegExp) {
	    // Old webkits (at least until Android 4.0) return 'function' rather than
	    // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
	    // passes PropTypes.object.
	    return 'object';
	  }
	  return propType;
	}
	
	// This handles more types than `getPropType`. Only used for error messages.
	// See `createPrimitiveTypeChecker`.
	function getPreciseType(propValue) {
	  var propType = getPropType(propValue);
	  if (propType === 'object') {
	    if (propValue instanceof Date) {
	      return 'date';
	    } else if (propValue instanceof RegExp) {
	      return 'regexp';
	    }
	  }
	  return propType;
	}
	
	// Returns class name of the object, if any.
	function getClassName(propValue) {
	  if (!propValue.constructor || !propValue.constructor.name) {
	    return '<<anonymous>>';
	  }
	  return propValue.constructor.name;
	}
	
	module.exports = ReactPropTypes;

/***/ },
/* 172 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactRootIndex
	 * @typechecks
	 */
	
	'use strict';
	
	var ReactRootIndexInjection = {
	  /**
	   * @param {function} _createReactRootIndex
	   */
	  injectCreateReactRootIndex: function (_createReactRootIndex) {
	    ReactRootIndex.createReactRootIndex = _createReactRootIndex;
	  }
	};
	
	var ReactRootIndex = {
	  createReactRootIndex: null,
	  injection: ReactRootIndexInjection
	};
	
	module.exports = ReactRootIndex;

/***/ },
/* 173 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ViewportMetrics
	 */
	
	'use strict';
	
	var ViewportMetrics = {
	
	  currentScrollLeft: 0,
	
	  currentScrollTop: 0,
	
	  refreshScrollValues: function (scrollPosition) {
	    ViewportMetrics.currentScrollLeft = scrollPosition.x;
	    ViewportMetrics.currentScrollTop = scrollPosition.y;
	  }
	
	};
	
	module.exports = ViewportMetrics;

/***/ },
/* 174 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule accumulateInto
	 */
	
	'use strict';
	
	var invariant = __webpack_require__(4);
	
	/**
	 *
	 * Accumulates items that must not be null or undefined into the first one. This
	 * is used to conserve memory by avoiding array allocations, and thus sacrifices
	 * API cleanness. Since `current` can be null before being passed in and not
	 * null after this function, make sure to assign it back to `current`:
	 *
	 * `a = accumulateInto(a, b);`
	 *
	 * This API should be sparingly used. Try `accumulate` for something cleaner.
	 *
	 * @return {*|array<*>} An accumulation of items.
	 */
	
	function accumulateInto(current, next) {
	  !(next != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : invariant(false) : undefined;
	  if (current == null) {
	    return next;
	  }
	
	  // Both are not empty. Warning: Never call x.concat(y) when you are not
	  // certain that x is an Array (x could be a string with concat method).
	  var currentIsArray = Array.isArray(current);
	  var nextIsArray = Array.isArray(next);
	
	  if (currentIsArray && nextIsArray) {
	    current.push.apply(current, next);
	    return current;
	  }
	
	  if (currentIsArray) {
	    current.push(next);
	    return current;
	  }
	
	  if (nextIsArray) {
	    // A bit too dangerous to mutate `next`.
	    return [current].concat(next);
	  }
	
	  return [current, next];
	}
	
	module.exports = accumulateInto;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 175 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule forEachAccumulated
	 */
	
	'use strict';
	
	/**
	 * @param {array} arr an "accumulation" of items which is either an Array or
	 * a single item. Useful when paired with the `accumulate` module. This is a
	 * simple utility that allows us to reason about a collection of items, but
	 * handling the case when there is exactly one item (and we do not need to
	 * allocate an array).
	 */
	var forEachAccumulated = function (arr, cb, scope) {
	  if (Array.isArray(arr)) {
	    arr.forEach(cb, scope);
	  } else if (arr) {
	    cb.call(scope, arr);
	  }
	};
	
	module.exports = forEachAccumulated;

/***/ },
/* 176 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getTextContentAccessor
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(10);
	
	var contentKey = null;
	
	/**
	 * Gets the key used to access text content on a DOM node.
	 *
	 * @return {?string} Key used to access text content.
	 * @internal
	 */
	function getTextContentAccessor() {
	  if (!contentKey && ExecutionEnvironment.canUseDOM) {
	    // Prefer textContent to innerText because many browsers support both but
	    // SVG <text> elements don't support innerText even when <div> does.
	    contentKey = 'textContent' in document.documentElement ? 'textContent' : 'innerText';
	  }
	  return contentKey;
	}
	
	module.exports = getTextContentAccessor;

/***/ },
/* 177 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule isTextInputElement
	 */
	
	'use strict';
	
	/**
	 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
	 */
	var supportedInputTypes = {
	  'color': true,
	  'date': true,
	  'datetime': true,
	  'datetime-local': true,
	  'email': true,
	  'month': true,
	  'number': true,
	  'password': true,
	  'range': true,
	  'search': true,
	  'tel': true,
	  'text': true,
	  'time': true,
	  'url': true,
	  'week': true
	};
	
	function isTextInputElement(elem) {
	  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
	  return nodeName && (nodeName === 'input' && supportedInputTypes[elem.type] || nodeName === 'textarea');
	}
	
	module.exports = isTextInputElement;

/***/ },
/* 178 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule EventListener
	 * @typechecks
	 */
	
	'use strict';
	
	var emptyFunction = __webpack_require__(27);
	
	/**
	 * Upstream version of event listener. Does not take into account specific
	 * nature of platform.
	 */
	var EventListener = {
	  /**
	   * Listen to DOM events during the bubble phase.
	   *
	   * @param {DOMEventTarget} target DOM element to register listener on.
	   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
	   * @param {function} callback Callback function.
	   * @return {object} Object with a `remove` method.
	   */
	  listen: function (target, eventType, callback) {
	    if (target.addEventListener) {
	      target.addEventListener(eventType, callback, false);
	      return {
	        remove: function () {
	          target.removeEventListener(eventType, callback, false);
	        }
	      };
	    } else if (target.attachEvent) {
	      target.attachEvent('on' + eventType, callback);
	      return {
	        remove: function () {
	          target.detachEvent('on' + eventType, callback);
	        }
	      };
	    }
	  },
	
	  /**
	   * Listen to DOM events during the capture phase.
	   *
	   * @param {DOMEventTarget} target DOM element to register listener on.
	   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
	   * @param {function} callback Callback function.
	   * @return {object} Object with a `remove` method.
	   */
	  capture: function (target, eventType, callback) {
	    if (target.addEventListener) {
	      target.addEventListener(eventType, callback, true);
	      return {
	        remove: function () {
	          target.removeEventListener(eventType, callback, true);
	        }
	      };
	    } else {
	      if (process.env.NODE_ENV !== 'production') {
	        console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');
	      }
	      return {
	        remove: emptyFunction
	      };
	    }
	  },
	
	  registerDefault: function () {}
	};
	
	module.exports = EventListener;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 179 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule containsNode
	 * @typechecks
	 */
	
	'use strict';
	
	var isTextNode = __webpack_require__(489);
	
	/*eslint-disable no-bitwise */
	
	/**
	 * Checks if a given DOM node contains or is another DOM node.
	 *
	 * @param {?DOMNode} outerNode Outer DOM node.
	 * @param {?DOMNode} innerNode Inner DOM node.
	 * @return {boolean} True if `outerNode` contains or is `innerNode`.
	 */
	function containsNode(_x, _x2) {
	  var _again = true;
	
	  _function: while (_again) {
	    var outerNode = _x,
	        innerNode = _x2;
	    _again = false;
	
	    if (!outerNode || !innerNode) {
	      return false;
	    } else if (outerNode === innerNode) {
	      return true;
	    } else if (isTextNode(outerNode)) {
	      return false;
	    } else if (isTextNode(innerNode)) {
	      _x = outerNode;
	      _x2 = innerNode.parentNode;
	      _again = true;
	      continue _function;
	    } else if (outerNode.contains) {
	      return outerNode.contains(innerNode);
	    } else if (outerNode.compareDocumentPosition) {
	      return !!(outerNode.compareDocumentPosition(innerNode) & 16);
	    } else {
	      return false;
	    }
	  }
	}
	
	module.exports = containsNode;

/***/ },
/* 180 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule focusNode
	 */
	
	'use strict';
	
	/**
	 * @param {DOMElement} node input/textarea to focus
	 */
	function focusNode(node) {
	  // IE8 can throw "Can't move focus to the control because it is invisible,
	  // not enabled, or of a type that does not accept the focus." for all kinds of
	  // reasons that are too expensive and fragile to test.
	  try {
	    node.focus();
	  } catch (e) {}
	}
	
	module.exports = focusNode;

/***/ },
/* 181 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getActiveElement
	 * @typechecks
	 */
	
	/* eslint-disable fb-www/typeof-undefined */
	
	/**
	 * Same as document.activeElement but wraps in a try-catch block. In IE it is
	 * not safe to call document.activeElement if there is nothing focused.
	 *
	 * The activeElement will be null only if the document or document body is not
	 * yet defined.
	 */
	'use strict';
	
	function getActiveElement() /*?DOMElement*/{
	  if (typeof document === 'undefined') {
	    return null;
	  }
	  try {
	    return document.activeElement || document.body;
	  } catch (e) {
	    return document.body;
	  }
	}
	
	module.exports = getActiveElement;

/***/ },
/* 182 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getMarkupWrap
	 */
	
	/*eslint-disable fb-www/unsafe-html */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(10);
	
	var invariant = __webpack_require__(4);
	
	/**
	 * Dummy container used to detect which wraps are necessary.
	 */
	var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;
	
	/**
	 * Some browsers cannot use `innerHTML` to render certain elements standalone,
	 * so we wrap them, render the wrapped nodes, then extract the desired node.
	 *
	 * In IE8, certain elements cannot render alone, so wrap all elements ('*').
	 */
	
	var shouldWrap = {};
	
	var selectWrap = [1, '<select multiple="true">', '</select>'];
	var tableWrap = [1, '<table>', '</table>'];
	var trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];
	
	var svgWrap = [1, '<svg xmlns="http://www.w3.org/2000/svg">', '</svg>'];
	
	var markupWrap = {
	  '*': [1, '?<div>', '</div>'],
	
	  'area': [1, '<map>', '</map>'],
	  'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],
	  'legend': [1, '<fieldset>', '</fieldset>'],
	  'param': [1, '<object>', '</object>'],
	  'tr': [2, '<table><tbody>', '</tbody></table>'],
	
	  'optgroup': selectWrap,
	  'option': selectWrap,
	
	  'caption': tableWrap,
	  'colgroup': tableWrap,
	  'tbody': tableWrap,
	  'tfoot': tableWrap,
	  'thead': tableWrap,
	
	  'td': trWrap,
	  'th': trWrap
	};
	
	// Initialize the SVG elements since we know they'll always need to be wrapped
	// consistently. If they are created inside a <div> they will be initialized in
	// the wrong namespace (and will not display).
	var svgElements = ['circle', 'clipPath', 'defs', 'ellipse', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'text', 'tspan'];
	svgElements.forEach(function (nodeName) {
	  markupWrap[nodeName] = svgWrap;
	  shouldWrap[nodeName] = true;
	});
	
	/**
	 * Gets the markup wrap configuration for the supplied `nodeName`.
	 *
	 * NOTE: This lazily detects which wraps are necessary for the current browser.
	 *
	 * @param {string} nodeName Lowercase `nodeName`.
	 * @return {?array} Markup wrap configuration, if applicable.
	 */
	function getMarkupWrap(nodeName) {
	  !!!dummyNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Markup wrapping node not initialized') : invariant(false) : undefined;
	  if (!markupWrap.hasOwnProperty(nodeName)) {
	    nodeName = '*';
	  }
	  if (!shouldWrap.hasOwnProperty(nodeName)) {
	    if (nodeName === '*') {
	      dummyNode.innerHTML = '<link />';
	    } else {
	      dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';
	    }
	    shouldWrap[nodeName] = !dummyNode.firstChild;
	  }
	  return shouldWrap[nodeName] ? markupWrap[nodeName] : null;
	}
	
	module.exports = getMarkupWrap;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 183 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule shallowEqual
	 * @typechecks
	 * 
	 */
	
	'use strict';
	
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	
	/**
	 * Performs equality by iterating through keys on an object and returning false
	 * when any key has values which are not strictly equal between the arguments.
	 * Returns true when the values of all keys are strictly equal.
	 */
	function shallowEqual(objA, objB) {
	  if (objA === objB) {
	    return true;
	  }
	
	  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
	    return false;
	  }
	
	  var keysA = Object.keys(objA);
	  var keysB = Object.keys(objB);
	
	  if (keysA.length !== keysB.length) {
	    return false;
	  }
	
	  // Test for A's keys different from B.
	  var bHasOwnProperty = hasOwnProperty.bind(objB);
	  for (var i = 0; i < keysA.length; i++) {
	    if (!bHasOwnProperty(keysA[i]) || objA[keysA[i]] !== objB[keysA[i]]) {
	      return false;
	    }
	  }
	
	  return true;
	}
	
	module.exports = shallowEqual;

/***/ },
/* 184 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = __webpack_require__(435);


/***/ },
/* 185 */
/***/ function(module, exports) {

	var ENTITIES = [['Aacute', [193]], ['aacute', [225]], ['Abreve', [258]], ['abreve', [259]], ['ac', [8766]], ['acd', [8767]], ['acE', [8766, 819]], ['Acirc', [194]], ['acirc', [226]], ['acute', [180]], ['Acy', [1040]], ['acy', [1072]], ['AElig', [198]], ['aelig', [230]], ['af', [8289]], ['Afr', [120068]], ['afr', [120094]], ['Agrave', [192]], ['agrave', [224]], ['alefsym', [8501]], ['aleph', [8501]], ['Alpha', [913]], ['alpha', [945]], ['Amacr', [256]], ['amacr', [257]], ['amalg', [10815]], ['amp', [38]], ['AMP', [38]], ['andand', [10837]], ['And', [10835]], ['and', [8743]], ['andd', [10844]], ['andslope', [10840]], ['andv', [10842]], ['ang', [8736]], ['ange', [10660]], ['angle', [8736]], ['angmsdaa', [10664]], ['angmsdab', [10665]], ['angmsdac', [10666]], ['angmsdad', [10667]], ['angmsdae', [10668]], ['angmsdaf', [10669]], ['angmsdag', [10670]], ['angmsdah', [10671]], ['angmsd', [8737]], ['angrt', [8735]], ['angrtvb', [8894]], ['angrtvbd', [10653]], ['angsph', [8738]], ['angst', [197]], ['angzarr', [9084]], ['Aogon', [260]], ['aogon', [261]], ['Aopf', [120120]], ['aopf', [120146]], ['apacir', [10863]], ['ap', [8776]], ['apE', [10864]], ['ape', [8778]], ['apid', [8779]], ['apos', [39]], ['ApplyFunction', [8289]], ['approx', [8776]], ['approxeq', [8778]], ['Aring', [197]], ['aring', [229]], ['Ascr', [119964]], ['ascr', [119990]], ['Assign', [8788]], ['ast', [42]], ['asymp', [8776]], ['asympeq', [8781]], ['Atilde', [195]], ['atilde', [227]], ['Auml', [196]], ['auml', [228]], ['awconint', [8755]], ['awint', [10769]], ['backcong', [8780]], ['backepsilon', [1014]], ['backprime', [8245]], ['backsim', [8765]], ['backsimeq', [8909]], ['Backslash', [8726]], ['Barv', [10983]], ['barvee', [8893]], ['barwed', [8965]], ['Barwed', [8966]], ['barwedge', [8965]], ['bbrk', [9141]], ['bbrktbrk', [9142]], ['bcong', [8780]], ['Bcy', [1041]], ['bcy', [1073]], ['bdquo', [8222]], ['becaus', [8757]], ['because', [8757]], ['Because', [8757]], ['bemptyv', [10672]], ['bepsi', [1014]], ['bernou', [8492]], ['Bernoullis', [8492]], ['Beta', [914]], ['beta', [946]], ['beth', [8502]], ['between', [8812]], ['Bfr', [120069]], ['bfr', [120095]], ['bigcap', [8898]], ['bigcirc', [9711]], ['bigcup', [8899]], ['bigodot', [10752]], ['bigoplus', [10753]], ['bigotimes', [10754]], ['bigsqcup', [10758]], ['bigstar', [9733]], ['bigtriangledown', [9661]], ['bigtriangleup', [9651]], ['biguplus', [10756]], ['bigvee', [8897]], ['bigwedge', [8896]], ['bkarow', [10509]], ['blacklozenge', [10731]], ['blacksquare', [9642]], ['blacktriangle', [9652]], ['blacktriangledown', [9662]], ['blacktriangleleft', [9666]], ['blacktriangleright', [9656]], ['blank', [9251]], ['blk12', [9618]], ['blk14', [9617]], ['blk34', [9619]], ['block', [9608]], ['bne', [61, 8421]], ['bnequiv', [8801, 8421]], ['bNot', [10989]], ['bnot', [8976]], ['Bopf', [120121]], ['bopf', [120147]], ['bot', [8869]], ['bottom', [8869]], ['bowtie', [8904]], ['boxbox', [10697]], ['boxdl', [9488]], ['boxdL', [9557]], ['boxDl', [9558]], ['boxDL', [9559]], ['boxdr', [9484]], ['boxdR', [9554]], ['boxDr', [9555]], ['boxDR', [9556]], ['boxh', [9472]], ['boxH', [9552]], ['boxhd', [9516]], ['boxHd', [9572]], ['boxhD', [9573]], ['boxHD', [9574]], ['boxhu', [9524]], ['boxHu', [9575]], ['boxhU', [9576]], ['boxHU', [9577]], ['boxminus', [8863]], ['boxplus', [8862]], ['boxtimes', [8864]], ['boxul', [9496]], ['boxuL', [9563]], ['boxUl', [9564]], ['boxUL', [9565]], ['boxur', [9492]], ['boxuR', [9560]], ['boxUr', [9561]], ['boxUR', [9562]], ['boxv', [9474]], ['boxV', [9553]], ['boxvh', [9532]], ['boxvH', [9578]], ['boxVh', [9579]], ['boxVH', [9580]], ['boxvl', [9508]], ['boxvL', [9569]], ['boxVl', [9570]], ['boxVL', [9571]], ['boxvr', [9500]], ['boxvR', [9566]], ['boxVr', [9567]], ['boxVR', [9568]], ['bprime', [8245]], ['breve', [728]], ['Breve', [728]], ['brvbar', [166]], ['bscr', [119991]], ['Bscr', [8492]], ['bsemi', [8271]], ['bsim', [8765]], ['bsime', [8909]], ['bsolb', [10693]], ['bsol', [92]], ['bsolhsub', [10184]], ['bull', [8226]], ['bullet', [8226]], ['bump', [8782]], ['bumpE', [10926]], ['bumpe', [8783]], ['Bumpeq', [8782]], ['bumpeq', [8783]], ['Cacute', [262]], ['cacute', [263]], ['capand', [10820]], ['capbrcup', [10825]], ['capcap', [10827]], ['cap', [8745]], ['Cap', [8914]], ['capcup', [10823]], ['capdot', [10816]], ['CapitalDifferentialD', [8517]], ['caps', [8745, 65024]], ['caret', [8257]], ['caron', [711]], ['Cayleys', [8493]], ['ccaps', [10829]], ['Ccaron', [268]], ['ccaron', [269]], ['Ccedil', [199]], ['ccedil', [231]], ['Ccirc', [264]], ['ccirc', [265]], ['Cconint', [8752]], ['ccups', [10828]], ['ccupssm', [10832]], ['Cdot', [266]], ['cdot', [267]], ['cedil', [184]], ['Cedilla', [184]], ['cemptyv', [10674]], ['cent', [162]], ['centerdot', [183]], ['CenterDot', [183]], ['cfr', [120096]], ['Cfr', [8493]], ['CHcy', [1063]], ['chcy', [1095]], ['check', [10003]], ['checkmark', [10003]], ['Chi', [935]], ['chi', [967]], ['circ', [710]], ['circeq', [8791]], ['circlearrowleft', [8634]], ['circlearrowright', [8635]], ['circledast', [8859]], ['circledcirc', [8858]], ['circleddash', [8861]], ['CircleDot', [8857]], ['circledR', [174]], ['circledS', [9416]], ['CircleMinus', [8854]], ['CirclePlus', [8853]], ['CircleTimes', [8855]], ['cir', [9675]], ['cirE', [10691]], ['cire', [8791]], ['cirfnint', [10768]], ['cirmid', [10991]], ['cirscir', [10690]], ['ClockwiseContourIntegral', [8754]], ['CloseCurlyDoubleQuote', [8221]], ['CloseCurlyQuote', [8217]], ['clubs', [9827]], ['clubsuit', [9827]], ['colon', [58]], ['Colon', [8759]], ['Colone', [10868]], ['colone', [8788]], ['coloneq', [8788]], ['comma', [44]], ['commat', [64]], ['comp', [8705]], ['compfn', [8728]], ['complement', [8705]], ['complexes', [8450]], ['cong', [8773]], ['congdot', [10861]], ['Congruent', [8801]], ['conint', [8750]], ['Conint', [8751]], ['ContourIntegral', [8750]], ['copf', [120148]], ['Copf', [8450]], ['coprod', [8720]], ['Coproduct', [8720]], ['copy', [169]], ['COPY', [169]], ['copysr', [8471]], ['CounterClockwiseContourIntegral', [8755]], ['crarr', [8629]], ['cross', [10007]], ['Cross', [10799]], ['Cscr', [119966]], ['cscr', [119992]], ['csub', [10959]], ['csube', [10961]], ['csup', [10960]], ['csupe', [10962]], ['ctdot', [8943]], ['cudarrl', [10552]], ['cudarrr', [10549]], ['cuepr', [8926]], ['cuesc', [8927]], ['cularr', [8630]], ['cularrp', [10557]], ['cupbrcap', [10824]], ['cupcap', [10822]], ['CupCap', [8781]], ['cup', [8746]], ['Cup', [8915]], ['cupcup', [10826]], ['cupdot', [8845]], ['cupor', [10821]], ['cups', [8746, 65024]], ['curarr', [8631]], ['curarrm', [10556]], ['curlyeqprec', [8926]], ['curlyeqsucc', [8927]], ['curlyvee', [8910]], ['curlywedge', [8911]], ['curren', [164]], ['curvearrowleft', [8630]], ['curvearrowright', [8631]], ['cuvee', [8910]], ['cuwed', [8911]], ['cwconint', [8754]], ['cwint', [8753]], ['cylcty', [9005]], ['dagger', [8224]], ['Dagger', [8225]], ['daleth', [8504]], ['darr', [8595]], ['Darr', [8609]], ['dArr', [8659]], ['dash', [8208]], ['Dashv', [10980]], ['dashv', [8867]], ['dbkarow', [10511]], ['dblac', [733]], ['Dcaron', [270]], ['dcaron', [271]], ['Dcy', [1044]], ['dcy', [1076]], ['ddagger', [8225]], ['ddarr', [8650]], ['DD', [8517]], ['dd', [8518]], ['DDotrahd', [10513]], ['ddotseq', [10871]], ['deg', [176]], ['Del', [8711]], ['Delta', [916]], ['delta', [948]], ['demptyv', [10673]], ['dfisht', [10623]], ['Dfr', [120071]], ['dfr', [120097]], ['dHar', [10597]], ['dharl', [8643]], ['dharr', [8642]], ['DiacriticalAcute', [180]], ['DiacriticalDot', [729]], ['DiacriticalDoubleAcute', [733]], ['DiacriticalGrave', [96]], ['DiacriticalTilde', [732]], ['diam', [8900]], ['diamond', [8900]], ['Diamond', [8900]], ['diamondsuit', [9830]], ['diams', [9830]], ['die', [168]], ['DifferentialD', [8518]], ['digamma', [989]], ['disin', [8946]], ['div', [247]], ['divide', [247]], ['divideontimes', [8903]], ['divonx', [8903]], ['DJcy', [1026]], ['djcy', [1106]], ['dlcorn', [8990]], ['dlcrop', [8973]], ['dollar', [36]], ['Dopf', [120123]], ['dopf', [120149]], ['Dot', [168]], ['dot', [729]], ['DotDot', [8412]], ['doteq', [8784]], ['doteqdot', [8785]], ['DotEqual', [8784]], ['dotminus', [8760]], ['dotplus', [8724]], ['dotsquare', [8865]], ['doublebarwedge', [8966]], ['DoubleContourIntegral', [8751]], ['DoubleDot', [168]], ['DoubleDownArrow', [8659]], ['DoubleLeftArrow', [8656]], ['DoubleLeftRightArrow', [8660]], ['DoubleLeftTee', [10980]], ['DoubleLongLeftArrow', [10232]], ['DoubleLongLeftRightArrow', [10234]], ['DoubleLongRightArrow', [10233]], ['DoubleRightArrow', [8658]], ['DoubleRightTee', [8872]], ['DoubleUpArrow', [8657]], ['DoubleUpDownArrow', [8661]], ['DoubleVerticalBar', [8741]], ['DownArrowBar', [10515]], ['downarrow', [8595]], ['DownArrow', [8595]], ['Downarrow', [8659]], ['DownArrowUpArrow', [8693]], ['DownBreve', [785]], ['downdownarrows', [8650]], ['downharpoonleft', [8643]], ['downharpoonright', [8642]], ['DownLeftRightVector', [10576]], ['DownLeftTeeVector', [10590]], ['DownLeftVectorBar', [10582]], ['DownLeftVector', [8637]], ['DownRightTeeVector', [10591]], ['DownRightVectorBar', [10583]], ['DownRightVector', [8641]], ['DownTeeArrow', [8615]], ['DownTee', [8868]], ['drbkarow', [10512]], ['drcorn', [8991]], ['drcrop', [8972]], ['Dscr', [119967]], ['dscr', [119993]], ['DScy', [1029]], ['dscy', [1109]], ['dsol', [10742]], ['Dstrok', [272]], ['dstrok', [273]], ['dtdot', [8945]], ['dtri', [9663]], ['dtrif', [9662]], ['duarr', [8693]], ['duhar', [10607]], ['dwangle', [10662]], ['DZcy', [1039]], ['dzcy', [1119]], ['dzigrarr', [10239]], ['Eacute', [201]], ['eacute', [233]], ['easter', [10862]], ['Ecaron', [282]], ['ecaron', [283]], ['Ecirc', [202]], ['ecirc', [234]], ['ecir', [8790]], ['ecolon', [8789]], ['Ecy', [1069]], ['ecy', [1101]], ['eDDot', [10871]], ['Edot', [278]], ['edot', [279]], ['eDot', [8785]], ['ee', [8519]], ['efDot', [8786]], ['Efr', [120072]], ['efr', [120098]], ['eg', [10906]], ['Egrave', [200]], ['egrave', [232]], ['egs', [10902]], ['egsdot', [10904]], ['el', [10905]], ['Element', [8712]], ['elinters', [9191]], ['ell', [8467]], ['els', [10901]], ['elsdot', [10903]], ['Emacr', [274]], ['emacr', [275]], ['empty', [8709]], ['emptyset', [8709]], ['EmptySmallSquare', [9723]], ['emptyv', [8709]], ['EmptyVerySmallSquare', [9643]], ['emsp13', [8196]], ['emsp14', [8197]], ['emsp', [8195]], ['ENG', [330]], ['eng', [331]], ['ensp', [8194]], ['Eogon', [280]], ['eogon', [281]], ['Eopf', [120124]], ['eopf', [120150]], ['epar', [8917]], ['eparsl', [10723]], ['eplus', [10865]], ['epsi', [949]], ['Epsilon', [917]], ['epsilon', [949]], ['epsiv', [1013]], ['eqcirc', [8790]], ['eqcolon', [8789]], ['eqsim', [8770]], ['eqslantgtr', [10902]], ['eqslantless', [10901]], ['Equal', [10869]], ['equals', [61]], ['EqualTilde', [8770]], ['equest', [8799]], ['Equilibrium', [8652]], ['equiv', [8801]], ['equivDD', [10872]], ['eqvparsl', [10725]], ['erarr', [10609]], ['erDot', [8787]], ['escr', [8495]], ['Escr', [8496]], ['esdot', [8784]], ['Esim', [10867]], ['esim', [8770]], ['Eta', [919]], ['eta', [951]], ['ETH', [208]], ['eth', [240]], ['Euml', [203]], ['euml', [235]], ['euro', [8364]], ['excl', [33]], ['exist', [8707]], ['Exists', [8707]], ['expectation', [8496]], ['exponentiale', [8519]], ['ExponentialE', [8519]], ['fallingdotseq', [8786]], ['Fcy', [1060]], ['fcy', [1092]], ['female', [9792]], ['ffilig', [64259]], ['fflig', [64256]], ['ffllig', [64260]], ['Ffr', [120073]], ['ffr', [120099]], ['filig', [64257]], ['FilledSmallSquare', [9724]], ['FilledVerySmallSquare', [9642]], ['fjlig', [102, 106]], ['flat', [9837]], ['fllig', [64258]], ['fltns', [9649]], ['fnof', [402]], ['Fopf', [120125]], ['fopf', [120151]], ['forall', [8704]], ['ForAll', [8704]], ['fork', [8916]], ['forkv', [10969]], ['Fouriertrf', [8497]], ['fpartint', [10765]], ['frac12', [189]], ['frac13', [8531]], ['frac14', [188]], ['frac15', [8533]], ['frac16', [8537]], ['frac18', [8539]], ['frac23', [8532]], ['frac25', [8534]], ['frac34', [190]], ['frac35', [8535]], ['frac38', [8540]], ['frac45', [8536]], ['frac56', [8538]], ['frac58', [8541]], ['frac78', [8542]], ['frasl', [8260]], ['frown', [8994]], ['fscr', [119995]], ['Fscr', [8497]], ['gacute', [501]], ['Gamma', [915]], ['gamma', [947]], ['Gammad', [988]], ['gammad', [989]], ['gap', [10886]], ['Gbreve', [286]], ['gbreve', [287]], ['Gcedil', [290]], ['Gcirc', [284]], ['gcirc', [285]], ['Gcy', [1043]], ['gcy', [1075]], ['Gdot', [288]], ['gdot', [289]], ['ge', [8805]], ['gE', [8807]], ['gEl', [10892]], ['gel', [8923]], ['geq', [8805]], ['geqq', [8807]], ['geqslant', [10878]], ['gescc', [10921]], ['ges', [10878]], ['gesdot', [10880]], ['gesdoto', [10882]], ['gesdotol', [10884]], ['gesl', [8923, 65024]], ['gesles', [10900]], ['Gfr', [120074]], ['gfr', [120100]], ['gg', [8811]], ['Gg', [8921]], ['ggg', [8921]], ['gimel', [8503]], ['GJcy', [1027]], ['gjcy', [1107]], ['gla', [10917]], ['gl', [8823]], ['glE', [10898]], ['glj', [10916]], ['gnap', [10890]], ['gnapprox', [10890]], ['gne', [10888]], ['gnE', [8809]], ['gneq', [10888]], ['gneqq', [8809]], ['gnsim', [8935]], ['Gopf', [120126]], ['gopf', [120152]], ['grave', [96]], ['GreaterEqual', [8805]], ['GreaterEqualLess', [8923]], ['GreaterFullEqual', [8807]], ['GreaterGreater', [10914]], ['GreaterLess', [8823]], ['GreaterSlantEqual', [10878]], ['GreaterTilde', [8819]], ['Gscr', [119970]], ['gscr', [8458]], ['gsim', [8819]], ['gsime', [10894]], ['gsiml', [10896]], ['gtcc', [10919]], ['gtcir', [10874]], ['gt', [62]], ['GT', [62]], ['Gt', [8811]], ['gtdot', [8919]], ['gtlPar', [10645]], ['gtquest', [10876]], ['gtrapprox', [10886]], ['gtrarr', [10616]], ['gtrdot', [8919]], ['gtreqless', [8923]], ['gtreqqless', [10892]], ['gtrless', [8823]], ['gtrsim', [8819]], ['gvertneqq', [8809, 65024]], ['gvnE', [8809, 65024]], ['Hacek', [711]], ['hairsp', [8202]], ['half', [189]], ['hamilt', [8459]], ['HARDcy', [1066]], ['hardcy', [1098]], ['harrcir', [10568]], ['harr', [8596]], ['hArr', [8660]], ['harrw', [8621]], ['Hat', [94]], ['hbar', [8463]], ['Hcirc', [292]], ['hcirc', [293]], ['hearts', [9829]], ['heartsuit', [9829]], ['hellip', [8230]], ['hercon', [8889]], ['hfr', [120101]], ['Hfr', [8460]], ['HilbertSpace', [8459]], ['hksearow', [10533]], ['hkswarow', [10534]], ['hoarr', [8703]], ['homtht', [8763]], ['hookleftarrow', [8617]], ['hookrightarrow', [8618]], ['hopf', [120153]], ['Hopf', [8461]], ['horbar', [8213]], ['HorizontalLine', [9472]], ['hscr', [119997]], ['Hscr', [8459]], ['hslash', [8463]], ['Hstrok', [294]], ['hstrok', [295]], ['HumpDownHump', [8782]], ['HumpEqual', [8783]], ['hybull', [8259]], ['hyphen', [8208]], ['Iacute', [205]], ['iacute', [237]], ['ic', [8291]], ['Icirc', [206]], ['icirc', [238]], ['Icy', [1048]], ['icy', [1080]], ['Idot', [304]], ['IEcy', [1045]], ['iecy', [1077]], ['iexcl', [161]], ['iff', [8660]], ['ifr', [120102]], ['Ifr', [8465]], ['Igrave', [204]], ['igrave', [236]], ['ii', [8520]], ['iiiint', [10764]], ['iiint', [8749]], ['iinfin', [10716]], ['iiota', [8489]], ['IJlig', [306]], ['ijlig', [307]], ['Imacr', [298]], ['imacr', [299]], ['image', [8465]], ['ImaginaryI', [8520]], ['imagline', [8464]], ['imagpart', [8465]], ['imath', [305]], ['Im', [8465]], ['imof', [8887]], ['imped', [437]], ['Implies', [8658]], ['incare', [8453]], ['in', [8712]], ['infin', [8734]], ['infintie', [10717]], ['inodot', [305]], ['intcal', [8890]], ['int', [8747]], ['Int', [8748]], ['integers', [8484]], ['Integral', [8747]], ['intercal', [8890]], ['Intersection', [8898]], ['intlarhk', [10775]], ['intprod', [10812]], ['InvisibleComma', [8291]], ['InvisibleTimes', [8290]], ['IOcy', [1025]], ['iocy', [1105]], ['Iogon', [302]], ['iogon', [303]], ['Iopf', [120128]], ['iopf', [120154]], ['Iota', [921]], ['iota', [953]], ['iprod', [10812]], ['iquest', [191]], ['iscr', [119998]], ['Iscr', [8464]], ['isin', [8712]], ['isindot', [8949]], ['isinE', [8953]], ['isins', [8948]], ['isinsv', [8947]], ['isinv', [8712]], ['it', [8290]], ['Itilde', [296]], ['itilde', [297]], ['Iukcy', [1030]], ['iukcy', [1110]], ['Iuml', [207]], ['iuml', [239]], ['Jcirc', [308]], ['jcirc', [309]], ['Jcy', [1049]], ['jcy', [1081]], ['Jfr', [120077]], ['jfr', [120103]], ['jmath', [567]], ['Jopf', [120129]], ['jopf', [120155]], ['Jscr', [119973]], ['jscr', [119999]], ['Jsercy', [1032]], ['jsercy', [1112]], ['Jukcy', [1028]], ['jukcy', [1108]], ['Kappa', [922]], ['kappa', [954]], ['kappav', [1008]], ['Kcedil', [310]], ['kcedil', [311]], ['Kcy', [1050]], ['kcy', [1082]], ['Kfr', [120078]], ['kfr', [120104]], ['kgreen', [312]], ['KHcy', [1061]], ['khcy', [1093]], ['KJcy', [1036]], ['kjcy', [1116]], ['Kopf', [120130]], ['kopf', [120156]], ['Kscr', [119974]], ['kscr', [120000]], ['lAarr', [8666]], ['Lacute', [313]], ['lacute', [314]], ['laemptyv', [10676]], ['lagran', [8466]], ['Lambda', [923]], ['lambda', [955]], ['lang', [10216]], ['Lang', [10218]], ['langd', [10641]], ['langle', [10216]], ['lap', [10885]], ['Laplacetrf', [8466]], ['laquo', [171]], ['larrb', [8676]], ['larrbfs', [10527]], ['larr', [8592]], ['Larr', [8606]], ['lArr', [8656]], ['larrfs', [10525]], ['larrhk', [8617]], ['larrlp', [8619]], ['larrpl', [10553]], ['larrsim', [10611]], ['larrtl', [8610]], ['latail', [10521]], ['lAtail', [10523]], ['lat', [10923]], ['late', [10925]], ['lates', [10925, 65024]], ['lbarr', [10508]], ['lBarr', [10510]], ['lbbrk', [10098]], ['lbrace', [123]], ['lbrack', [91]], ['lbrke', [10635]], ['lbrksld', [10639]], ['lbrkslu', [10637]], ['Lcaron', [317]], ['lcaron', [318]], ['Lcedil', [315]], ['lcedil', [316]], ['lceil', [8968]], ['lcub', [123]], ['Lcy', [1051]], ['lcy', [1083]], ['ldca', [10550]], ['ldquo', [8220]], ['ldquor', [8222]], ['ldrdhar', [10599]], ['ldrushar', [10571]], ['ldsh', [8626]], ['le', [8804]], ['lE', [8806]], ['LeftAngleBracket', [10216]], ['LeftArrowBar', [8676]], ['leftarrow', [8592]], ['LeftArrow', [8592]], ['Leftarrow', [8656]], ['LeftArrowRightArrow', [8646]], ['leftarrowtail', [8610]], ['LeftCeiling', [8968]], ['LeftDoubleBracket', [10214]], ['LeftDownTeeVector', [10593]], ['LeftDownVectorBar', [10585]], ['LeftDownVector', [8643]], ['LeftFloor', [8970]], ['leftharpoondown', [8637]], ['leftharpoonup', [8636]], ['leftleftarrows', [8647]], ['leftrightarrow', [8596]], ['LeftRightArrow', [8596]], ['Leftrightarrow', [8660]], ['leftrightarrows', [8646]], ['leftrightharpoons', [8651]], ['leftrightsquigarrow', [8621]], ['LeftRightVector', [10574]], ['LeftTeeArrow', [8612]], ['LeftTee', [8867]], ['LeftTeeVector', [10586]], ['leftthreetimes', [8907]], ['LeftTriangleBar', [10703]], ['LeftTriangle', [8882]], ['LeftTriangleEqual', [8884]], ['LeftUpDownVector', [10577]], ['LeftUpTeeVector', [10592]], ['LeftUpVectorBar', [10584]], ['LeftUpVector', [8639]], ['LeftVectorBar', [10578]], ['LeftVector', [8636]], ['lEg', [10891]], ['leg', [8922]], ['leq', [8804]], ['leqq', [8806]], ['leqslant', [10877]], ['lescc', [10920]], ['les', [10877]], ['lesdot', [10879]], ['lesdoto', [10881]], ['lesdotor', [10883]], ['lesg', [8922, 65024]], ['lesges', [10899]], ['lessapprox', [10885]], ['lessdot', [8918]], ['lesseqgtr', [8922]], ['lesseqqgtr', [10891]], ['LessEqualGreater', [8922]], ['LessFullEqual', [8806]], ['LessGreater', [8822]], ['lessgtr', [8822]], ['LessLess', [10913]], ['lesssim', [8818]], ['LessSlantEqual', [10877]], ['LessTilde', [8818]], ['lfisht', [10620]], ['lfloor', [8970]], ['Lfr', [120079]], ['lfr', [120105]], ['lg', [8822]], ['lgE', [10897]], ['lHar', [10594]], ['lhard', [8637]], ['lharu', [8636]], ['lharul', [10602]], ['lhblk', [9604]], ['LJcy', [1033]], ['ljcy', [1113]], ['llarr', [8647]], ['ll', [8810]], ['Ll', [8920]], ['llcorner', [8990]], ['Lleftarrow', [8666]], ['llhard', [10603]], ['lltri', [9722]], ['Lmidot', [319]], ['lmidot', [320]], ['lmoustache', [9136]], ['lmoust', [9136]], ['lnap', [10889]], ['lnapprox', [10889]], ['lne', [10887]], ['lnE', [8808]], ['lneq', [10887]], ['lneqq', [8808]], ['lnsim', [8934]], ['loang', [10220]], ['loarr', [8701]], ['lobrk', [10214]], ['longleftarrow', [10229]], ['LongLeftArrow', [10229]], ['Longleftarrow', [10232]], ['longleftrightarrow', [10231]], ['LongLeftRightArrow', [10231]], ['Longleftrightarrow', [10234]], ['longmapsto', [10236]], ['longrightarrow', [10230]], ['LongRightArrow', [10230]], ['Longrightarrow', [10233]], ['looparrowleft', [8619]], ['looparrowright', [8620]], ['lopar', [10629]], ['Lopf', [120131]], ['lopf', [120157]], ['loplus', [10797]], ['lotimes', [10804]], ['lowast', [8727]], ['lowbar', [95]], ['LowerLeftArrow', [8601]], ['LowerRightArrow', [8600]], ['loz', [9674]], ['lozenge', [9674]], ['lozf', [10731]], ['lpar', [40]], ['lparlt', [10643]], ['lrarr', [8646]], ['lrcorner', [8991]], ['lrhar', [8651]], ['lrhard', [10605]], ['lrm', [8206]], ['lrtri', [8895]], ['lsaquo', [8249]], ['lscr', [120001]], ['Lscr', [8466]], ['lsh', [8624]], ['Lsh', [8624]], ['lsim', [8818]], ['lsime', [10893]], ['lsimg', [10895]], ['lsqb', [91]], ['lsquo', [8216]], ['lsquor', [8218]], ['Lstrok', [321]], ['lstrok', [322]], ['ltcc', [10918]], ['ltcir', [10873]], ['lt', [60]], ['LT', [60]], ['Lt', [8810]], ['ltdot', [8918]], ['lthree', [8907]], ['ltimes', [8905]], ['ltlarr', [10614]], ['ltquest', [10875]], ['ltri', [9667]], ['ltrie', [8884]], ['ltrif', [9666]], ['ltrPar', [10646]], ['lurdshar', [10570]], ['luruhar', [10598]], ['lvertneqq', [8808, 65024]], ['lvnE', [8808, 65024]], ['macr', [175]], ['male', [9794]], ['malt', [10016]], ['maltese', [10016]], ['Map', [10501]], ['map', [8614]], ['mapsto', [8614]], ['mapstodown', [8615]], ['mapstoleft', [8612]], ['mapstoup', [8613]], ['marker', [9646]], ['mcomma', [10793]], ['Mcy', [1052]], ['mcy', [1084]], ['mdash', [8212]], ['mDDot', [8762]], ['measuredangle', [8737]], ['MediumSpace', [8287]], ['Mellintrf', [8499]], ['Mfr', [120080]], ['mfr', [120106]], ['mho', [8487]], ['micro', [181]], ['midast', [42]], ['midcir', [10992]], ['mid', [8739]], ['middot', [183]], ['minusb', [8863]], ['minus', [8722]], ['minusd', [8760]], ['minusdu', [10794]], ['MinusPlus', [8723]], ['mlcp', [10971]], ['mldr', [8230]], ['mnplus', [8723]], ['models', [8871]], ['Mopf', [120132]], ['mopf', [120158]], ['mp', [8723]], ['mscr', [120002]], ['Mscr', [8499]], ['mstpos', [8766]], ['Mu', [924]], ['mu', [956]], ['multimap', [8888]], ['mumap', [8888]], ['nabla', [8711]], ['Nacute', [323]], ['nacute', [324]], ['nang', [8736, 8402]], ['nap', [8777]], ['napE', [10864, 824]], ['napid', [8779, 824]], ['napos', [329]], ['napprox', [8777]], ['natural', [9838]], ['naturals', [8469]], ['natur', [9838]], ['nbsp', [160]], ['nbump', [8782, 824]], ['nbumpe', [8783, 824]], ['ncap', [10819]], ['Ncaron', [327]], ['ncaron', [328]], ['Ncedil', [325]], ['ncedil', [326]], ['ncong', [8775]], ['ncongdot', [10861, 824]], ['ncup', [10818]], ['Ncy', [1053]], ['ncy', [1085]], ['ndash', [8211]], ['nearhk', [10532]], ['nearr', [8599]], ['neArr', [8663]], ['nearrow', [8599]], ['ne', [8800]], ['nedot', [8784, 824]], ['NegativeMediumSpace', [8203]], ['NegativeThickSpace', [8203]], ['NegativeThinSpace', [8203]], ['NegativeVeryThinSpace', [8203]], ['nequiv', [8802]], ['nesear', [10536]], ['nesim', [8770, 824]], ['NestedGreaterGreater', [8811]], ['NestedLessLess', [8810]], ['nexist', [8708]], ['nexists', [8708]], ['Nfr', [120081]], ['nfr', [120107]], ['ngE', [8807, 824]], ['nge', [8817]], ['ngeq', [8817]], ['ngeqq', [8807, 824]], ['ngeqslant', [10878, 824]], ['nges', [10878, 824]], ['nGg', [8921, 824]], ['ngsim', [8821]], ['nGt', [8811, 8402]], ['ngt', [8815]], ['ngtr', [8815]], ['nGtv', [8811, 824]], ['nharr', [8622]], ['nhArr', [8654]], ['nhpar', [10994]], ['ni', [8715]], ['nis', [8956]], ['nisd', [8954]], ['niv', [8715]], ['NJcy', [1034]], ['njcy', [1114]], ['nlarr', [8602]], ['nlArr', [8653]], ['nldr', [8229]], ['nlE', [8806, 824]], ['nle', [8816]], ['nleftarrow', [8602]], ['nLeftarrow', [8653]], ['nleftrightarrow', [8622]], ['nLeftrightarrow', [8654]], ['nleq', [8816]], ['nleqq', [8806, 824]], ['nleqslant', [10877, 824]], ['nles', [10877, 824]], ['nless', [8814]], ['nLl', [8920, 824]], ['nlsim', [8820]], ['nLt', [8810, 8402]], ['nlt', [8814]], ['nltri', [8938]], ['nltrie', [8940]], ['nLtv', [8810, 824]], ['nmid', [8740]], ['NoBreak', [8288]], ['NonBreakingSpace', [160]], ['nopf', [120159]], ['Nopf', [8469]], ['Not', [10988]], ['not', [172]], ['NotCongruent', [8802]], ['NotCupCap', [8813]], ['NotDoubleVerticalBar', [8742]], ['NotElement', [8713]], ['NotEqual', [8800]], ['NotEqualTilde', [8770, 824]], ['NotExists', [8708]], ['NotGreater', [8815]], ['NotGreaterEqual', [8817]], ['NotGreaterFullEqual', [8807, 824]], ['NotGreaterGreater', [8811, 824]], ['NotGreaterLess', [8825]], ['NotGreaterSlantEqual', [10878, 824]], ['NotGreaterTilde', [8821]], ['NotHumpDownHump', [8782, 824]], ['NotHumpEqual', [8783, 824]], ['notin', [8713]], ['notindot', [8949, 824]], ['notinE', [8953, 824]], ['notinva', [8713]], ['notinvb', [8951]], ['notinvc', [8950]], ['NotLeftTriangleBar', [10703, 824]], ['NotLeftTriangle', [8938]], ['NotLeftTriangleEqual', [8940]], ['NotLess', [8814]], ['NotLessEqual', [8816]], ['NotLessGreater', [8824]], ['NotLessLess', [8810, 824]], ['NotLessSlantEqual', [10877, 824]], ['NotLessTilde', [8820]], ['NotNestedGreaterGreater', [10914, 824]], ['NotNestedLessLess', [10913, 824]], ['notni', [8716]], ['notniva', [8716]], ['notnivb', [8958]], ['notnivc', [8957]], ['NotPrecedes', [8832]], ['NotPrecedesEqual', [10927, 824]], ['NotPrecedesSlantEqual', [8928]], ['NotReverseElement', [8716]], ['NotRightTriangleBar', [10704, 824]], ['NotRightTriangle', [8939]], ['NotRightTriangleEqual', [8941]], ['NotSquareSubset', [8847, 824]], ['NotSquareSubsetEqual', [8930]], ['NotSquareSuperset', [8848, 824]], ['NotSquareSupersetEqual', [8931]], ['NotSubset', [8834, 8402]], ['NotSubsetEqual', [8840]], ['NotSucceeds', [8833]], ['NotSucceedsEqual', [10928, 824]], ['NotSucceedsSlantEqual', [8929]], ['NotSucceedsTilde', [8831, 824]], ['NotSuperset', [8835, 8402]], ['NotSupersetEqual', [8841]], ['NotTilde', [8769]], ['NotTildeEqual', [8772]], ['NotTildeFullEqual', [8775]], ['NotTildeTilde', [8777]], ['NotVerticalBar', [8740]], ['nparallel', [8742]], ['npar', [8742]], ['nparsl', [11005, 8421]], ['npart', [8706, 824]], ['npolint', [10772]], ['npr', [8832]], ['nprcue', [8928]], ['nprec', [8832]], ['npreceq', [10927, 824]], ['npre', [10927, 824]], ['nrarrc', [10547, 824]], ['nrarr', [8603]], ['nrArr', [8655]], ['nrarrw', [8605, 824]], ['nrightarrow', [8603]], ['nRightarrow', [8655]], ['nrtri', [8939]], ['nrtrie', [8941]], ['nsc', [8833]], ['nsccue', [8929]], ['nsce', [10928, 824]], ['Nscr', [119977]], ['nscr', [120003]], ['nshortmid', [8740]], ['nshortparallel', [8742]], ['nsim', [8769]], ['nsime', [8772]], ['nsimeq', [8772]], ['nsmid', [8740]], ['nspar', [8742]], ['nsqsube', [8930]], ['nsqsupe', [8931]], ['nsub', [8836]], ['nsubE', [10949, 824]], ['nsube', [8840]], ['nsubset', [8834, 8402]], ['nsubseteq', [8840]], ['nsubseteqq', [10949, 824]], ['nsucc', [8833]], ['nsucceq', [10928, 824]], ['nsup', [8837]], ['nsupE', [10950, 824]], ['nsupe', [8841]], ['nsupset', [8835, 8402]], ['nsupseteq', [8841]], ['nsupseteqq', [10950, 824]], ['ntgl', [8825]], ['Ntilde', [209]], ['ntilde', [241]], ['ntlg', [8824]], ['ntriangleleft', [8938]], ['ntrianglelefteq', [8940]], ['ntriangleright', [8939]], ['ntrianglerighteq', [8941]], ['Nu', [925]], ['nu', [957]], ['num', [35]], ['numero', [8470]], ['numsp', [8199]], ['nvap', [8781, 8402]], ['nvdash', [8876]], ['nvDash', [8877]], ['nVdash', [8878]], ['nVDash', [8879]], ['nvge', [8805, 8402]], ['nvgt', [62, 8402]], ['nvHarr', [10500]], ['nvinfin', [10718]], ['nvlArr', [10498]], ['nvle', [8804, 8402]], ['nvlt', [60, 8402]], ['nvltrie', [8884, 8402]], ['nvrArr', [10499]], ['nvrtrie', [8885, 8402]], ['nvsim', [8764, 8402]], ['nwarhk', [10531]], ['nwarr', [8598]], ['nwArr', [8662]], ['nwarrow', [8598]], ['nwnear', [10535]], ['Oacute', [211]], ['oacute', [243]], ['oast', [8859]], ['Ocirc', [212]], ['ocirc', [244]], ['ocir', [8858]], ['Ocy', [1054]], ['ocy', [1086]], ['odash', [8861]], ['Odblac', [336]], ['odblac', [337]], ['odiv', [10808]], ['odot', [8857]], ['odsold', [10684]], ['OElig', [338]], ['oelig', [339]], ['ofcir', [10687]], ['Ofr', [120082]], ['ofr', [120108]], ['ogon', [731]], ['Ograve', [210]], ['ograve', [242]], ['ogt', [10689]], ['ohbar', [10677]], ['ohm', [937]], ['oint', [8750]], ['olarr', [8634]], ['olcir', [10686]], ['olcross', [10683]], ['oline', [8254]], ['olt', [10688]], ['Omacr', [332]], ['omacr', [333]], ['Omega', [937]], ['omega', [969]], ['Omicron', [927]], ['omicron', [959]], ['omid', [10678]], ['ominus', [8854]], ['Oopf', [120134]], ['oopf', [120160]], ['opar', [10679]], ['OpenCurlyDoubleQuote', [8220]], ['OpenCurlyQuote', [8216]], ['operp', [10681]], ['oplus', [8853]], ['orarr', [8635]], ['Or', [10836]], ['or', [8744]], ['ord', [10845]], ['order', [8500]], ['orderof', [8500]], ['ordf', [170]], ['ordm', [186]], ['origof', [8886]], ['oror', [10838]], ['orslope', [10839]], ['orv', [10843]], ['oS', [9416]], ['Oscr', [119978]], ['oscr', [8500]], ['Oslash', [216]], ['oslash', [248]], ['osol', [8856]], ['Otilde', [213]], ['otilde', [245]], ['otimesas', [10806]], ['Otimes', [10807]], ['otimes', [8855]], ['Ouml', [214]], ['ouml', [246]], ['ovbar', [9021]], ['OverBar', [8254]], ['OverBrace', [9182]], ['OverBracket', [9140]], ['OverParenthesis', [9180]], ['para', [182]], ['parallel', [8741]], ['par', [8741]], ['parsim', [10995]], ['parsl', [11005]], ['part', [8706]], ['PartialD', [8706]], ['Pcy', [1055]], ['pcy', [1087]], ['percnt', [37]], ['period', [46]], ['permil', [8240]], ['perp', [8869]], ['pertenk', [8241]], ['Pfr', [120083]], ['pfr', [120109]], ['Phi', [934]], ['phi', [966]], ['phiv', [981]], ['phmmat', [8499]], ['phone', [9742]], ['Pi', [928]], ['pi', [960]], ['pitchfork', [8916]], ['piv', [982]], ['planck', [8463]], ['planckh', [8462]], ['plankv', [8463]], ['plusacir', [10787]], ['plusb', [8862]], ['pluscir', [10786]], ['plus', [43]], ['plusdo', [8724]], ['plusdu', [10789]], ['pluse', [10866]], ['PlusMinus', [177]], ['plusmn', [177]], ['plussim', [10790]], ['plustwo', [10791]], ['pm', [177]], ['Poincareplane', [8460]], ['pointint', [10773]], ['popf', [120161]], ['Popf', [8473]], ['pound', [163]], ['prap', [10935]], ['Pr', [10939]], ['pr', [8826]], ['prcue', [8828]], ['precapprox', [10935]], ['prec', [8826]], ['preccurlyeq', [8828]], ['Precedes', [8826]], ['PrecedesEqual', [10927]], ['PrecedesSlantEqual', [8828]], ['PrecedesTilde', [8830]], ['preceq', [10927]], ['precnapprox', [10937]], ['precneqq', [10933]], ['precnsim', [8936]], ['pre', [10927]], ['prE', [10931]], ['precsim', [8830]], ['prime', [8242]], ['Prime', [8243]], ['primes', [8473]], ['prnap', [10937]], ['prnE', [10933]], ['prnsim', [8936]], ['prod', [8719]], ['Product', [8719]], ['profalar', [9006]], ['profline', [8978]], ['profsurf', [8979]], ['prop', [8733]], ['Proportional', [8733]], ['Proportion', [8759]], ['propto', [8733]], ['prsim', [8830]], ['prurel', [8880]], ['Pscr', [119979]], ['pscr', [120005]], ['Psi', [936]], ['psi', [968]], ['puncsp', [8200]], ['Qfr', [120084]], ['qfr', [120110]], ['qint', [10764]], ['qopf', [120162]], ['Qopf', [8474]], ['qprime', [8279]], ['Qscr', [119980]], ['qscr', [120006]], ['quaternions', [8461]], ['quatint', [10774]], ['quest', [63]], ['questeq', [8799]], ['quot', [34]], ['QUOT', [34]], ['rAarr', [8667]], ['race', [8765, 817]], ['Racute', [340]], ['racute', [341]], ['radic', [8730]], ['raemptyv', [10675]], ['rang', [10217]], ['Rang', [10219]], ['rangd', [10642]], ['range', [10661]], ['rangle', [10217]], ['raquo', [187]], ['rarrap', [10613]], ['rarrb', [8677]], ['rarrbfs', [10528]], ['rarrc', [10547]], ['rarr', [8594]], ['Rarr', [8608]], ['rArr', [8658]], ['rarrfs', [10526]], ['rarrhk', [8618]], ['rarrlp', [8620]], ['rarrpl', [10565]], ['rarrsim', [10612]], ['Rarrtl', [10518]], ['rarrtl', [8611]], ['rarrw', [8605]], ['ratail', [10522]], ['rAtail', [10524]], ['ratio', [8758]], ['rationals', [8474]], ['rbarr', [10509]], ['rBarr', [10511]], ['RBarr', [10512]], ['rbbrk', [10099]], ['rbrace', [125]], ['rbrack', [93]], ['rbrke', [10636]], ['rbrksld', [10638]], ['rbrkslu', [10640]], ['Rcaron', [344]], ['rcaron', [345]], ['Rcedil', [342]], ['rcedil', [343]], ['rceil', [8969]], ['rcub', [125]], ['Rcy', [1056]], ['rcy', [1088]], ['rdca', [10551]], ['rdldhar', [10601]], ['rdquo', [8221]], ['rdquor', [8221]], ['rdsh', [8627]], ['real', [8476]], ['realine', [8475]], ['realpart', [8476]], ['reals', [8477]], ['Re', [8476]], ['rect', [9645]], ['reg', [174]], ['REG', [174]], ['ReverseElement', [8715]], ['ReverseEquilibrium', [8651]], ['ReverseUpEquilibrium', [10607]], ['rfisht', [10621]], ['rfloor', [8971]], ['rfr', [120111]], ['Rfr', [8476]], ['rHar', [10596]], ['rhard', [8641]], ['rharu', [8640]], ['rharul', [10604]], ['Rho', [929]], ['rho', [961]], ['rhov', [1009]], ['RightAngleBracket', [10217]], ['RightArrowBar', [8677]], ['rightarrow', [8594]], ['RightArrow', [8594]], ['Rightarrow', [8658]], ['RightArrowLeftArrow', [8644]], ['rightarrowtail', [8611]], ['RightCeiling', [8969]], ['RightDoubleBracket', [10215]], ['RightDownTeeVector', [10589]], ['RightDownVectorBar', [10581]], ['RightDownVector', [8642]], ['RightFloor', [8971]], ['rightharpoondown', [8641]], ['rightharpoonup', [8640]], ['rightleftarrows', [8644]], ['rightleftharpoons', [8652]], ['rightrightarrows', [8649]], ['rightsquigarrow', [8605]], ['RightTeeArrow', [8614]], ['RightTee', [8866]], ['RightTeeVector', [10587]], ['rightthreetimes', [8908]], ['RightTriangleBar', [10704]], ['RightTriangle', [8883]], ['RightTriangleEqual', [8885]], ['RightUpDownVector', [10575]], ['RightUpTeeVector', [10588]], ['RightUpVectorBar', [10580]], ['RightUpVector', [8638]], ['RightVectorBar', [10579]], ['RightVector', [8640]], ['ring', [730]], ['risingdotseq', [8787]], ['rlarr', [8644]], ['rlhar', [8652]], ['rlm', [8207]], ['rmoustache', [9137]], ['rmoust', [9137]], ['rnmid', [10990]], ['roang', [10221]], ['roarr', [8702]], ['robrk', [10215]], ['ropar', [10630]], ['ropf', [120163]], ['Ropf', [8477]], ['roplus', [10798]], ['rotimes', [10805]], ['RoundImplies', [10608]], ['rpar', [41]], ['rpargt', [10644]], ['rppolint', [10770]], ['rrarr', [8649]], ['Rrightarrow', [8667]], ['rsaquo', [8250]], ['rscr', [120007]], ['Rscr', [8475]], ['rsh', [8625]], ['Rsh', [8625]], ['rsqb', [93]], ['rsquo', [8217]], ['rsquor', [8217]], ['rthree', [8908]], ['rtimes', [8906]], ['rtri', [9657]], ['rtrie', [8885]], ['rtrif', [9656]], ['rtriltri', [10702]], ['RuleDelayed', [10740]], ['ruluhar', [10600]], ['rx', [8478]], ['Sacute', [346]], ['sacute', [347]], ['sbquo', [8218]], ['scap', [10936]], ['Scaron', [352]], ['scaron', [353]], ['Sc', [10940]], ['sc', [8827]], ['sccue', [8829]], ['sce', [10928]], ['scE', [10932]], ['Scedil', [350]], ['scedil', [351]], ['Scirc', [348]], ['scirc', [349]], ['scnap', [10938]], ['scnE', [10934]], ['scnsim', [8937]], ['scpolint', [10771]], ['scsim', [8831]], ['Scy', [1057]], ['scy', [1089]], ['sdotb', [8865]], ['sdot', [8901]], ['sdote', [10854]], ['searhk', [10533]], ['searr', [8600]], ['seArr', [8664]], ['searrow', [8600]], ['sect', [167]], ['semi', [59]], ['seswar', [10537]], ['setminus', [8726]], ['setmn', [8726]], ['sext', [10038]], ['Sfr', [120086]], ['sfr', [120112]], ['sfrown', [8994]], ['sharp', [9839]], ['SHCHcy', [1065]], ['shchcy', [1097]], ['SHcy', [1064]], ['shcy', [1096]], ['ShortDownArrow', [8595]], ['ShortLeftArrow', [8592]], ['shortmid', [8739]], ['shortparallel', [8741]], ['ShortRightArrow', [8594]], ['ShortUpArrow', [8593]], ['shy', [173]], ['Sigma', [931]], ['sigma', [963]], ['sigmaf', [962]], ['sigmav', [962]], ['sim', [8764]], ['simdot', [10858]], ['sime', [8771]], ['simeq', [8771]], ['simg', [10910]], ['simgE', [10912]], ['siml', [10909]], ['simlE', [10911]], ['simne', [8774]], ['simplus', [10788]], ['simrarr', [10610]], ['slarr', [8592]], ['SmallCircle', [8728]], ['smallsetminus', [8726]], ['smashp', [10803]], ['smeparsl', [10724]], ['smid', [8739]], ['smile', [8995]], ['smt', [10922]], ['smte', [10924]], ['smtes', [10924, 65024]], ['SOFTcy', [1068]], ['softcy', [1100]], ['solbar', [9023]], ['solb', [10692]], ['sol', [47]], ['Sopf', [120138]], ['sopf', [120164]], ['spades', [9824]], ['spadesuit', [9824]], ['spar', [8741]], ['sqcap', [8851]], ['sqcaps', [8851, 65024]], ['sqcup', [8852]], ['sqcups', [8852, 65024]], ['Sqrt', [8730]], ['sqsub', [8847]], ['sqsube', [8849]], ['sqsubset', [8847]], ['sqsubseteq', [8849]], ['sqsup', [8848]], ['sqsupe', [8850]], ['sqsupset', [8848]], ['sqsupseteq', [8850]], ['square', [9633]], ['Square', [9633]], ['SquareIntersection', [8851]], ['SquareSubset', [8847]], ['SquareSubsetEqual', [8849]], ['SquareSuperset', [8848]], ['SquareSupersetEqual', [8850]], ['SquareUnion', [8852]], ['squarf', [9642]], ['squ', [9633]], ['squf', [9642]], ['srarr', [8594]], ['Sscr', [119982]], ['sscr', [120008]], ['ssetmn', [8726]], ['ssmile', [8995]], ['sstarf', [8902]], ['Star', [8902]], ['star', [9734]], ['starf', [9733]], ['straightepsilon', [1013]], ['straightphi', [981]], ['strns', [175]], ['sub', [8834]], ['Sub', [8912]], ['subdot', [10941]], ['subE', [10949]], ['sube', [8838]], ['subedot', [10947]], ['submult', [10945]], ['subnE', [10955]], ['subne', [8842]], ['subplus', [10943]], ['subrarr', [10617]], ['subset', [8834]], ['Subset', [8912]], ['subseteq', [8838]], ['subseteqq', [10949]], ['SubsetEqual', [8838]], ['subsetneq', [8842]], ['subsetneqq', [10955]], ['subsim', [10951]], ['subsub', [10965]], ['subsup', [10963]], ['succapprox', [10936]], ['succ', [8827]], ['succcurlyeq', [8829]], ['Succeeds', [8827]], ['SucceedsEqual', [10928]], ['SucceedsSlantEqual', [8829]], ['SucceedsTilde', [8831]], ['succeq', [10928]], ['succnapprox', [10938]], ['succneqq', [10934]], ['succnsim', [8937]], ['succsim', [8831]], ['SuchThat', [8715]], ['sum', [8721]], ['Sum', [8721]], ['sung', [9834]], ['sup1', [185]], ['sup2', [178]], ['sup3', [179]], ['sup', [8835]], ['Sup', [8913]], ['supdot', [10942]], ['supdsub', [10968]], ['supE', [10950]], ['supe', [8839]], ['supedot', [10948]], ['Superset', [8835]], ['SupersetEqual', [8839]], ['suphsol', [10185]], ['suphsub', [10967]], ['suplarr', [10619]], ['supmult', [10946]], ['supnE', [10956]], ['supne', [8843]], ['supplus', [10944]], ['supset', [8835]], ['Supset', [8913]], ['supseteq', [8839]], ['supseteqq', [10950]], ['supsetneq', [8843]], ['supsetneqq', [10956]], ['supsim', [10952]], ['supsub', [10964]], ['supsup', [10966]], ['swarhk', [10534]], ['swarr', [8601]], ['swArr', [8665]], ['swarrow', [8601]], ['swnwar', [10538]], ['szlig', [223]], ['Tab', [9]], ['target', [8982]], ['Tau', [932]], ['tau', [964]], ['tbrk', [9140]], ['Tcaron', [356]], ['tcaron', [357]], ['Tcedil', [354]], ['tcedil', [355]], ['Tcy', [1058]], ['tcy', [1090]], ['tdot', [8411]], ['telrec', [8981]], ['Tfr', [120087]], ['tfr', [120113]], ['there4', [8756]], ['therefore', [8756]], ['Therefore', [8756]], ['Theta', [920]], ['theta', [952]], ['thetasym', [977]], ['thetav', [977]], ['thickapprox', [8776]], ['thicksim', [8764]], ['ThickSpace', [8287, 8202]], ['ThinSpace', [8201]], ['thinsp', [8201]], ['thkap', [8776]], ['thksim', [8764]], ['THORN', [222]], ['thorn', [254]], ['tilde', [732]], ['Tilde', [8764]], ['TildeEqual', [8771]], ['TildeFullEqual', [8773]], ['TildeTilde', [8776]], ['timesbar', [10801]], ['timesb', [8864]], ['times', [215]], ['timesd', [10800]], ['tint', [8749]], ['toea', [10536]], ['topbot', [9014]], ['topcir', [10993]], ['top', [8868]], ['Topf', [120139]], ['topf', [120165]], ['topfork', [10970]], ['tosa', [10537]], ['tprime', [8244]], ['trade', [8482]], ['TRADE', [8482]], ['triangle', [9653]], ['triangledown', [9663]], ['triangleleft', [9667]], ['trianglelefteq', [8884]], ['triangleq', [8796]], ['triangleright', [9657]], ['trianglerighteq', [8885]], ['tridot', [9708]], ['trie', [8796]], ['triminus', [10810]], ['TripleDot', [8411]], ['triplus', [10809]], ['trisb', [10701]], ['tritime', [10811]], ['trpezium', [9186]], ['Tscr', [119983]], ['tscr', [120009]], ['TScy', [1062]], ['tscy', [1094]], ['TSHcy', [1035]], ['tshcy', [1115]], ['Tstrok', [358]], ['tstrok', [359]], ['twixt', [8812]], ['twoheadleftarrow', [8606]], ['twoheadrightarrow', [8608]], ['Uacute', [218]], ['uacute', [250]], ['uarr', [8593]], ['Uarr', [8607]], ['uArr', [8657]], ['Uarrocir', [10569]], ['Ubrcy', [1038]], ['ubrcy', [1118]], ['Ubreve', [364]], ['ubreve', [365]], ['Ucirc', [219]], ['ucirc', [251]], ['Ucy', [1059]], ['ucy', [1091]], ['udarr', [8645]], ['Udblac', [368]], ['udblac', [369]], ['udhar', [10606]], ['ufisht', [10622]], ['Ufr', [120088]], ['ufr', [120114]], ['Ugrave', [217]], ['ugrave', [249]], ['uHar', [10595]], ['uharl', [8639]], ['uharr', [8638]], ['uhblk', [9600]], ['ulcorn', [8988]], ['ulcorner', [8988]], ['ulcrop', [8975]], ['ultri', [9720]], ['Umacr', [362]], ['umacr', [363]], ['uml', [168]], ['UnderBar', [95]], ['UnderBrace', [9183]], ['UnderBracket', [9141]], ['UnderParenthesis', [9181]], ['Union', [8899]], ['UnionPlus', [8846]], ['Uogon', [370]], ['uogon', [371]], ['Uopf', [120140]], ['uopf', [120166]], ['UpArrowBar', [10514]], ['uparrow', [8593]], ['UpArrow', [8593]], ['Uparrow', [8657]], ['UpArrowDownArrow', [8645]], ['updownarrow', [8597]], ['UpDownArrow', [8597]], ['Updownarrow', [8661]], ['UpEquilibrium', [10606]], ['upharpoonleft', [8639]], ['upharpoonright', [8638]], ['uplus', [8846]], ['UpperLeftArrow', [8598]], ['UpperRightArrow', [8599]], ['upsi', [965]], ['Upsi', [978]], ['upsih', [978]], ['Upsilon', [933]], ['upsilon', [965]], ['UpTeeArrow', [8613]], ['UpTee', [8869]], ['upuparrows', [8648]], ['urcorn', [8989]], ['urcorner', [8989]], ['urcrop', [8974]], ['Uring', [366]], ['uring', [367]], ['urtri', [9721]], ['Uscr', [119984]], ['uscr', [120010]], ['utdot', [8944]], ['Utilde', [360]], ['utilde', [361]], ['utri', [9653]], ['utrif', [9652]], ['uuarr', [8648]], ['Uuml', [220]], ['uuml', [252]], ['uwangle', [10663]], ['vangrt', [10652]], ['varepsilon', [1013]], ['varkappa', [1008]], ['varnothing', [8709]], ['varphi', [981]], ['varpi', [982]], ['varpropto', [8733]], ['varr', [8597]], ['vArr', [8661]], ['varrho', [1009]], ['varsigma', [962]], ['varsubsetneq', [8842, 65024]], ['varsubsetneqq', [10955, 65024]], ['varsupsetneq', [8843, 65024]], ['varsupsetneqq', [10956, 65024]], ['vartheta', [977]], ['vartriangleleft', [8882]], ['vartriangleright', [8883]], ['vBar', [10984]], ['Vbar', [10987]], ['vBarv', [10985]], ['Vcy', [1042]], ['vcy', [1074]], ['vdash', [8866]], ['vDash', [8872]], ['Vdash', [8873]], ['VDash', [8875]], ['Vdashl', [10982]], ['veebar', [8891]], ['vee', [8744]], ['Vee', [8897]], ['veeeq', [8794]], ['vellip', [8942]], ['verbar', [124]], ['Verbar', [8214]], ['vert', [124]], ['Vert', [8214]], ['VerticalBar', [8739]], ['VerticalLine', [124]], ['VerticalSeparator', [10072]], ['VerticalTilde', [8768]], ['VeryThinSpace', [8202]], ['Vfr', [120089]], ['vfr', [120115]], ['vltri', [8882]], ['vnsub', [8834, 8402]], ['vnsup', [8835, 8402]], ['Vopf', [120141]], ['vopf', [120167]], ['vprop', [8733]], ['vrtri', [8883]], ['Vscr', [119985]], ['vscr', [120011]], ['vsubnE', [10955, 65024]], ['vsubne', [8842, 65024]], ['vsupnE', [10956, 65024]], ['vsupne', [8843, 65024]], ['Vvdash', [8874]], ['vzigzag', [10650]], ['Wcirc', [372]], ['wcirc', [373]], ['wedbar', [10847]], ['wedge', [8743]], ['Wedge', [8896]], ['wedgeq', [8793]], ['weierp', [8472]], ['Wfr', [120090]], ['wfr', [120116]], ['Wopf', [120142]], ['wopf', [120168]], ['wp', [8472]], ['wr', [8768]], ['wreath', [8768]], ['Wscr', [119986]], ['wscr', [120012]], ['xcap', [8898]], ['xcirc', [9711]], ['xcup', [8899]], ['xdtri', [9661]], ['Xfr', [120091]], ['xfr', [120117]], ['xharr', [10231]], ['xhArr', [10234]], ['Xi', [926]], ['xi', [958]], ['xlarr', [10229]], ['xlArr', [10232]], ['xmap', [10236]], ['xnis', [8955]], ['xodot', [10752]], ['Xopf', [120143]], ['xopf', [120169]], ['xoplus', [10753]], ['xotime', [10754]], ['xrarr', [10230]], ['xrArr', [10233]], ['Xscr', [119987]], ['xscr', [120013]], ['xsqcup', [10758]], ['xuplus', [10756]], ['xutri', [9651]], ['xvee', [8897]], ['xwedge', [8896]], ['Yacute', [221]], ['yacute', [253]], ['YAcy', [1071]], ['yacy', [1103]], ['Ycirc', [374]], ['ycirc', [375]], ['Ycy', [1067]], ['ycy', [1099]], ['yen', [165]], ['Yfr', [120092]], ['yfr', [120118]], ['YIcy', [1031]], ['yicy', [1111]], ['Yopf', [120144]], ['yopf', [120170]], ['Yscr', [119988]], ['yscr', [120014]], ['YUcy', [1070]], ['yucy', [1102]], ['yuml', [255]], ['Yuml', [376]], ['Zacute', [377]], ['zacute', [378]], ['Zcaron', [381]], ['zcaron', [382]], ['Zcy', [1047]], ['zcy', [1079]], ['Zdot', [379]], ['zdot', [380]], ['zeetrf', [8488]], ['ZeroWidthSpace', [8203]], ['Zeta', [918]], ['zeta', [950]], ['zfr', [120119]], ['Zfr', [8488]], ['ZHcy', [1046]], ['zhcy', [1078]], ['zigrarr', [8669]], ['zopf', [120171]], ['Zopf', [8484]], ['Zscr', [119989]], ['zscr', [120015]], ['zwj', [8205]], ['zwnj', [8204]]];
	
	var alphaIndex = {};
	var charIndex = {};
	
	createIndexes(alphaIndex, charIndex);
	
	/**
	 * @constructor
	 */
	function Html5Entities() {}
	
	/**
	 * @param {String} str
	 * @returns {String}
	 */
	Html5Entities.prototype.decode = function(str) {
	    if (str.length === 0) {
	        return '';
	    }
	    return str.replace(/&(#?[\w\d]+);?/g, function(s, entity) {
	        var chr;
	        if (entity.charAt(0) === "#") {
	            var code = entity.charAt(1) === 'x' ?
	                parseInt(entity.substr(2).toLowerCase(), 16) :
	                parseInt(entity.substr(1));
	
	            if (!(isNaN(code) || code < -32768 || code > 65535)) {
	                chr = String.fromCharCode(code);
	            }
	        } else {
	            chr = alphaIndex[entity];
	        }
	        return chr || s;
	    });
	};
	
	/**
	 * @param {String} str
	 * @returns {String}
	 */
	 Html5Entities.decode = function(str) {
	    return new Html5Entities().decode(str);
	 };
	
	/**
	 * @param {String} str
	 * @returns {String}
	 */
	Html5Entities.prototype.encode = function(str) {
	    var strLength = str.length;
	    if (strLength === 0) {
	        return '';
	    }
	    var result = '';
	    var i = 0;
	    while (i < strLength) {
	        var charInfo = charIndex[str.charCodeAt(i)];
	        if (charInfo) {
	            var alpha = charInfo[str.charCodeAt(i + 1)];
	            if (alpha) {
	                i++;
	            } else {
	                alpha = charInfo[''];
	            }
	            if (alpha) {
	                result += "&" + alpha + ";";
	                i++;
	                continue;
	            }
	        }
	        result += str.charAt(i);
	        i++;
	    }
	    return result;
	};
	
	/**
	 * @param {String} str
	 * @returns {String}
	 */
	 Html5Entities.encode = function(str) {
	    return new Html5Entities().encode(str);
	 };
	
	/**
	 * @param {String} str
	 * @returns {String}
	 */
	Html5Entities.prototype.encodeNonUTF = function(str) {
	    var strLength = str.length;
	    if (strLength === 0) {
	        return '';
	    }
	    var result = '';
	    var i = 0;
	    while (i < strLength) {
	        var c = str.charCodeAt(i);
	        var charInfo = charIndex[c];
	        if (charInfo) {
	            var alpha = charInfo[str.charCodeAt(i + 1)];
	            if (alpha) {
	                i++;
	            } else {
	                alpha = charInfo[''];
	            }
	            if (alpha) {
	                result += "&" + alpha + ";";
	                i++;
	                continue;
	            }
	        }
	        if (c < 32 || c > 126) {
	            result += '&#' + c + ';';
	        } else {
	            result += str.charAt(i);
	        }
	        i++;
	    }
	    return result;
	};
	
	/**
	 * @param {String} str
	 * @returns {String}
	 */
	 Html5Entities.encodeNonUTF = function(str) {
	    return new Html5Entities().encodeNonUTF(str);
	 };
	
	/**
	 * @param {String} str
	 * @returns {String}
	 */
	Html5Entities.prototype.encodeNonASCII = function(str) {
	    var strLength = str.length;
	    if (strLength === 0) {
	        return '';
	    }
	    var result = '';
	    var i = 0;
	    while (i < strLength) {
	        var c = str.charCodeAt(i);
	        if (c <= 255) {
	            result += str[i++];
	            continue;
	        }
	        result += '&#' + c + ';';
	        i++
	    }
	    return result;
	};
	
	/**
	 * @param {String} str
	 * @returns {String}
	 */
	 Html5Entities.encodeNonASCII = function(str) {
	    return new Html5Entities().encodeNonASCII(str);
	 };
	
	/**
	 * @param {Object} alphaIndex Passed by reference.
	 * @param {Object} charIndex Passed by reference.
	 */
	function createIndexes(alphaIndex, charIndex) {
	    var i = ENTITIES.length;
	    var _results = [];
	    while (i--) {
	        var e = ENTITIES[i];
	        var alpha = e[0];
	        var chars = e[1];
	        var chr = chars[0];
	        var addChar = (chr < 32 || chr > 126) || chr === 62 || chr === 60 || chr === 38 || chr === 34 || chr === 39;
	        var charInfo;
	        if (addChar) {
	            charInfo = charIndex[chr] = charIndex[chr] || {};
	        }
	        if (chars[1]) {
	            var chr2 = chars[1];
	            alphaIndex[alpha] = String.fromCharCode(chr) + String.fromCharCode(chr2);
	            _results.push(addChar && (charInfo[chr2] = alpha));
	        } else {
	            alphaIndex[alpha] = String.fromCharCode(chr);
	            _results.push(addChar && (charInfo[''] = alpha));
	        }
	    }
	}
	
	module.exports = Html5Entities;


/***/ },
/* 186 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Buffer, global) {/*!
	 * The buffer module from node.js, for the browser.
	 *
	 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
	 * @license  MIT
	 */
	/* eslint-disable no-proto */
	
	'use strict'
	
	var base64 = __webpack_require__(505)
	var ieee754 = __webpack_require__(506)
	var isArray = __webpack_require__(507)
	
	exports.Buffer = Buffer
	exports.SlowBuffer = SlowBuffer
	exports.INSPECT_MAX_BYTES = 50
	Buffer.poolSize = 8192 // not used by this implementation
	
	var rootParent = {}
	
	/**
	 * If `Buffer.TYPED_ARRAY_SUPPORT`:
	 *   === true    Use Uint8Array implementation (fastest)
	 *   === false   Use Object implementation (most compatible, even IE6)
	 *
	 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
	 * Opera 11.6+, iOS 4.2+.
	 *
	 * Due to various browser bugs, sometimes the Object implementation will be used even
	 * when the browser supports typed arrays.
	 *
	 * Note:
	 *
	 *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,
	 *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
	 *
	 *   - Safari 5-7 lacks support for changing the `Object.prototype.constructor` property
	 *     on objects.
	 *
	 *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
	 *
	 *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
	 *     incorrect length in some situations.
	
	 * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they
	 * get the Object implementation, which is slower but behaves correctly.
	 */
	Buffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined
	  ? global.TYPED_ARRAY_SUPPORT
	  : typedArraySupport()
	
	function typedArraySupport () {
	  function Bar () {}
	  try {
	    var arr = new Uint8Array(1)
	    arr.foo = function () { return 42 }
	    arr.constructor = Bar
	    return arr.foo() === 42 && // typed array instances can be augmented
	        arr.constructor === Bar && // constructor can be set
	        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`
	        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`
	  } catch (e) {
	    return false
	  }
	}
	
	function kMaxLength () {
	  return Buffer.TYPED_ARRAY_SUPPORT
	    ? 0x7fffffff
	    : 0x3fffffff
	}
	
	/**
	 * Class: Buffer
	 * =============
	 *
	 * The Buffer constructor returns instances of `Uint8Array` that are augmented
	 * with function properties for all the node `Buffer` API functions. We use
	 * `Uint8Array` so that square bracket notation works as expected -- it returns
	 * a single octet.
	 *
	 * By augmenting the instances, we can avoid modifying the `Uint8Array`
	 * prototype.
	 */
	function Buffer (arg) {
	  if (!(this instanceof Buffer)) {
	    // Avoid going through an ArgumentsAdaptorTrampoline in the common case.
	    if (arguments.length > 1) return new Buffer(arg, arguments[1])
	    return new Buffer(arg)
	  }
	
	  if (!Buffer.TYPED_ARRAY_SUPPORT) {
	    this.length = 0
	    this.parent = undefined
	  }
	
	  // Common case.
	  if (typeof arg === 'number') {
	    return fromNumber(this, arg)
	  }
	
	  // Slightly less common case.
	  if (typeof arg === 'string') {
	    return fromString(this, arg, arguments.length > 1 ? arguments[1] : 'utf8')
	  }
	
	  // Unusual.
	  return fromObject(this, arg)
	}
	
	function fromNumber (that, length) {
	  that = allocate(that, length < 0 ? 0 : checked(length) | 0)
	  if (!Buffer.TYPED_ARRAY_SUPPORT) {
	    for (var i = 0; i < length; i++) {
	      that[i] = 0
	    }
	  }
	  return that
	}
	
	function fromString (that, string, encoding) {
	  if (typeof encoding !== 'string' || encoding === '') encoding = 'utf8'
	
	  // Assumption: byteLength() return value is always < kMaxLength.
	  var length = byteLength(string, encoding) | 0
	  that = allocate(that, length)
	
	  that.write(string, encoding)
	  return that
	}
	
	function fromObject (that, object) {
	  if (Buffer.isBuffer(object)) return fromBuffer(that, object)
	
	  if (isArray(object)) return fromArray(that, object)
	
	  if (object == null) {
	    throw new TypeError('must start with number, buffer, array or string')
	  }
	
	  if (typeof ArrayBuffer !== 'undefined') {
	    if (object.buffer instanceof ArrayBuffer) {
	      return fromTypedArray(that, object)
	    }
	    if (object instanceof ArrayBuffer) {
	      return fromArrayBuffer(that, object)
	    }
	  }
	
	  if (object.length) return fromArrayLike(that, object)
	
	  return fromJsonObject(that, object)
	}
	
	function fromBuffer (that, buffer) {
	  var length = checked(buffer.length) | 0
	  that = allocate(that, length)
	  buffer.copy(that, 0, 0, length)
	  return that
	}
	
	function fromArray (that, array) {
	  var length = checked(array.length) | 0
	  that = allocate(that, length)
	  for (var i = 0; i < length; i += 1) {
	    that[i] = array[i] & 255
	  }
	  return that
	}
	
	// Duplicate of fromArray() to keep fromArray() monomorphic.
	function fromTypedArray (that, array) {
	  var length = checked(array.length) | 0
	  that = allocate(that, length)
	  // Truncating the elements is probably not what people expect from typed
	  // arrays with BYTES_PER_ELEMENT > 1 but it's compatible with the behavior
	  // of the old Buffer constructor.
	  for (var i = 0; i < length; i += 1) {
	    that[i] = array[i] & 255
	  }
	  return that
	}
	
	function fromArrayBuffer (that, array) {
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    // Return an augmented `Uint8Array` instance, for best performance
	    array.byteLength
	    that = Buffer._augment(new Uint8Array(array))
	  } else {
	    // Fallback: Return an object instance of the Buffer class
	    that = fromTypedArray(that, new Uint8Array(array))
	  }
	  return that
	}
	
	function fromArrayLike (that, array) {
	  var length = checked(array.length) | 0
	  that = allocate(that, length)
	  for (var i = 0; i < length; i += 1) {
	    that[i] = array[i] & 255
	  }
	  return that
	}
	
	// Deserialize { type: 'Buffer', data: [1,2,3,...] } into a Buffer object.
	// Returns a zero-length buffer for inputs that don't conform to the spec.
	function fromJsonObject (that, object) {
	  var array
	  var length = 0
	
	  if (object.type === 'Buffer' && isArray(object.data)) {
	    array = object.data
	    length = checked(array.length) | 0
	  }
	  that = allocate(that, length)
	
	  for (var i = 0; i < length; i += 1) {
	    that[i] = array[i] & 255
	  }
	  return that
	}
	
	if (Buffer.TYPED_ARRAY_SUPPORT) {
	  Buffer.prototype.__proto__ = Uint8Array.prototype
	  Buffer.__proto__ = Uint8Array
	} else {
	  // pre-set for values that may exist in the future
	  Buffer.prototype.length = undefined
	  Buffer.prototype.parent = undefined
	}
	
	function allocate (that, length) {
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    // Return an augmented `Uint8Array` instance, for best performance
	    that = Buffer._augment(new Uint8Array(length))
	    that.__proto__ = Buffer.prototype
	  } else {
	    // Fallback: Return an object instance of the Buffer class
	    that.length = length
	    that._isBuffer = true
	  }
	
	  var fromPool = length !== 0 && length <= Buffer.poolSize >>> 1
	  if (fromPool) that.parent = rootParent
	
	  return that
	}
	
	function checked (length) {
	  // Note: cannot use `length < kMaxLength` here because that fails when
	  // length is NaN (which is otherwise coerced to zero.)
	  if (length >= kMaxLength()) {
	    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
	                         'size: 0x' + kMaxLength().toString(16) + ' bytes')
	  }
	  return length | 0
	}
	
	function SlowBuffer (subject, encoding) {
	  if (!(this instanceof SlowBuffer)) return new SlowBuffer(subject, encoding)
	
	  var buf = new Buffer(subject, encoding)
	  delete buf.parent
	  return buf
	}
	
	Buffer.isBuffer = function isBuffer (b) {
	  return !!(b != null && b._isBuffer)
	}
	
	Buffer.compare = function compare (a, b) {
	  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
	    throw new TypeError('Arguments must be Buffers')
	  }
	
	  if (a === b) return 0
	
	  var x = a.length
	  var y = b.length
	
	  var i = 0
	  var len = Math.min(x, y)
	  while (i < len) {
	    if (a[i] !== b[i]) break
	
	    ++i
	  }
	
	  if (i !== len) {
	    x = a[i]
	    y = b[i]
	  }
	
	  if (x < y) return -1
	  if (y < x) return 1
	  return 0
	}
	
	Buffer.isEncoding = function isEncoding (encoding) {
	  switch (String(encoding).toLowerCase()) {
	    case 'hex':
	    case 'utf8':
	    case 'utf-8':
	    case 'ascii':
	    case 'binary':
	    case 'base64':
	    case 'raw':
	    case 'ucs2':
	    case 'ucs-2':
	    case 'utf16le':
	    case 'utf-16le':
	      return true
	    default:
	      return false
	  }
	}
	
	Buffer.concat = function concat (list, length) {
	  if (!isArray(list)) throw new TypeError('list argument must be an Array of Buffers.')
	
	  if (list.length === 0) {
	    return new Buffer(0)
	  }
	
	  var i
	  if (length === undefined) {
	    length = 0
	    for (i = 0; i < list.length; i++) {
	      length += list[i].length
	    }
	  }
	
	  var buf = new Buffer(length)
	  var pos = 0
	  for (i = 0; i < list.length; i++) {
	    var item = list[i]
	    item.copy(buf, pos)
	    pos += item.length
	  }
	  return buf
	}
	
	function byteLength (string, encoding) {
	  if (typeof string !== 'string') string = '' + string
	
	  var len = string.length
	  if (len === 0) return 0
	
	  // Use a for loop to avoid recursion
	  var loweredCase = false
	  for (;;) {
	    switch (encoding) {
	      case 'ascii':
	      case 'binary':
	      // Deprecated
	      case 'raw':
	      case 'raws':
	        return len
	      case 'utf8':
	      case 'utf-8':
	        return utf8ToBytes(string).length
	      case 'ucs2':
	      case 'ucs-2':
	      case 'utf16le':
	      case 'utf-16le':
	        return len * 2
	      case 'hex':
	        return len >>> 1
	      case 'base64':
	        return base64ToBytes(string).length
	      default:
	        if (loweredCase) return utf8ToBytes(string).length // assume utf8
	        encoding = ('' + encoding).toLowerCase()
	        loweredCase = true
	    }
	  }
	}
	Buffer.byteLength = byteLength
	
	function slowToString (encoding, start, end) {
	  var loweredCase = false
	
	  start = start | 0
	  end = end === undefined || end === Infinity ? this.length : end | 0
	
	  if (!encoding) encoding = 'utf8'
	  if (start < 0) start = 0
	  if (end > this.length) end = this.length
	  if (end <= start) return ''
	
	  while (true) {
	    switch (encoding) {
	      case 'hex':
	        return hexSlice(this, start, end)
	
	      case 'utf8':
	      case 'utf-8':
	        return utf8Slice(this, start, end)
	
	      case 'ascii':
	        return asciiSlice(this, start, end)
	
	      case 'binary':
	        return binarySlice(this, start, end)
	
	      case 'base64':
	        return base64Slice(this, start, end)
	
	      case 'ucs2':
	      case 'ucs-2':
	      case 'utf16le':
	      case 'utf-16le':
	        return utf16leSlice(this, start, end)
	
	      default:
	        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
	        encoding = (encoding + '').toLowerCase()
	        loweredCase = true
	    }
	  }
	}
	
	Buffer.prototype.toString = function toString () {
	  var length = this.length | 0
	  if (length === 0) return ''
	  if (arguments.length === 0) return utf8Slice(this, 0, length)
	  return slowToString.apply(this, arguments)
	}
	
	Buffer.prototype.equals = function equals (b) {
	  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
	  if (this === b) return true
	  return Buffer.compare(this, b) === 0
	}
	
	Buffer.prototype.inspect = function inspect () {
	  var str = ''
	  var max = exports.INSPECT_MAX_BYTES
	  if (this.length > 0) {
	    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')
	    if (this.length > max) str += ' ... '
	  }
	  return '<Buffer ' + str + '>'
	}
	
	Buffer.prototype.compare = function compare (b) {
	  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
	  if (this === b) return 0
	  return Buffer.compare(this, b)
	}
	
	Buffer.prototype.indexOf = function indexOf (val, byteOffset) {
	  if (byteOffset > 0x7fffffff) byteOffset = 0x7fffffff
	  else if (byteOffset < -0x80000000) byteOffset = -0x80000000
	  byteOffset >>= 0
	
	  if (this.length === 0) return -1
	  if (byteOffset >= this.length) return -1
	
	  // Negative offsets start from the end of the buffer
	  if (byteOffset < 0) byteOffset = Math.max(this.length + byteOffset, 0)
	
	  if (typeof val === 'string') {
	    if (val.length === 0) return -1 // special case: looking for empty string always fails
	    return String.prototype.indexOf.call(this, val, byteOffset)
	  }
	  if (Buffer.isBuffer(val)) {
	    return arrayIndexOf(this, val, byteOffset)
	  }
	  if (typeof val === 'number') {
	    if (Buffer.TYPED_ARRAY_SUPPORT && Uint8Array.prototype.indexOf === 'function') {
	      return Uint8Array.prototype.indexOf.call(this, val, byteOffset)
	    }
	    return arrayIndexOf(this, [ val ], byteOffset)
	  }
	
	  function arrayIndexOf (arr, val, byteOffset) {
	    var foundIndex = -1
	    for (var i = 0; byteOffset + i < arr.length; i++) {
	      if (arr[byteOffset + i] === val[foundIndex === -1 ? 0 : i - foundIndex]) {
	        if (foundIndex === -1) foundIndex = i
	        if (i - foundIndex + 1 === val.length) return byteOffset + foundIndex
	      } else {
	        foundIndex = -1
	      }
	    }
	    return -1
	  }
	
	  throw new TypeError('val must be string, number or Buffer')
	}
	
	// `get` is deprecated
	Buffer.prototype.get = function get (offset) {
	  console.log('.get() is deprecated. Access using array indexes instead.')
	  return this.readUInt8(offset)
	}
	
	// `set` is deprecated
	Buffer.prototype.set = function set (v, offset) {
	  console.log('.set() is deprecated. Access using array indexes instead.')
	  return this.writeUInt8(v, offset)
	}
	
	function hexWrite (buf, string, offset, length) {
	  offset = Number(offset) || 0
	  var remaining = buf.length - offset
	  if (!length) {
	    length = remaining
	  } else {
	    length = Number(length)
	    if (length > remaining) {
	      length = remaining
	    }
	  }
	
	  // must be an even number of digits
	  var strLen = string.length
	  if (strLen % 2 !== 0) throw new Error('Invalid hex string')
	
	  if (length > strLen / 2) {
	    length = strLen / 2
	  }
	  for (var i = 0; i < length; i++) {
	    var parsed = parseInt(string.substr(i * 2, 2), 16)
	    if (isNaN(parsed)) throw new Error('Invalid hex string')
	    buf[offset + i] = parsed
	  }
	  return i
	}
	
	function utf8Write (buf, string, offset, length) {
	  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
	}
	
	function asciiWrite (buf, string, offset, length) {
	  return blitBuffer(asciiToBytes(string), buf, offset, length)
	}
	
	function binaryWrite (buf, string, offset, length) {
	  return asciiWrite(buf, string, offset, length)
	}
	
	function base64Write (buf, string, offset, length) {
	  return blitBuffer(base64ToBytes(string), buf, offset, length)
	}
	
	function ucs2Write (buf, string, offset, length) {
	  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
	}
	
	Buffer.prototype.write = function write (string, offset, length, encoding) {
	  // Buffer#write(string)
	  if (offset === undefined) {
	    encoding = 'utf8'
	    length = this.length
	    offset = 0
	  // Buffer#write(string, encoding)
	  } else if (length === undefined && typeof offset === 'string') {
	    encoding = offset
	    length = this.length
	    offset = 0
	  // Buffer#write(string, offset[, length][, encoding])
	  } else if (isFinite(offset)) {
	    offset = offset | 0
	    if (isFinite(length)) {
	      length = length | 0
	      if (encoding === undefined) encoding = 'utf8'
	    } else {
	      encoding = length
	      length = undefined
	    }
	  // legacy write(string, encoding, offset, length) - remove in v0.13
	  } else {
	    var swap = encoding
	    encoding = offset
	    offset = length | 0
	    length = swap
	  }
	
	  var remaining = this.length - offset
	  if (length === undefined || length > remaining) length = remaining
	
	  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
	    throw new RangeError('attempt to write outside buffer bounds')
	  }
	
	  if (!encoding) encoding = 'utf8'
	
	  var loweredCase = false
	  for (;;) {
	    switch (encoding) {
	      case 'hex':
	        return hexWrite(this, string, offset, length)
	
	      case 'utf8':
	      case 'utf-8':
	        return utf8Write(this, string, offset, length)
	
	      case 'ascii':
	        return asciiWrite(this, string, offset, length)
	
	      case 'binary':
	        return binaryWrite(this, string, offset, length)
	
	      case 'base64':
	        // Warning: maxLength not taken into account in base64Write
	        return base64Write(this, string, offset, length)
	
	      case 'ucs2':
	      case 'ucs-2':
	      case 'utf16le':
	      case 'utf-16le':
	        return ucs2Write(this, string, offset, length)
	
	      default:
	        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
	        encoding = ('' + encoding).toLowerCase()
	        loweredCase = true
	    }
	  }
	}
	
	Buffer.prototype.toJSON = function toJSON () {
	  return {
	    type: 'Buffer',
	    data: Array.prototype.slice.call(this._arr || this, 0)
	  }
	}
	
	function base64Slice (buf, start, end) {
	  if (start === 0 && end === buf.length) {
	    return base64.fromByteArray(buf)
	  } else {
	    return base64.fromByteArray(buf.slice(start, end))
	  }
	}
	
	function utf8Slice (buf, start, end) {
	  end = Math.min(buf.length, end)
	  var res = []
	
	  var i = start
	  while (i < end) {
	    var firstByte = buf[i]
	    var codePoint = null
	    var bytesPerSequence = (firstByte > 0xEF) ? 4
	      : (firstByte > 0xDF) ? 3
	      : (firstByte > 0xBF) ? 2
	      : 1
	
	    if (i + bytesPerSequence <= end) {
	      var secondByte, thirdByte, fourthByte, tempCodePoint
	
	      switch (bytesPerSequence) {
	        case 1:
	          if (firstByte < 0x80) {
	            codePoint = firstByte
	          }
	          break
	        case 2:
	          secondByte = buf[i + 1]
	          if ((secondByte & 0xC0) === 0x80) {
	            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
	            if (tempCodePoint > 0x7F) {
	              codePoint = tempCodePoint
	            }
	          }
	          break
	        case 3:
	          secondByte = buf[i + 1]
	          thirdByte = buf[i + 2]
	          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
	            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
	            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
	              codePoint = tempCodePoint
	            }
	          }
	          break
	        case 4:
	          secondByte = buf[i + 1]
	          thirdByte = buf[i + 2]
	          fourthByte = buf[i + 3]
	          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
	            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
	            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
	              codePoint = tempCodePoint
	            }
	          }
	      }
	    }
	
	    if (codePoint === null) {
	      // we did not generate a valid codePoint so insert a
	      // replacement char (U+FFFD) and advance only 1 byte
	      codePoint = 0xFFFD
	      bytesPerSequence = 1
	    } else if (codePoint > 0xFFFF) {
	      // encode to utf16 (surrogate pair dance)
	      codePoint -= 0x10000
	      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
	      codePoint = 0xDC00 | codePoint & 0x3FF
	    }
	
	    res.push(codePoint)
	    i += bytesPerSequence
	  }
	
	  return decodeCodePointsArray(res)
	}
	
	// Based on http://stackoverflow.com/a/22747272/680742, the browser with
	// the lowest limit is Chrome, with 0x10000 args.
	// We go 1 magnitude less, for safety
	var MAX_ARGUMENTS_LENGTH = 0x1000
	
	function decodeCodePointsArray (codePoints) {
	  var len = codePoints.length
	  if (len <= MAX_ARGUMENTS_LENGTH) {
	    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
	  }
	
	  // Decode in chunks to avoid "call stack size exceeded".
	  var res = ''
	  var i = 0
	  while (i < len) {
	    res += String.fromCharCode.apply(
	      String,
	      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
	    )
	  }
	  return res
	}
	
	function asciiSlice (buf, start, end) {
	  var ret = ''
	  end = Math.min(buf.length, end)
	
	  for (var i = start; i < end; i++) {
	    ret += String.fromCharCode(buf[i] & 0x7F)
	  }
	  return ret
	}
	
	function binarySlice (buf, start, end) {
	  var ret = ''
	  end = Math.min(buf.length, end)
	
	  for (var i = start; i < end; i++) {
	    ret += String.fromCharCode(buf[i])
	  }
	  return ret
	}
	
	function hexSlice (buf, start, end) {
	  var len = buf.length
	
	  if (!start || start < 0) start = 0
	  if (!end || end < 0 || end > len) end = len
	
	  var out = ''
	  for (var i = start; i < end; i++) {
	    out += toHex(buf[i])
	  }
	  return out
	}
	
	function utf16leSlice (buf, start, end) {
	  var bytes = buf.slice(start, end)
	  var res = ''
	  for (var i = 0; i < bytes.length; i += 2) {
	    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)
	  }
	  return res
	}
	
	Buffer.prototype.slice = function slice (start, end) {
	  var len = this.length
	  start = ~~start
	  end = end === undefined ? len : ~~end
	
	  if (start < 0) {
	    start += len
	    if (start < 0) start = 0
	  } else if (start > len) {
	    start = len
	  }
	
	  if (end < 0) {
	    end += len
	    if (end < 0) end = 0
	  } else if (end > len) {
	    end = len
	  }
	
	  if (end < start) end = start
	
	  var newBuf
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    newBuf = Buffer._augment(this.subarray(start, end))
	  } else {
	    var sliceLen = end - start
	    newBuf = new Buffer(sliceLen, undefined)
	    for (var i = 0; i < sliceLen; i++) {
	      newBuf[i] = this[i + start]
	    }
	  }
	
	  if (newBuf.length) newBuf.parent = this.parent || this
	
	  return newBuf
	}
	
	/*
	 * Need to make sure that buffer isn't trying to write out of bounds.
	 */
	function checkOffset (offset, ext, length) {
	  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
	  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
	}
	
	Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) checkOffset(offset, byteLength, this.length)
	
	  var val = this[offset]
	  var mul = 1
	  var i = 0
	  while (++i < byteLength && (mul *= 0x100)) {
	    val += this[offset + i] * mul
	  }
	
	  return val
	}
	
	Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) {
	    checkOffset(offset, byteLength, this.length)
	  }
	
	  var val = this[offset + --byteLength]
	  var mul = 1
	  while (byteLength > 0 && (mul *= 0x100)) {
	    val += this[offset + --byteLength] * mul
	  }
	
	  return val
	}
	
	Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 1, this.length)
	  return this[offset]
	}
	
	Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 2, this.length)
	  return this[offset] | (this[offset + 1] << 8)
	}
	
	Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 2, this.length)
	  return (this[offset] << 8) | this[offset + 1]
	}
	
	Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)
	
	  return ((this[offset]) |
	      (this[offset + 1] << 8) |
	      (this[offset + 2] << 16)) +
	      (this[offset + 3] * 0x1000000)
	}
	
	Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)
	
	  return (this[offset] * 0x1000000) +
	    ((this[offset + 1] << 16) |
	    (this[offset + 2] << 8) |
	    this[offset + 3])
	}
	
	Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) checkOffset(offset, byteLength, this.length)
	
	  var val = this[offset]
	  var mul = 1
	  var i = 0
	  while (++i < byteLength && (mul *= 0x100)) {
	    val += this[offset + i] * mul
	  }
	  mul *= 0x80
	
	  if (val >= mul) val -= Math.pow(2, 8 * byteLength)
	
	  return val
	}
	
	Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) checkOffset(offset, byteLength, this.length)
	
	  var i = byteLength
	  var mul = 1
	  var val = this[offset + --i]
	  while (i > 0 && (mul *= 0x100)) {
	    val += this[offset + --i] * mul
	  }
	  mul *= 0x80
	
	  if (val >= mul) val -= Math.pow(2, 8 * byteLength)
	
	  return val
	}
	
	Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 1, this.length)
	  if (!(this[offset] & 0x80)) return (this[offset])
	  return ((0xff - this[offset] + 1) * -1)
	}
	
	Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 2, this.length)
	  var val = this[offset] | (this[offset + 1] << 8)
	  return (val & 0x8000) ? val | 0xFFFF0000 : val
	}
	
	Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 2, this.length)
	  var val = this[offset + 1] | (this[offset] << 8)
	  return (val & 0x8000) ? val | 0xFFFF0000 : val
	}
	
	Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)
	
	  return (this[offset]) |
	    (this[offset + 1] << 8) |
	    (this[offset + 2] << 16) |
	    (this[offset + 3] << 24)
	}
	
	Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)
	
	  return (this[offset] << 24) |
	    (this[offset + 1] << 16) |
	    (this[offset + 2] << 8) |
	    (this[offset + 3])
	}
	
	Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)
	  return ieee754.read(this, offset, true, 23, 4)
	}
	
	Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)
	  return ieee754.read(this, offset, false, 23, 4)
	}
	
	Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 8, this.length)
	  return ieee754.read(this, offset, true, 52, 8)
	}
	
	Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 8, this.length)
	  return ieee754.read(this, offset, false, 52, 8)
	}
	
	function checkInt (buf, value, offset, ext, max, min) {
	  if (!Buffer.isBuffer(buf)) throw new TypeError('buffer must be a Buffer instance')
	  if (value > max || value < min) throw new RangeError('value is out of bounds')
	  if (offset + ext > buf.length) throw new RangeError('index out of range')
	}
	
	Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
	  value = +value
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)
	
	  var mul = 1
	  var i = 0
	  this[offset] = value & 0xFF
	  while (++i < byteLength && (mul *= 0x100)) {
	    this[offset + i] = (value / mul) & 0xFF
	  }
	
	  return offset + byteLength
	}
	
	Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
	  value = +value
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)
	
	  var i = byteLength - 1
	  var mul = 1
	  this[offset + i] = value & 0xFF
	  while (--i >= 0 && (mul *= 0x100)) {
	    this[offset + i] = (value / mul) & 0xFF
	  }
	
	  return offset + byteLength
	}
	
	Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
	  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
	  this[offset] = (value & 0xff)
	  return offset + 1
	}
	
	function objectWriteUInt16 (buf, value, offset, littleEndian) {
	  if (value < 0) value = 0xffff + value + 1
	  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; i++) {
	    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>
	      (littleEndian ? i : 1 - i) * 8
	  }
	}
	
	Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value & 0xff)
	    this[offset + 1] = (value >>> 8)
	  } else {
	    objectWriteUInt16(this, value, offset, true)
	  }
	  return offset + 2
	}
	
	Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value >>> 8)
	    this[offset + 1] = (value & 0xff)
	  } else {
	    objectWriteUInt16(this, value, offset, false)
	  }
	  return offset + 2
	}
	
	function objectWriteUInt32 (buf, value, offset, littleEndian) {
	  if (value < 0) value = 0xffffffff + value + 1
	  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; i++) {
	    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff
	  }
	}
	
	Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset + 3] = (value >>> 24)
	    this[offset + 2] = (value >>> 16)
	    this[offset + 1] = (value >>> 8)
	    this[offset] = (value & 0xff)
	  } else {
	    objectWriteUInt32(this, value, offset, true)
	  }
	  return offset + 4
	}
	
	Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value >>> 24)
	    this[offset + 1] = (value >>> 16)
	    this[offset + 2] = (value >>> 8)
	    this[offset + 3] = (value & 0xff)
	  } else {
	    objectWriteUInt32(this, value, offset, false)
	  }
	  return offset + 4
	}
	
	Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) {
	    var limit = Math.pow(2, 8 * byteLength - 1)
	
	    checkInt(this, value, offset, byteLength, limit - 1, -limit)
	  }
	
	  var i = 0
	  var mul = 1
	  var sub = value < 0 ? 1 : 0
	  this[offset] = value & 0xFF
	  while (++i < byteLength && (mul *= 0x100)) {
	    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
	  }
	
	  return offset + byteLength
	}
	
	Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) {
	    var limit = Math.pow(2, 8 * byteLength - 1)
	
	    checkInt(this, value, offset, byteLength, limit - 1, -limit)
	  }
	
	  var i = byteLength - 1
	  var mul = 1
	  var sub = value < 0 ? 1 : 0
	  this[offset + i] = value & 0xFF
	  while (--i >= 0 && (mul *= 0x100)) {
	    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
	  }
	
	  return offset + byteLength
	}
	
	Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
	  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
	  if (value < 0) value = 0xff + value + 1
	  this[offset] = (value & 0xff)
	  return offset + 1
	}
	
	Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value & 0xff)
	    this[offset + 1] = (value >>> 8)
	  } else {
	    objectWriteUInt16(this, value, offset, true)
	  }
	  return offset + 2
	}
	
	Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value >>> 8)
	    this[offset + 1] = (value & 0xff)
	  } else {
	    objectWriteUInt16(this, value, offset, false)
	  }
	  return offset + 2
	}
	
	Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value & 0xff)
	    this[offset + 1] = (value >>> 8)
	    this[offset + 2] = (value >>> 16)
	    this[offset + 3] = (value >>> 24)
	  } else {
	    objectWriteUInt32(this, value, offset, true)
	  }
	  return offset + 4
	}
	
	Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
	  if (value < 0) value = 0xffffffff + value + 1
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value >>> 24)
	    this[offset + 1] = (value >>> 16)
	    this[offset + 2] = (value >>> 8)
	    this[offset + 3] = (value & 0xff)
	  } else {
	    objectWriteUInt32(this, value, offset, false)
	  }
	  return offset + 4
	}
	
	function checkIEEE754 (buf, value, offset, ext, max, min) {
	  if (value > max || value < min) throw new RangeError('value is out of bounds')
	  if (offset + ext > buf.length) throw new RangeError('index out of range')
	  if (offset < 0) throw new RangeError('index out of range')
	}
	
	function writeFloat (buf, value, offset, littleEndian, noAssert) {
	  if (!noAssert) {
	    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
	  }
	  ieee754.write(buf, value, offset, littleEndian, 23, 4)
	  return offset + 4
	}
	
	Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
	  return writeFloat(this, value, offset, true, noAssert)
	}
	
	Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
	  return writeFloat(this, value, offset, false, noAssert)
	}
	
	function writeDouble (buf, value, offset, littleEndian, noAssert) {
	  if (!noAssert) {
	    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
	  }
	  ieee754.write(buf, value, offset, littleEndian, 52, 8)
	  return offset + 8
	}
	
	Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
	  return writeDouble(this, value, offset, true, noAssert)
	}
	
	Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
	  return writeDouble(this, value, offset, false, noAssert)
	}
	
	// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
	Buffer.prototype.copy = function copy (target, targetStart, start, end) {
	  if (!start) start = 0
	  if (!end && end !== 0) end = this.length
	  if (targetStart >= target.length) targetStart = target.length
	  if (!targetStart) targetStart = 0
	  if (end > 0 && end < start) end = start
	
	  // Copy 0 bytes; we're done
	  if (end === start) return 0
	  if (target.length === 0 || this.length === 0) return 0
	
	  // Fatal error conditions
	  if (targetStart < 0) {
	    throw new RangeError('targetStart out of bounds')
	  }
	  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')
	  if (end < 0) throw new RangeError('sourceEnd out of bounds')
	
	  // Are we oob?
	  if (end > this.length) end = this.length
	  if (target.length - targetStart < end - start) {
	    end = target.length - targetStart + start
	  }
	
	  var len = end - start
	  var i
	
	  if (this === target && start < targetStart && targetStart < end) {
	    // descending copy from end
	    for (i = len - 1; i >= 0; i--) {
	      target[i + targetStart] = this[i + start]
	    }
	  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
	    // ascending copy from start
	    for (i = 0; i < len; i++) {
	      target[i + targetStart] = this[i + start]
	    }
	  } else {
	    target._set(this.subarray(start, start + len), targetStart)
	  }
	
	  return len
	}
	
	// fill(value, start=0, end=buffer.length)
	Buffer.prototype.fill = function fill (value, start, end) {
	  if (!value) value = 0
	  if (!start) start = 0
	  if (!end) end = this.length
	
	  if (end < start) throw new RangeError('end < start')
	
	  // Fill 0 bytes; we're done
	  if (end === start) return
	  if (this.length === 0) return
	
	  if (start < 0 || start >= this.length) throw new RangeError('start out of bounds')
	  if (end < 0 || end > this.length) throw new RangeError('end out of bounds')
	
	  var i
	  if (typeof value === 'number') {
	    for (i = start; i < end; i++) {
	      this[i] = value
	    }
	  } else {
	    var bytes = utf8ToBytes(value.toString())
	    var len = bytes.length
	    for (i = start; i < end; i++) {
	      this[i] = bytes[i % len]
	    }
	  }
	
	  return this
	}
	
	/**
	 * Creates a new `ArrayBuffer` with the *copied* memory of the buffer instance.
	 * Added in Node 0.12. Only available in browsers that support ArrayBuffer.
	 */
	Buffer.prototype.toArrayBuffer = function toArrayBuffer () {
	  if (typeof Uint8Array !== 'undefined') {
	    if (Buffer.TYPED_ARRAY_SUPPORT) {
	      return (new Buffer(this)).buffer
	    } else {
	      var buf = new Uint8Array(this.length)
	      for (var i = 0, len = buf.length; i < len; i += 1) {
	        buf[i] = this[i]
	      }
	      return buf.buffer
	    }
	  } else {
	    throw new TypeError('Buffer.toArrayBuffer not supported in this browser')
	  }
	}
	
	// HELPER FUNCTIONS
	// ================
	
	var BP = Buffer.prototype
	
	/**
	 * Augment a Uint8Array *instance* (not the Uint8Array class!) with Buffer methods
	 */
	Buffer._augment = function _augment (arr) {
	  arr.constructor = Buffer
	  arr._isBuffer = true
	
	  // save reference to original Uint8Array set method before overwriting
	  arr._set = arr.set
	
	  // deprecated
	  arr.get = BP.get
	  arr.set = BP.set
	
	  arr.write = BP.write
	  arr.toString = BP.toString
	  arr.toLocaleString = BP.toString
	  arr.toJSON = BP.toJSON
	  arr.equals = BP.equals
	  arr.compare = BP.compare
	  arr.indexOf = BP.indexOf
	  arr.copy = BP.copy
	  arr.slice = BP.slice
	  arr.readUIntLE = BP.readUIntLE
	  arr.readUIntBE = BP.readUIntBE
	  arr.readUInt8 = BP.readUInt8
	  arr.readUInt16LE = BP.readUInt16LE
	  arr.readUInt16BE = BP.readUInt16BE
	  arr.readUInt32LE = BP.readUInt32LE
	  arr.readUInt32BE = BP.readUInt32BE
	  arr.readIntLE = BP.readIntLE
	  arr.readIntBE = BP.readIntBE
	  arr.readInt8 = BP.readInt8
	  arr.readInt16LE = BP.readInt16LE
	  arr.readInt16BE = BP.readInt16BE
	  arr.readInt32LE = BP.readInt32LE
	  arr.readInt32BE = BP.readInt32BE
	  arr.readFloatLE = BP.readFloatLE
	  arr.readFloatBE = BP.readFloatBE
	  arr.readDoubleLE = BP.readDoubleLE
	  arr.readDoubleBE = BP.readDoubleBE
	  arr.writeUInt8 = BP.writeUInt8
	  arr.writeUIntLE = BP.writeUIntLE
	  arr.writeUIntBE = BP.writeUIntBE
	  arr.writeUInt16LE = BP.writeUInt16LE
	  arr.writeUInt16BE = BP.writeUInt16BE
	  arr.writeUInt32LE = BP.writeUInt32LE
	  arr.writeUInt32BE = BP.writeUInt32BE
	  arr.writeIntLE = BP.writeIntLE
	  arr.writeIntBE = BP.writeIntBE
	  arr.writeInt8 = BP.writeInt8
	  arr.writeInt16LE = BP.writeInt16LE
	  arr.writeInt16BE = BP.writeInt16BE
	  arr.writeInt32LE = BP.writeInt32LE
	  arr.writeInt32BE = BP.writeInt32BE
	  arr.writeFloatLE = BP.writeFloatLE
	  arr.writeFloatBE = BP.writeFloatBE
	  arr.writeDoubleLE = BP.writeDoubleLE
	  arr.writeDoubleBE = BP.writeDoubleBE
	  arr.fill = BP.fill
	  arr.inspect = BP.inspect
	  arr.toArrayBuffer = BP.toArrayBuffer
	
	  return arr
	}
	
	var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g
	
	function base64clean (str) {
	  // Node strips out invalid characters like \n and \t from the string, base64-js does not
	  str = stringtrim(str).replace(INVALID_BASE64_RE, '')
	  // Node converts strings with length < 2 to ''
	  if (str.length < 2) return ''
	  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
	  while (str.length % 4 !== 0) {
	    str = str + '='
	  }
	  return str
	}
	
	function stringtrim (str) {
	  if (str.trim) return str.trim()
	  return str.replace(/^\s+|\s+$/g, '')
	}
	
	function toHex (n) {
	  if (n < 16) return '0' + n.toString(16)
	  return n.toString(16)
	}
	
	function utf8ToBytes (string, units) {
	  units = units || Infinity
	  var codePoint
	  var length = string.length
	  var leadSurrogate = null
	  var bytes = []
	
	  for (var i = 0; i < length; i++) {
	    codePoint = string.charCodeAt(i)
	
	    // is surrogate component
	    if (codePoint > 0xD7FF && codePoint < 0xE000) {
	      // last char was a lead
	      if (!leadSurrogate) {
	        // no lead yet
	        if (codePoint > 0xDBFF) {
	          // unexpected trail
	          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
	          continue
	        } else if (i + 1 === length) {
	          // unpaired lead
	          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
	          continue
	        }
	
	        // valid lead
	        leadSurrogate = codePoint
	
	        continue
	      }
	
	      // 2 leads in a row
	      if (codePoint < 0xDC00) {
	        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
	        leadSurrogate = codePoint
	        continue
	      }
	
	      // valid surrogate pair
	      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
	    } else if (leadSurrogate) {
	      // valid bmp char, but last char was a lead
	      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
	    }
	
	    leadSurrogate = null
	
	    // encode utf8
	    if (codePoint < 0x80) {
	      if ((units -= 1) < 0) break
	      bytes.push(codePoint)
	    } else if (codePoint < 0x800) {
	      if ((units -= 2) < 0) break
	      bytes.push(
	        codePoint >> 0x6 | 0xC0,
	        codePoint & 0x3F | 0x80
	      )
	    } else if (codePoint < 0x10000) {
	      if ((units -= 3) < 0) break
	      bytes.push(
	        codePoint >> 0xC | 0xE0,
	        codePoint >> 0x6 & 0x3F | 0x80,
	        codePoint & 0x3F | 0x80
	      )
	    } else if (codePoint < 0x110000) {
	      if ((units -= 4) < 0) break
	      bytes.push(
	        codePoint >> 0x12 | 0xF0,
	        codePoint >> 0xC & 0x3F | 0x80,
	        codePoint >> 0x6 & 0x3F | 0x80,
	        codePoint & 0x3F | 0x80
	      )
	    } else {
	      throw new Error('Invalid code point')
	    }
	  }
	
	  return bytes
	}
	
	function asciiToBytes (str) {
	  var byteArray = []
	  for (var i = 0; i < str.length; i++) {
	    // Node's code seems to be doing this and not & 0x7F..
	    byteArray.push(str.charCodeAt(i) & 0xFF)
	  }
	  return byteArray
	}
	
	function utf16leToBytes (str, units) {
	  var c, hi, lo
	  var byteArray = []
	  for (var i = 0; i < str.length; i++) {
	    if ((units -= 2) < 0) break
	
	    c = str.charCodeAt(i)
	    hi = c >> 8
	    lo = c % 256
	    byteArray.push(lo)
	    byteArray.push(hi)
	  }
	
	  return byteArray
	}
	
	function base64ToBytes (str) {
	  return base64.toByteArray(base64clean(str))
	}
	
	function blitBuffer (src, dst, offset, length) {
	  for (var i = 0; i < length; i++) {
	    if ((i + offset >= dst.length) || (i >= src.length)) break
	    dst[i + offset] = src[i]
	  }
	  return i
	}
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(186).Buffer, (function() { return this; }())))

/***/ },
/* 187 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(184);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _d3plus = __webpack_require__(337);
	
	var _d3plus2 = _interopRequireDefault(_d3plus);
	
	var _country_debt = __webpack_require__(508);
	
	var _country_debt2 = _interopRequireDefault(_country_debt);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	// Sample data array
	var sample_data = [{ "name": "alpha", "size": 10 }, { "name": "beta", "size": 12 }, { "name": "gamma", "size": 30 }, { "name": "delta", "size": 26 }, { "name": "epsilon", "size": 12 }, { "name": "zeta", "size": 26 }, { "name": "theta", "size": 11 }, { "name": "eta", "size": 24 }];
	
	// Sample array of node positions
	var positions = [{ "name": "alpha", "x": 10, "y": 15 }, { "name": "beta", "x": 12, "y": 24 }, { "name": "gamma", "x": 16, "y": 18 }, { "name": "delta", "x": 26, "y": 21 }, { "name": "epsilon", "x": 13, "y": 4 }, { "name": "zeta", "x": 31, "y": 13 }, { "name": "theta", "x": 19, "y": 8 }, { "name": "eta", "x": 24, "y": 11 }];
	
	// Sample array of node connections
	var connections = [{ "source": "alpha", "target": "beta" }, { "source": "alpha", "target": "gamma" }, { "source": "beta", "target": "delta" }, { "source": "beta", "target": "epsilon" }, { "source": "zeta", "target": "gamma" }, { "source": "theta", "target": "gamma" }, { "source": "eta", "target": "gamma" }];
	
	var VizPage = function (_React$Component) {
	  _inherits(VizPage, _React$Component);
	
	  function VizPage(props) {
	    _classCallCheck(this, VizPage);
	
	    return _possibleConstructorReturn(this, Object.getPrototypeOf(VizPage).call(this, props));
	  }
	
	  _createClass(VizPage, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      this.drawViz();
	    }
	  }, {
	    key: 'drawViz',
	    value: function drawViz() {
	      var visualization = _d3plus2.default.viz().container(".viz").type("network").edges(connections).id("name").draw();
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        'div',
	        { className: 'viz' },
	        ' '
	      );
	    }
	  }]);
	
	  return VizPage;
	}(_react2.default.Component);
	
	exports.default = VizPage;

/***/ },
/* 188 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _react = __webpack_require__(184);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactDom = __webpack_require__(423);
	
	var _reactDom2 = _interopRequireDefault(_reactDom);
	
	var _VizPage = __webpack_require__(187);
	
	var _VizPage2 = _interopRequireDefault(_VizPage);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	_reactDom2.default.render(_react2.default.createElement(_VizPage2.default, null), document.getElementById('container'));

/***/ },
/* 189 */
/***/ function(module, exports) {

	var scrollbar;
	
	scrollbar = function() {
	  var inner, outer, val, w1, w2;
	  inner = document.createElement("p");
	  inner.style.width = "100%";
	  inner.style.height = "200px";
	  outer = document.createElement("div");
	  outer.style.position = "absolute";
	  outer.style.top = "0px";
	  outer.style.left = "0px";
	  outer.style.visibility = "hidden";
	  outer.style.width = "200px";
	  outer.style.height = "150px";
	  outer.style.overflow = "hidden";
	  outer.appendChild(inner);
	  document.body.appendChild(outer);
	  w1 = inner.offsetWidth;
	  outer.style.overflow = "scroll";
	  w2 = inner.offsetWidth;
	  if (w1 === w2) {
	    w2 = outer.clientWidth;
	  }
	  document.body.removeChild(outer);
	  val = w1 - w2;
	  scrollbar = function() {
	    return val;
	  };
	  return val;
	};
	
	module.exports = scrollbar;


/***/ },
/* 190 */
/***/ function(module, exports) {

	module.exports = {
	  active: "Visualizations#active",
	  aggs: "Visualizations#aggs",
	  alt: "Forms#alt",
	  attrs: "Visualizations#attrs",
	  axes: "Visualizations#axes",
	  background: "Visualizations#background",
	  color: "Visualizations#color",
	  cols: "Visualizations#cols",
	  config: "Visualizations#config",
	  container: "Visualizations#container",
	  coords: "Visualizations#coords",
	  csv: "Visualizations#csv",
	  data: "Visualizations#data",
	  depth: "Visualizations#depth",
	  descs: "Visualizations#descs",
	  dev: "Visualizations#dev",
	  draw: "Visualizations#draw",
	  edges: "Visualizations#edges",
	  error: "Visualizations#error",
	  focus: "Visualizations#focus",
	  font: "Visualizations#font",
	  footer: "Visualizations#footer",
	  format: "Visualizations#format",
	  height: "Visualizations#height",
	  history: "Visualizations#history",
	  hover: "Forms#hover",
	  icon: "Visualizations#icon",
	  id: "Visualizations#id",
	  keywords: "Forms#keywords",
	  labels: "Visualizations#labels",
	  legend: "Visualizations#legend",
	  links: "Visualizations#links",
	  margin: "Visualizations#margin",
	  messages: "Visualizations#messages",
	  method: "Methods",
	  mouse: "Visualizations#mouse",
	  nodes: "Visualizations#nodes",
	  open: "Forms#open",
	  order: "Visualizations#order",
	  remove: "Forms#remove",
	  search: "Forms#search",
	  select: "Forms#select",
	  selectAll: "Forms#selectAll",
	  shape: "Visualizations#shape",
	  size: "Visualizations#size",
	  temp: "Visualizations#temp",
	  text: "Visualizations#text",
	  time: "Visualizations#time",
	  timeline: "Visualizations#timeline",
	  timing: "Visualizations#timing",
	  title: "Visualizations#title",
	  tooltip: "Visualizations#tooltip",
	  total: "Visualizations#total",
	  type: "Visualizations#type",
	  ui: "Visualizations#ui",
	  width: "Visualizations#width",
	  x: "Visualizations#x",
	  y: "Visualizations#y",
	  zoom: "Visualizations#zoom"
	};


/***/ },
/* 191 */
/***/ function(module, exports, __webpack_require__) {

	var fetchColor, fetchText, fetchValue;
	
	fetchValue = __webpack_require__(3);
	
	fetchColor = __webpack_require__(20);
	
	fetchText = __webpack_require__(17);
	
	module.exports = function(vars, d, keys, colors, depth) {
	  var agg, i, key, len, obj, value;
	  if (!(keys instanceof Array)) {
	    keys = [keys];
	  }
	  if (!(colors instanceof Array)) {
	    colors = [colors];
	  }
	  if (vars) {
	    if (depth === void 0) {
	      depth = vars.id.value;
	    } else if (typeof depth !== "number") {
	      depth = vars.id.nesting.indexOf(depth);
	    }
	  }
	  obj = {};
	  for (i = 0, len = keys.length; i < len; i++) {
	    key = keys[i];
	    if (vars) {
	      if (colors.indexOf(key) >= 0) {
	        value = fetchColor(vars, d, depth);
	      } else if (key === vars.text.value) {
	        value = fetchText(vars, d, depth);
	      } else if (d3.keys(d).length === 3 && d["d3plus"] && d["key"] && d["values"]) {
	        value = fetchValue(vars, d.values.map(function(dd) {
	          return dd.d3plus;
	        }), key, depth);
	      } else {
	        value = fetchValue(vars, d, key, depth);
	      }
	    } else {
	      value = d[key];
	    }
	    if ([vars.data.keys[key], vars.attrs.keys[key]].indexOf("number") >= 0) {
	      agg = vars.order.agg.value || vars.aggs.value[key] || "sum";
	      if (!(value instanceof Array)) {
	        value = [value];
	      }
	      value = d3[agg](value);
	    } else {
	      if (value instanceof Array) {
	        value = value[0];
	      }
	      value = typeof value === "string" ? value.toLowerCase() : value;
	    }
	    obj[key] = value;
	  }
	  return obj;
	};


/***/ },
/* 192 */
/***/ function(module, exports) {

	module.exports = function(position) {
	  var accepted;
	  accepted = ["top", "middle", "bottom"];
	  if (position === false) {
	    accepted.unshift(false);
	  }
	  if (accepted.indexOf(position) < 0) {
	    position = "bottom";
	  }
	  return {
	    accepted: accepted,
	    mapping: {
	      top: "0ex",
	      middle: "0.5ex",
	      bottom: "1ex"
	    },
	    process: function(value) {
	      this.text = value;
	      return this.mapping[value];
	    },
	    value: position
	  };
	};


/***/ },
/* 193 */
/***/ function(module, exports, __webpack_require__) {

	var copy, d3selection, mergeObject, print, process, rejected, stringFormat, updateArray, validObject;
	
	copy = __webpack_require__(11);
	
	d3selection = __webpack_require__(31);
	
	validObject = __webpack_require__(7);
	
	mergeObject = __webpack_require__(29);
	
	print = __webpack_require__(2);
	
	process = __webpack_require__(126);
	
	rejected = __webpack_require__(128);
	
	stringFormat = __webpack_require__(14);
	
	updateArray = __webpack_require__(80);
	
	module.exports = function(vars, method, object, key, value) {
	  var accepted, c, callback, d3object, hasValue, id, k, longArray, n, parentKey, str, text, typeFunction, valString;
	  if (key === "value" || !key || key === method) {
	    text = "." + method + "()";
	  } else {
	    text = "\"" + key + "\" " + vars.format.locale.value.dev.of + " ." + method + "()";
	  }
	  if (key === "value" && "accepted" in object) {
	    accepted = object.accepted;
	  } else if (validObject(object[key]) && "accepted" in object[key]) {
	    accepted = object[key].accepted;
	  } else {
	    accepted = [value];
	  }
	  if (!rejected(vars, accepted, value, method, text)) {
	    if (validObject(object[key]) && "value" in object[key]) {
	      parentKey = key;
	      object = object[key];
	      key = "value";
	    }
	    if (key === "value" && "process" in object) {
	      value = process(vars, object, value);
	    }
	    if ((!(object[key] instanceof Array)) && object[key] === value && value !== void 0) {
	      str = vars.format.locale.value.dev.noChange;
	      if (vars.dev.value) {
	        print.comment(stringFormat(str, text));
	      }
	    } else {
	      object.changed = true;
	      if (object.loaded) {
	        object.loaded = false;
	      }
	      if ("history" in vars && method !== "draw") {
	        c = copy(object);
	        c.method = method;
	        vars.history.chain.push(c);
	      }
	      object.previous = object[key];
	      if ("id" in vars && key === "value" && "nesting" in object) {
	        if (method !== "id") {
	          if (typeof object.nesting !== "object") {
	            object.nesting = {};
	          }
	          if (validObject(value)) {
	            for (id in value) {
	              if (typeof value[id] === "string") {
	                value[id] = [value[id]];
	              }
	            }
	            object.nesting = mergeObject(object.nesting, value);
	            if (!(vars.id.value in object.nesting)) {
	              object.nesting[vars.id.value] = value[d3.keys(value)[0]];
	            }
	          } else if (value instanceof Array) {
	            object.nesting[vars.id.value] = value;
	          } else {
	            object.nesting[vars.id.value] = [value];
	          }
	          object[key] = object.nesting[vars.id.value][0];
	        } else {
	          if (value instanceof Array) {
	            object.nesting = value;
	            if ("depth" in vars && vars.depth.value < value.length) {
	              object[key] = value[vars.depth.value];
	            } else {
	              object[key] = value[0];
	              if ("depth" in vars) {
	                vars.depth.value = 0;
	              }
	            }
	          } else {
	            object[key] = value;
	            object.nesting = [value];
	            if ("depth" in vars) {
	              vars.depth.value = 0;
	            }
	          }
	        }
	      } else if (method === "depth") {
	        if (value >= vars.id.nesting.length) {
	          vars.depth.value = vars.id.nesting.length - 1;
	        } else if (value < 0) {
	          vars.depth.value = 0;
	        } else {
	          vars.depth.value = value;
	        }
	        vars.id.value = vars.id.nesting[vars.depth.value];
	        if (typeof vars.text.nesting === "object") {
	          n = vars.text.nesting[vars.id.value];
	          if (n) {
	            vars.text.nesting[vars.id.value] = typeof n === "string" ? [n] : n;
	            vars.text.value = (n instanceof Array ? n[0] : n);
	          }
	        }
	      } else if (validObject(object[key]) && validObject(value)) {
	        object[key] = mergeObject(object[key], value);
	      } else {
	        object[key] = value;
	      }
	      if (key === "value" && object.global) {
	        hasValue = object[key].length > 0;
	        k = parentKey || key;
	        if (k in vars && ((hasValue && vars.data[k].indexOf(method) < 0) || (!hasValue && vars.data[k].indexOf(method) >= 0))) {
	          vars.data[k] = updateArray(vars.data[k], method);
	        }
	      }
	      if (key === "value" && object.dataFilter && vars.data && vars.data.filters.indexOf(method) < 0) {
	        vars.data.filters.push(method);
	      }
	      if (vars.dev.value && object.changed && object[key] !== void 0) {
	        longArray = object[key] instanceof Array && object[key].length > 10;
	        d3object = d3selection(object[key]);
	        typeFunction = typeof object[key] === "function";
	        valString = (!longArray && !d3object && !typeFunction ? (typeof object[key] === "string" ? object[key] : JSON.stringify(object[key])) : null);
	        if (valString !== null && valString.length < 260) {
	          str = vars.format.locale.value.dev.setLong;
	          print.log(stringFormat(str, text, "\"" + valString + "\""));
	        } else {
	          str = vars.format.locale.value.dev.set;
	          print.log(stringFormat(str, text));
	        }
	      }
	    }
	    if (key === "value" && object.callback && !object.url) {
	      callback = typeof object.callback === "function" ? object.callback : object.callback.value;
	      if (callback) {
	        callback(value, vars.self);
	      }
	    }
	  }
	};


/***/ },
/* 194 */
/***/ function(module, exports, __webpack_require__) {

	var numeric;
	
	numeric = __webpack_require__(340);
	
	module.exports = function(data, options) {
	  var N, X, Xfulltr, Xtr, bestResult, beta_hat, bic, degree, degrees, i, j, k, l, loglike, m, point, prevBIC, q, ref, ref1, residual, sigma2, sse, y, y_hat;
	  if (options == null) {
	    options = {};
	  }
	  if (options.maxDegree == null) {
	    options.maxDegree = 5;
	  }
	  N = data.length;
	  prevBIC = Number.MAX_VALUE;
	  bestResult = null;
	  Xfulltr = (function() {
	    var l, ref, results;
	    results = [];
	    for (degree = l = 1, ref = options.maxDegree + 1; 1 <= ref ? l < ref : l > ref; degree = 1 <= ref ? ++l : --l) {
	      results.push((function() {
	        var len, m, results1;
	        results1 = [];
	        for (m = 0, len = data.length; m < len; m++) {
	          point = data[m];
	          results1.push(Math.pow(point[0], degree));
	        }
	        return results1;
	      })());
	    }
	    return results;
	  })();
	  y = (function() {
	    var l, len, results;
	    results = [];
	    for (l = 0, len = data.length; l < len; l++) {
	      point = data[l];
	      results.push(point[1]);
	    }
	    return results;
	  })();
	  for (i = l = 0, ref = 1 << options.maxDegree; 0 <= ref ? l < ref : l > ref; i = 0 <= ref ? ++l : --l) {
	    Xtr = [
	      (function() {
	        var m, ref1, results;
	        results = [];
	        for (q = m = 0, ref1 = N; 0 <= ref1 ? m < ref1 : m > ref1; q = 0 <= ref1 ? ++m : --m) {
	          results.push(1);
	        }
	        return results;
	      })()
	    ];
	    degrees = [0];
	    for (j = m = 0, ref1 = options.maxDegree; 0 <= ref1 ? m < ref1 : m > ref1; j = 0 <= ref1 ? ++m : --m) {
	      if ((i & 1 << j) > 0) {
	        Xtr.push(Xfulltr[j]);
	        degrees.push(j + 1);
	      }
	    }
	    X = numeric.transpose(Xtr);
	    k = degrees.length;
	    beta_hat = numeric.dot(numeric.dot(numeric.inv(numeric.dot(Xtr, X)), Xtr), y);
	    y_hat = numeric.dot(X, beta_hat);
	    residual = numeric.sub(y, y_hat);
	    sse = numeric.dot(residual, residual);
	    sigma2 = sse / (N - k);
	    loglike = -0.5 * N * Math.log(2 * Math.PI) - 0.5 * N * Math.log(sigma2) - sse / (2 * sigma2);
	    bic = -2 * loglike + k * (Math.log(N) - Math.log(2 * Math.PI));
	    if (bic < prevBIC) {
	      prevBIC = bic;
	      bestResult = [degrees, beta_hat, y_hat];
	    }
	  }
	  return bestResult;
	};


/***/ },
/* 195 */
/***/ function(module, exports, __webpack_require__) {

	var kdtree;
	
	kdtree = __webpack_require__(342);
	
	module.exports = function(points, K) {
	  var avg_lrd, i, j, kdists, ldr, ldrs, neighbors, p, reachDist, result, sqDist, tree;
	  if (K == null) {
	    K = 10;
	  }
	  tree = kdtree(points);
	  neighbors = (function() {
	    var k, len, results;
	    results = [];
	    for (k = 0, len = points.length; k < len; k++) {
	      p = points[k];
	      results.push(tree.knn(p, K + 1).slice(1));
	    }
	    return results;
	  })();
	  sqDist = function(i, j) {
	    var A, B, delta, dist, k, ref;
	    A = points[i];
	    B = points[j];
	    dist = 0;
	    for (i = k = 0, ref = A.length; 0 <= ref ? k < ref : k > ref; i = 0 <= ref ? ++k : --k) {
	      delta = A[i] - B[i];
	      dist += delta * delta;
	    }
	    return dist;
	  };
	  kdists = (function() {
	    var k, ref, results;
	    results = [];
	    for (i = k = 0, ref = points.length; 0 <= ref ? k < ref : k > ref; i = 0 <= ref ? ++k : --k) {
	      results.push(sqDist(i, neighbors[i][K - 1]));
	    }
	    return results;
	  })();
	  reachDist = function(i, j) {
	    return Math.max(sqDist(i, j), kdists[j]);
	  };
	  ldr = function(i) {
	    var j, k, len, rDist, ref;
	    rDist = 0;
	    ref = neighbors[i];
	    for (k = 0, len = ref.length; k < len; k++) {
	      j = ref[k];
	      rDist += reachDist(i, j);
	    }
	    return K / rDist;
	  };
	  ldrs = (function() {
	    var k, ref, results;
	    results = [];
	    for (i = k = 0, ref = points.length; 0 <= ref ? k < ref : k > ref; i = 0 <= ref ? ++k : --k) {
	      results.push(ldr(i));
	    }
	    return results;
	  })();
	  result = (function() {
	    var k, l, len, ref, ref1, results;
	    results = [];
	    for (i = k = 0, ref = points.length; 0 <= ref ? k < ref : k > ref; i = 0 <= ref ? ++k : --k) {
	      avg_lrd = 0;
	      ref1 = neighbors[i];
	      for (l = 0, len = ref1.length; l < len; l++) {
	        j = ref1[l];
	        avg_lrd += ldrs[j];
	      }
	      avg_lrd /= K;
	      results.push([i, avg_lrd / ldrs[i]]);
	    }
	    return results;
	  })();
	  return result.sort(function(a, b) {
	    return b[1] - a[1];
	  });
	};


/***/ },
/* 196 */
/***/ function(module, exports) {

	module.exports = function(points) {
	  var mad, median, result;
	  median = d3.median(points);
	  mad = d3.median(points.map(function(p) {
	    return Math.abs(p - median);
	  }));
	  result = points.map(function(p, i) {
	    return [i, Math.abs(p - median) / mad];
	  });
	  return result.sort(function(a, b) {
	    return b[1] - a[1];
	  });
	};


/***/ },
/* 197 */
/***/ function(module, exports, __webpack_require__) {

	var filter;
	
	filter = __webpack_require__(12);
	
	module.exports = {
	  accepted: [false, Array, Function, Number, String],
	  value: false
	};


/***/ },
/* 198 */
/***/ function(module, exports, __webpack_require__) {

	var filter;
	
	filter = __webpack_require__(12);
	
	module.exports = {
	  accepted: [false, Array, Function, Object, String],
	  mute: filter(true),
	  solo: filter(true),
	  value: "alt"
	};


/***/ },
/* 199 */
/***/ function(module, exports) {

	module.exports = {
	  accepted: [String],
	  value: "color"
	};


/***/ },
/* 200 */
/***/ function(module, exports) {

	module.exports = {
	  accepted: [Object],
	  objectAccess: false,
	  process: function(value, vars) {
	    var method, setting;
	    for (method in value) {
	      setting = value[method];
	      if (method in vars.self) {
	        vars.self[method](setting);
	      }
	    }
	    return value;
	  },
	  value: {}
	};


/***/ },
/* 201 */
/***/ function(module, exports, __webpack_require__) {

	var d3selection;
	
	d3selection = __webpack_require__(31);
	
	module.exports = {
	  accepted: [false, Array, Object, String],
	  element: false,
	  id: "default",
	  process: function(value) {
	    if (value === false) {
	      return d3.select("body");
	    } else if (d3selection(value)) {
	      return value;
	    } else if (value instanceof Array) {
	      return d3.select(value[0][0]);
	    } else {
	      return d3.select(value);
	    }
	  },
	  value: d3.select("body")
	};


/***/ },
/* 202 */
/***/ function(module, exports) {

	module.exports = {
	  accepted: [Number],
	  value: 0
	};


/***/ },
/* 203 */
/***/ function(module, exports) {

	module.exports = {
	  accepted: [Boolean],
	  value: false
	};


/***/ },
/* 204 */
/***/ function(module, exports) {

	module.exports = {
	  accepted: [false, Number, String],
	  deprecates: "highlight",
	  process: function(value, vars) {
	    var d, element, elementTag, elementType, i, j, k, len, len1, ref;
	    element = vars.data.element.value;
	    if (element && ["string", "number"].indexOf(typeof value) >= 0) {
	      elementTag = element.node().tagName.toLowerCase();
	      elementType = element.attr("type");
	      if (elementTag === "select") {
	        ref = element.selectAll("option");
	        for (i = j = 0, len = ref.length; j < len; i = ++j) {
	          d = ref[i];
	          if (d && d[vars.id.value] === value) {
	            element.node().selectedIndex = i;
	          }
	        }
	      } else if (elementTag === "input" && elementType === "radio") {
	        for (k = 0, len1 = element.length; k < len1; k++) {
	          d = element[k];
	          this.checked = d && d[vars.id.value] === value;
	        }
	      }
	    }
	    return value;
	  },
	  value: false
	};


/***/ },
/* 205 */
/***/ function(module, exports, __webpack_require__) {

	var align, decoration, family, transform;
	
	family = __webpack_require__(15);
	
	align = __webpack_require__(54);
	
	decoration = __webpack_require__(23);
	
	transform = __webpack_require__(21);
	
	module.exports = {
	  align: align(),
	  color: "#444444",
	  decoration: decoration(),
	  family: family(),
	  secondary: {
	    align: align(),
	    color: "#444444",
	    decoration: decoration(),
	    family: family(),
	    size: 12,
	    spacing: 0,
	    transform: transform(),
	    weight: 200
	  },
	  size: 12,
	  spacing: 0,
	  transform: transform(),
	  weight: 200
	};


/***/ },
/* 206 */
/***/ function(module, exports, __webpack_require__) {

	var formatNumber, locale, mergeObject, titleCase;
	
	formatNumber = __webpack_require__(92);
	
	locale = __webpack_require__(85);
	
	mergeObject = __webpack_require__(29);
	
	titleCase = __webpack_require__(69);
	
	module.exports = {
	  accepted: [Function, String],
	  affixes: {
	    accepted: [Object],
	    objectAccess: false,
	    value: {}
	  },
	  deprecates: ["number_format", "text_format"],
	  locale: {
	    accepted: function() {
	      return d3.keys(locale);
	    },
	    process: function(value) {
	      var defaultLocale, returnObject;
	      defaultLocale = "en_US";
	      returnObject = locale[defaultLocale];
	      if (value !== defaultLocale) {
	        returnObject = mergeObject(returnObject, locale[value]);
	      }
	      this.language = value;
	      return returnObject;
	    },
	    value: "en_US"
	  },
	  number: {
	    accepted: [false, Function],
	    value: false
	  },
	  process: function(value, vars) {
	    if (typeof value === "string") {
	      vars.self.format({
	        locale: value
	      });
	    } else {
	      if (typeof value === "function") {
	        return value;
	      }
	    }
	    return this.value;
	  },
	  text: {
	    accepted: [false, Function],
	    value: false
	  },
	  value: function(value, opts) {
	    var f, v, vars;
	    if (!opts) {
	      opts = {};
	    }
	    vars = opts.vars || {};
	    if (vars.time && vars.time.value && opts.key === vars.time.value) {
	      v = value.constructor === Date ? value : new Date(value);
	      return vars.data.time.format(v);
	    } else if (typeof value === "number") {
	      f = this.number.value || formatNumber;
	      return f(value, opts);
	    } else if (typeof value === "string") {
	      f = this.text.value || titleCase;
	      return f(value, opts);
	    } else {
	      return JSON.stringify(value);
	    }
	  }
	};


/***/ },
/* 207 */
/***/ function(module, exports) {

	module.exports = {
	  accepted: [false, Number],
	  max: 600,
	  secondary: false,
	  value: false
	};


/***/ },
/* 208 */
/***/ function(module, exports) {

	module.exports = {
	  back: function() {
	    if (this.states.length) {
	      return this.states.pop()();
	    }
	  },
	  chain: [],
	  reset: function() {
	    var results;
	    results = [];
	    while (this.states.length) {
	      results.push(this.states.pop()());
	    }
	    return results;
	  },
	  states: []
	};


/***/ },
/* 209 */
/***/ function(module, exports) {

	module.exports = {
	  accepted: [Boolean, Number, String],
	  value: false
	};


/***/ },
/* 210 */
/***/ function(module, exports, __webpack_require__) {

	var process;
	
	process = __webpack_require__(127);
	
	module.exports = {
	  accepted: [false, Array, Function, Object, String],
	  back: {
	    accepted: [false, String],
	    fallback: "&#x276e;",
	    opacity: 1,
	    process: process,
	    rotate: 0,
	    value: "fa-angle-left"
	  },
	  button: {
	    accepted: [false, String],
	    fallback: false,
	    opacity: 1,
	    process: process,
	    rotate: 0,
	    value: false
	  },
	  drop: {
	    accepted: [false, String],
	    fallback: "&#x276f;",
	    opacity: 1,
	    process: process,
	    rotate: 0,
	    value: "fa-angle-down"
	  },
	  next: {
	    accepted: [false, String],
	    fallback: "&#x276f;",
	    opacity: 1,
	    process: process,
	    rotate: 0,
	    value: "fa-angle-right"
	  },
	  select: {
	    accepted: [false, String],
	    fallback: "&#x2713;",
	    opacity: 1,
	    process: process,
	    rotate: 0,
	    value: "fa-check"
	  },
	  style: {
	    accepted: [Object, String],
	    value: "default"
	  },
	  value: "icon"
	};


/***/ },
/* 211 */
/***/ function(module, exports, __webpack_require__) {

	var filter;
	
	filter = __webpack_require__(12);
	
	module.exports = {
	  accepted: [Array, String],
	  dataFilter: true,
	  mute: filter(true),
	  nesting: ["value"],
	  solo: filter(true),
	  value: "value"
	};


/***/ },
/* 212 */
/***/ function(module, exports, __webpack_require__) {

	var filter;
	
	filter = __webpack_require__(12);
	
	module.exports = {
	  accepted: [false, Array, Function, Object, String],
	  mute: filter(true),
	  solo: filter(true),
	  value: "keywords"
	};


/***/ },
/* 213 */
/***/ function(module, exports, __webpack_require__) {

	var process;
	
	process = __webpack_require__(87);
	
	module.exports = {
	  accepted: [Number, Object, String],
	  process: function(value) {
	    var userValue;
	    if (value === void 0) {
	      value = this.value;
	    }
	    userValue = value;
	    process(value, this);
	    return userValue;
	  },
	  value: 0
	};


/***/ },
/* 214 */
/***/ function(module, exports) {

	module.exports = {
	  accepted: [Boolean],
	  flipped: {
	    accepted: [Boolean],
	    value: false
	  },
	  value: false
	};


/***/ },
/* 215 */
/***/ function(module, exports) {

	module.exports = {
	  accepted: [false, Function, String],
	  sort: {
	    accepted: ["asc", "desc"],
	    deprecates: ["sort"],
	    value: "asc"
	  },
	  value: false
	};


/***/ },
/* 216 */
/***/ function(module, exports) {

	module.exports = {
	  accepted: void 0,
	  process: function(value, vars) {
	    if (this.initialized) {
	      vars.container.value.remove();
	    }
	  },
	  value: void 0
	};


/***/ },
/* 217 */
/***/ function(module, exports) {

	module.exports = {
	  accepted: ["auto", Boolean],
	  process: function(value) {
	    if (typeof value === "Boolean") {
	      this.enabled = value;
	    }
	    return value;
	  },
	  term: "",
	  value: "auto"
	};


/***/ },
/* 218 */
/***/ function(module, exports) {

	module.exports = {
	  accepted: [String],
	  chainable: false,
	  process: function(value, vars) {
	    var container;
	    container = vars.container.value;
	    if (container && value) {
	      return container.select(value);
	    } else {
	      return value;
	    }
	  },
	  value: void 0
	};


/***/ },
/* 219 */
/***/ function(module, exports) {

	module.exports = {
	  accepted: [String],
	  chainable: false,
	  process: function(value, vars) {
	    var container;
	    container = vars.container.value;
	    if (container && value) {
	      return container.selectAll(value);
	    } else {
	      return value;
	    }
	  },
	  value: void 0
	};


/***/ },
/* 220 */
/***/ function(module, exports, __webpack_require__) {

	var filter;
	
	filter = __webpack_require__(12);
	
	module.exports = {
	  accepted: [false, String],
	  nesting: true,
	  mute: filter(true),
	  solo: filter(true),
	  secondary: {
	    accepted: [false, String],
	    nesting: true,
	    value: false
	  },
	  value: false
	};


/***/ },
/* 221 */
/***/ function(module, exports) {

	module.exports = {
	  mouseevents: 60,
	  ui: 200
	};


/***/ },
/* 222 */
/***/ function(module, exports, __webpack_require__) {

	var decoration, family, stringStrip, transform;
	
	decoration = __webpack_require__(23);
	
	family = __webpack_require__(15);
	
	transform = __webpack_require__(21);
	
	stringStrip = __webpack_require__(33);
	
	module.exports = {
	  accepted: [false, Function, String],
	  font: {
	    align: "center",
	    color: "#444444",
	    decoration: decoration(),
	    family: family(),
	    size: 16,
	    transform: transform(),
	    weight: 400
	  },
	  link: false,
	  process: function(value, vars) {
	    var id;
	    if (vars.container.id.indexOf("default") === 0 && value) {
	      id = stringStrip(value).toLowerCase();
	      vars.self.container({
	        id: id
	      });
	    }
	    return value;
	  },
	  value: false
	};


/***/ },
/* 223 */
/***/ function(module, exports) {

	module.exports = {
	  accepted: function(vars) {
	    return d3.keys(vars.types);
	  },
	  value: "auto"
	};


/***/ },
/* 224 */
/***/ function(module, exports, __webpack_require__) {

	var align, decoration, family, margin, transform;
	
	family = __webpack_require__(15);
	
	align = __webpack_require__(54);
	
	decoration = __webpack_require__(23);
	
	margin = __webpack_require__(87);
	
	transform = __webpack_require__(21);
	
	module.exports = {
	  align: align("center"),
	  border: 1,
	  color: {
	    primary: {
	      process: function(value, vars) {
	        var primary;
	        primary = this.value;
	        if (!vars.ui.color.secondary.value) {
	          vars.ui.color.secondary.value = d3.rgb(primary).darker(0.75).toString();
	        }
	        return value;
	      },
	      value: "#ffffff"
	    },
	    secondary: {
	      value: false
	    }
	  },
	  display: {
	    acceped: ["block", "inline-block"],
	    value: "inline-block"
	  },
	  font: {
	    align: align("center"),
	    color: "#444",
	    decoration: decoration(),
	    family: family(),
	    size: 11,
	    transform: transform(),
	    weight: 200
	  },
	  margin: {
	    process: function(value) {
	      var userValue;
	      if (value === void 0) {
	        value = this.value;
	      }
	      userValue = value;
	      margin(value, this);
	      return userValue;
	    },
	    value: 5
	  },
	  padding: {
	    process: function(value) {
	      var userValue;
	      if (value === void 0) {
	        value = this.value;
	      }
	      userValue = value;
	      margin(value, this);
	      return userValue;
	    },
	    value: 5
	  }
	};


/***/ },
/* 225 */
/***/ function(module, exports) {

	module.exports = {
	  accepted: [false, Number],
	  secondary: false,
	  value: false
	};


/***/ },
/* 226 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = function(vars) {
	  var button, checks, color, icons, mouseevents, print, style, updatedButtons;
	  print = __webpack_require__(2);
	  color = __webpack_require__(131);
	  icons = __webpack_require__(378);
	  mouseevents = __webpack_require__(227);
	  style = __webpack_require__(379);
	  button = vars.container.ui.selectAll('div.d3plus_node').data(vars.data.viz, function(d) {
	    return d[vars.id.value];
	  });
	  if (vars.dev.value) {
	    print.time("enter");
	  }
	  button.enter().append("div").attr("class", "d3plus_node").call(color, vars).call(style, vars).call(icons, vars).call(mouseevents, vars);
	  if (vars.dev.value) {
	    print.timeEnd("enter");
	  }
	  if (vars.draw.update || vars.draw.timing) {
	    if (vars.dev.value) {
	      print.time("ordering");
	    }
	    button.order();
	    if (vars.dev.value) {
	      print.timeEnd("ordering");
	    }
	    updatedButtons = button;
	  } else {
	    checks = [vars.focus.previous, vars.focus.value, vars.hover.previous, vars.hover.value].filter(function(c) {
	      return c;
	    });
	    updatedButtons = button.filter(function(b) {
	      return checks.indexOf(b[vars.id.value]) >= 0;
	    });
	  }
	  if (vars.dev.value) {
	    print.time("update");
	  }
	  updatedButtons.classed("d3plus_button_active", function(d) {
	    return vars.focus.value === d[vars.id.value];
	  });
	  if (vars.draw.timing) {
	    updatedButtons.transition().duration(vars.draw.timing).call(color, vars).call(style, vars);
	  } else {
	    updatedButtons.call(color, vars).call(style, vars);
	  }
	  updatedButtons.call(icons, vars).call(mouseevents, vars);
	  if (vars.dev.value) {
	    print.timeEnd("update");
	  }
	  return button.exit().remove();
	};


/***/ },
/* 227 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = function(elem, vars, color) {
	  var events, ie;
	  color = __webpack_require__(131);
	  events = __webpack_require__(9);
	  ie = __webpack_require__(32);
	  return elem.on(events.over, function(d, i) {
	    vars.self.hover(d[vars.id.value]);
	    if (ie || !vars.draw.timing) {
	      return d3.select(this).style("cursor", "pointer").call(color, vars);
	    } else {
	      return d3.select(this).style("cursor", "pointer").transition().duration(vars.timing.mouseevents).call(color, vars);
	    }
	  }).on(events.out, function(d) {
	    vars.self.hover(false);
	    if (ie || !vars.draw.timing) {
	      return d3.select(this).style("cursor", "auto").call(color, vars);
	    } else {
	      return d3.select(this).style("cursor", "auto").transition().duration(vars.timing.mouseevents).call(color, vars);
	    }
	  }).on(events.click, function(d) {
	    if (vars.focus.value !== false) {
	      return vars.self.focus(d[vars.id.value]).draw();
	    } else if (vars.focus.callback) {
	      return vars.focus.callback(d, vars.self);
	    }
	  });
	};


/***/ },
/* 228 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = function(vars) {
	  var button, data, element, keyboard, list, search, selector, title, update, width, windowevent;
	  element = __webpack_require__(229);
	  keyboard = __webpack_require__(230);
	  windowevent = __webpack_require__(390);
	  width = __webpack_require__(389);
	  button = __webpack_require__(382);
	  selector = __webpack_require__(387);
	  title = __webpack_require__(388);
	  search = __webpack_require__(386);
	  list = __webpack_require__(384);
	  data = __webpack_require__(146);
	  update = __webpack_require__(147);
	  vars.margin.top = 0;
	  vars.margin.title = 0;
	  element(vars);
	  keyboard(vars);
	  windowevent(vars);
	  width(vars);
	  button(vars);
	  selector(vars);
	  title(vars);
	  search(vars);
	  list(vars);
	  data(vars);
	  return update(vars);
	};


/***/ },
/* 229 */
/***/ function(module, exports) {

	module.exports = function(vars) {
	  if (vars.data.element.value) {
	    vars.data.element.value.on("focus." + vars.container.id, function() {
	      return vars.self.hover(true).draw();
	    });
	    vars.data.element.value.on("blur." + vars.container.id, function() {
	      var search;
	      if (vars.search.enabled) {
	        search = d3.event.relatedTarget !== vars.container.value.select('input').node();
	      } else {
	        search = true;
	      }
	      if (search) {
	        return vars.self.open(false).hover(false).draw();
	      }
	    });
	    vars.data.element.value.on("change." + vars.container.id, function() {
	      return vars.self.focus(this.value).draw();
	    });
	    return vars.data.element.value.on("keydown.cancel_" + vars.container.id, function() {
	      if (d3.event.keyCode !== 9) {
	        return d3.event.preventDefault();
	      }
	    });
	  }
	};


/***/ },
/* 230 */
/***/ function(module, exports) {

	module.exports = function(vars) {
	  return d3.select(window).on("keydown." + vars.container.id, function() {
	    var d, data, depth, hist, hover, i, index, j, key, len, matchKey, ref, solo;
	    key = d3.event.keyCode;
	    if (vars.open.value || vars.hover.value === true) {
	      matchKey = vars.hover.value === true ? "focus" : "hover";
	      index = false;
	      ref = vars.data.filtered;
	      for (i = j = 0, len = ref.length; j < len; i = ++j) {
	        d = ref[i];
	        if (d[vars.id.value] === vars[matchKey].value) {
	          index = i;
	          break;
	        }
	      }
	      if (key === 9 && vars.open.value && (!vars.search.enabled || (vars.search.enabled && !d3.event.shiftKey))) {
	        return vars.self.open(false).hover(false).draw();
	      } else if ([38, 40].indexOf(key) >= 0) {
	        if (index === false) {
	          index = 0;
	        } else if (key === 38) {
	          if (vars.open.value) {
	            if (index <= 0) {
	              index = vars.data.filtered.length - 1;
	            } else {
	              index -= 1;
	            }
	          }
	        } else if (key === 40) {
	          if (vars.open.value) {
	            if (index >= vars.data.filtered.length - 1) {
	              index = 0;
	            } else {
	              index += 1;
	            }
	          }
	        }
	        if (typeof vars.hover.value !== "boolean") {
	          hover = vars.data.filtered[index][vars.id.value];
	        } else {
	          hover = vars.focus.value;
	        }
	        return vars.self.hover(hover).open(true).draw();
	      } else if (key === 13) {
	        if (typeof vars.hover.value !== "boolean") {
	          data = vars.data.filtered.filter(function(f) {
	            return f[vars.id.value] === vars.hover.value;
	          })[0];
	          depth = vars.depth.value;
	          if (depth < vars.id.nesting.length - 1 && vars.id.nesting[depth + 1] in data) {
	            solo = vars.id.solo.value;
	            hist = function() {
	              return vars.self.depth(depth).id({
	                solo: solo
	              }).draw();
	            };
	            vars.history.states.push(hist);
	            return vars.self.depth(vars.depth.value + 1).id({
	              solo: [vars.hover.value]
	            }).draw();
	          } else {
	            return vars.self.focus(vars.hover.value).hover(true).draw();
	          }
	        } else {
	          return vars.self.hover(vars.focus.value).open(true).draw();
	        }
	      } else if (key === 27) {
	        if (vars.open.value) {
	          return vars.self.open(false).hover(true).draw();
	        } else if (vars.hover.value === true) {
	          return vars.self.hover(false).draw();
	        }
	      }
	    }
	  });
	};


/***/ },
/* 231 */
/***/ function(module, exports, __webpack_require__) {

	
	/**
	 * @class d3plus
	 */
	var d3plus, message, stylesheet;
	
	d3plus = {};
	
	
	/**
	 * The current version of **D3plus** you are using. Returns a string in
	 * [semantic versioning](http://semver.org/) format.
	 * @property d3plus.version
	 * @for d3plus
	 * @type String
	 * @static
	 */
	
	d3plus.version = "1.9.2 - Cornflower";
	
	
	/**
	 * The URL for the repo, used internally for certain error messages.
	 * @property d3plus.repo
	 * @for d3plus
	 * @type String
	 * @static
	 */
	
	d3plus.repo = "https://github.com/alexandersimoes/d3plus/";
	
	
	/**
	 * Utilities related to modifying arrays.
	 * @class d3plus.array
	 * @for d3plus
	 * @static
	 */
	
	d3plus.array = {
	  comparator: __webpack_require__(65),
	  contains: __webpack_require__(120),
	  sort: __webpack_require__(19),
	  update: __webpack_require__(80)
	};
	
	
	/**
	 * Utilities related to the client's browser.
	 * @class d3plus.client
	 * @for d3plus
	 * @static
	 */
	
	d3plus.client = {
	  css: __webpack_require__(50),
	  ie: __webpack_require__(32),
	  pointer: __webpack_require__(9),
	  prefix: __webpack_require__(39),
	  rtl: __webpack_require__(40),
	  scroll: __webpack_require__(58),
	  scrollbar: __webpack_require__(189),
	  touch: __webpack_require__(51)
	};
	
	
	/**
	 * Utilities related to color manipulation.
	 * @class d3plus.color
	 * @for d3plus
	 * @static
	 */
	
	d3plus.color = {
	  legible: __webpack_require__(28),
	  lighter: __webpack_require__(52),
	  mix: __webpack_require__(66),
	  random: __webpack_require__(81),
	  scale: __webpack_require__(82),
	  sort: __webpack_require__(121),
	  text: __webpack_require__(25),
	  validate: __webpack_require__(122)
	};
	
	
	/**
	 * Utilities related to manipulating data.
	 * @class d3plus.data
	 * @for d3plus
	 * @static
	 */
	
	d3plus.data = {
	  bestRegress: __webpack_require__(194),
	  lof: __webpack_require__(195),
	  mad: __webpack_require__(196)
	};
	
	
	/**
	 * Utilities related to fonts.
	 * @class d3plus.font
	 * @for d3plus
	 * @static
	 */
	
	d3plus.font = {
	  sizes: __webpack_require__(36),
	  validate: __webpack_require__(130)
	};
	
	
	/**
	 * D3plus Forms
	 * @class d3plus.form
	 * @for d3plus
	 */
	
	d3plus.form = __webpack_require__(48);
	
	
	/**
	 * Utilities related to geometric algorithms.
	 * @class d3plus.geom
	 * @for d3plus
	 * @static
	 */
	
	d3plus.geom = {
	  largestRect: __webpack_require__(55),
	  offset: __webpack_require__(67),
	  path2poly: __webpack_require__(89)
	};
	
	
	/**
	 * Utilities related to network graphs.
	 * @class d3plus.network
	 * @for d3plus
	 * @static
	 */
	
	d3plus.network = {
	  cluster: __webpack_require__(233),
	  distance: __webpack_require__(90),
	  normalize: __webpack_require__(68),
	  shortestPath: __webpack_require__(133),
	  smallestGap: __webpack_require__(91),
	  subgraph: __webpack_require__(234)
	};
	
	
	/**
	 * Utilities that process numbers.
	 * @class d3plus.number
	 * @for d3plus
	 * @static
	 */
	
	d3plus.number = {
	  format: __webpack_require__(92)
	};
	
	
	/**
	 * D3plus features a set of methods that relate to various object properties. These methods may be used outside of the normal constraints of the visualizations.
	 * @class d3plus.object
	 * @for d3plus
	 * @static
	 */
	
	d3plus.object = {
	  merge: __webpack_require__(29),
	  validate: __webpack_require__(7)
	};
	
	
	/**
	 * Utilities that process strings.
	 * @class d3plus.string
	 * @for d3plus
	 * @static
	 */
	
	d3plus.string = {
	  format: __webpack_require__(14),
	  list: __webpack_require__(46),
	  strip: __webpack_require__(33),
	  title: __webpack_require__(69)
	};
	
	
	/**
	 * D3plus SVG Textwrapping
	 * @class d3plus.textwrap
	 * @for d3plus
	 */
	
	d3plus.textwrap = __webpack_require__(41);
	
	
	/**
	 * D3plus Tooltips
	 * @class d3plus.tooltip
	 * @for d3plus
	 */
	
	d3plus.tooltip = {
	  create: __webpack_require__(148),
	  move: __webpack_require__(134),
	  remove: __webpack_require__(26)
	};
	
	
	/**
	 * D3plus features Utilities that can be used to help with some common javascript processes.
	 * @class d3plus.util
	 * @for d3plus
	 * @static
	 */
	
	d3plus.util = {
	  buckets: __webpack_require__(30),
	  child: __webpack_require__(93),
	  closest: __webpack_require__(47),
	  copy: __webpack_require__(11),
	  d3selection: __webpack_require__(31),
	  dataurl: __webpack_require__(135),
	  uniques: __webpack_require__(8)
	};
	
	
	/**
	 * D3plus Visualizations
	 * @class d3plus.viz
	 * @for d3plus
	 */
	
	d3plus.viz = __webpack_require__(335);
	
	stylesheet = __webpack_require__(50);
	
	message = __webpack_require__(2);
	
	if (stylesheet("d3plus.css")) {
	  message.warning("d3plus.css has been deprecated, you do not need to load this file.", d3plus.repo + "releases/tag/v1.4.0");
	}
	
	if (typeof window !== "undefined") {
	  window.d3plus = d3plus;
	}
	
	module.exports = d3plus;


/***/ },
/* 232 */
/***/ function(module, exports, __webpack_require__) {

	window.d3 = __webpack_require__(336);
	
	window.topojson = __webpack_require__(361);


/***/ },
/* 233 */
/***/ function(module, exports, __webpack_require__) {

	var normalize;
	
	normalize = __webpack_require__(68);
	
	module.exports = function(edges, options) {
	  var Q, a, b, cid, commSize, commSizes, communities, community, deltaQ, distance, edge, endpoint, events, i, id, iter, j, k, len, len1, linksMap, m, maxa, maxb, node, nodeid, nodes, nodesMap, ref, ref1, result, startpoint;
	  events = [];
	  if (options == null) {
	    options = {};
	  }
	  if ((options.nodes == null) || typeof options.nodes !== 'object') {
	    ref = normalize(edges, options), edges = ref[0], options = ref[1];
	    if (options === null) {
	      return null;
	    }
	  }
	  distance = options.distance, nodeid = options.nodeid, startpoint = options.startpoint, endpoint = options.endpoint, nodes = options.nodes;
	  nodesMap = {};
	  for (id in nodes) {
	    nodesMap[id] = {
	      node: nodes[id].node,
	      degree: 0
	    };
	  }
	  m = 0;
	  linksMap = {};
	  for (i = 0, len = edges.length; i < len; i++) {
	    edge = edges[i];
	    a = nodeid(startpoint(edge));
	    b = nodeid(endpoint(edge));
	    if (!(a in linksMap)) {
	      linksMap[a] = {};
	    }
	    if (!(b in linksMap)) {
	      linksMap[b] = {};
	    }
	    if (!(b in linksMap[a])) {
	      linksMap[a][b] = 0;
	      linksMap[b][a] = 0;
	      m++;
	      nodesMap[a].degree += 1;
	      nodesMap[b].degree += 1;
	    }
	  }
	  communities = {};
	  Q = 0;
	  for (id in nodesMap) {
	    node = nodesMap[id];
	    communities[id] = {
	      score: node.degree / (2.0 * m),
	      nodes: [id]
	    };
	  }
	  for (a in linksMap) {
	    for (b in linksMap[a]) {
	      linksMap[a][b] = 1.0 / (2 * m) - (nodesMap[a].degree * nodesMap[b].degree) / (4.0 * m * m);
	    }
	  }
	  iter = 0;
	  while (iter < 1000) {
	    deltaQ = -1;
	    maxa = void 0;
	    maxb = void 0;
	    for (a in linksMap) {
	      for (b in linksMap[a]) {
	        if (linksMap[a][b] > deltaQ) {
	          deltaQ = linksMap[a][b];
	          maxa = a;
	          maxb = b;
	        }
	      }
	    }
	    if (deltaQ < 0) {
	      break;
	    }
	    for (k in linksMap[maxa]) {
	      if (k !== maxb) {
	        if (k in linksMap[maxb]) {
	          linksMap[maxb][k] += linksMap[maxa][k];
	        } else {
	          linksMap[maxb][k] = linksMap[maxa][k] - 2 * communities[maxb].score * communities[k].score;
	        }
	        linksMap[k][maxb] = linksMap[maxb][k];
	      }
	      delete linksMap[k][maxa];
	    }
	    for (k in linksMap[maxb]) {
	      if (!(k in linksMap[maxa]) && k !== maxb) {
	        linksMap[maxb][k] -= 2 * communities[maxa].score * communities[k].score;
	        linksMap[k][maxb] = linksMap[maxb][k];
	      }
	    }
	    ref1 = communities[maxa].nodes;
	    for (j = 0, len1 = ref1.length; j < len1; j++) {
	      node = ref1[j];
	      communities[maxb].nodes.push(node);
	    }
	    communities[maxb].score += communities[maxa].score;
	    if (options.vdebug) {
	      events.push({
	        type: 'merge',
	        father: maxb,
	        child: maxa,
	        nodes: communities[maxb].nodes
	      });
	    }
	    delete communities[maxa];
	    delete linksMap[maxa];
	    Q += deltaQ;
	    iter++;
	  }
	  commSizes = (function() {
	    var results;
	    results = [];
	    for (cid in communities) {
	      community = communities[cid];
	      results.push([cid, community.nodes.length]);
	    }
	    return results;
	  })();
	  commSizes.sort(function(a, b) {
	    return b[1] - a[1];
	  });
	  result = (function() {
	    var l, len2, results;
	    results = [];
	    for (l = 0, len2 = commSizes.length; l < len2; l++) {
	      commSize = commSizes[l];
	      results.push(communities[commSize[0]].nodes);
	    }
	    return results;
	  })();
	  return [result, events];
	};


/***/ },
/* 234 */
/***/ function(module, exports, __webpack_require__) {

	var normalize;
	
	normalize = __webpack_require__(68);
	
	module.exports = function(edges, source, options) {
	  var K, dfs, directed, distance, edge, endpoint, id, nodeid, nodes, ref, startpoint, visited;
	  if (options == null) {
	    options = {};
	  }
	  options.source = source;
	  if ((options.nodes == null) || typeof options.nodes !== 'object') {
	    ref = normalize(edges, options), edges = ref[0], options = ref[1];
	    if (options === null) {
	      return null;
	    }
	  }
	  source = options.source, directed = options.directed, distance = options.distance, nodeid = options.nodeid, startpoint = options.startpoint, endpoint = options.endpoint, K = options.K, nodes = options.nodes;
	  visited = {};
	  visited[source] = true;
	  dfs = function(origin, curr_distance) {
	    var a, b, edge, i, len, new_distance, ref1, ref2, results;
	    ref1 = nodes[origin].outedges;
	    results = [];
	    for (i = 0, len = ref1.length; i < len; i++) {
	      edge = ref1[i];
	      a = nodeid(startpoint(edge));
	      b = nodeid(endpoint(edge));
	      if (!directed && b === origin) {
	        ref2 = [b, a], a = ref2[0], b = ref2[1];
	      }
	      if (!(b in visited)) {
	        new_distance = curr_distance + distance(edge);
	        if (new_distance <= K) {
	          visited[b] = true;
	          results.push(dfs(b, new_distance));
	        } else {
	          results.push(void 0);
	        }
	      } else {
	        results.push(void 0);
	      }
	    }
	    return results;
	  };
	  dfs(source, 0);
	  return {
	    nodes: (function() {
	      var results;
	      results = [];
	      for (id in visited) {
	        results.push(nodes[id].node);
	      }
	      return results;
	    })(),
	    edges: (function() {
	      var i, len, results;
	      results = [];
	      for (i = 0, len = edges.length; i < len; i++) {
	        edge = edges[i];
	        if (nodeid(startpoint(edge)) in visited && nodeid(endpoint(edge)) in visited) {
	          results.push(edge);
	        }
	      }
	      return results;
	    })()
	  };
	};


/***/ },
/* 235 */
/***/ function(module, exports, __webpack_require__) {

	var foreign, tspan;
	
	foreign = __webpack_require__(236);
	
	tspan = __webpack_require__(239);
	
	module.exports = function(vars) {
	  if (vars.text.html.value) {
	    foreign(vars);
	  } else {
	    tspan(vars);
	  }
	};


/***/ },
/* 236 */
/***/ function(module, exports) {

	module.exports = function(vars) {
	  var anchor, color, family, opacity, text;
	  text = vars.container.value;
	  family = text.attr("font-family") || text.style("font-family");
	  anchor = vars.align.value || text.attr("text-anchor") || text.style("text-anchor");
	  color = text.attr("fill") || text.style("fill");
	  opacity = text.attr("opacity") || text.style("opacity");
	  anchor = anchor === "end" ? "right" : (anchor === "middle" ? "center" : "left");
	  d3.select(text.node().parentNode).append("foreignObject").attr("width", vars.width.value + "px").attr("height", vars.height.value + "px").attr("x", "0px").attr("y", "0px").append("xhtml:div").style("font-family", family).style("font-size", vars.size.value[1] + "px").style("color", color).style("text-align", anchor).style("opacity", opacity).text(vars.text.current);
	};


/***/ },
/* 237 */
/***/ function(module, exports) {

	module.exports = function(vars) {
	  var diff, elem, height, prev, radius, shape, size, width, x, y;
	  elem = vars.container.value;
	  prev = elem.node().previousElementSibling;
	  shape = prev ? prev.tagName.toLowerCase() : "";
	  if (prev) {
	    prev = d3.select(prev);
	  }
	  vars.container.x = vars.x.value || parseFloat(elem.attr("x"), 10);
	  vars.container.y = vars.y.value || parseFloat(elem.attr("y"), 10);
	  if (prev) {
	    if (vars.shape.accepted.indexOf(shape) >= 0) {
	      vars.self.shape(shape);
	    }
	    if (shape === "rect") {
	      x = parseFloat(prev.attr("x"), 10) || 0;
	      y = parseFloat(prev.attr("y"), 10) || 0;
	      if (vars.padding.value === false) {
	        diff = Math.abs(x - vars.container.x);
	        if (diff) {
	          vars.self.padding(diff);
	        }
	      }
	      if (!vars.container.x) {
	        vars.container.x = x + vars.padding.value;
	      }
	      if (!vars.container.y) {
	        vars.container.y = y + vars.padding.value;
	      }
	      if (!vars.width.value) {
	        width = parseFloat(prev.attr("width" || prev.style("width", 10)));
	        vars.self.width(width);
	      }
	      if (!vars.height.value) {
	        height = parseFloat(prev.attr("height" || prev.style("height", 10)));
	        vars.self.height(height);
	      }
	    } else if (shape === "circle") {
	      radius = parseFloat(prev.attr("r"), 10);
	      x = parseFloat(prev.attr("cx"), 10) || 0;
	      x -= radius;
	      y = parseFloat(prev.attr("cy"), 10) || 0;
	      y -= radius;
	      if (vars.padding.value === false) {
	        diff = Math.abs(x - vars.container.x);
	        if (diff) {
	          vars.self.padding(diff);
	        }
	      }
	      if (!vars.container.x) {
	        vars.container.x = x + vars.padding.value;
	      }
	      if (!vars.container.y) {
	        vars.container.y = y + vars.padding.value;
	      }
	      if (!vars.width.value) {
	        vars.self.width(radius * 2, 10);
	      }
	      if (!vars.height.value) {
	        vars.self.height(radius * 2, 10);
	      }
	    } else {
	      if (!vars.width.value) {
	        vars.self.width(500);
	      }
	      if (!vars.height.value) {
	        vars.self.height(500);
	      }
	    }
	  }
	  if (!vars.container.x) {
	    vars.container.x = 0;
	  }
	  if (!vars.container.y) {
	    vars.container.y = 0;
	  }
	  vars.width.inner = vars.width.value - vars.padding.value * 2;
	  vars.height.inner = vars.height.value - vars.padding.value * 2;
	  size = elem.attr("font-size") || elem.style("font-size");
	  size = parseFloat(size, 10);
	  vars.container.fontSize = size;
	  vars.container.dy = parseFloat(elem.attr("dy"), 10);
	  if (!vars.size.value) {
	    if (vars.resize.value) {
	      return vars.self.size([4, 80]);
	    } else {
	      return vars.self.size([size / 2, size]);
	    }
	  }
	};


/***/ },
/* 238 */
/***/ function(module, exports) {

	module.exports = function(vars) {
	  var text;
	  if (!vars.text.value) {
	    text = vars.container.value.text();
	    if (text) {
	      if (text.indexOf("tspan") >= 0) {
	        text.replace(/\<\/tspan\>\<tspan\>/g, " ");
	        text.replace(/\<\/tspan\>/g, "");
	        text.replace(/\<tspan\>/g, "");
	      }
	      text = text.replace(/(\r\n|\n|\r)/gm, "");
	      text = text.replace(/^\s+|\s+$/g, "");
	      vars.self.text(text);
	    }
	  }
	  if (vars.text.value instanceof Array) {
	    vars.text.phrases = vars.text.value.filter(function(t) {
	      return ["string", "number"].indexOf(typeof t) >= 0;
	    });
	  } else {
	    vars.text.phrases = [vars.text.value + ""];
	  }
	  if (!vars.align.value) {
	    return vars.container.align = vars.container.value.style("text-anchor") || vars.container.value.attr("text-anchor");
	  }
	};


/***/ },
/* 239 */
/***/ function(module, exports, __webpack_require__) {

	var rtl;
	
	rtl = __webpack_require__(40);
	
	module.exports = function(vars) {
	  var anchor, dy, ellipsis, fontSize, h, height, line, lineWidth, lines, mirror, newLine, placeWord, progress, reverse, rmod, rotate, rx, ry, space, start, textBox, translate, truncate, valign, width, words, wrap, x, xOffset, y, yOffset;
	  newLine = function(first) {
	    var tspan;
	    if (!reverse || first) {
	      tspan = vars.container.value.append("tspan");
	    } else {
	      tspan = vars.container.value.insert("tspan", "tspan");
	    }
	    return tspan.attr("x", x + "px").attr("dy", dy + "px").style("baseline-shift", "0%").attr("dominant-baseline", "alphabetic");
	  };
	  mirror = vars.rotate.value === -90 || vars.rotate.value === 90;
	  width = mirror ? vars.height.inner : vars.width.inner;
	  height = mirror ? vars.width.inner : vars.height.inner;
	  if (vars.shape.value === "circle") {
	    anchor = "middle";
	  } else {
	    anchor = vars.align.value || vars.container.align || "start";
	  }
	  if (anchor === "end" || (anchor === "start" && rtl)) {
	    xOffset = width;
	  } else if (anchor === "middle") {
	    xOffset = width / 2;
	  } else {
	    xOffset = 0;
	  }
	  valign = vars.valign.value || "top";
	  x = vars.container.x + xOffset;
	  fontSize = vars.resize.value ? vars.size.value[1] : vars.container.fontSize || vars.size.value[0];
	  dy = vars.container.dy || fontSize * 1.1;
	  textBox = null;
	  progress = null;
	  words = null;
	  reverse = false;
	  yOffset = 0;
	  if (vars.shape.value === "circle") {
	    if (valign === "middle") {
	      yOffset = ((height / dy % 1) * dy) / 2;
	    } else if (valign === "end") {
	      yOffset = (height / dy % 1) * dy;
	    }
	  }
	  vars.container.value.attr("text-anchor", anchor).attr("font-size", fontSize + "px").style("font-size", fontSize + "px").attr("x", vars.container.x).attr("y", vars.container.y);
	  truncate = function() {
	    textBox.remove();
	    if (reverse) {
	      line++;
	      textBox = vars.container.value.select("tspan");
	    } else {
	      line--;
	      textBox = d3.select(vars.container.value.node().lastChild);
	    }
	    if (!textBox.empty()) {
	      words = textBox.text().match(/[^\s-]+-?/g);
	      return ellipsis();
	    }
	  };
	  lineWidth = function() {
	    var b;
	    if (vars.shape.value === "circle") {
	      b = ((line - 1) * dy) + yOffset;
	      if (b > height / 2) {
	        b += dy;
	      }
	      return 2 * Math.sqrt(b * ((2 * (width / 2)) - b));
	    } else {
	      return width;
	    }
	  };
	  ellipsis = function() {
	    var lastChar, lastWord;
	    if (words && words.length) {
	      lastWord = words.pop();
	      lastChar = lastWord.charAt(lastWord.length - 1);
	      if (lastWord.length === 1 && vars.text.split.value.indexOf(lastWord) >= 0) {
	        return ellipsis();
	      } else {
	        if (vars.text.split.value.indexOf(lastChar) >= 0) {
	          lastWord = lastWord.substr(0, lastWord.length - 1);
	        }
	        textBox.text(words.join(" ") + " " + lastWord + "...");
	        if (textBox.node().getComputedTextLength() > lineWidth()) {
	          return ellipsis();
	        }
	      }
	    } else {
	      return truncate();
	    }
	  };
	  placeWord = function(word) {
	    var current, i, joiner, next_char;
	    current = textBox.text();
	    next_char = "";
	    if (reverse) {
	      next_char = vars.text.current.charAt(vars.text.current.length - progress.length - 1);
	      if (next_char === " ") {
	        joiner = "";
	        i = 2;
	        while (next_char === " ") {
	          joiner += " ";
	          next_char = vars.text.current.charAt(vars.text.current.length - progress.length - i);
	          i++;
	        }
	      } else {
	        joiner = "";
	      }
	      progress = word + joiner + progress;
	      textBox.text(word + joiner + current);
	    } else {
	      next_char = vars.text.current.charAt(progress.length);
	      if (next_char === " ") {
	        joiner = "";
	        i = 1;
	        while (next_char === " ") {
	          joiner += " ";
	          next_char = vars.text.current.charAt(progress.length + i);
	          i++;
	        }
	      } else {
	        joiner = "";
	      }
	      progress += joiner + word;
	      textBox.text(current + joiner + word);
	    }
	    if (Math.floor(textBox.node().getComputedTextLength()) > lineWidth() || next_char === "\n") {
	      textBox.text(current);
	      if (current.length) {
	        textBox = newLine();
	      }
	      textBox.text(word);
	      if (reverse) {
	        return line--;
	      } else {
	        return line++;
	      }
	    }
	  };
	  start = 1;
	  line = null;
	  lines = null;
	  wrap = function() {
	    var i, j, len, next_char, unsafe, word;
	    vars.container.value.text("").html("");
	    words = vars.text.words.slice();
	    if (reverse) {
	      words.reverse();
	    }
	    progress = "";
	    textBox = newLine(true);
	    line = start;
	    for (j = 0, len = words.length; j < len; j++) {
	      word = words[j];
	      if (line * dy > height) {
	        truncate();
	        break;
	      }
	      placeWord(word);
	      unsafe = true;
	      while (unsafe) {
	        next_char = vars.text.current.charAt(progress.length);
	        i = 1;
	        while (next_char === " ") {
	          next_char = vars.text.current.charAt(progress.length + i);
	          i++;
	        }
	        unsafe = vars.text.split.value.indexOf(next_char) >= 0;
	        if (unsafe) {
	          placeWord(next_char);
	        }
	      }
	    }
	    if (line * dy > height) {
	      truncate();
	    }
	    return lines = Math.abs(line - start) + 1;
	  };
	  wrap();
	  lines = 0;
	  vars.container.value.selectAll("tspan").each(function() {
	    if (d3.select(this).text().length) {
	      return lines++;
	    }
	  });
	  if (vars.shape.value === "circle") {
	    space = height - lines * dy;
	    if (space > dy) {
	      if (valign === "middle") {
	        start = (space / dy / 2 >> 0) + 1;
	        wrap();
	      } else if (valign === "bottom") {
	        reverse = true;
	        start = height / dy >> 0;
	        wrap();
	      }
	    }
	  }
	  lines = 0;
	  vars.container.value.selectAll("tspan").each(function() {
	    if (d3.select(this).text().length) {
	      return lines++;
	    }
	  });
	  if (valign === "top") {
	    y = 0;
	  } else {
	    h = lines * dy;
	    y = valign === "middle" ? height / 2 - h / 2 : height - h;
	  }
	  y -= dy * 0.2;
	  translate = "translate(0," + y + ")";
	  if (vars.rotate.value === 180 || vars.rotate.value === -180) {
	    rx = vars.container.x + width / 2;
	    ry = vars.container.y + height / 2;
	  } else {
	    rmod = vars.rotate.value < 0 ? width : height;
	    rx = vars.container.x + rmod / 2;
	    ry = vars.container.y + rmod / 2;
	  }
	  rotate = "rotate(" + vars.rotate.value + ", " + rx + ", " + ry + ")";
	  return vars.container.value.attr("transform", rotate + translate);
	};


/***/ },
/* 240 */
/***/ function(module, exports, __webpack_require__) {

	var flow, fontSizes, resize, wrap;
	
	flow = __webpack_require__(235);
	
	fontSizes = __webpack_require__(36);
	
	wrap = function(vars) {
	  var firstChar;
	  if (vars.text.phrases.length) {
	    vars.text.current = vars.text.phrases.shift() + "";
	    vars.text.words = vars.text.current.match(vars.text["break"]);
	    firstChar = vars.text.current.charAt(0);
	    if (firstChar !== vars.text.words[0].charAt(0)) {
	      vars.text.words[0] = firstChar + vars.text.words[0];
	    }
	    vars.container.value.html("");
	    if (vars.resize.value) {
	      resize(vars);
	    } else {
	      flow(vars);
	    }
	  }
	};
	
	module.exports = wrap;
	
	resize = function(vars) {
	  var addon, areaMod, areaRatio, boxArea, height, heightMax, i, lineWidth, maxWidth, mirror, sizeMax, sizeRatio, sizes, textArea, width, widthRatio, words;
	  words = [];
	  i = 0;
	  while (i < vars.text.words.length) {
	    addon = (i === vars.text.words.length - 1 ? "" : " ");
	    words.push(vars.text.words[i] + addon);
	    i++;
	  }
	  mirror = vars.rotate.value === -90 || vars.rotate.value === 90;
	  width = mirror ? vars.height.inner : vars.width.inner;
	  height = mirror ? vars.width.inner : vars.height.inner;
	  sizeMax = Math.floor(vars.size.value[1]);
	  lineWidth = vars.shape.value === "circle" ? width * 0.75 : width;
	  sizes = fontSizes(words, {
	    "font-size": sizeMax + "px"
	  }, {
	    parent: vars.container.value
	  });
	  maxWidth = d3.max(sizes, function(d) {
	    return d.width;
	  });
	  areaMod = 1.165 + (width / height * 0.11);
	  textArea = d3.sum(sizes, function(d) {
	    var h;
	    h = vars.container.dy || sizeMax * 1.2;
	    return d.width * h;
	  }) * areaMod;
	  if (vars.shape.value === "circle") {
	    boxArea = Math.PI * Math.pow(width / 2, 2);
	  } else {
	    boxArea = lineWidth * height;
	  }
	  if (maxWidth > lineWidth || textArea > boxArea) {
	    areaRatio = Math.sqrt(boxArea / textArea);
	    widthRatio = lineWidth / maxWidth;
	    sizeRatio = d3.min([areaRatio, widthRatio]);
	    sizeMax = d3.max([vars.size.value[0], Math.floor(sizeMax * sizeRatio)]);
	  }
	  heightMax = Math.floor(height * 0.8);
	  if (sizeMax > heightMax) {
	    sizeMax = heightMax;
	  }
	  if (maxWidth * (sizeMax / vars.size.value[1]) <= lineWidth) {
	    if (sizeMax !== vars.size.value[1]) {
	      vars.self.size([vars.size.value[0], sizeMax]);
	    }
	    flow(vars);
	  } else {
	    wrap(vars);
	  }
	};


/***/ },
/* 241 */
/***/ function(module, exports) {

	module.exports = {
	  accepted: [false, "start", "middle", "end", "left", "center", "right"],
	  process: function(value) {
	    var css;
	    css = ["left", "center", "right"].indexOf(value);
	    if (css >= 0) {
	      value = this.accepted[css + 1];
	    }
	    return value;
	  },
	  value: false
	};


/***/ },
/* 242 */
/***/ function(module, exports) {

	module.exports = {
	  accepted: [Object],
	  objectAccess: false,
	  process: function(value, vars) {
	    var method, setting;
	    for (method in value) {
	      setting = value[method];
	      if (method in vars.self) {
	        vars.self[method](setting);
	      }
	    }
	    return value;
	  },
	  value: {}
	};


/***/ },
/* 243 */
/***/ function(module, exports, __webpack_require__) {

	var d3selection;
	
	d3selection = __webpack_require__(31);
	
	module.exports = {
	  accepted: [false, Array, Object, String],
	  element: false,
	  id: "default",
	  process: function(value) {
	    if (value === false) {
	      return false;
	    } else if (d3selection(value)) {
	      return value;
	    } else if (value instanceof Array) {
	      return d3.select(value[0][0]);
	    } else {
	      return d3.select(value);
	    }
	  },
	  value: false
	};


/***/ },
/* 244 */
/***/ function(module, exports) {

	module.exports = {
	  accepted: [Boolean],
	  value: false
	};


/***/ },
/* 245 */
/***/ function(module, exports, __webpack_require__) {

	var print, stringFormat;
	
	print = __webpack_require__(2);
	
	stringFormat = __webpack_require__(14);
	
	module.exports = {
	  accepted: [void 0],
	  process: function(value, vars) {
	    var str;
	    if (this.initialized === false) {
	      return value;
	    }
	    if (vars.container.value === false) {
	      str = vars.format.locale.value.dev.setContainer;
	      print.warning(str, "container");
	    } else if (vars.container.value.empty()) {
	      str = vars.format.locale.value.dev.noContainer;
	      print.warning(stringFormat(str, "\"" + vars.container.value + "\""), "container");
	    } else {
	      if (vars.dev.value) {
	        print.time("total draw time");
	      }
	      vars.container.value.call(vars.self);
	    }
	    return value;
	  },
	  value: void 0
	};


/***/ },
/* 246 */
/***/ function(module, exports, __webpack_require__) {

	var locale, mergeObject;
	
	locale = __webpack_require__(85);
	
	mergeObject = __webpack_require__(29);
	
	module.exports = {
	  accepted: [Function, String],
	  locale: {
	    accepted: function() {
	      return d3.keys(locale);
	    },
	    process: function(value) {
	      var defaultLocale, returnObject;
	      defaultLocale = "en_US";
	      returnObject = locale[defaultLocale];
	      if (value !== defaultLocale) {
	        returnObject = mergeObject(returnObject, locale[value]);
	      }
	      this.language = value;
	      return returnObject;
	    },
	    value: "en_US"
	  },
	  process: function(value, vars) {
	    if (this.initialized && typeof value === "string") {
	      vars.self.format({
	        locale: value
	      });
	    } else {
	      if (typeof value === "function") {
	        return value;
	      }
	    }
	    return this.value;
	  },
	  value: "en_US"
	};


/***/ },
/* 247 */
/***/ function(module, exports) {

	module.exports = {
	  accepted: [false, Number],
	  value: false
	};


/***/ },
/* 248 */
/***/ function(module, exports) {

	module.exports = {
	  accepted: [false, Number],
	  value: false
	};


/***/ },
/* 249 */
/***/ function(module, exports) {

	module.exports = {
	  accepted: [Boolean],
	  value: false
	};


/***/ },
/* 250 */
/***/ function(module, exports) {

	module.exports = {
	  accepted: [-180, -90, 0, 90, 180],
	  value: 0
	};


/***/ },
/* 251 */
/***/ function(module, exports) {

	module.exports = {
	  accepted: ["circle", "square"],
	  value: false
	};


/***/ },
/* 252 */
/***/ function(module, exports) {

	module.exports = {
	  accepted: [Array, false],
	  value: false
	};


/***/ },
/* 253 */
/***/ function(module, exports) {

	module.exports = {
	  accepted: [false, Array, Number, String],
	  html: {
	    accepted: [Boolean],
	    value: false
	  },
	  init: function(vars) {
	    var s;
	    s = this.split.value;
	    this["break"] = new RegExp("[^\\s\\" + s.join("\\") + "]+\\" + s.join("?\\") + "?", "g");
	    return false;
	  },
	  split: {
	    accepted: [Array],
	    process: function(s) {
	      this["break"] = new RegExp("[^\\s\\" + s.join("\\") + "]+\\" + s.join("?\\") + "?", "g");
	      return s;
	    },
	    value: ["-", "/", ";", ":", "&"]
	  }
	};


/***/ },
/* 254 */
/***/ function(module, exports) {

	module.exports = {
	  accepted: [false, "top", "middle", "bottom"],
	  value: false
	};


/***/ },
/* 255 */
/***/ function(module, exports) {

	module.exports = {
	  accepted: [false, Number],
	  value: false
	};


/***/ },
/* 256 */
/***/ function(module, exports) {

	module.exports = {
	  accepted: [false, Number],
	  value: false
	};


/***/ },
/* 257 */
/***/ function(module, exports) {

	module.exports = {
	  accepted: [false, Number],
	  value: false
	};


/***/ },
/* 258 */
/***/ function(module, exports) {

	module.exports = function(vars) {
	  var checkParent, i, len, ref, s;
	  vars.container.value.style("position", function() {
	    var current, remain;
	    current = d3.select(this).style("position");
	    remain = ["absolute", "fixed"].indexOf(current) >= 0;
	    if (remain) {
	      return current;
	    } else {
	      return "relative";
	    }
	  });
	  if (vars.container.changed) {
	    vars.container.value.html("");
	  }
	  ref = ["width", "height"];
	  for (i = 0, len = ref.length; i < len; i++) {
	    s = ref[i];
	    if (!vars[s].value) {
	      checkParent = function(element) {
	        var elem, val;
	        if (element.tagName === void 0 || ["BODY", "HTML"].indexOf(element.tagName) >= 0) {
	          val = window["inner" + s.charAt(0).toUpperCase() + s.slice(1)];
	          elem = document !== element ? d3.select(element) : false;
	          if (elem) {
	            if (s === "width") {
	              val -= parseFloat(elem.style("margin-left"), 10);
	              val -= parseFloat(elem.style("margin-right"), 10);
	              val -= parseFloat(elem.style("padding-left"), 10);
	              val -= parseFloat(elem.style("padding-right"), 10);
	            } else {
	              val -= parseFloat(elem.style("margin-top"), 10);
	              val -= parseFloat(elem.style("margin-bottom"), 10);
	              val -= parseFloat(elem.style("padding-top"), 10);
	              val -= parseFloat(elem.style("padding-bottom"), 10);
	            }
	          }
	          return vars[s].value = val <= 20 ? vars[s].small : val;
	        } else {
	          val = parseFloat(d3.select(element).style(s), 10);
	          if (typeof val === "number" && val > 0) {
	            return vars[s].value = val;
	          } else if (element.tagName !== "BODY") {
	            return checkParent(element.parentNode);
	          }
	        }
	      };
	      checkParent(vars.container.value.node());
	      if (d3.selectAll("body > *:not(script)").size() === 1) {
	        d3.select("body").style("overflow", "hidden");
	      }
	    }
	  }
	  vars.container.value.style("width", vars.width.value + "px").style("height", vars.height.value + "px");
	};


/***/ },
/* 259 */
/***/ function(module, exports, __webpack_require__) {

	var createTooltip, fetchValue, print, removeTooltip;
	
	createTooltip = __webpack_require__(100);
	
	fetchValue = __webpack_require__(3);
	
	print = __webpack_require__(2);
	
	removeTooltip = __webpack_require__(26);
	
	module.exports = function(vars) {
	  var data, focus, offset;
	  focus = vars.focus;
	  if (!vars.error.internal && focus.value.length === 1 && focus.value.length && !vars.small && focus.tooltip.value) {
	    if (vars.dev.value) {
	      print.time("drawing focus tooltip");
	    }
	    data = vars.data.pool.filter(function(d) {
	      return fetchValue(vars, d, vars.id.value) === focus.value[0];
	    });
	    if (data.length >= 1) {
	      data = data[0];
	    } else {
	      data = {};
	      data[vars.id.value] = focus.value[0];
	    }
	    offset = vars.labels.padding;
	    createTooltip({
	      anchor: "top left",
	      arrow: false,
	      data: data,
	      fullscreen: false,
	      id: "visualization_focus",
	      length: "long",
	      maxheight: vars.height.viz - offset * 2,
	      mouseevents: true,
	      offset: 0,
	      vars: vars,
	      width: vars.tooltip.large,
	      x: vars.width.value - vars.margin.right - offset,
	      y: vars.margin.top + offset
	    });
	    vars.width.viz -= vars.tooltip.large + offset * 2;
	    if (vars.dev.value) {
	      print.timeEnd("drawing focus tooltip");
	    }
	  } else {
	    removeTooltip("visualization_focus");
	  }
	};


/***/ },
/* 260 */
/***/ function(module, exports, __webpack_require__) {

	var angles, largestRect, path2poly, shapeStyle;
	
	shapeStyle = __webpack_require__(16);
	
	largestRect = __webpack_require__(55);
	
	path2poly = __webpack_require__(89);
	
	angles = {
	  start: {},
	  end: {}
	};
	
	module.exports = function(vars, selection, enter, exit) {
	  var arc, arcTween, data, newarc;
	  arc = d3.svg.arc().innerRadius(0).outerRadius(function(d) {
	    return d.d3plus.r;
	  }).startAngle(function(d) {
	    return d.d3plus.startAngle;
	  }).endAngle(function(d) {
	    return d.d3plus.endAngle;
	  });
	  data = function(d) {
	    var poly, rect;
	    if (vars.labels.value) {
	      if (d.d3plus.label) {
	        d.d3plus_label = d.d3plus.label;
	      } else {
	        poly = path2poly(arc(d));
	        rect = largestRect(poly, {
	          angle: 0
	        });
	        if (rect[0]) {
	          d.d3plus_label = {
	            w: rect[0].width,
	            h: rect[0].height,
	            x: rect[0].cx,
	            y: rect[0].cy
	          };
	        } else {
	          delete d.d3plus_label;
	        }
	      }
	    }
	    return [d];
	  };
	  if (vars.draw.timing) {
	    newarc = d3.svg.arc().innerRadius(0).outerRadius(function(d) {
	      return d.d3plus.r;
	    }).startAngle(function(d) {
	      if (angles.start[d.d3plus.id] === void 0) {
	        angles.start[d.d3plus.id] = 0;
	      }
	      if (isNaN(angles.start[d.d3plus.id])) {
	        angles.start[d.d3plus.id] = d.d3plus.startAngle;
	      }
	      return angles.start[d.d3plus.id];
	    }).endAngle(function(d) {
	      if (angles.end[d.d3plus.id] === void 0) {
	        angles.end[d.d3plus.id] = 0;
	      }
	      if (isNaN(angles.end[d.d3plus.id])) {
	        angles.end[d.d3plus.id] = d.d3plus.endAngle;
	      }
	      return angles.end[d.d3plus.id];
	    });
	    arcTween = function(arcs, newAngle) {
	      return arcs.attrTween("d", function(d) {
	        var e, interpolateE, interpolateS, s;
	        if (newAngle === void 0) {
	          s = d.d3plus.startAngle;
	          e = d.d3plus.endAngle;
	        } else if (newAngle === 0) {
	          s = 0;
	          e = 0;
	        }
	        interpolateS = d3.interpolate(angles.start[d.d3plus.id], s);
	        interpolateE = d3.interpolate(angles.end[d.d3plus.id], e);
	        return function(t) {
	          angles.start[d.d3plus.id] = interpolateS(t);
	          angles.end[d.d3plus.id] = interpolateE(t);
	          return newarc(d);
	        };
	      });
	    };
	    enter.append("path").attr("class", "d3plus_data").call(shapeStyle, vars).attr("d", newarc);
	    selection.selectAll("path.d3plus_data").data(data).transition().duration(vars.draw.timing).call(shapeStyle, vars).call(arcTween);
	    exit.selectAll("path.d3plus_data").transition().duration(vars.draw.timing).call(arcTween, 0);
	  } else {
	    enter.append("path").attr("class", "d3plus_data");
	    selection.selectAll("path.d3plus_data").data(data).call(shapeStyle, vars).attr("d", arc);
	  }
	};


/***/ },
/* 261 */
/***/ function(module, exports, __webpack_require__) {

	var copy, distance, fetchText, fontSizes, labels, largestRect, path2poly, shapeStyle;
	
	copy = __webpack_require__(11);
	
	distance = __webpack_require__(90);
	
	fetchText = __webpack_require__(17);
	
	fontSizes = __webpack_require__(36);
	
	largestRect = __webpack_require__(55);
	
	path2poly = __webpack_require__(89);
	
	shapeStyle = __webpack_require__(16);
	
	labels = {};
	
	module.exports = function(vars, selection, enter, exit) {
	  var projection, size_change;
	  projection = d3.geo[vars.coords.projection.value]();
	  if (projection.center) {
	    projection.center(vars.coords.center);
	  }
	  if (!vars.zoom.scale) {
	    vars.zoom.scale = 1;
	  }
	  vars.zoom.area = 1 / vars.zoom.scale / vars.zoom.scale;
	  vars.path = d3.geo.path().projection(projection);
	  if (vars.draw.timing) {
	    selection.selectAll("path.d3plus_data").attr("d", vars.path).transition().duration(vars.draw.timing).call(shapeStyle, vars);
	  } else {
	    selection.selectAll("path.d3plus_data").attr("d", vars.path).call(shapeStyle, vars);
	  }
	  enter.append("path").attr("id", function(d) {
	    return d.id;
	  }).attr("class", "d3plus_data").attr("d", vars.path).call(shapeStyle, vars);
	  size_change = vars.old_height !== vars.height.viz || vars.height.changed || vars.old_width !== vars.width.viz || vars.width.changed;
	  vars.old_height = vars.height.viz;
	  vars.old_width = vars.width.viz;
	  if (vars.coords.changed || size_change || vars.coords.mute.changed || vars.coords.solo.changed || vars.type.changed || vars.text.changed || vars.coords.projection.changed || vars.labels.changed) {
	    vars.zoom.bounds = null;
	    vars.zoom.reset = true;
	    vars.zoom.coords = {};
	    return selection.each(function(d) {
	      var areaM, areas, b, c, center, coords, dist_cutoff, dist_values, distances, i, j, largest, len, names, path, ratio, rect, reduced, ref, size, style;
	      if (vars.coords.simplify.value && d.geometry.coordinates.length > 1) {
	        distances = [];
	        areas = [];
	        areaM = 0;
	        largest = copy(d);
	        reduced = copy(d);
	        d.geometry.coordinates = d.geometry.coordinates.filter(function(c, i) {
	          var a;
	          reduced.geometry.coordinates = [c];
	          a = vars.path.area(reduced);
	          if (a > 0) {
	            areas.push(a);
	            if (a > areaM) {
	              largest.geometry.coordinates = [c];
	              areaM = a;
	            }
	            return true;
	          } else {
	            return false;
	          }
	        });
	        center = vars.path.centroid(largest);
	        ref = d.geometry.coordinates;
	        for (i = j = 0, len = ref.length; j < len; i = ++j) {
	          c = ref[i];
	          reduced.geometry.coordinates = [c];
	          distances.push(distance(vars.path.centroid(reduced), center));
	        }
	        dist_values = distances.reduce(function(arr, dist, i) {
	          if (dist) {
	            arr.push(areas[i] / dist);
	          }
	          return arr;
	        }, []);
	        dist_cutoff = d3.quantile(dist_values, vars.coords.threshold.value);
	        reduced.geometry.coordinates = d.geometry.coordinates.filter(function(c, i) {
	          var a, dist;
	          dist = distances[i];
	          a = areas[i];
	          return dist === 0 || a / dist >= dist_cutoff;
	        });
	        coords = largest.geometry.coordinates[0];
	        if (coords && largest.geometry.type === "MultiPolygon") {
	          coords = coords[0];
	          largest.geometry.coordinates[0] = coords;
	          largest.geometry.type = "Polygon";
	        }
	      } else {
	        reduced = d;
	        largest = d;
	        coords = d.geometry.coordinates[0];
	      }
	      vars.zoom.coords[d.d3plus.id] = reduced;
	      delete d.d3plus_label;
	      if (vars.labels.value) {
	        names = fetchText(vars, d);
	        if (coords && names.length) {
	          path = path2poly(vars.path(largest));
	          style = {
	            "font-weight": vars.labels.font.weight,
	            "font-family": vars.labels.font.family.value
	          };
	          ratio = null;
	          if (names[0].split(" ").length === 1) {
	            size = fontSizes(names[0], style)[0];
	            ratio = size.width / size.height;
	          }
	          rect = largestRect(path, {
	            angle: 0,
	            aspectRatio: ratio
	          });
	          if (rect) {
	            rect = rect[0];
	            d.d3plus_label = {
	              anchor: "middle",
	              valign: "center",
	              h: rect.height,
	              w: rect.width,
	              x: rect.cx,
	              y: rect.cy,
	              names: names
	            };
	          }
	        }
	      }
	      labels[d.id] = d.d3plus_label;
	      b = vars.path.bounds(reduced);
	      if (!vars.zoom.bounds) {
	        return vars.zoom.bounds = b;
	      } else {
	        if (vars.zoom.bounds[0][0] > b[0][0]) {
	          vars.zoom.bounds[0][0] = b[0][0];
	        }
	        if (vars.zoom.bounds[0][1] > b[0][1]) {
	          vars.zoom.bounds[0][1] = b[0][1];
	        }
	        if (vars.zoom.bounds[1][0] < b[1][0]) {
	          vars.zoom.bounds[1][0] = b[1][0];
	        }
	        if (vars.zoom.bounds[1][1] < b[1][1]) {
	          return vars.zoom.bounds[1][1] = b[1][1];
	        }
	      }
	    });
	  } else if (!vars.focus.value.length) {
	    vars.zoom.viewport = false;
	    return selection.each(function(d) {
	      return d.d3plus_label = labels[d.id];
	    });
	  }
	};


/***/ },
/* 262 */
/***/ function(module, exports, __webpack_require__) {

	var angles, interpolates, radii, shapeStyle;
	
	shapeStyle = __webpack_require__(16);
	
	radii = {};
	
	angles = {};
	
	interpolates = {
	  r: {},
	  a: {}
	};
	
	module.exports = function(vars, selection, enter, exit) {
	  var data, newRadial, nextLevel, radial, radialTween;
	  nextLevel = vars.id.nesting[vars.depth.value + 1];
	  radial = d3.svg.line.radial().interpolate("linear-closed").radius(function(d) {
	    return d.d3plus.r;
	  }).angle(function(d) {
	    return d.d3plus.a;
	  });
	  data = function(d) {
	    if (vars.labels.value) {
	      if (d.d3plus.label) {
	        d.d3plus_label = d.d3plus.label;
	      } else {
	        delete d.d3plus_label;
	      }
	    }
	    return [d];
	  };
	  if (vars.draw.timing) {
	    selection.each(function(d) {
	      var c, j, len, ref, results;
	      ref = d[nextLevel];
	      results = [];
	      for (j = 0, len = ref.length; j < len; j++) {
	        c = ref[j];
	        results.push(c.d3plus.id = c[vars.id.value] + "_" + c[nextLevel]);
	      }
	      return results;
	    });
	    newRadial = d3.svg.line.radial().interpolate("linear-closed").radius(function(d, i) {
	      if (radii[d.d3plus.id] === void 0) {
	        radii[d.d3plus.id] = 0;
	      }
	      if (isNaN(radii[d.d3plus.id])) {
	        radii[d.d3plus.id] = d.d3plus.r;
	      }
	      return radii[d.d3plus.id];
	    }).angle(function(d, i) {
	      if (angles[d.d3plus.id] === void 0) {
	        angles[d.d3plus.id] = d.d3plus.a;
	      }
	      if (isNaN(angles[d.d3plus.id])) {
	        angles[d.d3plus.id] = d.d3plus.a;
	      }
	      return angles[d.d3plus.id];
	    });
	    radialTween = function(arcs, newRadius) {
	      return arcs.attrTween("d", function(d) {
	        var a, c, i, j, len, r, ref;
	        ref = d[nextLevel];
	        for (i = j = 0, len = ref.length; j < len; i = ++j) {
	          c = ref[i];
	          a = c.d3plus.a;
	          if (newRadius === void 0) {
	            r = c.d3plus.r;
	          } else if (newRadius === 0) {
	            r = 0;
	          }
	          interpolates.a[c.d3plus.id] = d3.interpolate(angles[c.d3plus.id], a);
	          interpolates.r[c.d3plus.id] = d3.interpolate(radii[c.d3plus.id], r);
	        }
	        return function(t) {
	          var k, len1, ref1;
	          ref1 = d[nextLevel];
	          for (i = k = 0, len1 = ref1.length; k < len1; i = ++k) {
	            c = ref1[i];
	            angles[c.d3plus.id] = interpolates.a[c.d3plus.id](t);
	            radii[c.d3plus.id] = interpolates.r[c.d3plus.id](t);
	          }
	          return newRadial(d[nextLevel]);
	        };
	      });
	    };
	    enter.append("path").attr("class", "d3plus_data").call(shapeStyle, vars).attr("d", function(d) {
	      return newRadial(d[nextLevel]);
	    });
	    selection.selectAll("path.d3plus_data").data(data).transition().duration(vars.draw.timing).call(shapeStyle, vars).call(radialTween);
	    exit.selectAll("path.d3plus_data").transition().duration(vars.draw.timing).call(radialTween, 0);
	  } else {
	    enter.append("path").attr("class", "d3plus_data");
	    selection.selectAll("path.d3plus_data").data(data).call(shapeStyle, vars).attr("d", function(d) {
	      return radial(d[nextLevel]);
	    });
	  }
	};


/***/ },
/* 263 */
/***/ function(module, exports, __webpack_require__) {

	var shapeStyle;
	
	shapeStyle = __webpack_require__(16);
	
	module.exports = function(vars, selection, enter, exit) {
	  var data, init, update;
	  data = function(d) {
	    var h, w;
	    if (vars.labels.value && !d.d3plus.label) {
	      w = (d.d3plus.r ? d.d3plus.r * 2 : d.d3plus.width);
	      h = (d.d3plus.r ? d.d3plus.r * 2 : d.d3plus.height);
	      d.d3plus_label = {
	        w: w,
	        h: h,
	        x: 0,
	        y: 0
	      };
	      d.d3plus_share = {
	        w: w,
	        h: h,
	        x: 0,
	        y: 0
	      };
	      d.d3plus_label.shape = (d.d3plus.shape === "circle" ? "circle" : "square");
	    } else if (d.d3plus.label) {
	      d.d3plus_label = d.d3plus.label;
	    } else {
	      delete d.d3plus_label;
	    }
	    return [d];
	  };
	  init = function(nodes) {
	    return nodes.attr("x", function(d) {
	      if (d.d3plus.init && "x" in d.d3plus.init) {
	        return d.d3plus.init.x;
	      } else {
	        if (d.d3plus.init && "width" in d.d3plus.init) {
	          return -d.d3plus.width / 2;
	        } else {
	          return 0;
	        }
	      }
	    }).attr("y", function(d) {
	      if (d.d3plus.init && "y" in d.d3plus.init) {
	        return d.d3plus.init.y;
	      } else {
	        if (d.d3plus.init && "height" in d.d3plus.init) {
	          return -d.d3plus.height / 2;
	        } else {
	          return 0;
	        }
	      }
	    }).attr("width", function(d) {
	      if (d.d3plus.init && "width" in d.d3plus.init) {
	        return d.d3plus.init.width;
	      } else {
	        return 0;
	      }
	    }).attr("height", function(d) {
	      if (d.d3plus.init && "height" in d.d3plus.init) {
	        return d.d3plus.init.height;
	      } else {
	        return 0;
	      }
	    });
	  };
	  update = function(nodes) {
	    return nodes.attr("x", function(d) {
	      var w;
	      w = d.d3plus.r ? d.d3plus.r * 2 : d.d3plus.width;
	      return -w / 2;
	    }).attr("y", function(d) {
	      var h;
	      h = d.d3plus.r ? d.d3plus.r * 2 : d.d3plus.height;
	      return -h / 2;
	    }).attr("width", function(d) {
	      if (d.d3plus.r) {
	        return d.d3plus.r * 2;
	      } else {
	        return d.d3plus.width;
	      }
	    }).attr("height", function(d) {
	      if (d.d3plus.r) {
	        return d.d3plus.r * 2;
	      } else {
	        return d.d3plus.height;
	      }
	    }).attr("rx", function(d) {
	      var rounded, w;
	      rounded = d.d3plus.shape === "circle";
	      w = d.d3plus.r ? d.d3plus.r * 2 : d.d3plus.width;
	      if (rounded) {
	        return (w + 2) / 2;
	      } else {
	        return 0;
	      }
	    }).attr("ry", function(d) {
	      var h, rounded;
	      rounded = d.d3plus.shape === "circle";
	      h = d.d3plus.r ? d.d3plus.r * 2 : d.d3plus.height;
	      if (rounded) {
	        return (h + 2) / 2;
	      } else {
	        return 0;
	      }
	    }).attr("transform", function(d) {
	      if ("rotate" in d.d3plus) {
	        return "rotate(" + d.d3plus.rotate + ")";
	      } else {
	        return "";
	      }
	    }).attr("shape-rendering", function(d) {
	      if (d.d3plus.shape === "square" && (!("rotate" in d.d3plus))) {
	        return vars.shape.rendering.value;
	      } else {
	        return "auto";
	      }
	    });
	  };
	  if (vars.draw.timing) {
	    enter.append("rect").attr("class", "d3plus_data").call(init).call(shapeStyle, vars);
	    selection.selectAll("rect.d3plus_data").data(data).transition().duration(vars.draw.timing).call(update).call(shapeStyle, vars);
	    return exit.selectAll("rect.d3plus_data").transition().duration(vars.draw.timing).call(init);
	  } else {
	    enter.append("rect").attr("class", "d3plus_data");
	    return selection.selectAll("rect.d3plus_data").data(data).call(update).call(shapeStyle, vars);
	  }
	};


/***/ },
/* 264 */
/***/ function(module, exports) {

	module.exports = function(vars, selection, enter, exit) {
	  var d, data, init, marker, orient, pos, position, size, style;
	  data = function(d) {
	    if (d.d3plus.text) {
	      d.d3plus_label = {
	        w: size,
	        h: size,
	        x: 0,
	        y: 0,
	        background: "#fff",
	        resize: false,
	        angle: ["left", "right"].indexOf(d.d3plus.position) >= 0 ? 90 : 0
	      };
	    } else if (d.d3plus.label) {
	      d.d3plus_label = d.d3plus.label;
	    } else {
	      delete d.d3plus_label;
	    }
	    return [d];
	  };
	  style = function(line) {
	    return line.style("stroke-width", vars.data.stroke.width).style("stroke", "#444").attr("fill", "none").attr("shape-rendering", vars.shape.rendering.value);
	  };
	  init = function(line) {
	    return line.attr("x1", 0).attr("x2", 0).attr("y1", 0).attr("y2", 0);
	  };
	  position = function(line) {
	    return line.attr("x1", function(d) {
	      var offset, w, x;
	      if (["top", "bottom"].indexOf(d.d3plus.position) >= 0) {
	        return 0;
	      } else {
	        offset = d.d3plus.offset || 0;
	        w = d.d3plus.width || 0;
	        x = offset < 0 ? -w : w;
	        return x + offset;
	      }
	    }).attr("x2", function(d) {
	      if (["top", "bottom"].indexOf(d.d3plus.position) >= 0) {
	        return 0;
	      } else {
	        return d.d3plus.offset || 0;
	      }
	    }).attr("y1", function(d) {
	      var h, offset, y;
	      if (["left", "right"].indexOf(d.d3plus.position) >= 0) {
	        return 0;
	      } else {
	        offset = d.d3plus.offset || 0;
	        h = d.d3plus.height || 0;
	        y = offset < 0 ? -h : h;
	        return y + offset;
	      }
	    }).attr("y2", function(d) {
	      if (["left", "right"].indexOf(d.d3plus.position) >= 0) {
	        return 0;
	      } else {
	        return d.d3plus.offset || 0;
	      }
	    }).attr("marker-start", "url(#d3plus_whisker_marker)");
	  };
	  marker = vars.defs.selectAll("#d3plus_whisker_marker").data([0]);
	  marker.enter().append("marker").attr("id", "d3plus_whisker_marker").attr("markerUnits", "userSpaceOnUse").style("overflow", "visible").append("line");
	  d = selection.datum();
	  if (d) {
	    pos = d.d3plus.position;
	    orient = ["top", "bottom"].indexOf(pos) >= 0 ? "horizontal" : "vertical";
	    size = orient === "horizontal" ? d.d3plus.width : d.d3plus.height;
	  } else {
	    orient = "horizontal";
	    size = 0;
	  }
	  marker.select("line").attr("x1", orient === "horizontal" ? -size / 2 : 0).attr("x2", orient === "horizontal" ? size / 2 : 0).attr("y1", orient === "vertical" ? -size / 2 : 0).attr("y2", orient === "vertical" ? size / 2 : 0).call(style).style("stroke-width", vars.data.stroke.width * 2);
	  if (vars.draw.timing) {
	    enter.append("line").attr("class", "d3plus_data").call(style).call(init);
	    selection.selectAll("line.d3plus_data").data(data).transition().duration(vars.draw.timing).call(style).call(position);
	    exit.selectAll("line.d3plus_data").transition().duration(vars.draw.timing).call(init);
	  } else {
	    enter.append("line").attr("class", "d3plus_data");
	    selection.selectAll("line.d3plus_data").data(data).call(style).call(position);
	  }
	};


/***/ },
/* 265 */
/***/ function(module, exports, __webpack_require__) {

	var print;
	
	print = __webpack_require__(2);
	
	module.exports = function(vars) {
	  var app, d, dataRequired, drawable, i, len, ref, requirements, returned, visualization;
	  vars.group = vars.g.apps[vars.type.value];
	  vars.mouse.viz = false;
	  vars.edges.path = false;
	  visualization = vars.types[vars.type.value];
	  requirements = visualization.requirements || [];
	  dataRequired = requirements.indexOf("data") >= 0;
	  drawable = !dataRequired || (dataRequired && vars.data.viz.length);
	  if (!vars.error.internal && drawable) {
	    app = vars.format.locale.value.visualization[vars.type.value];
	    if (vars.dev.value) {
	      print.time("running " + app);
	    }
	    ref = vars.data.viz;
	    for (i = 0, len = ref.length; i < len; i++) {
	      d = ref[i];
	      if (d.d3plus) {
	        delete d.d3plus.shape;
	        delete d.d3plus.label;
	        delete d.d3plus.rotate;
	        delete d.d3plus.share;
	      }
	    }
	    returned = visualization(vars);
	    if (vars.dev.value) {
	      print.timeEnd("running " + app);
	    }
	  } else {
	    returned = null;
	  }
	  vars.returned = {
	    nodes: [],
	    edges: null
	  };
	  if (returned instanceof Array) {
	    vars.returned.nodes = returned;
	  } else if (returned) {
	    if (returned.nodes) {
	      vars.returned.nodes = returned.nodes;
	    }
	    if (returned.edges) {
	      vars.returned.edges = returned.edges;
	    }
	  }
	};


/***/ },
/* 266 */
/***/ function(module, exports, __webpack_require__) {

	var events, lighter, print, stylesheet;
	
	events = __webpack_require__(9);
	
	lighter = __webpack_require__(52);
	
	print = __webpack_require__(2);
	
	stylesheet = __webpack_require__(50);
	
	module.exports = function(vars) {
	  var button, color, containerPadding, enter, family, left, min_height, padding, size, stripY, style, titleClass, titleGroup, top, weight;
	  if (!vars.small && vars.history.states.length > 0) {
	    if (vars.dev.value) {
	      print.time("drawing back button");
	    }
	    button = vars.container.value.selectAll("div#d3plus_back_button").data(["d3plus_back_button"]).style("position", "relative").style("z-index", 1900);
	    size = vars.title.sub.font.size;
	    color = vars.title.sub.font.color;
	    family = vars.title.sub.font.family.value;
	    weight = vars.title.sub.font.weight;
	    padding = vars.title.sub.padding;
	    titleClass = false;
	    if (vars.title.sub.value && ["start", "left"].indexOf(vars.title.sub.font.align) < 0) {
	      titleClass = "sub";
	    } else if (vars.title.total.value && ["start", "left"].indexOf(vars.title.total.font.align) < 0) {
	      titleClass = "total";
	    } else if (vars.title.value && ["start", "left"].indexOf(vars.title.font.align) < 0) {
	      titleClass = "title";
	    }
	    if (titleClass) {
	      stripY = function(elem) {
	        var y;
	        y = elem.attr("transform").match(/translate\(([^a-z]+)\)/gi)[0];
	        y = y.replace(/([^a-z])\s([^a-z])/gi, "$1,$2");
	        y = y.split(",");
	        y = y[y.length - 1];
	        return parseFloat(y.substring(0, y.length - 1));
	      };
	      titleGroup = vars.svg.select(".d3plus_title." + titleClass);
	      top = stripY(titleGroup) + stripY(titleGroup.select("text"));
	    } else {
	      top = vars.margin.top - vars.title.padding;
	      min_height = size + padding * 2;
	      vars.margin.top += min_height;
	    }
	    containerPadding = parseFloat(vars.container.value.style("padding-top"), 10);
	    top += containerPadding;
	    containerPadding = parseFloat(vars.container.value.style("padding-left"), 10);
	    left = vars.margin.left + size / 2 + containerPadding;
	    style = function(elem) {
	      return elem.style("position", "absolute").style("left", left + "px").style("top", top + "px").style("color", color).style("font-family", family).style("font-weight", weight).style("font-size", size + "px");
	    };
	    enter = button.enter().append("div").attr("id", "d3plus_back_button").style("opacity", 0).call(style).html(function() {
	      var arrow;
	      if (stylesheet("font-awesome") && vars.icon.back.value.indexOf("fa-") === 0) {
	        arrow = "<i class='fa " + vars.icon.back.value;
	        arrow += "' style='margin-top:2px;margin-right:4px;'></i>";
	      } else {
	        arrow = vars.icon.back.value + " ";
	      }
	      return arrow + vars.format.value(vars.format.locale.value.ui.back);
	    });
	    button.on(events.over, function() {
	      if (!vars.small && vars.history.states.length > 0) {
	        return d3.select(this).style("cursor", "pointer").transition().duration(vars.timing.mouseevents).style("color", lighter(color, .25));
	      }
	    }).on(events.out, function() {
	      if (!vars.small && vars.history.states.length > 0) {
	        return d3.select(this).style("cursor", "auto").transition().duration(vars.timing.mouseevents).style("color", color);
	      }
	    }).on(events.click, function() {
	      return vars.history.back();
	    }).transition().duration(vars.draw.timing).style("opacity", 1).call(style);
	    if (vars.dev.value) {
	      return print.timeEnd("drawing back button");
	    }
	  } else {
	    return vars.container.value.selectAll("div#d3plus_back_button").transition().duration(vars.draw.timing).style("opacity", 0).remove();
	  }
	};


/***/ },
/* 267 */
/***/ function(module, exports, __webpack_require__) {

	var closest, css, events, fontSizes, mix, playInterval, prefix, print, textColor, timeDetect;
	
	closest = __webpack_require__(47);
	
	css = __webpack_require__(50);
	
	fontSizes = __webpack_require__(36);
	
	events = __webpack_require__(9);
	
	mix = __webpack_require__(66);
	
	prefix = __webpack_require__(39);
	
	print = __webpack_require__(2);
	
	textColor = __webpack_require__(25);
	
	timeDetect = __webpack_require__(125);
	
	playInterval = false;
	
	module.exports = function(vars) {
	  var availableWidth, background, brush, brushExtent, brush_group, brushed, brushend, d, end, handles, i, init, j, labelWidth, labels, len, max_index, min, min_index, oldWidth, playButton, playIcon, playIconChar, playIconStyle, playStyle, playUpdate, playbackWidth, setYears, start, start_x, step, stopPlayback, tallEnough, text, textFill, textStyle, tickColor, tickStep, ticks, timeFormat, timeReturn, timelineBox, timelineHeight, timelineOffset, timelineWidth, visible, x, yearHeight, yearMS, year_ticks, years;
	  if (vars.timeline.value && (!vars.error.internal || !vars.data.missing) && !vars.small && vars.data.time && vars.data.time.values.length > 1) {
	    if (vars.dev.value) {
	      print.time("drawing timeline");
	    }
	    textStyle = {
	      "font-weight": vars.ui.font.weight,
	      "font-family": vars.ui.font.family.value,
	      "font-size": vars.ui.font.size + "px",
	      "text-anchor": "middle"
	    };
	    years = vars.data.time.ticks.map(function(d) {
	      return new Date(d);
	    });
	    timeReturn = timeDetect(vars, {
	      values: years,
	      style: textStyle
	    });
	    visible = timeReturn.values.map(Number);
	    timeFormat = timeReturn.format;
	    if (vars.time.solo.value.length) {
	      init = d3.extent(vars.time.solo.value);
	      for (i = j = 0, len = init.length; j < len; i = ++j) {
	        d = init[i];
	        if (d.constructor !== Date) {
	          d += "";
	          if (d.length === 4 && parseInt(d) + "" === d) {
	            d += "/01/01";
	          }
	          d = new Date(d);
	          init[i] = d;
	        }
	      }
	    } else {
	      init = d3.extent(years);
	    }
	    year_ticks = years.slice();
	    yearHeight = d3.max(timeReturn.sizes.map(function(t) {
	      return t.height;
	    }));
	    labelWidth = ~~(d3.max(timeReturn.sizes.map(function(t) {
	      return t.width;
	    }))) + 1;
	    labelWidth += vars.ui.padding * 2;
	    timelineHeight = vars.timeline.height.value || yearHeight + vars.ui.padding * 2;
	    timelineWidth = labelWidth * years.length;
	    playbackWidth = timelineHeight;
	    tallEnough = timelineHeight - vars.ui.padding * 2 >= yearHeight;
	    availableWidth = vars.width.value - vars.ui.padding * 2;
	    if (tallEnough && vars.timeline.play.value) {
	      availableWidth -= playbackWidth + vars.ui.padding;
	    }
	    if (!tallEnough || visible.length < years.length || availableWidth < labelWidth * visible.length) {
	      oldWidth = labelWidth;
	      labelWidth = (availableWidth - labelWidth) / years.length;
	      timelineWidth = labelWidth * years.length;
	      timelineOffset = 1;
	      tickStep = ~~(oldWidth / (timelineWidth / visible.length)) + 1;
	      while (tickStep < visible.length - 1) {
	        if ((visible.length - 1) % tickStep === 0) {
	          break;
	        }
	        tickStep++;
	      }
	      visible = visible.filter(function(t, i) {
	        return i % tickStep === 0;
	      });
	    } else {
	      timelineOffset = 0;
	      min = new Date(years[0]);
	      step = vars.data.time.stepType;
	      min["set" + step](min["get" + step]() + years.length);
	      year_ticks.push(min);
	    }
	    start = new Date(init[0]);
	    start = closest(year_ticks, start);
	    end = new Date(init[1]);
	    if (!timelineOffset) {
	      end["set" + vars.data.time.stepType](end["get" + vars.data.time.stepType]() + 1);
	    }
	    end = closest(year_ticks, end);
	    yearMS = year_ticks.map(Number);
	    min_index = yearMS.indexOf(+start);
	    max_index = yearMS.indexOf(+end);
	    brushExtent = [start, end];
	    if (vars.timeline.align === "start") {
	      start_x = vars.ui.padding;
	    } else if (vars.timeline.align === "end") {
	      start_x = vars.width.value - vars.ui.padding - timelineWidth;
	    } else {
	      start_x = vars.width.value / 2 - timelineWidth / 2;
	    }
	    if (tallEnough && vars.timeline.play.value) {
	      start_x += (playbackWidth + vars.ui.padding) / 2;
	    }
	    stopPlayback = function() {
	      clearInterval(playInterval);
	      playInterval = false;
	      return playIcon.call(playIconChar, "icon");
	    };
	    brushed = function() {
	      var extent, max_val, min_val;
	      if (d3.event.sourceEvent !== null) {
	        if (playInterval) {
	          stopPlayback();
	        }
	        brushExtent = brush.extent();
	        min_val = closest(year_ticks, brushExtent[0]);
	        max_val = closest(year_ticks, brushExtent[1]);
	        if (min_val === max_val) {
	          min_index = yearMS.indexOf(+min_val);
	          if (min_val < brushExtent[0] || min_index === 0) {
	            max_val = year_ticks[min_index + 1];
	          } else {
	            min_val = year_ticks[min_index - 1];
	          }
	        }
	        min_index = yearMS.indexOf(+min_val);
	        max_index = yearMS.indexOf(+max_val);
	        if (max_index - min_index >= 1) {
	          extent = [min_val, max_val];
	        } else if (min_index + 1 <= years.length) {
	          extent = [min_val, year_ticks[min_index + 1]];
	        } else {
	          extent = [min_val];
	          i = 1;
	          while (i <= 1) {
	            if (min_index + i <= years.length) {
	              extent.push(year_ticks[min_index + i]);
	            } else {
	              extent.unshift(year_ticks[min_index - ((min_index + i) - years.length)]);
	            }
	            i++;
	          }
	          extent = [extent[0], extent[extent.length - 1]];
	        }
	        brushExtent = extent;
	        text.attr("fill", textFill);
	        return d3.select(this).call(brush.extent(extent));
	      }
	    };
	    setYears = function() {
	      var newYears;
	      if (max_index - min_index === years.length - timelineOffset) {
	        newYears = [];
	      } else {
	        newYears = yearMS.filter(function(t, i) {
	          return i >= min_index && i < (max_index + timelineOffset);
	        });
	        newYears = newYears.map(function(t) {
	          return new Date(t);
	        });
	      }
	      playUpdate();
	      return vars.self.time({
	        "solo": newYears
	      }).draw();
	    };
	    brushend = function() {
	      var change, old_max, old_min, solo;
	      if (d3.event.sourceEvent !== null) {
	        if (vars.time.solo.value.length) {
	          solo = d3.extent(vars.time.solo.value);
	          old_min = yearMS.indexOf(+closest(year_ticks, solo[0]));
	          old_max = yearMS.indexOf(+closest(year_ticks, solo[1]));
	          change = old_min !== min_index || old_max !== max_index;
	        } else {
	          change = max_index - min_index !== years.length - timelineOffset;
	        }
	        if (change) {
	          return setYears();
	        }
	      }
	    };
	    playButton = vars.g.timeline.selectAll("rect.d3plus_timeline_play").data(tallEnough && vars.timeline.play.value ? [0] : []);
	    playStyle = function(btn) {
	      return btn.attr("width", playbackWidth + 1).attr("height", timelineHeight + 1).attr("fill", vars.ui.color.primary.value).attr("stroke", vars.ui.color.primary.value).attr("stroke-width", 1).attr("x", start_x - playbackWidth - 1 - vars.ui.padding).attr("y", vars.ui.padding);
	    };
	    playButton.enter().append("rect").attr("class", "d3plus_timeline_play").attr("shape-rendering", "crispEdges").attr("opacity", 0).call(playStyle);
	    playButton.transition().duration(vars.draw.timing).call(playStyle);
	    playButton.exit().transition().duration(vars.draw.timing).attr("opacity", 0).remove();
	    playIcon = vars.g.timeline.selectAll("text.d3plus_timeline_playIcon").data(tallEnough && vars.timeline.play.value ? [0] : []);
	    playIconChar = function(text, char) {
	      var font;
	      char = vars.timeline.play[char];
	      if (css("font-awesome")) {
	        char = char.awesome;
	        font = "FontAwesome";
	      } else {
	        char = char.fallback;
	        font = "inherit";
	      }
	      return text.style("font-family", font).text(char);
	    };
	    playIconStyle = function(text) {
	      var y;
	      y = timelineHeight / 2 + vars.ui.padding + 1;
	      return text.attr("fill", textColor(vars.ui.color.primary.value)).attr("stroke", "none").attr(textStyle).attr("x", start_x - (playbackWidth - 1) / 2 - vars.ui.padding).attr("y", y).attr("dy", "0.5ex").call(playIconChar, playInterval ? "pause" : "icon");
	    };
	    playIcon.enter().append("text").attr("class", "d3plus_timeline_playIcon").call(playIconStyle).style("pointer-events", "none").attr("opacity", 0);
	    playIcon.call(playIconStyle).transition().duration(vars.draw.timing).attr("opacity", 1);
	    playIcon.exit().transition().duration(vars.draw.timing).attr("opacity", 0).remove();
	    playUpdate = function() {
	      if (max_index - min_index === years.length - timelineOffset) {
	        playButton.on(events.hover, null).on(events.click, null).transition().duration(vars.draw.timing).attr("opacity", 0.3);
	        return playIcon.transition().duration(vars.draw.timing).attr("opacity", 0.3);
	      } else {
	        playButton.on(events.over, function() {
	          return d3.select(this).style("cursor", "pointer");
	        }).on(events.out, function() {
	          return d3.select(this).style("cursor", "auto");
	        }).on(events.click, function() {
	          if (playInterval) {
	            return stopPlayback();
	          } else {
	            playIcon.call(playIconChar, "pause");
	            if (max_index === years.length) {
	              max_index = max_index - min_index;
	              min_index = 0;
	            } else {
	              min_index++;
	              max_index++;
	            }
	            setYears();
	            return playInterval = setInterval(function() {
	              if (max_index === years.length - timelineOffset) {
	                return stopPlayback();
	              } else {
	                min_index++;
	                max_index++;
	                return setYears();
	              }
	            }, vars.timeline.play.timing.value);
	          }
	        }).transition().duration(vars.draw.timing).attr("opacity", 1);
	        return playIcon.transition().duration(vars.draw.timing).attr("opacity", 1);
	      }
	    };
	    playUpdate();
	    textFill = function(d) {
	      var color, less, opacity;
	      less = timelineOffset ? d <= brushExtent[1] : d < brushExtent[1];
	      if (d >= brushExtent[0] && less) {
	        opacity = 1;
	        color = textColor(vars.ui.color.secondary.value);
	      } else {
	        opacity = 0.5;
	        color = textColor(vars.ui.color.primary.value);
	      }
	      if (timelineOffset && vars.background.value && vars.background.value !== "none") {
	        color = d3.rgb(textColor(vars.background.value));
	      }
	      color = d3.rgb(color);
	      return "rgba(" + color.r + "," + color.g + "," + color.b + "," + opacity + ")";
	    };
	    background = vars.g.timeline.selectAll("rect.d3plus_timeline_background").data(["background"]);
	    background.enter().append("rect").attr("class", "d3plus_timeline_background").attr("shape-rendering", "crispEdges").attr("width", timelineWidth + 2).attr("height", timelineHeight + 2).attr("fill", vars.ui.color.primary.value).attr("x", start_x - 1).attr("y", vars.ui.padding);
	    background.transition().duration(vars.draw.timing).attr("width", timelineWidth + 2).attr("height", timelineHeight + 2).attr("fill", vars.ui.color.primary.value).attr("x", start_x - 1).attr("y", vars.ui.padding);
	    ticks = vars.g.timeline.selectAll("g#ticks").data(["ticks"]);
	    ticks.enter().append("g").attr("id", "ticks").attr("transform", "translate(" + vars.width.value / 2 + "," + vars.ui.padding + ")");
	    brush_group = vars.g.timeline.selectAll("g#brush").data(["brush"]);
	    brush_group.enter().append("g").attr("id", "brush");
	    labels = vars.g.timeline.selectAll("g#labels").data(["labels"]);
	    labels.enter().append("g").attr("id", "labels");
	    text = labels.selectAll("text").data(years, function(d, i) {
	      return i;
	    });
	    text.enter().append("text").attr("stroke", "none").attr("y", 0).attr("dy", "0.5ex").attr("x", 0);
	    x = d3.time.scale().domain(d3.extent(year_ticks)).rangeRound([0, timelineWidth]);
	    text.order().attr(textStyle).text(function(d, i) {
	      if (visible.indexOf(+d) >= 0) {
	        return timeFormat(d);
	      } else {
	        return "";
	      }
	    }).attr("opacity", function(d, i) {
	      if (vars.data.time.dataSteps.indexOf(i) >= 0) {
	        return 1;
	      } else {
	        return 0.4;
	      }
	    }).attr("fill", textFill).attr("transform", function(d, i) {
	      var dx, dy;
	      dx = start_x + x(d);
	      if (!timelineOffset) {
	        dx += labelWidth / 2;
	      }
	      dy = timelineHeight / 2 + vars.ui.padding + 1;
	      if (timelineOffset) {
	        dy += timelineHeight / 2 + yearHeight;
	      }
	      return "translate(" + Math.round(dx) + "," + Math.round(dy) + ")";
	    });
	    text.exit().transition().duration(vars.draw.timing).attr("opacity", 0).remove();
	    brush = d3.svg.brush().x(x).extent(brushExtent).on("brush", brushed).on("brushend", brushend);
	    if (vars.axes.discrete && vars[vars.axes.discrete].value === vars.time.value) {
	      tickColor = vars[vars.axes.discrete].ticks.color;
	    } else {
	      tickColor = vars.x.ticks.color;
	    }
	    ticks.attr("transform", "translate(" + start_x + "," + (vars.ui.padding + 1) + ")").transition().duration(vars.draw.timing).call(d3.svg.axis().scale(x).orient("top").ticks(function() {
	      return year_ticks;
	    }).tickFormat("").tickSize(-timelineHeight).tickPadding(0)).selectAll("line").attr("stroke-width", 1).attr("shape-rendering", "crispEdges").attr("stroke", function(d) {
	      if (visible.indexOf(+d) >= 0) {
	        return tickColor;
	      } else {
	        return mix(tickColor, vars.background.value, 0.4, 1);
	      }
	    });
	    ticks.selectAll("path").attr("fill", "none");
	    brush_group.attr("transform", "translate(" + start_x + "," + (vars.ui.padding + 1) + ")").attr("opacity", 1).call(brush);
	    text.attr("pointer-events", "none");
	    brush_group.selectAll("rect.background").attr("fill", "none").style("visibility", "visible").attr("height", timelineHeight).attr("shape-rendering", "crispEdges").on(events.move, function() {
	      var c;
	      c = vars.timeline.hover.value;
	      if (["grab", "grabbing"].indexOf(c) >= 0) {
	        c = prefix() + c;
	      }
	      return d3.select(this).style("cursor", c);
	    });
	    brush_group.selectAll("rect.extent").attr("opacity", 0.75).attr("height", timelineHeight).attr("fill", vars.ui.color.secondary.value).attr("shape-rendering", "crispEdges").on(events.move, function() {
	      var c;
	      c = vars.timeline.hover.value;
	      if (["grab", "grabbing"].indexOf(c) >= 0) {
	        c = prefix() + c;
	      }
	      return d3.select(this).style("cursor", c);
	    });
	    if (vars.timeline.handles.value) {
	      handles = brush_group.selectAll("g.resize").selectAll("rect.d3plus_handle").data(["d3plus_handle"]);
	      handles.enter().insert("rect", "rect").attr("class", "d3plus_handle");
	      handles.attr("fill", vars.timeline.handles.color).attr("transform", function(d) {
	        var mod;
	        if (this.parentNode.className.baseVal === "resize e") {
	          mod = -vars.timeline.handles.size;
	        } else {
	          mod = 0;
	        }
	        return "translate(" + mod + ",0)";
	      }).attr("width", vars.timeline.handles.size).style("visibility", "visible").attr("shape-rendering", "crispEdges").attr("opacity", vars.timeline.handles.opacity);
	      brush_group.selectAll("g.resize").selectAll("rect").attr("height", timelineHeight);
	    } else {
	      brush_group.selectAll("g.resize").remove();
	    }
	    timelineBox = vars.g.timeline.node().getBBox();
	    if (vars.margin.bottom === 0) {
	      vars.margin.bottom += vars.ui.padding;
	    }
	    vars.margin.bottom += timelineBox.height + timelineBox.y;
	    vars.g.timeline.transition().duration(vars.draw.timing).attr("transform", "translate(0," + Math.round(vars.height.value - vars.margin.bottom - vars.ui.padding / 2) + ")");
	    vars.margin.bottom += vars.ui.padding;
	    if (vars.dev.value) {
	      return print.time("drawing timeline");
	    }
	  } else {
	    return vars.g.timeline.transition().duration(vars.draw.timing).attr("transform", "translate(0," + vars.height.value + ")");
	  }
	};


/***/ },
/* 268 */
/***/ function(module, exports, __webpack_require__) {

	var labels, transform;
	
	labels = __webpack_require__(94);
	
	transform = __webpack_require__(139);
	
	module.exports = function(vars, b, timing) {
	  var aspect, extent, fit, max_scale, min, padding, scale, translate, type;
	  if (!b) {
	    b = vars.zoom.bounds;
	  }
	  if (typeof timing !== "number") {
	    timing = vars.timing.transitions;
	  }
	  vars.zoom.size = {
	    height: b[1][1] - b[0][1],
	    width: b[1][0] - b[0][0]
	  };
	  type = vars.types[vars.type.value];
	  fit = vars.coords.fit.value;
	  if (fit === "auto" || type.requirements.indexOf("coords") < 0) {
	    aspect = d3.max([vars.zoom.size.width / vars.width.viz, vars.zoom.size.height / vars.height.viz]);
	  } else {
	    aspect = vars.zoom.size[fit] / vars["app_" + fit];
	  }
	  min = d3.min([vars.width.viz, vars.height.viz]);
	  padding = type.zoom ? vars.coords.padding * 2 : 0;
	  scale = ((min - padding) / min) / aspect;
	  extent = vars.zoom.behavior.scaleExtent();
	  if (extent[0] === extent[1] || b === vars.zoom.bounds) {
	    vars.zoom.behavior.scaleExtent([scale, scale * 16]);
	  }
	  max_scale = vars.zoom.behavior.scaleExtent()[1];
	  if (scale > max_scale) {
	    scale = max_scale;
	  }
	  vars.zoom.scale = scale;
	  translate = [vars.width.viz / 2 - (vars.zoom.size.width * scale) / 2 - (b[0][0] * scale), vars.height.viz / 2 - (vars.zoom.size.height * scale) / 2 - (b[0][1] * scale)];
	  vars.zoom.translate = translate;
	  vars.zoom.behavior.translate(translate).scale(scale);
	  vars.zoom.size = {
	    height: vars.zoom.bounds[1][1] - vars.zoom.bounds[0][1],
	    width: vars.zoom.bounds[1][0] - vars.zoom.bounds[0][0]
	  };
	  vars.zoom.reset = false;
	  if (vars.labels.value || vars.labels.changed) {
	    labels(vars);
	  }
	  return transform(vars, timing);
	};


/***/ },
/* 269 */
/***/ function(module, exports, __webpack_require__) {

	var labels, removeTooltip, transform;
	
	labels = __webpack_require__(94);
	
	removeTooltip = __webpack_require__(26);
	
	transform = __webpack_require__(139);
	
	module.exports = function(vars) {
	  var delay, eventType, limits, scale, translate, xmax, xmin, xoffset, ymax, ymin, yoffset;
	  eventType = d3.event.sourceEvent ? d3.event.sourceEvent.type : null;
	  translate = d3.event.translate;
	  scale = d3.event.scale;
	  limits = vars.zoom.bounds;
	  xoffset = (vars.width.viz - (vars.zoom.size.width * scale)) / 2;
	  xmin = (xoffset > 0 ? xoffset : 0);
	  xmax = (xoffset > 0 ? vars.width.viz - xoffset : vars.width.viz);
	  yoffset = (vars.height.viz - (vars.zoom.size.height * scale)) / 2;
	  ymin = (yoffset > 0 ? yoffset : 0);
	  ymax = (yoffset > 0 ? vars.height.viz - yoffset : vars.height.viz);
	  if (translate[0] + limits[0][0] * scale > xmin) {
	    translate[0] = -limits[0][0] * scale + xmin;
	  } else if (translate[0] + limits[1][0] * scale < xmax) {
	    translate[0] = xmax - (limits[1][0] * scale);
	  }
	  if (translate[1] + limits[0][1] * scale > ymin) {
	    translate[1] = -limits[0][1] * scale + ymin;
	  } else if (translate[1] + limits[1][1] * scale < ymax) {
	    translate[1] = ymax - (limits[1][1] * scale);
	  }
	  vars.zoom.behavior.translate(translate).scale(scale);
	  vars.zoom.translate = translate;
	  vars.zoom.scale = scale;
	  if (eventType === "wheel") {
	    removeTooltip(vars.type.value);
	  }
	  if (vars.labels.value || vars.labels.changed) {
	    if (eventType === "wheel") {
	      delay = (vars.draw.timing ? 100 : 250);
	      clearTimeout(vars.zoom.wheel);
	      vars.zoom.wheel = setTimeout(function() {
	        return labels(vars);
	      }, delay);
	    } else {
	      labels(vars);
	    }
	  }
	  if (eventType === "dblclick") {
	    return transform(vars, vars.timing.transitions);
	  } else {
	    return transform(vars, 0);
	  }
	};


/***/ },
/* 270 */
/***/ function(module, exports, __webpack_require__) {

	var filter;
	
	filter = __webpack_require__(12);
	
	module.exports = {
	  accepted: [false, Function, Object, String],
	  deprecates: "active_var",
	  mute: filter(true),
	  solo: filter(true),
	  spotlight: {
	    accepted: [Boolean],
	    deprecates: "spotlight",
	    value: false
	  },
	  value: false
	};


/***/ },
/* 271 */
/***/ function(module, exports) {

	module.exports = {
	  accepted: [Object],
	  deprecated: "nesting_aggs",
	  objectAccess: false,
	  value: {}
	};


/***/ },
/* 272 */
/***/ function(module, exports, __webpack_require__) {

	var process;
	
	process = __webpack_require__(45);
	
	module.exports = {
	  accepted: [false, Array, Object, String],
	  delimiter: {
	    accepted: String,
	    value: "|"
	  },
	  filetype: {
	    accepted: [false, "json", "xml", "html", "csv", "dsv", "tsv", "txt"],
	    value: false
	  },
	  keys: {},
	  process: process,
	  value: false
	};


/***/ },
/* 273 */
/***/ function(module, exports, __webpack_require__) {

	var rendering;
	
	rendering = __webpack_require__(88);
	
	module.exports = {
	  background: {
	    color: "#fafafa",
	    rendering: rendering(),
	    stroke: {
	      color: "#ccc",
	      width: 1
	    }
	  },
	  mirror: {
	    accepted: [Boolean],
	    deprecates: ["mirror_axis", "mirror_axes"],
	    value: false
	  },
	  ticks: {
	    accepted: [Boolean],
	    value: true
	  }
	};


/***/ },
/* 274 */
/***/ function(module, exports) {

	module.exports = {
	  accepted: [String],
	  value: "#ffffff"
	};


/***/ },
/* 275 */
/***/ function(module, exports) {

	module.exports = {
	  accepted: [Function, String],
	  value: false
	};


/***/ },
/* 276 */
/***/ function(module, exports, __webpack_require__) {

	var filter, scale;
	
	filter = __webpack_require__(12);
	
	scale = __webpack_require__(82);
	
	module.exports = {
	  accepted: [false, Array, Function, Object, String],
	  deprecates: "color_var",
	  focus: "#444444",
	  heatmap: ["#282F6B", "#419391", "#AFD5E8", "#EACE3F", "#B35C1E", "#B22200"],
	  missing: "#eeeeee",
	  mute: filter(true),
	  primary: "#d74b03",
	  range: ["#B22200", "#FFEE8D", "#759143"],
	  scale: {
	    accepted: [Array, Function, "d3plus", "category10", "category20", "category20b", "category20c"],
	    process: function(value) {
	      if (value instanceof Array) {
	        return d3.scale.ordinal().range(value);
	      } else if (value === "d3plus") {
	        return scale;
	      } else if (typeof value === "string") {
	        return d3.scale[value]();
	      } else {
	        return value;
	      }
	    },
	    value: "d3plus"
	  },
	  solo: filter(true),
	  secondary: "#e5b3bb",
	  value: false
	};


/***/ },
/* 277 */
/***/ function(module, exports) {

	module.exports = {
	  accepted: [Object],
	  objectAccess: false,
	  process: function(value, vars) {
	    var method, setting;
	    for (method in value) {
	      setting = value[method];
	      if (method in vars.self) {
	        vars.self[method](setting);
	      }
	    }
	    return value;
	  },
	  value: {}
	};


/***/ },
/* 278 */
/***/ function(module, exports, __webpack_require__) {

	var d3selection;
	
	d3selection = __webpack_require__(31);
	
	module.exports = {
	  accepted: [false, Array, Object, String],
	  id: "default",
	  process: function(value, vars) {
	    if (value === false) {
	      return false;
	    }
	    if (vars.container.id === "default") {
	      vars.self.container({
	        id: "d3plus_" + +new Date()
	      });
	    }
	    if (d3selection(value)) {
	      return value.append("div");
	    } else if (value instanceof Array) {
	      return d3.select(value[0][0]).append("div");
	    } else {
	      return d3.select(value).append("div");
	    }
	  },
	  value: false
	};


/***/ },
/* 279 */
/***/ function(module, exports, __webpack_require__) {

	var filter, process;
	
	filter = __webpack_require__(12);
	
	process = __webpack_require__(45);
	
	module.exports = {
	  accepted: [false, Array, Function, Object, String],
	  center: [0, 0],
	  filetype: {
	    accepted: ["json"],
	    value: "json"
	  },
	  fit: {
	    accepted: ["auto", "height", "width"],
	    value: "auto"
	  },
	  key: false,
	  mute: filter(false),
	  padding: 20,
	  process: process,
	  projection: {
	    accepted: ["albers", "albersUsa", "azimuthalEqualArea", "azimuthalEquidistant", "conicConformal", "conicEqualArea", "conicEquidistant", "equirectangular", "gnomonic", "mercator", "orthographic", "stereographic", "transverseMercator", Function],
	    value: "mercator"
	  },
	  simplify: {
	    accepted: [Boolean],
	    value: true
	  },
	  solo: filter(false),
	  threshold: {
	    accepted: [Number],
	    value: 0.9
	  },
	  value: false
	};


/***/ },
/* 280 */
/***/ function(module, exports, __webpack_require__) {

	var fetchValue, ie, stringStrip;
	
	fetchValue = __webpack_require__(3);
	
	ie = __webpack_require__(32);
	
	stringStrip = __webpack_require__(33);
	
	module.exports = {
	  accepted: [void 0, true, Array, String],
	  chainable: false,
	  data: [],
	  process: function(value, vars) {
	    var blob, c, col, columns, csv_data, csv_to_return, d, dataString, encodedUri, i, j, k, l, len, len1, len2, len3, len4, len5, len6, len7, link, m, max_filename_len, n, node, o, p, q, ref, ref1, ref2, row, title, titles, val;
	    if (vars.returned === void 0) {
	      return [];
	    }
	    value = value || vars.cols.value;
	    if (value instanceof Array) {
	      columns = value;
	    } else if (typeof value === "string") {
	      columns = [value];
	    }
	    csv_to_return = [];
	    titles = [];
	    if (vars.title.value) {
	      title = vars.title.value;
	      if (typeof title === "function") {
	        title = title(vars.self);
	      }
	      title = stringStrip(title);
	      max_filename_len = 250;
	      title = title.substr(0, max_filename_len);
	    } else {
	      title = "D3plus Visualization Data";
	    }
	    if (value === true) {
	      columns = d3.keys(vars.data.keys);
	      csv_to_return.push(columns);
	      ref = vars.data.value;
	      for (j = 0, len = ref.length; j < len; j++) {
	        d = ref[j];
	        row = [];
	        for (k = 0, len1 = columns.length; k < len1; k++) {
	          c = columns[k];
	          val = d[c];
	          if (vars.data.keys[c] === "string") {
	            val = '"' + val + '"';
	          }
	          row.push(val);
	        }
	        csv_to_return.push(row);
	      }
	    } else {
	      if (!columns) {
	        columns = [vars.id.value];
	        if (vars.time.value) {
	          columns.push(vars.time.value);
	        }
	        if (vars.size.value) {
	          columns.push(vars.size.value);
	        }
	        if (vars.text.value) {
	          columns.push(vars.text.value);
	        }
	      }
	      for (l = 0, len2 = columns.length; l < len2; l++) {
	        c = columns[l];
	        titles.push(vars.format.value(c));
	      }
	      csv_to_return.push(titles);
	      ref1 = vars.returned.nodes;
	      for (m = 0, len3 = ref1.length; m < len3; m++) {
	        node = ref1[m];
	        if ((node.values != null) && node.values instanceof Array) {
	          ref2 = node.values;
	          for (n = 0, len4 = ref2.length; n < len4; n++) {
	            val = ref2[n];
	            row = [];
	            for (o = 0, len5 = columns.length; o < len5; o++) {
	              col = columns[o];
	              val = fetchValue(vars, val, col);
	              if (typeof val === "string") {
	                val = '"' + val + '"';
	              }
	              row.push(val);
	            }
	            csv_to_return.push(row);
	          }
	        } else {
	          row = [];
	          for (p = 0, len6 = columns.length; p < len6; p++) {
	            col = columns[p];
	            row.push(fetchValue(vars, node, col));
	          }
	          csv_to_return.push(row);
	        }
	      }
	    }
	    csv_data = "data:text/csv;charset=utf-8,";
	    for (i = q = 0, len7 = csv_to_return.length; q < len7; i = ++q) {
	      c = csv_to_return[i];
	      dataString = c.join(",");
	      csv_data += (i < csv_to_return.length ? dataString + "\n" : dataString);
	    }
	    if (ie) {
	      blob = new Blob([csv_data], {
	        type: "text/csv;charset=utf-8;"
	      });
	      navigator.msSaveBlob(blob, title + ".csv");
	    } else {
	      encodedUri = encodeURI(csv_data);
	      link = document.createElement("a");
	      link.setAttribute("href", encodedUri);
	      link.setAttribute("download", title + ".csv");
	      link.click();
	    }
	    this.data = csv_to_return;
	    return columns;
	  },
	  value: void 0
	};


/***/ },
/* 281 */
/***/ function(module, exports, __webpack_require__) {

	var process;
	
	process = __webpack_require__(45);
	
	module.exports = {
	  accepted: [false, Array, Function, String],
	  cache: {},
	  delimiter: {
	    accepted: [String],
	    value: "|"
	  },
	  donut: {
	    size: 0.35
	  },
	  filetype: {
	    accepted: [false, "json", "xml", "html", "csv", "dsv", "tsv", "txt"],
	    value: false
	  },
	  filters: [],
	  keys: {},
	  mute: [],
	  large: 400,
	  opacity: 0.9,
	  padding: {
	    accepted: [Number],
	    value: 1
	  },
	  process: function(value, vars) {
	    return process(value, vars, this);
	  },
	  solo: [],
	  stroke: {
	    width: 1
	  },
	  value: false
	};


/***/ },
/* 282 */
/***/ function(module, exports) {

	module.exports = {
	  accepted: [Function, Number],
	  value: 0
	};


/***/ },
/* 283 */
/***/ function(module, exports) {

	module.exports = {
	  accepted: [false, Function, Object],
	  value: false
	};


/***/ },
/* 284 */
/***/ function(module, exports) {

	module.exports = {
	  accepted: [Boolean],
	  value: false
	};


/***/ },
/* 285 */
/***/ function(module, exports) {

	module.exports = {
	  accepted: [Boolean, String],
	  value: false
	};


/***/ },
/* 286 */
/***/ function(module, exports) {

	module.exports = {
	  accepted: [false, Array, Function, Number, String],
	  deprecates: "highlight",
	  process: function(value) {
	    if (value === false) {
	      return [];
	    } else if (value instanceof Array) {
	      return value;
	    } else {
	      return [value];
	    }
	  },
	  tooltip: {
	    accepted: [Boolean],
	    value: true
	  },
	  value: []
	};


/***/ },
/* 287 */
/***/ function(module, exports, __webpack_require__) {

	var align, decoration, family, transform;
	
	align = __webpack_require__(54);
	
	decoration = __webpack_require__(23);
	
	family = __webpack_require__(15);
	
	transform = __webpack_require__(21);
	
	module.exports = {
	  align: align(),
	  color: "#444444",
	  decoration: decoration(),
	  family: family(),
	  secondary: {
	    align: align(),
	    color: "#444444",
	    decoration: decoration(),
	    family: family(),
	    size: 12,
	    spacing: 0,
	    transform: transform(),
	    weight: 200
	  },
	  size: 12,
	  spacing: 0,
	  transform: transform(),
	  weight: 200
	};


/***/ },
/* 288 */
/***/ function(module, exports, __webpack_require__) {

	var decoration, family, transform;
	
	family = __webpack_require__(15);
	
	decoration = __webpack_require__(23);
	
	transform = __webpack_require__(21);
	
	module.exports = {
	  accepted: [false, Number, String],
	  font: {
	    align: "center",
	    color: "#444",
	    decoration: decoration(),
	    family: family(),
	    size: 11,
	    transform: transform(),
	    weight: 200
	  },
	  link: false,
	  padding: 0,
	  position: "bottom",
	  value: false
	};


/***/ },
/* 289 */
/***/ function(module, exports, __webpack_require__) {

	var formatNumber, locale, mergeObject, titleCase;
	
	formatNumber = __webpack_require__(92);
	
	locale = __webpack_require__(85);
	
	mergeObject = __webpack_require__(29);
	
	titleCase = __webpack_require__(69);
	
	module.exports = {
	  accepted: [Function, String],
	  affixes: {
	    accepted: [Object],
	    objectAccess: false,
	    value: {}
	  },
	  deprecates: ["number_format", "text_format"],
	  locale: {
	    accepted: function() {
	      return d3.keys(locale);
	    },
	    process: function(value) {
	      var defaultLocale, returnObject;
	      defaultLocale = "en_US";
	      returnObject = locale[defaultLocale];
	      if (value !== defaultLocale) {
	        returnObject = mergeObject(returnObject, locale[value]);
	      }
	      this.language = value;
	      return returnObject;
	    },
	    value: "en_US"
	  },
	  number: {
	    accepted: [false, Function],
	    value: false
	  },
	  process: function(value, vars) {
	    if (typeof value === "string") {
	      vars.self.format({
	        locale: value
	      });
	    } else {
	      if (typeof value === "function") {
	        return value;
	      }
	    }
	    return this.value;
	  },
	  text: {
	    accepted: [false, Function],
	    value: false
	  },
	  value: function(value, opts) {
	    var f, v, vars;
	    if (!opts) {
	      opts = {};
	    }
	    if (!opts.locale) {
	      opts.locale = this.locale.value;
	    }
	    vars = opts.vars || {};
	    if (vars.time && vars.time.value && opts.key === vars.time.value) {
	      v = value.constructor === Date ? value : new Date(value);
	      return vars.data.time.format(v);
	    } else if (typeof value === "number") {
	      f = this.number.value || formatNumber;
	      return f(value, opts);
	    } else if (typeof value === "string") {
	      f = this.text.value || titleCase;
	      return f(value, opts);
	    } else {
	      return JSON.stringify(value);
	    }
	  }
	};


/***/ },
/* 290 */
/***/ function(module, exports) {

	module.exports = {
	  accepted: [false, Number],
	  max: 600,
	  secondary: false,
	  small: 200,
	  value: false
	};


/***/ },
/* 291 */
/***/ function(module, exports, __webpack_require__) {

	var align, decoration, family, filter, orientMap, position, rendering, transform;
	
	align = __webpack_require__(54);
	
	decoration = __webpack_require__(23);
	
	family = __webpack_require__(15);
	
	filter = __webpack_require__(12);
	
	position = __webpack_require__(192);
	
	rendering = __webpack_require__(88);
	
	transform = __webpack_require__(21);
	
	orientMap = {
	  x: "bottom",
	  x2: "top",
	  y: "left",
	  y2: "right"
	};
	
	module.exports = function(axis) {
	  return {
	    accepted: [Array, Boolean, Function, Object, String],
	    affixes: {
	      accepted: [Boolean],
	      separator: {
	        accepted: [Boolean, Array],
	        value: true
	      },
	      value: false
	    },
	    axis: {
	      accepted: [Boolean],
	      color: "#444",
	      font: {
	        color: false,
	        decoration: decoration(false),
	        family: family(""),
	        size: false,
	        spacing: 0,
	        transform: transform(false),
	        weight: false
	      },
	      rendering: rendering(),
	      value: true
	    },
	    dataFilter: true,
	    deprecates: [axis + "axis", axis + "axis_val", axis + "axis_var"],
	    domain: {
	      accepted: [false, Array],
	      value: false
	    },
	    grid: {
	      accepted: [Boolean],
	      color: "#ccc",
	      rendering: rendering(),
	      value: true
	    },
	    label: {
	      accepted: [Boolean, String],
	      fetch: function(vars) {
	        if (this.value === true) {
	          return vars.format.value(vars[axis].value, {
	            key: axis,
	            vars: vars
	          });
	        }
	        return this.value;
	      },
	      font: {
	        color: "#444",
	        decoration: decoration(),
	        family: family(),
	        size: 12,
	        spacing: 0,
	        transform: transform(),
	        weight: 200
	      },
	      padding: 3,
	      value: true
	    },
	    lines: {
	      accept: [false, Array, Number, Object],
	      dasharray: {
	        accepted: [Array, String],
	        process: function(value) {
	          if (value instanceof Array) {
	            value = value.filter(function(d) {
	              return !isNaN(d);
	            });
	            value = value.length ? value.join(", ") : "none";
	          }
	          return value;
	        },
	        value: "10, 10"
	      },
	      color: "#888",
	      font: {
	        align: align("right"),
	        color: "#444",
	        background: {
	          accepted: [Boolean],
	          value: true
	        },
	        decoration: decoration(),
	        family: family(),
	        padding: {
	          accepted: [Number],
	          value: 10
	        },
	        position: position("middle"),
	        size: 12,
	        transform: transform(),
	        weight: 200
	      },
	      process: Array,
	      rendering: rendering(),
	      width: 1,
	      value: []
	    },
	    mouse: {
	      accept: [Boolean],
	      dasharray: {
	        accepted: [Array, String],
	        process: function(value) {
	          if (value instanceof Array) {
	            value = value.filter(function(d) {
	              return !isNaN(d);
	            });
	            value = value.length ? value.join(", ") : "none";
	          }
	          return value;
	        },
	        value: "none"
	      },
	      rendering: rendering(),
	      width: 2,
	      value: true
	    },
	    mute: filter(true),
	    orient: {
	      accepted: ["top", "right", "bottom", "left"],
	      value: orientMap[axis]
	    },
	    padding: {
	      accepted: [Number],
	      value: 0.1
	    },
	    persist: {
	      position: {
	        accepted: [Boolean],
	        value: false
	      },
	      size: {
	        accepted: [Boolean],
	        value: true
	      }
	    },
	    range: {
	      accepted: [false, Array],
	      value: false
	    },
	    scale: {
	      accepted: ["linear", "log", "discrete", "share"],
	      deprecates: ["layout", "unique_axis", axis + "axis_scale"],
	      process: function(value, vars) {
	        var i, len, ref, scale;
	        ref = ["log", "discrete", "share"];
	        for (i = 0, len = ref.length; i < len; i++) {
	          scale = ref[i];
	          if (scale === value) {
	            vars.axes[scale] = axis;
	          } else {
	            if (vars.axes[scale] === axis) {
	              vars.axes[scale] = false;
	            }
	          }
	        }
	        if (value === "discrete") {
	          vars.axes.opposite = (axis.indexOf("x") === 0 ? "y" : "x");
	        }
	        return value;
	      },
	      value: "linear"
	    },
	    solo: filter(true),
	    stacked: {
	      accepted: [Boolean],
	      process: function(value, vars) {
	        if (!value && vars.axes.stacked === axis) {
	          vars.axes.stacked = false;
	        } else {
	          if (value) {
	            vars.axes.stacked = axis;
	          }
	        }
	        return value;
	      },
	      value: false
	    },
	    ticks: {
	      accepted: [false, Array],
	      color: "#ccc",
	      font: {
	        color: "#666",
	        decoration: decoration(),
	        family: family(),
	        size: 10,
	        spacing: 0,
	        transform: transform(),
	        weight: 200
	      },
	      labels: {
	        accepted: [Boolean, Array],
	        value: true
	      },
	      rendering: rendering(),
	      size: 10,
	      width: 1,
	      value: false
	    },
	    value: false,
	    zerofill: {
	      accepted: [Boolean],
	      value: false
	    }
	  };
	};


/***/ },
/* 292 */
/***/ function(module, exports) {

	module.exports = {
	  accepted: [Boolean],
	  back: function() {
	    if (this.states.length) {
	      return this.states.pop()();
	    }
	  },
	  chain: [],
	  reset: function() {
	    var results;
	    results = [];
	    while (this.states.length) {
	      results.push(this.states.pop()());
	    }
	    return results;
	  },
	  states: [],
	  value: true
	};


/***/ },
/* 293 */
/***/ function(module, exports, __webpack_require__) {

	var process;
	
	process = __webpack_require__(127);
	
	module.exports = {
	  accepted: [false, Array, Function, Object, String],
	  back: {
	    accepted: [false, String],
	    fallback: "&#x276e;",
	    opacity: 1,
	    process: process,
	    rotate: 0,
	    value: "fa-angle-left"
	  },
	  deprecates: "icon_var",
	  style: {
	    accepted: [Object, String],
	    deprecates: "icon_style",
	    value: "default"
	  },
	  value: false
	};


/***/ },
/* 294 */
/***/ function(module, exports, __webpack_require__) {

	var filter;
	
	filter = __webpack_require__(12);
	
	module.exports = {
	  accepted: [Array, String],
	  dataFilter: true,
	  deprecates: ["id_var", "nesting"],
	  grouping: {
	    accepted: [Boolean],
	    value: true
	  },
	  mute: filter(true),
	  nesting: ["id"],
	  solo: filter(true),
	  value: "id"
	};


/***/ },
/* 295 */
/***/ function(module, exports, __webpack_require__) {

	var decoration, family, transform;
	
	decoration = __webpack_require__(23);
	
	family = __webpack_require__(15);
	
	transform = __webpack_require__(21);
	
	module.exports = {
	  accepted: [Boolean],
	  align: {
	    accepted: ["start", "middle", "end", "left", "center", "right"],
	    process: function(value) {
	      var css;
	      css = ["left", "center", "right"].indexOf(value);
	      if (css >= 0) {
	        value = this.accepted[css];
	      }
	      return value;
	    },
	    value: "middle"
	  },
	  color: {
	    accepted: [false, String],
	    value: false
	  },
	  font: {
	    decoration: decoration(),
	    family: family(),
	    size: 11,
	    transform: transform(),
	    weight: 200
	  },
	  padding: 7,
	  resize: {
	    accepted: [Boolean],
	    value: true
	  },
	  text: {
	    accepted: [false, Function, String],
	    value: false
	  },
	  segments: 2,
	  valign: {
	    accepted: [false, "top", "middle", "bottom"],
	    value: "middle"
	  },
	  value: true
	};


/***/ },
/* 296 */
/***/ function(module, exports, __webpack_require__) {

	var family;
	
	family = __webpack_require__(15);
	
	module.exports = {
	  accepted: [Boolean],
	  align: "middle",
	  filters: {
	    accepted: [Boolean],
	    value: false
	  },
	  font: {
	    align: "middle",
	    color: "#444444",
	    family: family(),
	    size: [8, 14],
	    weight: 200
	  },
	  gradient: {
	    height: 10
	  },
	  icons: {
	    accepted: [Boolean],
	    value: true
	  },
	  labels: {
	    accepted: [Boolean],
	    value: true
	  },
	  order: {
	    accepted: ["color", "id", "size", "text"],
	    sort: {
	      accepted: ["asc", "desc"],
	      value: "asc"
	    },
	    value: "color"
	  },
	  size: [8, 30],
	  tooltip: {
	    accepted: [Boolean],
	    value: true
	  },
	  text: {
	    accepted: [false, Function, String],
	    value: false
	  },
	  value: true
	};


/***/ },
/* 297 */
/***/ function(module, exports, __webpack_require__) {

	var decoration, family, transform;
	
	decoration = __webpack_require__(23);
	
	family = __webpack_require__(15);
	
	transform = __webpack_require__(21);
	
	module.exports = {
	  font: {
	    color: "#444444",
	    decoration: decoration(),
	    family: family(),
	    transform: transform(),
	    weight: 200
	  },
	  hover: {
	    color: "#444444",
	    decoration: decoration(),
	    family: family(),
	    transform: transform(),
	    weight: 200
	  }
	};


/***/ },
/* 298 */
/***/ function(module, exports, __webpack_require__) {

	var process;
	
	process = __webpack_require__(87);
	
	module.exports = {
	  accepted: [Number, Object, String],
	  process: function(value) {
	    var userValue;
	    if (value === void 0) {
	      value = this.value;
	    }
	    userValue = value;
	    process(value, this);
	    return userValue;
	  },
	  value: 0
	};


/***/ },
/* 299 */
/***/ function(module, exports, __webpack_require__) {

	var decoration, family, transform;
	
	decoration = __webpack_require__(23);
	
	family = __webpack_require__(15);
	
	transform = __webpack_require__(21);
	
	module.exports = {
	  accepted: [Boolean, String],
	  background: {
	    accepted: [false, String],
	    value: false
	  },
	  branding: {
	    accepted: [Boolean],
	    image: {
	      dark: "http://d3plus.org/assets/img/icon-transparent-invert.png",
	      light: "http://d3plus.org/assets/img/icon-transparent.png"
	    },
	    value: false
	  },
	  font: {
	    color: "#444",
	    decoration: decoration(),
	    family: family(),
	    size: 16,
	    transform: transform(),
	    weight: 200
	  },
	  padding: 5,
	  style: {
	    accepted: [false, "small", "large"],
	    value: false
	  },
	  value: true
	};


/***/ },
/* 300 */
/***/ function(module, exports) {

	module.exports = {
	  accepted: [Boolean],
	  click: {
	    accepted: [Boolean, Function],
	    value: true
	  },
	  move: {
	    accepted: [Boolean, Function],
	    value: true
	  },
	  out: {
	    accepted: [Boolean, Function],
	    value: true
	  },
	  over: {
	    accepted: [Boolean, Function],
	    value: true
	  },
	  value: true
	};


/***/ },
/* 301 */
/***/ function(module, exports, __webpack_require__) {

	var process;
	
	process = __webpack_require__(45);
	
	module.exports = {
	  accepted: [false, Array, Function, String],
	  delimiter: {
	    accepted: [String],
	    value: "|"
	  },
	  filetype: {
	    accepted: [false, "json", "xml", "html", "csv", "dsv", "tsv", "txt"],
	    value: false
	  },
	  overlap: 0.6,
	  process: process,
	  value: false
	};


/***/ },
/* 302 */
/***/ function(module, exports) {

	module.exports = {
	  accepted: [Boolean, Function, String],
	  agg: {
	    accepted: [false, Function, "sum", "min", "max", "mean", "median"],
	    value: false
	  },
	  deprecates: ["sort"],
	  sort: {
	    accepted: ["asc", "desc"],
	    value: "desc"
	  },
	  value: false
	};


/***/ },
/* 303 */
/***/ function(module, exports) {

	module.exports = {
	  "accepted": [Boolean],
	  "value": false,
	  "timeout": 400,
	  "process": function(value, vars) {
	    var resize, resizeEnd;
	    if (!value) {
	      return false;
	    }
	    resize = null;
	    resizeEnd = function() {
	      var height, mainNode, width;
	      mainNode = vars.container.value.node().parentNode.getBoundingClientRect();
	      width = mainNode.width;
	      height = mainNode.height;
	      vars.width.value = width;
	      vars.height.value = height;
	      return vars.self(vars.container.value);
	    };
	    d3.select(window).on("resize." + vars.container.id, (function(_this) {
	      return function(e) {
	        clearTimeout(resize);
	        return resize = setTimeout(resizeEnd, _this.timeout);
	      };
	    })(this));
	    return value;
	  }
	};


/***/ },
/* 304 */
/***/ function(module, exports, __webpack_require__) {

	var rendering;
	
	rendering = __webpack_require__(88);
	
	module.exports = {
	  accepted: function(vars) {
	    var list;
	    list = vars.types[vars.type.value].shapes;
	    if (list && !(list instanceof Array)) {
	      list = [list];
	    }
	    if (list.length) {
	      return list;
	    } else {
	      return ["square"];
	    }
	  },
	  interpolate: {
	    accepted: ["basis", "basis-open", "cardinal", "cardinal-open", "linear", "monotone", "step", "step-before", "step-after"],
	    deprecates: "stack_type",
	    value: "linear"
	  },
	  rendering: rendering(),
	  value: false
	};


/***/ },
/* 305 */
/***/ function(module, exports, __webpack_require__) {

	var filter;
	
	filter = __webpack_require__(12);
	
	module.exports = {
	  accepted: [false, Function, Number, Object, String],
	  dataFilter: true,
	  deprecates: ["value", "value_var"],
	  mute: filter(true),
	  scale: {
	    accepted: [Function],
	    deprecates: "size_scale",
	    max: {
	      accepted: [Function, Number],
	      value: function(vars) {
	        return Math.floor(d3.max([d3.min([vars.width.viz, vars.height.viz]) / 15, 6]));
	      }
	    },
	    min: {
	      accepted: [Function, Number],
	      value: 3
	    },
	    value: d3.scale.sqrt()
	  },
	  solo: filter(true),
	  threshold: {
	    accepted: [Boolean, Function, Number],
	    value: false
	  },
	  value: false
	};


/***/ },
/* 306 */
/***/ function(module, exports) {

	module.exports = {
	  value: false
	};


/***/ },
/* 307 */
/***/ function(module, exports, __webpack_require__) {

	var filter;
	
	filter = __webpack_require__(12);
	
	module.exports = {
	  accepted: [false, Function, Object, String],
	  deprecates: ["else_var", "else"],
	  mute: filter(true),
	  solo: filter(true),
	  value: false
	};


/***/ },
/* 308 */
/***/ function(module, exports, __webpack_require__) {

	var filter;
	
	filter = __webpack_require__(12);
	
	module.exports = {
	  accepted: [Array, Boolean, Function, Object, String],
	  deprecates: ["name_array", "text_var"],
	  nesting: true,
	  mute: filter(true),
	  solo: filter(true),
	  value: false
	};


/***/ },
/* 309 */
/***/ function(module, exports, __webpack_require__) {

	var filter;
	
	filter = __webpack_require__(12);
	
	module.exports = {
	  accepted: [Array, Boolean, Function, Object, String],
	  dataFilter: true,
	  deprecates: ["year", "year_var"],
	  fixed: {
	    accepted: [Boolean],
	    deprecates: ["static_axis", "static_axes"],
	    value: true
	  },
	  format: {
	    accepted: [false, Array, Function, String],
	    value: false
	  },
	  mute: filter(false),
	  solo: filter(false),
	  value: false
	};


/***/ },
/* 310 */
/***/ function(module, exports) {

	module.exports = {
	  accepted: [Boolean],
	  align: "middle",
	  hover: {
	    accepted: ["all-scroll", "col-resize", "crosshair", "default", "grab", "grabbing", "move", "pointer"],
	    value: "pointer"
	  },
	  handles: {
	    accepted: [Boolean],
	    color: "#666",
	    opacity: 1,
	    size: 3,
	    stroke: "#666",
	    value: true
	  },
	  height: {
	    accepted: [false, Number],
	    value: false
	  },
	  play: {
	    accepted: [Boolean],
	    icon: {
	      accepted: [false, String],
	      awesome: "",
	      fallback: "►"
	    },
	    pause: {
	      accepted: [false, String],
	      awesome: "",
	      fallback: "❚❚"
	    },
	    timing: {
	      accepted: [Number],
	      value: 1500
	    },
	    value: true
	  },
	  value: true
	};


/***/ },
/* 311 */
/***/ function(module, exports) {

	module.exports = {
	  mouseevents: 60,
	  transitions: 600,
	  ui: 200
	};


/***/ },
/* 312 */
/***/ function(module, exports, __webpack_require__) {

	var decoration, family, stringStrip, transform;
	
	decoration = __webpack_require__(23);
	
	family = __webpack_require__(15);
	
	transform = __webpack_require__(21);
	
	stringStrip = __webpack_require__(33);
	
	module.exports = {
	  accepted: [false, Function, String],
	  font: {
	    align: "center",
	    color: "#444444",
	    decoration: decoration(),
	    family: family(),
	    size: 16,
	    transform: transform(),
	    weight: 400
	  },
	  height: false,
	  link: false,
	  padding: 2,
	  position: "top",
	  process: function(value, vars) {
	    var id;
	    if (vars.container.id.indexOf("default") === 0 && value) {
	      id = stringStrip(value).toLowerCase();
	      vars.self.container({
	        id: id
	      });
	    }
	    return value;
	  },
	  sub: {
	    accepted: [false, Function, String],
	    deprecates: "sub_title",
	    font: {
	      align: "center",
	      color: "#444444",
	      decoration: decoration(),
	      family: family(),
	      size: 12,
	      transform: transform(),
	      weight: 200
	    },
	    link: false,
	    padding: 1,
	    position: "top",
	    value: false
	  },
	  total: {
	    accepted: [Boolean, Object],
	    deprecates: "total_bar",
	    font: {
	      align: "center",
	      color: "#444444",
	      decoration: decoration(),
	      family: family(),
	      size: 12,
	      transform: transform(),
	      weight: 200,
	      value: false
	    },
	    link: false,
	    padding: 1,
	    position: "top",
	    value: false
	  },
	  width: false,
	  value: false
	};


/***/ },
/* 313 */
/***/ function(module, exports, __webpack_require__) {

	var family, transform;
	
	family = __webpack_require__(15);
	
	transform = __webpack_require__(21);
	
	module.exports = {
	  accepted: [Boolean, Array, Function, Object, String],
	  anchor: "top center",
	  background: "#ffffff",
	  children: {
	    accepted: [Boolean],
	    value: true
	  },
	  connections: {
	    accepted: [Boolean],
	    value: true
	  },
	  curtain: {
	    color: "#ffffff",
	    opacity: 0.8
	  },
	  deprecates: "tooltip_info",
	  extent: {
	    accepted: [Boolean],
	    value: true
	  },
	  font: {
	    color: "#444",
	    family: family(),
	    size: 12,
	    transform: transform(),
	    weight: 200
	  },
	  fullscreen: {
	    accepted: [Boolean],
	    value: false
	  },
	  html: {
	    accepted: [false, Function, Object, String],
	    deprecates: "click_function",
	    value: false
	  },
	  iqr: {
	    accepted: [Boolean],
	    value: true
	  },
	  large: 250,
	  share: {
	    accepted: [Boolean],
	    value: true
	  },
	  size: {
	    accepted: [Boolean],
	    value: true
	  },
	  small: 225,
	  stacked: {
	    accepted: [Boolean],
	    value: false
	  },
	  sub: {
	    accepted: [false, Function, String],
	    value: false
	  },
	  value: true
	};


/***/ },
/* 314 */
/***/ function(module, exports, __webpack_require__) {

	var filter;
	
	filter = __webpack_require__(12);
	
	module.exports = {
	  accepted: [false, Function, Object, String],
	  deprecates: ["total_var"],
	  mute: filter(true),
	  solo: filter(true),
	  value: false
	};


/***/ },
/* 315 */
/***/ function(module, exports) {

	module.exports = {
	  accepted: function(vars) {
	    return d3.keys(vars.types);
	  },
	  mode: {
	    accepted: function(vars) {
	      return vars.types[vars.type.value].modes || [false];
	    },
	    value: false
	  },
	  value: "tree_map"
	};


/***/ },
/* 316 */
/***/ function(module, exports, __webpack_require__) {

	var align, decoration, family, transform;
	
	family = __webpack_require__(15);
	
	align = __webpack_require__(54);
	
	decoration = __webpack_require__(23);
	
	transform = __webpack_require__(21);
	
	module.exports = {
	  accepted: [Array, Boolean],
	  align: align("center"),
	  border: 1,
	  color: {
	    primary: {
	      process: function(value, vars) {
	        var primary;
	        primary = this.value;
	        if (!vars.ui.color.secondary.value) {
	          vars.ui.color.secondary.value = d3.rgb(primary).darker(0.75).toString();
	        }
	        return value;
	      },
	      value: "#ffffff"
	    },
	    secondary: {
	      value: false
	    }
	  },
	  display: {
	    acceped: ["block", "inline-block"],
	    value: "inline-block"
	  },
	  font: {
	    align: "center",
	    color: "#444",
	    decoration: decoration(),
	    family: family(),
	    size: 11,
	    transform: transform(),
	    weight: 200
	  },
	  margin: 5,
	  padding: 5,
	  position: {
	    accepted: ["top", "right", "bottom", "left"],
	    value: "bottom"
	  },
	  value: false
	};


/***/ },
/* 317 */
/***/ function(module, exports) {

	module.exports = {
	  accepted: [false, Number],
	  secondary: false,
	  small: 200,
	  value: false
	};


/***/ },
/* 318 */
/***/ function(module, exports, __webpack_require__) {

	var bar, buckets, fetchValue, graph, nest, stack, uniques,
	  indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };
	
	buckets = __webpack_require__(30);
	
	fetchValue = __webpack_require__(3);
	
	graph = __webpack_require__(57);
	
	nest = __webpack_require__(95);
	
	stack = __webpack_require__(96);
	
	uniques = __webpack_require__(8);
	
	bar = function(vars) {
	  var bars, base, cMargin, d, data, discrete, discreteVal, divisions, domains, h, i, ids, j, k, l, len, len1, len2, length, maxBars, maxSize, mod, nested, newSize, oMargin, offset, oppMethod, oppVal, opposite, p, padding, point, ref, ref1, space, value, w, x, zero;
	  discrete = vars.axes.discrete;
	  h = discrete === "x" ? "height" : "width";
	  w = discrete === "x" ? "width" : "height";
	  opposite = vars.axes.opposite;
	  cMargin = discrete === "x" ? "left" : "top";
	  oMargin = discrete === "x" ? "top" : "left";
	  graph(vars, {
	    buffer: true,
	    zero: opposite
	  });
	  domains = vars.x.domain.viz.concat(vars.y.domain.viz);
	  if (domains.indexOf(void 0) >= 0) {
	    return [];
	  }
	  nested = vars.data.viz;
	  if (vars.axes.stacked) {
	    for (j = 0, len = nested.length; j < len; j++) {
	      point = nested[j];
	      stack(vars, point.values);
	    }
	  }
	  space = vars.axes[w] / vars[vars.axes.discrete].ticks.values.length;
	  padding = vars[vars.axes.discrete].padding.value;
	  if (padding < 1) {
	    padding *= space;
	  }
	  if (padding * 2 > space) {
	    padding = space * 0.1;
	  }
	  maxSize = space - padding * 2;
	  if (!vars.axes.stacked) {
	    if (vars[discrete].persist.position.value) {
	      if (ref = vars[discrete].value, indexOf.call(vars.id.nesting, ref) >= 0) {
	        divisions = d3.max(nested, function(b) {
	          return b.values.length;
	        });
	      } else {
	        divisions = uniques(nested, vars.id.value, fetchValue, vars).length;
	      }
	      maxSize /= divisions;
	      offset = space / 2 - maxSize / 2 - padding;
	      x = d3.scale.ordinal();
	      if (divisions === 1) {
	        x.domain([0]).range([0]);
	      } else {
	        x.domain([0, divisions - 1]).range([-offset, offset]);
	      }
	    } else {
	      x = d3.scale.linear();
	    }
	  }
	  data = [];
	  zero = 0;
	  if (vars[discrete].persist.position.value && !vars.axes.stacked) {
	    ids = uniques(d3.merge(nested.map(function(d) {
	      return d.values;
	    })), vars.id.value, fetchValue, vars, vars.id.value, false);
	    x.domain(ids);
	    if (ids.length === 1) {
	      x.range([0]);
	    } else {
	      x.range(buckets(x.range(), ids.length));
	    }
	  }
	  maxBars = d3.max(nested, function(b) {
	    return b.values.length;
	  });
	  for (k = 0, len1 = nested.length; k < len1; k++) {
	    p = nested[k];
	    if (vars.axes.stacked) {
	      bars = 1;
	      newSize = maxSize;
	    } else if (vars[discrete].persist.position.value) {
	      bars = divisions;
	      newSize = maxSize;
	    } else {
	      bars = p.values.length;
	      if (vars[discrete].persist.size.value) {
	        newSize = maxSize / maxBars;
	        offset = space / 2 - ((maxBars - bars) * (newSize / 2)) - newSize / 2 - padding;
	      } else {
	        newSize = maxSize / bars;
	        offset = space / 2 - newSize / 2 - padding;
	      }
	      x.domain([0, bars - 1]);
	      x.range([-offset, offset]);
	    }
	    ref1 = p.values;
	    for (i = l = 0, len2 = ref1.length; l < len2; i = ++l) {
	      d = ref1[i];
	      if (vars.axes.stacked) {
	        mod = 0;
	      } else if (vars[discrete].persist.position.value) {
	        mod = x(fetchValue(vars, d, vars.id.value));
	      } else {
	        mod = x(i % bars);
	      }
	      oppMethod = vars[opposite];
	      if (vars.axes.stacked) {
	        value = d.d3plus[opposite];
	        base = d.d3plus[opposite + "0"];
	      } else {
	        oppVal = fetchValue(vars, d, oppMethod.value);
	        if (oppVal === null) {
	          oppMethod = vars[opposite + "2"];
	          oppVal = fetchValue(vars, d, oppMethod.value);
	        }
	        if (oppVal === 0) {
	          continue;
	        }
	        if (oppMethod.scale.value === "log") {
	          zero = oppVal < 0 ? -1 : 1;
	        }
	        value = oppMethod.scale.viz(oppVal);
	        base = oppMethod.scale.viz(zero);
	      }
	      discreteVal = fetchValue(vars, d, vars[discrete].value);
	      d.d3plus[discrete] = vars[discrete].scale.viz(discreteVal);
	      d.d3plus[discrete] += vars.axes.margin[cMargin] + mod;
	      length = base - value;
	      d.d3plus[opposite] = base - length / 2;
	      if (!vars.axes.stacked) {
	        d.d3plus[opposite] += vars.axes.margin[oMargin];
	      }
	      delete d.d3plus.r;
	      d.d3plus[w] = newSize;
	      d.d3plus[h] = Math.abs(length);
	      d.d3plus.init = {};
	      d.d3plus.init[opposite] = oppMethod.scale.viz(zero);
	      d.d3plus.init[opposite] -= d.d3plus[opposite];
	      d.d3plus.init[opposite] += vars.axes.margin[oMargin];
	      d.d3plus.init[w] = d.d3plus[w];
	      if (vars.text.value) {
	        delete d.d3plus.label;
	      } else {
	        d.d3plus.label = false;
	      }
	      data.push(d);
	    }
	  }
	  return data;
	};
	
	bar.filter = function(vars, data) {
	  return nest(vars, data, vars[vars.axes.discrete].value);
	};
	
	bar.requirements = ["data", "x", "y"];
	
	bar.setup = function(vars) {
	  var axis, size, y;
	  if (!vars.axes.discrete) {
	    axis = vars.time.value === vars.y.value ? "y" : "x";
	    vars.self[axis]({
	      scale: "discrete"
	    });
	  }
	  y = vars[vars.axes.opposite];
	  size = vars.size;
	  if ((!y.value && size.value) || (size.changed && size.previous === y.value)) {
	    return vars.self[vars.axes.opposite](size.value);
	  } else if ((!size.value && y.value) || (y.changed && y.previous === size.value)) {
	    return vars.self.size(y.value);
	  }
	};
	
	bar.shapes = ["square"];
	
	module.exports = bar;


/***/ },
/* 319 */
/***/ function(module, exports, __webpack_require__) {

	var box, fetchValue, graph, strip, uniques;
	
	fetchValue = __webpack_require__(3);
	
	graph = __webpack_require__(57);
	
	strip = __webpack_require__(33);
	
	uniques = __webpack_require__(8);
	
	box = function(vars) {
	  var disMargin, discrete, domains, h, medians, mergeData, mode, noData, oppMargin, opposite, returnData, size, space, w;
	  graph(vars, {
	    buffer: true
	  });
	  domains = vars.x.domain.viz.concat(vars.y.domain.viz);
	  if (domains.indexOf(void 0) >= 0) {
	    return [];
	  }
	  discrete = vars.axes.discrete;
	  opposite = vars.axes.opposite;
	  disMargin = discrete === "x" ? vars.axes.margin.left : vars.axes.margin.top;
	  oppMargin = opposite === "x" ? vars.axes.margin.left : vars.axes.margin.top;
	  h = discrete === "x" ? "height" : "width";
	  w = discrete === "x" ? "width" : "height";
	  space = vars.axes[w] / vars[discrete].ticks.values.length;
	  size = vars.size.value;
	  size = typeof size === "number" ? size : 100;
	  space = d3.min([space - vars.labels.padding * 2, size]);
	  mode = vars.type.mode.value;
	  if (!(mode instanceof Array)) {
	    mode = [mode, mode];
	  }
	  mergeData = function(arr) {
	    var key, obj, vals;
	    obj = {};
	    for (key in vars.data.keys) {
	      vals = uniques(arr, key, fetchValue, vars);
	      obj[key] = vals.length === 1 ? vals[0] : vals;
	    }
	    return obj;
	  };
	  noData = false;
	  medians = [];
	  returnData = [];
	  d3.nest().key(function(d) {
	    return fetchValue(vars, d, vars[discrete].value);
	  }).rollup(function(leaves) {
	    var bottom, bottomLabel, bottomWhisker, boxData, d, diff1, diff2, first, i, iqr, j, key, label, len, len1, median, medianBuffer, medianData, medianHeight, medianText, outliers, scale, second, tooltipData, top, topLabel, topWhisker, uniqs, val, values, x, y;
	    scale = vars[opposite].scale.viz;
	    values = leaves.map(function(d) {
	      return fetchValue(vars, d, vars[opposite].value);
	    });
	    values.sort(function(a, b) {
	      return a - b;
	    });
	    uniqs = uniques(values);
	    first = d3.quantile(values, 0.25);
	    median = d3.quantile(values, 0.50);
	    second = d3.quantile(values, 0.75);
	    tooltipData = {};
	    if (mode[1] === "tukey") {
	      iqr = first - second;
	      top = second - iqr * 1.5;
	      topLabel = "top tukey";
	    } else if (mode[1] === "extent") {
	      top = d3.max(values);
	      topLabel = "maximum";
	    } else if (typeof mode[1] === "number") {
	      top = d3.quantile(values, (100 - mode[1]) / 100);
	      topLabel = mode[1] + " percentile";
	    }
	    top = d3.min([d3.max(values), top]);
	    if (vars.tooltip.extent.value) {
	      tooltipData[topLabel] = {
	        key: vars[opposite].value,
	        value: top
	      };
	    }
	    if (vars.tooltip.iqr.value) {
	      tooltipData["third quartile"] = {
	        key: vars[opposite].value,
	        value: second
	      };
	      tooltipData["median"] = {
	        key: vars[opposite].value,
	        value: median
	      };
	      tooltipData["first quartile"] = {
	        key: vars[opposite].value,
	        value: first
	      };
	    }
	    if (mode[0] === "tukey") {
	      iqr = first - second;
	      bottom = first + iqr * 1.5;
	      bottomLabel = "bottom tukey";
	    } else if (mode[0] === "extent") {
	      bottom = d3.min(values);
	      bottomLabel = "minimum";
	    } else if (typeof mode[0] === "number") {
	      bottom = d3.quantile(values, mode[0] / 100);
	      bottomLabel = mode[0] + " percentile";
	    }
	    bottom = d3.max([d3.min(values), bottom]);
	    if (vars.tooltip.extent.value) {
	      tooltipData[bottomLabel] = {
	        key: vars[opposite].value,
	        value: bottom
	      };
	    }
	    boxData = [];
	    bottomWhisker = [];
	    topWhisker = [];
	    outliers = [];
	    for (i = 0, len = leaves.length; i < len; i++) {
	      d = leaves[i];
	      val = fetchValue(vars, d, vars[opposite].value);
	      if (val >= first && val <= second) {
	        boxData.push(d);
	      } else if (val >= bottom && val < first) {
	        bottomWhisker.push(d);
	      } else if (val <= top && val > second) {
	        topWhisker.push(d);
	      } else {
	        outliers.push(d);
	      }
	    }
	    key = fetchValue(vars, leaves[0], vars[discrete].value);
	    x = vars[discrete].scale.viz(key);
	    x += disMargin;
	    label = vars.format.value(key, {
	      key: vars[discrete].value,
	      vars: vars
	    });
	    if (key.constructor === Date) {
	      key = key.getTime();
	    }
	    key = strip(key);
	    boxData = mergeData(boxData);
	    boxData.d3plus = {
	      color: "white",
	      id: "box_" + key,
	      init: {},
	      label: false,
	      shape: "square",
	      stroke: "#444",
	      text: "Interquartile Range for " + label
	    };
	    boxData.d3plus[w] = space;
	    boxData.d3plus.init[w] = space;
	    boxData.d3plus[h] = Math.abs(scale(first) - scale(second));
	    boxData.d3plus[discrete] = x;
	    y = d3.min([scale(first), scale(second)]) + boxData.d3plus[h] / 2;
	    y += oppMargin;
	    boxData.d3plus[opposite] = y;
	    boxData.d3plus.tooltip = tooltipData;
	    returnData.push(boxData);
	    medianData = {
	      d3plus: {
	        id: "median_line_" + key,
	        position: h === "height" ? "top" : "right",
	        shape: "whisker",
	        "static": true
	      }
	    };
	    medianText = vars.format.value(median, {
	      key: vars[opposite].value,
	      vars: vars
	    });
	    label = {
	      background: "#fff",
	      names: [medianText],
	      padding: 0,
	      resize: false,
	      x: 0,
	      y: 0
	    };
	    diff1 = Math.abs(scale(median) - scale(first));
	    diff2 = Math.abs(scale(median) - scale(second));
	    medianHeight = d3.min([diff1, diff2]) * 2;
	    medianBuffer = vars.data.stroke.width * 2 + vars.labels.padding * 2;
	    label[w === "width" ? "w" : "h"] = space - medianBuffer;
	    label[h === "width" ? "w" : "h"] = medianHeight - medianBuffer;
	    medianData.d3plus.label = label;
	    medianData.d3plus[w] = space;
	    medianData.d3plus[discrete] = x;
	    medianData.d3plus[opposite] = scale(median) + oppMargin;
	    returnData.push(medianData);
	    bottomWhisker = mergeData(bottomWhisker);
	    bottomWhisker.d3plus = {
	      id: "bottom_whisker_line_" + key,
	      offset: boxData.d3plus[h] / 2,
	      position: h === "height" ? "bottom" : "left",
	      shape: "whisker",
	      "static": true
	    };
	    if (opposite === "x") {
	      bottomWhisker.d3plus.offset *= -1;
	    }
	    bottomWhisker.d3plus[h] = Math.abs(scale(bottom) - scale(first));
	    bottomWhisker.d3plus[w] = space;
	    bottomWhisker.d3plus[discrete] = x;
	    bottomWhisker.d3plus[opposite] = y;
	    returnData.push(bottomWhisker);
	    topWhisker = mergeData(topWhisker);
	    topWhisker.d3plus = {
	      id: "top_whisker_line_" + key,
	      offset: boxData.d3plus[h] / 2,
	      position: h === "height" ? "top" : "right",
	      shape: "whisker",
	      "static": true
	    };
	    if (opposite === "y") {
	      topWhisker.d3plus.offset *= -1;
	    }
	    topWhisker.d3plus[h] = Math.abs(scale(top) - scale(second));
	    topWhisker.d3plus[w] = space;
	    topWhisker.d3plus[discrete] = x;
	    topWhisker.d3plus[opposite] = y;
	    returnData.push(topWhisker);
	    for (j = 0, len1 = outliers.length; j < len1; j++) {
	      d = outliers[j];
	      d.d3plus[discrete] = x;
	      d.d3plus[opposite] = scale(fetchValue(vars, d, vars.y.value));
	      d.d3plus[opposite] += oppMargin;
	      d.d3plus.r = 4;
	      d.d3plus.shape = vars.shape.value;
	    }
	    noData = !outliers.length && top - bottom === 0;
	    medians.push(median);
	    returnData = returnData.concat(outliers);
	    return leaves;
	  }).entries(vars.data.viz);
	  if (noData && uniques(medians).length === 1) {
	    return [];
	  } else {
	    return returnData;
	  }
	};
	
	box.modes = ["tukey", "extent", Array, Number];
	
	box.requirements = ["data", "x", "y"];
	
	box.shapes = ["circle", "check", "cross", "diamond", "square", "triangle", "triangle_up", "triangle_down"];
	
	box.setup = function(vars) {
	  var axis;
	  if (!vars.axes.discrete) {
	    axis = vars.time.value === vars.y.value ? "y" : "x";
	    return vars.self[axis]({
	      scale: "discrete"
	    });
	  }
	};
	
	module.exports = box;


/***/ },
/* 320 */
/***/ function(module, exports, __webpack_require__) {

	var arraySort, bubbles, fetchColor, fetchText, fetchValue, groupData, legible;
	
	arraySort = __webpack_require__(19);
	
	fetchValue = __webpack_require__(3);
	
	fetchColor = __webpack_require__(20);
	
	fetchText = __webpack_require__(17);
	
	legible = __webpack_require__(28);
	
	groupData = __webpack_require__(83);
	
	bubbles = function(vars) {
	  var column_height, column_width, columns, d, data, dataLength, domain, domainMax, domainMin, downscale, groupedData, i, j, k, l, labelHeight, len, len1, len2, obj, pack, padding, row, rows, screenRatio, size, size_max, size_min, t, temp, xPadding, xoffset, yMod, yPadding, yoffset;
	  groupedData = groupData(vars, vars.data.viz);
	  groupedData = arraySort(groupedData, null, null, null, vars);
	  dataLength = groupedData.length;
	  if (dataLength < 4) {
	    columns = dataLength;
	    rows = 1;
	  } else {
	    screenRatio = vars.width.viz / vars.height.viz;
	    columns = Math.ceil(Math.sqrt(dataLength * screenRatio));
	    rows = Math.ceil(Math.sqrt(dataLength / screenRatio));
	  }
	  if (dataLength > 0) {
	    while ((rows - 1) * columns >= dataLength) {
	      rows--;
	    }
	  }
	  column_width = vars.width.viz / columns;
	  column_height = vars.height.viz / rows;
	  if (vars.size.value) {
	    domainMin = d3.min(vars.data.viz, function(d) {
	      return fetchValue(vars, d, vars.size.value, vars.id.value, "min");
	    });
	    domainMax = d3.max(vars.data.viz, function(d) {
	      return fetchValue(vars, d, vars.size.value, vars.id.value);
	    });
	    domain = [domainMin, domainMax];
	  } else {
	    domain = [0, 0];
	  }
	  padding = 5;
	  size_max = (d3.min([column_width, column_height]) / 2) - (padding * 2);
	  labelHeight = vars.labels.value && !vars.small && size_max >= 40 ? d3.max([20, d3.min([size_max * 0.25, 50])]) : 0;
	  size_max -= labelHeight;
	  size_min = d3.min([size_max, vars.size.scale.min.value]);
	  size = vars.size.scale.value.domain(domain).rangeRound([size_min, size_max]);
	  pack = d3.layout.pack().children(function(d) {
	    return d.values;
	  }).padding(padding).radius(function(d) {
	    return size(d);
	  }).size([column_width - padding * 2, column_height - padding * 2 - labelHeight]).value(function(d) {
	    return d.value;
	  });
	  data = [];
	  row = 0;
	  for (i = j = 0, len = groupedData.length; j < len; i = ++j) {
	    d = groupedData[i];
	    temp = pack.nodes(d);
	    xoffset = (column_width * i) % vars.width.viz;
	    yoffset = column_height * row;
	    for (k = 0, len1 = temp.length; k < len1; k++) {
	      t = temp[k];
	      if (t.children) {
	        obj = {
	          d3plus: {}
	        };
	        obj[vars.id.value] = t.key;
	      } else {
	        obj = t.d3plus;
	      }
	      obj.d3plus.depth = vars.id.grouping.value ? t.depth : vars.depth.value;
	      obj.d3plus.x = t.x;
	      obj.d3plus.xOffset = xoffset;
	      obj.d3plus.y = t.y;
	      obj.d3plus.yOffset = yoffset + labelHeight;
	      obj.d3plus.r = t.r;
	      data.push(obj);
	    }
	    if ((i + 1) % columns === 0) {
	      row++;
	    }
	  }
	  downscale = size_max / d3.max(data, function(d) {
	    return d.d3plus.r;
	  });
	  xPadding = pack.size()[0] / 2;
	  yPadding = pack.size()[1] / 2;
	  for (l = 0, len2 = data.length; l < len2; l++) {
	    d = data[l];
	    d.d3plus.x = ((d.d3plus.x - xPadding) * downscale) + xPadding + d.d3plus.xOffset;
	    d.d3plus.y = ((d.d3plus.y - yPadding) * downscale) + yPadding + d.d3plus.yOffset;
	    d.d3plus.r = d.d3plus.r * downscale;
	    delete d.d3plus.xOffset;
	    delete d.d3plus.yOffset;
	    d.d3plus["static"] = d.d3plus.depth < vars.depth.value && vars.id.grouping.value;
	    if (labelHeight && (d.d3plus.depth === 0 || vars.id.grouping.value === false)) {
	      d.d3plus.text = fetchText(vars, d[vars.id.value], d.d3plus.depth);
	      yMod = labelHeight > vars.labels.padding * 3 ? vars.labels.padding : 0;
	      d.d3plus.label = {
	        x: 0,
	        y: -(size_max + yMod + labelHeight / 2),
	        w: size_max * 2,
	        h: labelHeight - yMod,
	        padding: 0,
	        resize: true,
	        color: legible(fetchColor(vars, d, d.d3plus.depth)),
	        force: true
	      };
	    } else {
	      delete d.d3plus.label;
	    }
	  }
	  return data.sort(function(a, b) {
	    return a.d3plus.depth - b.d3plus.depth;
	  });
	};
	
	bubbles.fill = true;
	
	bubbles.requirements = ["data"];
	
	bubbles.scale = 1.05;
	
	bubbles.shapes = ["circle", "donut"];
	
	module.exports = bubbles;


/***/ },
/* 321 */
/***/ function(module, exports, __webpack_require__) {

	var chart, print;
	
	print = __webpack_require__(2);
	
	chart = function(vars) {
	  var type, types;
	  types = {
	    circle: "scatter",
	    donut: "scatter",
	    line: "line",
	    square: "scatter",
	    area: "stacked"
	  };
	  type = types[vars.shape.value];
	  print.warning("The \"chart\" visualization type has been deprecated and will be removed in version 2.0. Please use the \"" + type + "\" visualization type.");
	  vars.self.type(type).draw();
	};
	
	chart.shapes = ["circle", "donut", "line", "square", "area"];
	
	module.exports = chart;


/***/ },
/* 322 */
/***/ function(module, exports) {

	var geo_map;
	
	geo_map = function(vars) {
	  var coords, features, key, mute, solo, topo;
	  coords = vars.coords.value;
	  key = vars.coords.key || d3.keys(coords.objects)[0];
	  topo = topojson.feature(coords, coords.objects[key]);
	  features = topo.features;
	  solo = vars.coords.solo.value;
	  mute = vars.coords.mute.value;
	  features = features.filter(function(f) {
	    f[vars.id.value] = f.id;
	    if (solo.length) {
	      return solo.indexOf(f.id) >= 0;
	    } else if (mute.length) {
	      return mute.indexOf(f.id) < 0;
	    } else {
	      return true;
	    }
	  });
	  return features;
	};
	
	geo_map.libs = ["topojson"];
	
	geo_map.nesting = false;
	
	geo_map.requirements = ["coords"];
	
	geo_map.scale = 1;
	
	geo_map.shapes = ["coordinates"];
	
	geo_map.zoom = true;
	
	module.exports = geo_map;


/***/ },
/* 323 */
/***/ function(module, exports, __webpack_require__) {

	var color, legible, print;
	
	color = __webpack_require__(20);
	
	legible = __webpack_require__(28);
	
	print = __webpack_require__(2);
	
	module.exports = function(vars) {
	  var axes, axis, axisData, data, i, len, ref, style, tick, ticks, timing;
	  axes = vars.axes;
	  data = axes.stacked || !axes.ticks.value ? [] : vars.data.viz;
	  timing = data.length * 2 > vars.data.large ? 0 : vars.draw.timing;
	  style = function(line, axis) {
	    if (axis.indexOf("y") === 0) {
	      line.attr("x1", -2).attr("x2", -8).attr("y1", function(d) {
	        return d.d3plus.y - axes.margin.top;
	      }).attr("y2", function(d) {
	        return d.d3plus.y - axes.margin.top;
	      });
	    } else {
	      line.attr("x1", function(d) {
	        return d.d3plus.x - axes.margin.left;
	      }).attr("x2", function(d) {
	        return d.d3plus.x - axes.margin.left;
	      }).attr("y1", axes.height + 2).attr("y2", axes.height + 8);
	    }
	    return line.style("stroke", function(d) {
	      return legible(color(vars, d));
	    }).style("stroke-width", vars.data.stroke.width).attr("shape-rendering", vars.shape.rendering.value);
	  };
	  if (vars.dev.value) {
	    print.time("creating axis tick groups");
	  }
	  ticks = vars.group.select("g#d3plus_graph_plane").selectAll("g.d3plus_data_tick").data(data, function(d) {
	    var mod;
	    mod = axes.discrete ? "_" + d.d3plus[axes.discrete] : "";
	    return "tick_" + d[vars.id.value] + "_" + d.d3plus.depth + mod;
	  });
	  ticks.enter().append("g").attr("class", "d3plus_data_tick").attr("opacity", 0);
	  if (vars.dev.value) {
	    print.timeEnd("creating axis tick groups");
	  }
	  ref = ["x", "y"];
	  for (i = 0, len = ref.length; i < len; i++) {
	    axis = ref[i];
	    if (vars.dev.value && timing) {
	      print.time("creating " + axis + " ticks");
	    }
	    axisData = timing && axis !== axes.discrete ? data : [];
	    tick = ticks.selectAll("line.d3plus_data_" + axis).data(axisData, function(d) {
	      return "tick_" + d[vars.id.value] + "_" + d.d3plus.depth;
	    });
	    if (vars.dev.value && timing) {
	      print.timeEnd("creating " + axis + " ticks");
	    }
	    if (vars.dev.value && timing) {
	      print.time("styling " + axis + " ticks");
	    }
	    if (timing > 0) {
	      tick.transition().duration(timing).call(style, axis);
	    } else {
	      tick.call(style, axis);
	    }
	    tick.enter().append("line").attr("class", "d3plus_data_" + axis).call(style, axis);
	    if (vars.dev.value && timing) {
	      print.timeEnd("styling " + axis + " ticks");
	    }
	  }
	  if (timing > 0) {
	    ticks.transition().duration(timing).attr("opacity", 1);
	    ticks.exit().transition().duration(timing).attr("opacity", 0).remove();
	  } else {
	    ticks.attr("opacity", 1);
	    ticks.exit().remove();
	  }
	};


/***/ },
/* 324 */
/***/ function(module, exports, __webpack_require__) {

	var arraySort, axisRange, buckets, buffer, dataChange, fetchData, fetchValue, getData, getScale, print, sizeScale, uniques;
	
	arraySort = __webpack_require__(19);
	
	buffer = __webpack_require__(141);
	
	buckets = __webpack_require__(30);
	
	fetchData = __webpack_require__(99);
	
	fetchValue = __webpack_require__(3);
	
	print = __webpack_require__(2);
	
	uniques = __webpack_require__(8);
	
	module.exports = function(vars, opts) {
	  var axes, axis, changed, domains, i, j, len, len1, oppAxis, range, reorder, zero;
	  changed = dataChange(vars);
	  if (changed || !vars.axes.dataset) {
	    vars.axes.dataset = getData(vars);
	  }
	  vars.axes.scale = opts.buffer && opts.buffer !== true ? sizeScale(vars, opts.buffer) : false;
	  axes = vars.width.viz > vars.height.viz ? ["y", "y2", "x", "x2"] : ["x", "x2", "y", "y2"];
	  for (i = 0, len = axes.length; i < len; i++) {
	    axis = axes[i];
	    oppAxis = axis.indexOf("x") === 0 ? "y" : "x";
	    reorder = vars.order.changed || vars.order.sort.changed || (vars.order.value === true && vars[oppAxis].changed);
	    if (vars[axis].value && (!vars[axis].ticks.values || changed || reorder)) {
	      if (vars.dev.value) {
	        print.time("calculating " + axis + " axis");
	      }
	      vars[axis].reset = true;
	      vars[axis].ticks.values = false;
	      if (axis === vars.axes.discrete && vars[axis].value !== vars.time.value) {
	        vars[axis].ticks.values = uniques(vars.axes.dataset, vars[axis].value, fetchValue, vars);
	      }
	      zero = opts.zero === true || axis.indexOf(opts.zero) === 0 ? true : false;
	      range = axisRange(vars, axis, zero);
	      if (axis.indexOf("y") === 0) {
	        range = range.reverse();
	      }
	      vars[axis].scale.viz = getScale(vars, axis, range);
	      vars[axis].domain.viz = range;
	      if (vars.dev.value) {
	        print.timeEnd("calculating " + axis + " axis");
	      }
	    }
	  }
	  if (vars.axes.mirror.value) {
	    domains = d3.extent(vars.y.domain.viz.concat(vars.x.domain.viz));
	    vars.x.domain.viz = domains;
	    vars.x.scale.viz.domain(domains);
	    domains = domains.slice().reverse();
	    vars.y.domain.viz = domains;
	    vars.y.scale.viz.domain(domains);
	  }
	  if (opts.buffer) {
	    for (j = 0, len1 = axes.length; j < len1; j++) {
	      axis = axes[j];
	      if (axis !== vars.axes.discrete) {
	        buffer(vars, axis, opts.buffer);
	      }
	    }
	  }
	};
	
	dataChange = function(vars) {
	  var axis, changed, check, i, j, k, l, len, len1, len2, ref, sub, subs;
	  changed = vars.time.fixed.value && (vars.time.solo.changed || vars.time.mute.changed);
	  if (!changed) {
	    changed = vars.id.solo.changed || vars.id.mute.changed;
	  }
	  if (changed) {
	    return changed;
	  }
	  check = ["data", "time", "id", "depth", "type", "x", "y", "x2", "y2"];
	  for (i = 0, len = check.length; i < len; i++) {
	    k = check[i];
	    if (vars[k].changed) {
	      changed = true;
	      break;
	    }
	  }
	  if (changed) {
	    return changed;
	  }
	  subs = ["mute", "range", "scale", "solo", "stacked", "zerofill"];
	  ref = ["x", "y", "x2", "y2"];
	  for (j = 0, len1 = ref.length; j < len1; j++) {
	    axis = ref[j];
	    for (l = 0, len2 = subs.length; l < len2; l++) {
	      sub = subs[l];
	      if (vars[axis][sub].changed) {
	        changed = true;
	        break;
	      }
	    }
	  }
	  return changed;
	};
	
	getData = function(vars) {
	  var d, depths;
	  if (vars.time.fixed.value) {
	    return vars.data.viz;
	  } else {
	    depths = d3.range(0, vars.id.nesting.length);
	    return d3.merge([
	      (function() {
	        var i, len, results;
	        results = [];
	        for (i = 0, len = depths.length; i < len; i++) {
	          d = depths[i];
	          results.push(fetchData(vars, "all", d));
	        }
	        return results;
	      })()
	    ]);
	  }
	};
	
	axisRange = function(vars, axis, zero, buffer) {
	  var agg, aggType, allNegative, allPositive, axisSums, counts, d, group, i, j, k, l, len, len1, len2, len3, m, min, oppAxis, ref, ref1, ref2, ref3, sort, sortKey, splitData, v, val, values;
	  oppAxis = axis.indexOf("x") === 0 ? "y" : "x";
	  if (vars[axis].range.value && vars[axis].range.value.length === 2) {
	    return vars[axis].range.value.slice();
	  } else if (vars[axis].scale.value === "share") {
	    vars[axis].ticks.values = d3.range(0, 1.1, 0.1);
	    return [0, 1];
	  } else if (vars[axis].stacked.value) {
	    splitData = [];
	    ref = vars.axes.dataset;
	    for (i = 0, len = ref.length; i < len; i++) {
	      d = ref[i];
	      if (d.values) {
	        splitData = splitData.concat(d.values);
	      } else {
	        splitData.push(d);
	      }
	    }
	    axisSums = d3.nest().key(function(d) {
	      return fetchValue(vars, d, vars[oppAxis].value);
	    }).rollup(function(leaves) {
	      var negatives, positives;
	      positives = d3.sum(leaves, function(d) {
	        var val;
	        val = fetchValue(vars, d, vars[axis].value);
	        if (val > 0) {
	          return val;
	        } else {
	          return 0;
	        }
	      });
	      negatives = d3.sum(leaves, function(d) {
	        var val;
	        val = fetchValue(vars, d, vars[axis].value);
	        if (val < 0) {
	          return val;
	        } else {
	          return 0;
	        }
	      });
	      return [negatives, positives];
	    }).entries(splitData);
	    values = d3.merge(axisSums.map(function(d) {
	      return d.values;
	    }));
	    return d3.extent(values);
	  } else if (vars[axis].value === vars.time.value) {
	    if (vars.time.solo.value.length) {
	      return d3.extent(vars.time.solo.value).map(function(v) {
	        if (v.constructor !== Date) {
	          v = v + "";
	          if (v.length === 4 && parseInt(v) + "" === v) {
	            v += "/01/01";
	          }
	          return new Date(v);
	        } else {
	          return v;
	        }
	      });
	    } else {
	      return d3.extent(vars.data.time.ticks);
	    }
	  } else {
	    values = [];
	    ref1 = vars.axes.dataset;
	    for (j = 0, len1 = ref1.length; j < len1; j++) {
	      d = ref1[j];
	      val = fetchValue(vars, d, vars[axis].value);
	      if (val instanceof Array) {
	        values = values.concat(val);
	      } else {
	        values.push(val);
	      }
	    }
	    values = values.filter(function(d) {
	      return d !== null;
	    });
	    if (axis === vars.axes.discrete) {
	      if (vars.order.value === true) {
	        sortKey = vars[oppAxis].value;
	      } else {
	        sortKey = vars.order.value;
	      }
	      if (sortKey) {
	        sort = vars.order.sort.value;
	        agg = vars.order.agg.value || vars.aggs.value[sortKey] || "max";
	        aggType = typeof agg;
	        counts = values.reduce(function(obj, val) {
	          obj[val] = [];
	          return obj;
	        }, {});
	        ref2 = vars.axes.dataset;
	        for (l = 0, len2 = ref2.length; l < len2; l++) {
	          d = ref2[l];
	          if (d.values) {
	            ref3 = d.values;
	            for (m = 0, len3 = ref3.length; m < len3; m++) {
	              v = ref3[m];
	              group = fetchValue(vars, v, vars[axis].value);
	              counts[group].push(fetchValue(vars, v, sortKey));
	            }
	          } else {
	            group = fetchValue(vars, d, vars[axis].value);
	            counts[group].push(fetchValue(vars, d, sortKey));
	          }
	        }
	        for (k in counts) {
	          v = counts[k];
	          if (aggType === "string") {
	            counts[k] = d3[agg](v);
	          } else if (aggType === "function") {
	            counts[k] = agg(v, sortKey);
	          }
	        }
	        counts = arraySort(d3.entries(counts), "value", sort);
	        counts = counts.reduce(function(arr, v) {
	          arr.push(v.key);
	          return arr;
	        }, []);
	        return counts;
	      } else {
	        return uniques(values).sort();
	      }
	    } else {
	      values.sort(function(a, b) {
	        return a - b;
	      });
	      if (vars[axis].scale.value === "log") {
	        if (values[0] === 0) {
	          values[0] = 1;
	        }
	        if (values[values.length - 1] === 0) {
	          values[values.length - 1] = -1;
	        }
	      }
	      if (zero) {
	        allPositive = values.every(function(v) {
	          return v > 0;
	        });
	        allNegative = values.every(function(v) {
	          return v < 0;
	        });
	        if (allPositive || allNegative) {
	          min = allPositive ? 1 : -1;
	          values.push(vars[axis].scale.value === "log" ? min : 0);
	        }
	      }
	      return d3.extent(values);
	    }
	  }
	};
	
	getScale = function(vars, axis, range) {
	  var rangeArray, rangeMax, scaleType, t;
	  rangeMax = axis.indexOf("x") === 0 ? vars.width.viz : vars.height.viz;
	  scaleType = vars[axis].scale.value;
	  if (["discrete", "share"].indexOf(scaleType) >= 0) {
	    scaleType = "linear";
	  }
	  t = 10;
	  if (typeof range[0] === "string") {
	    scaleType = "ordinal";
	    rangeArray = buckets([0, rangeMax], range.length);
	  } else {
	    rangeArray = [0, rangeMax];
	    if (vars[axis].scale.value === "linear") {
	      t = Math.floor(rangeMax / (vars[axis].ticks.font.size * 4));
	    }
	  }
	  vars[axis].scale.ticks = t;
	  return d3.scale[scaleType]().domain(range).range(rangeArray);
	};
	
	sizeScale = function(vars, value) {
	  var domain, max, min;
	  if (value === true) {
	    value = "size";
	  }
	  if (value in vars) {
	    value = vars[value].value;
	  }
	  min = vars.size.scale.min.value;
	  if (typeof min === "function") {
	    min = min(vars);
	  }
	  max = vars.size.scale.max.value;
	  if (typeof max === "function") {
	    max = max(vars);
	  }
	  if (value === false) {
	    return vars.size.scale.value.rangeRound([max, max]);
	  } else if (typeof value === "number") {
	    return vars.size.scale.value.rangeRound([value, value]);
	  } else if (value) {
	    if (vars.dev.value) {
	      print.time("calculating buffer scale");
	    }
	    domain = d3.extent(vars.axes.dataset, function(d) {
	      var val;
	      val = fetchValue(vars, d, value);
	      if (!val) {
	        return 0;
	      } else {
	        return val;
	      }
	    });
	    if (domain[0] === domain[1]) {
	      min = max;
	    }
	    if (vars.dev.value) {
	      print.timeEnd("calculating buffer scale");
	    }
	    return vars.size.scale.value.domain(domain).rangeRound([min, max]);
	  }
	};


/***/ },
/* 325 */
/***/ function(module, exports, __webpack_require__) {

	var copy, events, fetchColor, fetchValue, legible, textColor;
	
	copy = __webpack_require__(11);
	
	events = __webpack_require__(9);
	
	fetchColor = __webpack_require__(20);
	
	fetchValue = __webpack_require__(3);
	
	legible = __webpack_require__(28);
	
	textColor = __webpack_require__(25);
	
	module.exports = function(node, vars) {
	  var clickRemove, color, create, graph, lineData, lineInit, lineStyle, lineUpdate, lines, r, rectStyle, rects, s, textStyle, texts, timing, x, y;
	  clickRemove = d3.event.type === events.click && (vars.tooltip.value.long || vars.tooltip.html.value);
	  create = [events.over, events.move].indexOf(d3.event.type) >= 0;
	  x = node.d3plus.x;
	  y = node.d3plus.y;
	  r = node.d3plus.r || 0;
	  s = vars.types[vars.type.value].scale || 1;
	  r = r * s;
	  graph = vars.axes;
	  timing = vars.draw.timing ? vars.timing.mouseevents : 0;
	  if (!clickRemove && create) {
	    color = legible(fetchColor(vars, node));
	    lineData = ["x", "y", "x2", "y2"].filter(function(axis) {
	      var val;
	      val = fetchValue(vars, node, vars[axis].value);
	      return val && !(val instanceof Array) && axis !== vars.axes.stacked && vars[axis].mouse.value && axis !== vars.axes.discrete;
	    });
	  } else {
	    lineData = [];
	  }
	  lineInit = function(line) {
	    return line.attr("x1", function(d) {
	      if (d.indexOf("x") === 0) {
	        return x;
	      } else {
	        return x - r;
	      }
	    }).attr("y1", function(d) {
	      if (d.indexOf("y") === 0) {
	        return y;
	      } else {
	        return y + r;
	      }
	    }).attr("x2", function(d) {
	      if (d.indexOf("x") === 0) {
	        return x;
	      } else {
	        return x - r;
	      }
	    }).attr("y2", function(d) {
	      if (d.indexOf("y") === 0) {
	        return y;
	      } else {
	        return y + r;
	      }
	    }).attr("opacity", 0);
	  };
	  lineStyle = function(line) {
	    return line.style("stroke", function(d) {
	      if (vars.shape.value === "area") {
	        return "white";
	      } else {
	        return color;
	      }
	    }).attr("stroke-dasharray", function(d) {
	      return vars[d].mouse.dasharray.value;
	    }).attr("shape-rendering", function(d) {
	      return vars[d].mouse.rendering.value;
	    }).style("stroke-width", function(d) {
	      return vars[d].mouse.width;
	    });
	  };
	  lineUpdate = function(line) {
	    return line.attr("x1", function(d) {
	      if (d.indexOf("x") === 0) {
	        return x;
	      } else {
	        return x - r;
	      }
	    }).attr("y1", function(d) {
	      if (d.indexOf("y") === 0) {
	        return y;
	      } else {
	        return y + r;
	      }
	    }).attr("x2", function(d) {
	      if (d.indexOf("x") === 0) {
	        return x;
	      } else if (node.d3plus.x0) {
	        return node.d3plus.x0;
	      } else if (d === "y") {
	        return graph.margin.left - vars[d].ticks.size;
	      } else {
	        return graph.margin.left + graph.width + vars[d].ticks.size;
	      }
	    }).attr("y2", function(d) {
	      if (d.indexOf("y") === 0) {
	        return y;
	      } else if (node.d3plus.y0) {
	        return node.d3plus.y0;
	      } else if (d === "x") {
	        return graph.height + graph.margin.top + vars[d].ticks.size;
	      } else {
	        return graph.margin.top - vars[d].ticks.size;
	      }
	    }).style("opacity", 1);
	  };
	  lines = vars.g.labels.selectAll("line.d3plus_mouse_axis_label").data(lineData);
	  if (timing) {
	    lines.enter().append("line").attr("class", "d3plus_mouse_axis_label").attr("pointer-events", "none").call(lineInit).call(lineStyle);
	    lines.transition().duration(timing).call(lineUpdate).call(lineStyle);
	    lines.exit().transition().duration(timing).call(lineInit).remove();
	  } else {
	    lines.call(lineUpdate).call(lineStyle);
	    lines.enter().append("line").attr("class", "d3plus_mouse_axis_label").attr("pointer-events", "none").call(lineInit).call(lineStyle);
	    lines.exit().remove();
	  }
	  textStyle = function(text) {
	    return text.attr("font-size", function(d) {
	      return vars[d].ticks.font.size + "px";
	    }).attr("font-family", function(d) {
	      return vars[d].ticks.font.family.value;
	    }).attr("font-weight", function(d) {
	      return vars[d].ticks.font.weight;
	    }).attr("x", function(d) {
	      if (d.indexOf("x") === 0) {
	        return x;
	      } else if (d === "y") {
	        return graph.margin.left - 5 - vars[d].ticks.size;
	      } else {
	        return graph.margin.left + graph.width + 5 + vars[d].ticks.size;
	      }
	    }).attr("y", function(d) {
	      if (d.indexOf("y") === 0) {
	        return y;
	      } else if (node.d3plus.y0) {
	        return node.d3plus.y + (node.d3plus.y0 - node.d3plus.y) / 2 + graph.margin.top - 6;
	      } else if (d === "x") {
	        return graph.height + graph.margin.top + 5 + vars[d].ticks.size;
	      } else {
	        return graph.margin.top - 5 - vars[d].ticks.size - (vars[d].ticks.font.size * 1.35);
	      }
	    }).attr("fill", vars.shape.value === "area" ? "white" : textColor(color));
	  };
	  texts = vars.g.labels.selectAll("text.d3plus_mouse_axis_label").data(lineData);
	  texts.enter().append("text").attr("class", "d3plus_mouse_axis_label").attr("id", function(d) {
	    return d + "_d3plusmouseaxislabel";
	  }).attr("dy", function(d) {
	    if (d.indexOf("y") === 0) {
	      return vars[d].ticks.font.size * 0.35;
	    } else {
	      return vars[d].ticks.font.size;
	    }
	  }).style("text-anchor", function(d) {
	    if (d === "y") {
	      return "end";
	    } else if (d === "y2") {
	      return "start";
	    } else {
	      return "middle";
	    }
	  }).attr("opacity", 0).attr("pointer-events", "none").call(textStyle);
	  texts.text(function(d) {
	    var axis, val;
	    axis = vars.axes.stacked || d;
	    val = fetchValue(vars, node, vars[axis].value);
	    return vars.format.value(val, {
	      key: vars[axis].value,
	      vars: vars,
	      labels: vars[axis].affixes.value
	    });
	  });
	  if (timing) {
	    texts.transition().duration(timing).delay(timing).attr("opacity", 1).call(textStyle);
	    texts.exit().transition().duration(timing).attr("opacity", 0).remove();
	  } else {
	    texts.attr("opacity", 1).call(textStyle);
	    texts.exit().remove();
	  }
	  rectStyle = function(rect) {
	    var getText;
	    getText = function(axis) {
	      var l;
	      l = d3.select("text#" + axis + "_d3plusmouseaxislabel");
	      if (l.size()) {
	        return l.node().getBBox();
	      } else {
	        return {
	          "width": 0,
	          "height": 0
	        };
	      }
	    };
	    return rect.attr("x", function(d) {
	      var width;
	      width = getText(d).width;
	      if (d.indexOf("x") === 0) {
	        return x - width / 2 - 5;
	      } else if (d === "y") {
	        return graph.margin.left - vars[d].ticks.size - width - 10;
	      } else {
	        return graph.margin.left + graph.width + vars[d].ticks.size;
	      }
	    }).attr("y", function(d) {
	      var height;
	      height = getText(d).height;
	      if (d.indexOf("y") === 0) {
	        return y - (height / 2 + 5);
	      } else if (node.d3plus.y0) {
	        return node.d3plus.y + (node.d3plus.y0 - node.d3plus.y) / 2 + graph.margin.top - (height / 2 + 5);
	      } else if (d === "x") {
	        return graph.height + graph.margin.top + vars[d].ticks.size;
	      } else {
	        return graph.margin.top - vars[d].ticks.size - height - 10;
	      }
	    }).attr("width", function(d) {
	      return getText(d).width + 10;
	    }).attr("height", function(d) {
	      return getText(d).height + 10;
	    }).style("stroke", vars.shape.value === "area" ? "transparent" : color).attr("fill", color).attr("shape-rendering", function(d) {
	      return vars[d].mouse.rendering.value;
	    }).style("stroke-width", function(d) {
	      return vars[d].mouse.width;
	    });
	  };
	  rects = vars.g.labels.selectAll("rect.d3plus_mouse_axis_label").data(lineData);
	  if (timing) {
	    rects.enter().insert("rect", "text.d3plus_mouse_axis_label").attr("class", "d3plus_mouse_axis_label").attr("pointer-events", "none").attr("opacity", 0).call(rectStyle);
	    rects.transition().duration(timing).delay(timing).attr("opacity", 1).call(rectStyle);
	    return rects.exit().transition().duration(timing).attr("opacity", 0).remove();
	  } else {
	    rects.attr("opacity", 1).call(rectStyle);
	    rects.enter().insert("rect", "text.d3plus_mouse_axis_label").attr("class", "d3plus_mouse_axis_label").attr("pointer-events", "none").call(rectStyle);
	    return rects.exit().remove();
	  }
	};


/***/ },
/* 326 */
/***/ function(module, exports, __webpack_require__) {

	var buckets, buffer, createAxis, fetchValue, fontSizes, formatPower, labelPadding, resetMargins, superscript, textwrap, timeDetect, uniques;
	
	buckets = __webpack_require__(30);
	
	buffer = __webpack_require__(141);
	
	fetchValue = __webpack_require__(3);
	
	fontSizes = __webpack_require__(36);
	
	textwrap = __webpack_require__(41);
	
	timeDetect = __webpack_require__(125);
	
	uniques = __webpack_require__(8);
	
	module.exports = function(vars, opts) {
	  var axes, axis, axisStyle, extent, j, k, len, len1, newtick, opp, otherScale, scale, step, tens, tick, ticks, timeReturn, values;
	  vars.axes.margin = resetMargins(vars);
	  vars.axes.height = vars.height.viz;
	  vars.axes.width = vars.width.viz;
	  axes = vars.width.viz > vars.height.viz ? ["y", "y2", "x", "x2"] : ["x", "x2", "y", "y2"];
	  for (j = 0, len = axes.length; j < len; j++) {
	    axis = axes[j];
	    if (vars[axis].value) {
	      if (vars[axis].ticks.values === false) {
	        if (vars[axis].value === vars.time.value) {
	          ticks = vars.time.solo.value;
	          if (ticks.length) {
	            ticks = ticks.map(function(d) {
	              if (d.constructor !== Date) {
	                d = d + "";
	                if (d.length === 4 && parseInt(d) + "" === d) {
	                  d += "/01/01";
	                }
	                d = new Date(d);
	              }
	              return d;
	            });
	          } else {
	            ticks = vars.data.time.values;
	          }
	          extent = d3.extent(ticks);
	          step = vars.data.time.stepType;
	          ticks = [extent[0]];
	          tick = extent[0];
	          while (tick < extent[1]) {
	            newtick = new Date(tick);
	            tick = new Date(newtick["set" + step](newtick["get" + step]() + 1));
	            ticks.push(tick);
	          }
	          vars[axis].ticks.values = ticks;
	        } else {
	          if (axis.indexOf("2") === 1) {
	            otherScale = vars[axis.slice(0, 1)].scale.viz;
	            scale = vars[axis].scale.viz;
	            ticks = vars[axis.slice(0, 1)].scale.ticks;
	            vars[axis].ticks.values = otherScale.ticks(ticks).map(function(t) {
	              return parseFloat(d3.format(".5f")(scale.invert(otherScale(t))));
	            });
	          } else {
	            vars[axis].ticks.values = vars[axis].scale.viz.ticks(vars[axis].scale.ticks);
	          }
	        }
	      }
	      if (!vars[axis].ticks.values.length) {
	        values = fetchValue(vars, vars.data.viz, vars[axis].value);
	        if (!(values instanceof Array)) {
	          values = [values];
	        }
	        vars[axis].ticks.values = values;
	      }
	      opp = axis.indexOf("x") === 0 ? "y" : "x";
	      if (vars[axis].ticks.values.length === 1 || (opts.buffer && opts.buffer !== opp && axis === vars.axes.discrete && vars[axis].reset === true)) {
	        buffer(vars, axis, opts.buffer);
	      }
	      vars[axis].reset = false;
	      if (vars[axis].value === vars.time.value) {
	        axisStyle = {
	          "font-family": vars[axis].ticks.font.family.value,
	          "font-weight": vars[axis].ticks.font.weight,
	          "font-size": vars[axis].ticks.font.size + "px",
	          "text-transform": vars[axis].ticks.font.transform.value,
	          "letter-spacing": vars[axis].ticks.font.spacing + "px"
	        };
	        timeReturn = timeDetect(vars, {
	          values: vars[axis].ticks.values,
	          limit: vars.width.viz,
	          style: axisStyle
	        });
	        if (vars[axis].ticks.value) {
	          vars[axis].ticks.visible = vars[axis].ticks.value.map(Number);
	        } else if (vars[axis].ticks.labels.value.constructor === Array) {
	          vars[axis].ticks.visible = vars[axis].ticks.labels.value.map(Number);
	        } else {
	          vars[axis].ticks.visible = timeReturn.values.map(Number);
	        }
	        vars[axis].ticks.format = timeReturn.format;
	      } else if (vars[axis].ticks.value) {
	        vars[axis].ticks.values = vars[axis].ticks.value;
	        if (vars[axis].ticks.labels.value.constructor === Array) {
	          vars[axis].ticks.visible = vars[axis].ticks.labels.value;
	        } else {
	          vars[axis].ticks.visible = vars[axis].ticks.value;
	        }
	      } else if (vars[axis].ticks.labels.value.constructor === Array) {
	        vars[axis].ticks.visible = vars[axis].ticks.labels.value;
	      } else if (vars[axis].scale.value === "log") {
	        ticks = vars[axis].ticks.values;
	        tens = ticks.filter(function(t) {
	          return Math.abs(t).toString().charAt(0) === "1";
	        });
	        if (tens.length < 3) {
	          vars[axis].ticks.visible = ticks;
	        } else {
	          vars[axis].ticks.visible = tens;
	        }
	      } else {
	        vars[axis].ticks.visible = vars[axis].ticks.values;
	      }
	    }
	  }
	  if (!vars.small) {
	    labelPadding(vars);
	  }
	  for (k = 0, len1 = axes.length; k < len1; k++) {
	    axis = axes[k];
	    vars[axis].axis.svg = createAxis(vars, axis);
	  }
	};
	
	resetMargins = function(vars) {
	  if (vars.small) {
	    return {
	      top: 0,
	      right: 0,
	      bottom: 0,
	      left: 0
	    };
	  } else {
	    return {
	      top: 10,
	      right: 10,
	      bottom: 10,
	      left: 10
	    };
	  }
	};
	
	labelPadding = function(vars) {
	  var axis, j, k, lastTick, len, len1, margin, ref, ref1, rightLabel, rightMod, x2Domain, xAttrs, xAxisHeight, xAxisWidth, xDomain, xLabel, xLabelAttrs, xMaxWidth, xSizes, xText, xValues, y2Domain, yAttrs, yAxisWidth, yDomain, yLabel, yLabelAttrs, yText, yValues;
	  xDomain = vars.x.scale.viz.domain();
	  yDomain = vars.y.scale.viz.domain();
	  if (vars.x2.value) {
	    x2Domain = vars.x2.scale.viz.domain();
	  }
	  if (vars.y2.value) {
	    y2Domain = vars.y2.scale.viz.domain();
	  }
	  ref = ["y", "y2"];
	  for (j = 0, len = ref.length; j < len; j++) {
	    axis = ref[j];
	    if (vars[axis].value) {
	      margin = axis === "y" ? "left" : "right";
	      yAttrs = {
	        "font-size": vars[axis].ticks.font.size + "px",
	        "font-family": vars[axis].ticks.font.family.value,
	        "font-weight": vars[axis].ticks.font.weight,
	        "text-transform": vars[axis].ticks.font.transform.value,
	        "letter-spacing": vars[axis].ticks.font.spacing + "px"
	      };
	      yValues = vars[axis].ticks.visible;
	      if (vars[axis].scale.value === "log") {
	        yText = yValues.map(function(d) {
	          return formatPower(d);
	        });
	      } else if (vars[axis].scale.value === "share") {
	        yText = yValues.map(function(d) {
	          return vars.format.value(d * 100, {
	            key: "share",
	            vars: vars,
	            output: axis
	          });
	        });
	      } else if (vars[axis].value === vars.time.value) {
	        yText = yValues.map(function(d, i) {
	          return vars[axis].ticks.format(new Date(d));
	        });
	      } else {
	        if (typeof yValues[0] === "string") {
	          yValues = vars[axis].scale.viz.domain().filter(function(d) {
	            return d.indexOf("d3plus_buffer_") !== 0;
	          });
	        }
	        yText = yValues.map(function(d) {
	          return vars.format.value(d, {
	            key: vars[axis].value,
	            vars: vars,
	            labels: vars[axis].affixes.value,
	            output: axis
	          });
	        });
	      }
	      if (vars[axis].ticks.labels.value) {
	        vars[axis].ticks.hidden = false;
	        yAxisWidth = d3.max(fontSizes(yText, yAttrs), function(d) {
	          return d.width;
	        });
	        yAxisWidth = Math.ceil(yAxisWidth + vars.labels.padding);
	        vars.axes.margin[margin] += yAxisWidth;
	      } else {
	        vars[axis].ticks.hidden = true;
	      }
	      yLabel = vars[axis].label.fetch(vars);
	      if (yLabel) {
	        yLabelAttrs = {
	          "font-family": vars[axis].label.font.family.value,
	          "font-weight": vars[axis].label.font.weight,
	          "font-size": vars[axis].label.font.size + "px",
	          "text-transform": vars[axis].label.font.transform.value,
	          "letter-spacing": vars[axis].label.font.spacing + "px"
	        };
	        vars[axis].label.height = fontSizes([yLabel], yLabelAttrs)[0].height;
	      } else {
	        vars[axis].label.height = 0;
	      }
	      if (vars[axis].label.value) {
	        vars.axes.margin[margin] += vars[axis].label.height;
	        vars.axes.margin[margin] += vars[axis].label.padding * 2;
	      }
	    }
	  }
	  vars.axes.width -= vars.axes.margin.left + vars.axes.margin.right;
	  vars.x.scale.viz.range(buckets([0, vars.axes.width], xDomain.length));
	  if (x2Domain) {
	    vars.x2.scale.viz.range(buckets([0, vars.axes.width], x2Domain.length));
	  }
	  ref1 = ["x", "x2"];
	  for (k = 0, len1 = ref1.length; k < len1; k++) {
	    axis = ref1[k];
	    if (vars[axis].value) {
	      margin = axis === "x" ? "bottom" : "top";
	      if (vars[axis].ticks.labels.value) {
	        vars[axis].ticks.hidden = false;
	        xAttrs = {
	          "font-size": vars[axis].ticks.font.size + "px",
	          "font-family": vars[axis].ticks.font.family.value,
	          "font-weight": vars[axis].ticks.font.weight,
	          "text-transform": vars[axis].ticks.font.transform.value,
	          "letter-spacing": vars[axis].ticks.font.spacing + "px"
	        };
	        xValues = vars[axis].ticks.visible;
	        if (vars[axis].scale.value === "log") {
	          xText = xValues.map(function(d) {
	            return formatPower(d);
	          });
	        } else if (vars[axis].scale.value === "share") {
	          xText = xValues.map(function(d) {
	            return vars.format.value(d * 100, {
	              key: "share",
	              vars: vars,
	              output: axis
	            });
	          });
	        } else if (vars[axis].value === vars.time.value) {
	          xText = xValues.map(function(d, i) {
	            return vars[axis].ticks.format(new Date(d));
	          });
	        } else {
	          if (typeof xValues[0] === "string") {
	            xValues = vars[axis].scale.viz.domain().filter(function(d) {
	              return d.indexOf("d3plus_buffer_") !== 0;
	            });
	          }
	          xText = xValues.map(function(d) {
	            return vars.format.value(d, {
	              key: vars[axis].value,
	              vars: vars,
	              labels: vars[axis].affixes.value,
	              output: axis
	            });
	          });
	        }
	        xSizes = fontSizes(xText, xAttrs);
	        xAxisWidth = d3.max(xSizes, function(d) {
	          return d.width;
	        });
	        xAxisHeight = d3.max(xSizes, function(d) {
	          return d.height;
	        });
	        if (xValues.length === 1) {
	          xMaxWidth = vars.axes.width;
	        } else {
	          xMaxWidth = vars[axis].scale.viz(xValues[1]) - vars[axis].scale.viz(xValues[0]);
	          xMaxWidth = Math.abs(xMaxWidth);
	        }
	        if (xAxisWidth > xMaxWidth && xText.join("").indexOf(" ") > 0) {
	          vars[axis].ticks.wrap = true;
	          xSizes = fontSizes(xText, xAttrs, {
	            mod: function(elem) {
	              return textwrap().container(d3.select(elem)).height(vars.axes.height / 2).width(xMaxWidth).draw();
	            }
	          });
	          xAxisWidth = d3.max(xSizes, function(d) {
	            return d.width;
	          });
	          xAxisHeight = d3.max(xSizes, function(d) {
	            return d.height;
	          });
	        } else {
	          vars[axis].ticks.wrap = false;
	        }
	        vars[axis].ticks.baseline = "auto";
	        if (xAxisWidth <= xMaxWidth) {
	          vars[axis].ticks.rotate = 0;
	        } else if (xAxisWidth < vars.axes.height / 2) {
	          xSizes = fontSizes(xText, xAttrs, {
	            mod: function(elem) {
	              return textwrap().container(d3.select(elem)).width(vars.axes.height / 2).height(xMaxWidth).draw();
	            }
	          });
	          xAxisHeight = d3.max(xSizes, function(d) {
	            return d.width;
	          });
	          xAxisWidth = d3.max(xSizes, function(d) {
	            return d.height;
	          });
	          vars[axis].ticks.rotate = -90;
	        } else {
	          xAxisWidth = 0;
	          xAxisHeight = 0;
	        }
	        if (!(xAxisWidth && xAxisHeight)) {
	          vars[axis].ticks.hidden = true;
	          vars[axis].ticks.rotate = 0;
	        }
	        xAxisWidth = Math.ceil(xAxisWidth);
	        xAxisHeight = Math.ceil(xAxisHeight);
	        vars[axis].ticks.maxHeight = xAxisHeight;
	        vars[axis].ticks.maxWidth = xAxisWidth;
	        vars.axes.margin[margin] += xAxisHeight + vars.labels.padding;
	        lastTick = vars[axis].ticks.visible[vars[axis].ticks.visible.length - 1];
	        rightLabel = vars[axis].scale.viz(lastTick);
	        rightLabel += xAxisWidth / 2 + vars.axes.margin.left;
	        if (rightLabel > vars.width.value) {
	          rightMod = rightLabel - vars.width.value + vars.axes.margin.right;
	          vars.axes.width -= rightMod;
	          vars.axes.margin.right += rightMod;
	        }
	      } else {
	        vars[axis].ticks.hidden = true;
	      }
	      xLabel = vars[axis].label.fetch(vars);
	      if (xLabel) {
	        xLabelAttrs = {
	          "font-family": vars[axis].label.font.family.value,
	          "font-weight": vars[axis].label.font.weight,
	          "font-size": vars[axis].label.font.size + "px",
	          "text-transform": vars[axis].label.font.transform.value,
	          "letter-spacing": vars[axis].label.font.spacing + "px"
	        };
	        vars[axis].label.height = fontSizes([xLabel], xLabelAttrs)[0].height;
	      } else {
	        vars[axis].label.height = 0;
	      }
	      if (vars[axis].label.value) {
	        vars.axes.margin[margin] += vars[axis].label.height;
	        vars.axes.margin[margin] += vars[axis].label.padding * 2;
	      }
	    }
	  }
	  vars.axes.height -= vars.axes.margin.top + vars.axes.margin.bottom;
	  vars.x.scale.viz.range(buckets([0, vars.axes.width], xDomain.length));
	  if (x2Domain) {
	    vars.x2.scale.viz.range(buckets([0, vars.axes.width], x2Domain.length));
	  }
	  vars.y.scale.viz.range(buckets([0, vars.axes.height], yDomain.length));
	  if (y2Domain) {
	    return vars.y2.scale.viz.range(buckets([0, vars.axes.height], y2Domain.length));
	  }
	};
	
	createAxis = function(vars, axis) {
	  return d3.svg.axis().tickSize(vars[axis].ticks.size).tickPadding(5).orient(vars[axis].orient.value).scale(vars[axis].scale.viz).tickValues(vars[axis].ticks.values).tickFormat(function(d, i) {
	    var c, scale;
	    if (vars[axis].ticks.hidden) {
	      return null;
	    }
	    scale = vars[axis].scale.value;
	    c = d.constructor === Date ? +d : d;
	    if (vars[axis].ticks.visible.indexOf(c) >= 0) {
	      if (scale === "share") {
	        return vars.format.value(d * 100, {
	          key: "share",
	          vars: vars,
	          labels: vars[axis].affixes.value,
	          output: axis
	        });
	      } else if (d.constructor === Date) {
	        return vars[axis].ticks.format(d);
	      } else if (scale === "log") {
	        return formatPower(d);
	      } else {
	        return vars.format.value(d, {
	          key: vars[axis].value,
	          vars: vars,
	          labels: vars[axis].affixes.value,
	          output: axis
	        });
	      }
	    } else {
	      return null;
	    }
	  });
	};
	
	superscript = "⁰¹²³⁴⁵⁶⁷⁸⁹";
	
	formatPower = function(d) {
	  var n, p, t;
	  p = Math.round(Math.log(Math.abs(d)) / Math.LN10);
	  t = Math.abs(d).toString().charAt(0);
	  n = 10 + " " + (p + "").split("").map(function(c) {
	    return superscript[c];
	  }).join("");
	  if (t !== "1") {
	    n = t + " x " + n;
	  }
	  if (d < 0) {
	    return "-" + n;
	  } else {
	    return n;
	  }
	};


/***/ },
/* 327 */
/***/ function(module, exports, __webpack_require__) {

	var mix, textwrap, validObject;
	
	mix = __webpack_require__(66);
	
	textwrap = __webpack_require__(41);
	
	validObject = __webpack_require__(7);
	
	module.exports = function(vars) {
	  var affixes, alignMap, axis, axisData, axisGroup, axisLabel, bg, bgStyle, d, domain, domains, getFontStyle, grid, gridData, groupEnter, j, k, l, label, labelData, labelStyle, len, len1, len2, len3, len4, line, lineData, lineFont, lineGroup, lineRects, lineStyle, lines, linetexts, m, mirror, n, opp, plane, planeTrans, position, realData, rectData, rectStyle, ref, ref1, ref2, ref3, rotated, sep, style, textData, textPad, textPos, tickFont, tickPosition, tickStyle, userLines, valid, xStyle, yStyle;
	  domains = vars.x.domain.viz.concat(vars.y.domain.viz);
	  if (domains.indexOf(void 0) >= 0) {
	    return null;
	  }
	  bgStyle = {
	    width: vars.axes.width,
	    height: vars.axes.height,
	    fill: vars.axes.background.color,
	    stroke: vars.axes.background.stroke.color,
	    "stroke-width": vars.axes.background.stroke.width,
	    "shape-rendering": vars.axes.background.rendering.value
	  };
	  alignMap = {
	    left: "start",
	    center: "middle",
	    right: "end"
	  };
	  axisData = vars.small ? [] : [0];
	  tickPosition = function(tick, axis) {
	    return tick.attr("x1", function(d) {
	      if (axis.indexOf("x") === 0) {
	        return vars.x.scale.viz(d);
	      } else {
	        return 0;
	      }
	    }).attr("x2", function(d) {
	      if (axis.indexOf("x") === 0) {
	        return vars.x.scale.viz(d);
	      } else {
	        return vars.axes.width;
	      }
	    }).attr("y1", function(d) {
	      if (axis.indexOf("y") === 0) {
	        return vars.y.scale.viz(d);
	      } else {
	        return 0;
	      }
	    }).attr("y2", function(d) {
	      if (axis.indexOf("y") === 0) {
	        return vars.y.scale.viz(d);
	      } else {
	        return vars.axes.height;
	      }
	    });
	  };
	  tickStyle = function(tick, axis, grid) {
	    var color, log;
	    color = grid ? vars[axis].grid.color : vars[axis].ticks.color;
	    log = vars[axis].scale.value === "log";
	    return tick.attr("stroke", function(d) {
	      var visible;
	      if (d === 0) {
	        return vars[axis].axis.color;
	      }
	      if (d.constructor === Date) {
	        d = +d;
	      }
	      visible = vars[axis].ticks.visible.indexOf(d) >= 0;
	      if (visible && (!log || Math.abs(d).toString().charAt(0) === "1")) {
	        return color;
	      } else if (grid && vars.axes.background.color !== "transparent") {
	        return mix(color, vars.axes.background.color, 0.4, 1);
	      } else if (vars.background.value !== "transparent") {
	        return mix(color, vars.background.value, 0.4, 1);
	      } else {
	        return mix(color, "white", 0.4, 1);
	      }
	    }).attr("stroke-width", vars[axis].ticks.width).attr("shape-rendering", vars[axis].ticks.rendering.value);
	  };
	  getFontStyle = function(axis, val, style) {
	    var type;
	    type = val === 0 ? "axis" : "ticks";
	    val = vars[axis][type].font[style];
	    if (val && (val.length || typeof val === "number")) {
	      return val;
	    } else {
	      return vars[axis].ticks.font[style];
	    }
	  };
	  tickFont = function(tick, axis) {
	    var log;
	    log = vars[axis].scale.value === "log";
	    return tick.attr("font-size", function(d) {
	      return getFontStyle(axis, d, "size") + "px";
	    }).attr("stroke", "none").attr("fill", function(d) {
	      var color;
	      color = getFontStyle(axis, d, "color");
	      if (!log || Math.abs(d).toString().charAt(0) === "1") {
	        return color;
	      } else {
	        return mix(color, vars.background.value, 0.4, 1);
	      }
	    }).attr("font-family", function(d) {
	      return getFontStyle(axis, d, "family").value;
	    }).attr("font-weight", function(d) {
	      return getFontStyle(axis, d, "weight");
	    }).style("text-transform", function(d) {
	      return getFontStyle(axis, d, "transform").value;
	    }).style("letter-spacing", function(d) {
	      return getFontStyle(axis, d, "spacing") + "px";
	    });
	  };
	  lineStyle = function(line, axis) {
	    var max, opp;
	    max = axis.indexOf("x") === 0 ? "height" : "width";
	    opp = axis.indexOf("x") === 0 ? "y" : "x";
	    return line.attr(opp + "1", 0).attr(opp + "2", vars.axes[max]).attr(axis + "1", function(d) {
	      return d.coords.line;
	    }).attr(axis + "2", function(d) {
	      return d.coords.line;
	    }).attr("stroke", function(d) {
	      return d.color || vars[axis].lines.color;
	    }).attr("stroke-width", vars[axis].lines.width).attr("shape-rendering", vars[axis].lines.rendering.value).attr("stroke-dasharray", vars[axis].lines.dasharray.value);
	  };
	  lineFont = function(text, axis) {
	    var opp;
	    opp = axis.indexOf("x") === 0 ? "y" : "x";
	    return text.attr(opp, function(d) {
	      return d.coords.text[opp] + "px";
	    }).attr(axis, function(d) {
	      return d.coords.text[axis] + "px";
	    }).attr("dy", vars[axis].lines.font.position.value).attr("text-anchor", alignMap[vars[axis].lines.font.align.value]).attr("transform", function(d) {
	      return d.transform;
	    }).attr("font-size", vars[axis].lines.font.size + "px").attr("fill", function(d) {
	      return d.color || vars[axis].lines.color;
	    }).attr("font-family", vars[axis].lines.font.family.value).attr("font-weight", vars[axis].lines.font.weight);
	  };
	  planeTrans = "translate(" + vars.axes.margin.left + "," + vars.axes.margin.top + ")";
	  plane = vars.group.selectAll("g#d3plus_graph_plane").data([0]);
	  plane.transition().duration(vars.draw.timing).attr("transform", planeTrans);
	  plane.enter().append("g").attr("id", "d3plus_graph_plane").attr("transform", planeTrans);
	  bg = plane.selectAll("rect#d3plus_graph_background").data([0]);
	  bg.transition().duration(vars.draw.timing).attr(bgStyle);
	  bg.enter().append("rect").attr("id", "d3plus_graph_background").attr("x", 0).attr("y", 0).attr(bgStyle);
	  mirror = plane.selectAll("path#d3plus_graph_mirror").data([0]);
	  mirror.enter().append("path").attr("id", "d3plus_graph_mirror").attr("fill", "#000").attr("fill-opacity", 0.03).attr("stroke-width", 1).attr("stroke", "#ccc").attr("stroke-dasharray", "10,10").attr("opacity", 0);
	  mirror.transition().duration(vars.draw.timing).attr("opacity", function() {
	    if (vars.axes.mirror.value) {
	      return 1;
	    } else {
	      return 0;
	    }
	  }).attr("d", function() {
	    var h, w;
	    w = bgStyle.width;
	    h = bgStyle.height;
	    return "M " + w + " " + h + " L 0 " + h + " L " + w + " 0 Z";
	  });
	  rotated = vars.x.ticks.rotate !== 0;
	  xStyle = function(group, axis) {
	    var groups, offset;
	    offset = axis === "x" ? vars.axes.height : 0;
	    groups = group.attr("transform", "translate(0," + offset + ")").call(vars[axis].axis.svg.scale(vars[axis].scale.viz)).selectAll("g.tick");
	    groups.selectAll("line").attr("y2", function(d) {
	      var y2;
	      if (d.constructor === Date) {
	        d = +d;
	      }
	      y2 = d3.select(this).attr("y2");
	      if (vars[axis].ticks.visible.indexOf(d) >= 0) {
	        return y2;
	      } else {
	        return y2 / 2;
	      }
	    });
	    return groups.select("text").style("text-anchor", rotated && axis === "x" ? "end" : rotated ? "start" : "middle").call(tickFont, axis).each(function(d) {
	      d3.select(this).attr("dy", "0px").attr("font-size", function(d) {
	        return getFontStyle(axis, d, "size") + "px";
	      });
	      if (d.constructor === Date) {
	        d = +d;
	      }
	      if (!vars[axis].ticks.hidden && vars[axis].ticks.visible.indexOf(d) >= 0) {
	        return textwrap().container(d3.select(this)).rotate(vars[axis].ticks.rotate).align(rotated ? "end" : "center").valign(rotated ? "middle" : axis === "x" ? "top" : "bottom").width(vars[axis].ticks.maxWidth).height(vars[axis].ticks.maxHeight).padding(0).x(-vars[axis].ticks.maxWidth / 2).y(axis === "x2" ? -(vars[axis].ticks.maxHeight + vars.labels.padding * 2) : 0).draw();
	      }
	    });
	  };
	  yStyle = function(group, axis) {
	    var groups, offset;
	    offset = axis === "y2" ? vars.axes.width : 0;
	    groups = group.attr("transform", "translate(" + offset + ", 0)").call(vars[axis].axis.svg.scale(vars[axis].scale.viz)).selectAll("g.tick");
	    groups.selectAll("line").attr("y2", function(d) {
	      var y2;
	      if (d.constructor === Date) {
	        d = +d;
	      }
	      y2 = d3.select(this).attr("y2");
	      if (vars.x.ticks.visible.indexOf(d) >= 0) {
	        return y2;
	      } else {
	        return y2 / 2;
	      }
	    });
	    return groups.select("text").call(tickFont, axis);
	  };
	  ref = ["x", "x2", "y", "y2"];
	  for (j = 0, len = ref.length; j < len; j++) {
	    axis = ref[j];
	    style = axis.indexOf("x") === 0 ? xStyle : yStyle;
	    realData = axisData.length && vars[axis].value ? [0] : [];
	    axisGroup = plane.selectAll("g#d3plus_graph_" + axis + "ticks").data(realData);
	    axisGroup.transition().duration(vars.draw.timing).call(style, axis);
	    axisGroup.selectAll("line").transition().duration(vars.draw.timing).call(tickStyle, axis);
	    groupEnter = axisGroup.enter().append("g").attr("id", "d3plus_graph_" + axis + "ticks").call(style, axis);
	    groupEnter.selectAll("path").attr("fill", "none").attr("stroke", "none");
	    groupEnter.selectAll("line").call(tickStyle, axis);
	    axisGroup.exit().transition().duration(vars.data.timing).attr("opacity", 0).remove();
	  }
	  labelStyle = function(label, axis) {
	    return label.attr("x", axis.indexOf("x") === 0 ? vars.width.viz / 2 : -(vars.axes.height / 2 + vars.axes.margin.top)).attr("y", axis === "x" ? vars.height.viz - vars[axis].label.height / 2 - vars[axis].label.padding : axis === "y2" ? vars.width.viz - vars[axis].label.height / 2 - vars[axis].label.padding : vars[axis].label.height / 2 + vars[axis].label.padding).attr("transform", axis.indexOf("y") === 0 ? "rotate(-90)" : null).attr("font-family", vars[axis].label.font.family.value).attr("font-weight", vars[axis].label.font.weight).attr("font-size", vars[axis].label.font.size + "px").attr("fill", vars[axis].label.font.color).style("text-anchor", "middle").attr("dominant-baseline", "central").style("text-transform", vars[axis].label.font.transform.value).style("letter-spacing", vars[axis].label.font.spacing + "px");
	  };
	  ref1 = ["x", "y"];
	  for (k = 0, len1 = ref1.length; k < len1; k++) {
	    axis = ref1[k];
	    if (vars[axis].grid.value) {
	      if (vars[axis].ticks.value) {
	        gridData = vars[axis].ticks.value;
	      } else {
	        gridData = vars[axis].ticks.values;
	      }
	    } else {
	      gridData = [];
	      opp = axis === "x" ? "y" : "x";
	      if (vars[axis].ticks.values.indexOf(0) >= 0 && vars[opp].axis.value) {
	        gridData = [0];
	      }
	    }
	    grid = plane.selectAll("g#d3plus_graph_" + axis + "grid").data([0]);
	    grid.enter().append("g").attr("id", "d3plus_graph_" + axis + "grid");
	    lines = grid.selectAll("line").data(gridData, function(d, i) {
	      if (d.constructor === Date) {
	        return d.getTime();
	      } else {
	        return d;
	      }
	    });
	    lines.transition().duration(vars.draw.timing).call(tickPosition, axis).call(tickStyle, axis, true);
	    lines.enter().append("line").style("opacity", 0).call(tickPosition, axis).call(tickStyle, axis, true).transition().duration(vars.draw.timing).delay(vars.draw.timing / 2).style("opacity", 1);
	    lines.exit().transition().duration(vars.draw.timing / 2).style("opacity", 0).remove();
	  }
	  ref2 = ["x", "x2", "y", "y2"];
	  for (l = 0, len2 = ref2.length; l < len2; l++) {
	    axis = ref2[l];
	    if (vars[axis].value) {
	      axisLabel = vars[axis].label.fetch(vars);
	      labelData = axisData && axisLabel ? [0] : [];
	      affixes = vars.format.affixes.value[vars[axis].value];
	      if (axisLabel && !vars[axis].affixes.value && affixes) {
	        sep = vars[axis].affixes.separator.value;
	        if (sep === true) {
	          sep = ["[", "]"];
	        } else if (sep === false) {
	          sep = ["", ""];
	        }
	        axisLabel += " " + sep[0] + affixes[0] + " " + affixes[1] + sep[1];
	      }
	    } else {
	      axisLabel = "";
	      labelData = [];
	    }
	    label = vars.group.selectAll("text#d3plus_graph_" + axis + "label").data(labelData);
	    label.text(axisLabel).transition().duration(vars.draw.timing).call(labelStyle, axis);
	    label.enter().append("text").attr("stroke", "none").attr("id", "d3plus_graph_" + axis + "label").text(axisLabel).call(labelStyle, axis);
	    label.exit().transition().duration(vars.data.timing).attr("opacity", 0).remove();
	  }
	  ref3 = ["x", "y", "x2", "y2"];
	  for (m = 0, len3 = ref3.length; m < len3; m++) {
	    axis = ref3[m];
	    if (vars[axis].value) {
	      lineGroup = plane.selectAll("g#d3plus_graph_" + axis + "_userlines").data([0]);
	      lineGroup.enter().append("g").attr("id", "d3plus_graph_" + axis + "_userlines");
	      domain = vars[axis].scale.viz.domain();
	      if (axis.indexOf("y") === 0) {
	        domain = domain.slice().reverse();
	      }
	      textData = [];
	      lineData = [];
	      userLines = vars[axis].lines.value || [];
	      for (n = 0, len4 = userLines.length; n < len4; n++) {
	        line = userLines[n];
	        d = validObject(line) ? line.position : line;
	        if (axis === vars.axes.discrete) {
	          valid = domain.indexOf(d) >= 0;
	        } else {
	          valid = d >= domain[0] && d <= domain[1];
	        }
	        if (valid) {
	          d = !validObject(line) ? {
	            "position": d
	          } : line;
	          d.coords = {
	            line: vars[axis].scale.viz(d.position)
	          };
	          lineData.push(d);
	          if (d.text) {
	            d.axis = axis;
	            d.padding = vars[axis].lines.font.padding.value * 0.5;
	            d.align = vars[axis].lines.font.align.value;
	            position = vars[axis].lines.font.position.text;
	            textPad = position === "middle" ? 0 : d.padding * 2;
	            if (position === "top") {
	              textPad = -textPad;
	            }
	            if (axis.indexOf("x") === 0) {
	              textPos = d.align === "left" ? vars.axes.height : d.align === "center" ? vars.axes.height / 2 : 0;
	              if (d.align === "left") {
	                textPos -= d.padding * 2;
	              }
	              if (d.align === "right") {
	                textPos += d.padding * 2;
	              }
	            } else {
	              textPos = d.align === "left" ? 0 : d.align === "center" ? vars.axes.width / 2 : vars.axes.width;
	              if (d.align === "right") {
	                textPos -= d.padding * 2;
	              }
	              if (d.align === "left") {
	                textPos += d.padding * 2;
	              }
	            }
	            d.coords.text = {};
	            d.coords.text[axis.indexOf("x") === 0 ? "y" : "x"] = textPos;
	            d.coords.text[axis] = vars[axis].scale.viz(d.position) + textPad;
	            d.transform = axis.indexOf("x") === 0 ? "rotate(-90," + d.coords.text.x + "," + d.coords.text.y + ")" : null;
	            textData.push(d);
	          }
	        }
	      }
	      lines = lineGroup.selectAll("line.d3plus_graph_" + axis + "line").data(lineData, function(d) {
	        return d.position;
	      });
	      lines.enter().append("line").attr("class", "d3plus_graph_" + axis + "line").attr("opacity", 0).call(lineStyle, axis);
	      lines.transition().duration(vars.draw.timing).attr("opacity", 1).call(lineStyle, axis);
	      lines.exit().transition().duration(vars.draw.timing).attr("opacity", 0).remove();
	      linetexts = lineGroup.selectAll("text.d3plus_graph_" + axis + "line_text").data(textData, function(d) {
	        return d.position;
	      });
	      linetexts.enter().append("text").attr("class", "d3plus_graph_" + axis + "line_text").attr("id", function(d) {
	        var id;
	        id = d.position + "";
	        id = id.replace("-", "neg");
	        id = id.replace(".", "p");
	        return "d3plus_graph_" + axis + "line_text_" + id;
	      }).attr("opacity", 0).call(lineFont, axis);
	      linetexts.text(function(d) {
	        return d.text;
	      }).transition().duration(vars.draw.timing).attr("opacity", 1).call(lineFont, axis);
	      linetexts.exit().transition().duration(vars.draw.timing).attr("opacity", 0).remove();
	      rectStyle = function(rect) {
	        var getText;
	        getText = function(d) {
	          var id;
	          id = d.position + "";
	          id = id.replace("-", "neg");
	          id = id.replace(".", "p");
	          return plane.select("text#d3plus_graph_" + d.axis + "line_text_" + id).node().getBBox();
	        };
	        return rect.attr("x", function(d) {
	          return getText(d).x - d.padding;
	        }).attr("y", function(d) {
	          return getText(d).y - d.padding;
	        }).attr("transform", function(d) {
	          return d.transform;
	        }).attr("width", function(d) {
	          return getText(d).width + (d.padding * 2);
	        }).attr("height", function(d) {
	          return getText(d).height + (d.padding * 2);
	        }).attr("fill", vars.axes.background.color !== "transparent" ? vars.axes.background.color : "white");
	      };
	      rectData = vars[axis].lines.font.background.value ? textData : [];
	      lineRects = lineGroup.selectAll("rect.d3plus_graph_" + axis + "line_rect").data(rectData, function(d) {
	        return d.position;
	      });
	      lineRects.enter().insert("rect", "text.d3plus_graph_" + axis + "line_text").attr("class", "d3plus_graph_" + axis + "line_rect").attr("pointer-events", "none").attr("opacity", 0).call(rectStyle);
	      lineRects.transition().delay(vars.draw.timing).each("end", function(d) {
	        return d3.select(this).transition().duration(vars.draw.timing).attr("opacity", 1).call(rectStyle);
	      });
	      lineRects.exit().transition().duration(vars.draw.timing).attr("opacity", 0).remove();
	    }
	  }
	};


/***/ },
/* 328 */
/***/ function(module, exports, __webpack_require__) {

	var fetchValue, graph, line, nest, sort, stack;
	
	fetchValue = __webpack_require__(3);
	
	graph = __webpack_require__(57);
	
	nest = __webpack_require__(95);
	
	sort = __webpack_require__(19);
	
	stack = __webpack_require__(96);
	
	line = function(vars) {
	  var d, data, domains, i, j, len, len1, point, ref, xval, yval;
	  graph(vars, {
	    buffer: vars.axes.opposite,
	    mouse: true
	  });
	  domains = vars.x.domain.viz.concat(vars.y.domain.viz);
	  if (domains.indexOf(void 0) >= 0) {
	    return [];
	  }
	  data = sort(vars.data.viz, null, null, null, vars);
	  for (i = 0, len = data.length; i < len; i++) {
	    point = data[i];
	    ref = point.values;
	    for (j = 0, len1 = ref.length; j < len1; j++) {
	      d = ref[j];
	      xval = fetchValue(vars, d, vars.x.value);
	      if (xval) {
	        d.d3plus.x2 = false;
	        d.d3plus.x = vars.x.scale.viz(xval);
	      } else {
	        d.d3plus.x2 = true;
	        d.d3plus.x = vars.x2.scale.viz(fetchValue(vars, d, vars.x2.value));
	      }
	      d.d3plus.x += vars.axes.margin.left;
	      yval = fetchValue(vars, d, vars.y.value);
	      if (yval) {
	        d.d3plus.y2 = false;
	        d.d3plus.y = vars.y.scale.viz(yval);
	      } else {
	        d.d3plus.y2 = true;
	        d.d3plus.y = vars.y2.scale.viz(fetchValue(vars, d, vars.y2.value));
	      }
	      d.d3plus.y += vars.axes.margin.top;
	    }
	  }
	  if (vars.axes.stacked) {
	    return stack(vars, data);
	  } else {
	    return data;
	  }
	};
	
	line.filter = function(vars, data) {
	  return nest(vars, data);
	};
	
	line.requirements = ["data", "x", "y"];
	
	line.setup = function(vars) {
	  var axis;
	  if (!vars.axes.discrete) {
	    axis = vars.time.value === vars.y.value ? "y" : "x";
	    vars.self[axis]({
	      scale: "discrete"
	    });
	  }
	};
	
	line.shapes = ["line"];
	
	line.tooltip = "static";
	
	module.exports = line;


/***/ },
/* 329 */
/***/ function(module, exports, __webpack_require__) {

	var fetchValue, shortestPath, uniqueValues, viz,
	  indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };
	
	shortestPath = __webpack_require__(133);
	
	fetchValue = __webpack_require__(3);
	
	uniqueValues = __webpack_require__(8);
	
	viz = function(vars) {
	  var base, base1, base2, base3, col, colIndex, columnWidth, columns, edge, edgeInt, edges, i, id, j, k, l, labelSpace, lastDir, lastHop, len, len1, len2, len3, len4, len5, len6, len7, m, maxRadius, minRadius, n, newPath, next, nextDir, nextHop, nextIndex, node, o, p, path, pathInt, pathLookup, paths, prev, prevIndex, q, ref, ref1, ref2, ref3, ref4, ref5, ref6, ref7, rowHeight, rows, size, sizeDomain, val, x, xDiff, y, yDomain;
	  edges = [];
	  pathLookup = {};
	  pathLookup[vars.focus.value[0]] = 0;
	  pathLookup[vars.focus.value[1]] = 0;
	  paths = {
	    all: [[vars.focus.value[0]], [vars.focus.value[1]]]
	  };
	  ref = viz.paths;
	  for (pathInt = j = 0, len = ref.length; j < len; pathInt = ++j) {
	    path = ref[pathInt];
	    edges = edges.concat(path.edges);
	    lastHop = vars.focus.value[0];
	    paths[pathInt] = [lastHop];
	    ref1 = path.edges;
	    for (edgeInt = k = 0, len1 = ref1.length; k < len1; edgeInt = ++k) {
	      edge = ref1[edgeInt];
	      edge[vars.edges.source] = vars.data.viz.filter(function(d) {
	        return edge[vars.edges.source][vars.id.value] === d[vars.id.value];
	      })[0];
	      edge[vars.edges.target] = vars.data.viz.filter(function(d) {
	        return edge[vars.edges.target][vars.id.value] === d[vars.id.value];
	      })[0];
	      nextDir = edge[vars.edges.source][vars.id.value] === lastHop ? "target" : "source";
	      nextHop = edge[vars.edges[nextDir]][vars.id.value];
	      if (pathLookup[nextHop] === void 0) {
	        pathLookup[nextHop] = pathInt;
	      }
	      paths[pathInt].push(nextHop);
	      lastHop = nextHop;
	    }
	  }
	  rows = 0;
	  for (pathInt in paths) {
	    path = paths[pathInt];
	    if (pathInt !== "all") {
	      newPath = 0;
	      for (i = l = 0, len2 = path.length; l < len2; i = ++l) {
	        id = path[i];
	        if ((i !== 0 && i !== (path.length - 1)) && pathLookup[id] === parseFloat(pathInt)) {
	          newPath = 1;
	          prev = path[i - 1];
	          next = path[i + 1];
	          prevIndex = null;
	          nextIndex = null;
	          ref2 = paths.all;
	          for (colIndex = m = 0, len3 = ref2.length; m < len3; colIndex = ++m) {
	            col = ref2[colIndex];
	            if (indexOf.call(col, prev) >= 0) {
	              prevIndex = colIndex;
	            }
	            if (indexOf.call(col, next) >= 0) {
	              nextIndex = colIndex;
	            }
	          }
	          if (prevIndex !== null && nextIndex === null) {
	            if (prevIndex + 1 === paths.all.length - 1) {
	              paths.all.splice(prevIndex + 1, 0, [id]);
	            } else {
	              paths.all[prevIndex + 1].push(id);
	            }
	          } else if (nextIndex - prevIndex === 1) {
	            paths.all.splice(nextIndex, 0, [id]);
	          } else if (nextIndex - prevIndex > 1) {
	            paths.all[nextIndex - 1].push(id);
	          }
	        }
	      }
	      rows += newPath;
	    }
	  }
	  rowHeight = Math.floor(vars.height.viz / rows);
	  yDomain = [];
	  i = 0;
	  while (i < rows) {
	    if (i % 2 === 0) {
	      yDomain.push(i);
	    } else {
	      yDomain.unshift(i);
	    }
	    i++;
	  }
	  labelSpace = vars.size.value && !vars.small ? 30 : 0;
	  y = d3.scale.ordinal().domain(yDomain).range(d3.range(rowHeight / 2 - labelSpace, vars.height.viz + rowHeight / 2 - labelSpace, (vars.height.viz - rowHeight) / (rows - 1)));
	  columns = paths["all"].length;
	  columnWidth = Math.floor(vars.width.viz / columns);
	  x = d3.scale.linear().domain([0, columns - 1]).rangeRound([columnWidth / 2, vars.width.viz - columnWidth / 2]);
	  minRadius = 5;
	  maxRadius = d3.min([columnWidth, rowHeight - labelSpace]) * 0.4;
	  sizeDomain = d3.extent(vars.data.viz, function(node) {
	    var val;
	    val = fetchValue(vars, node, vars.size.value);
	    return val || 0;
	  });
	  size = vars.size.scale.value.domain(sizeDomain).rangeRound([minRadius, maxRadius]);
	  ref3 = vars.data.viz;
	  for (n = 0, len4 = ref3.length; n < len4; n++) {
	    node = ref3[n];
	    if (node.d3plus == null) {
	      node.d3plus = {};
	    }
	    ref4 = paths["all"];
	    for (colIndex = o = 0, len5 = ref4.length; o < len5; colIndex = ++o) {
	      col = ref4[colIndex];
	      if (ref5 = node[vars.id.value], indexOf.call(col, ref5) >= 0) {
	        node.d3plus.x = x(colIndex);
	      }
	    }
	    node.d3plus.y = y(pathLookup[node[vars.id.value]]);
	    if (vars.size.value) {
	      val = fetchValue(vars, node, vars.size.value);
	      node.d3plus.r = val ? size(val) : minRadius;
	    } else {
	      node.d3plus.r = maxRadius;
	    }
	    if (node.d3plus.r < columnWidth * 0.1 && !vars.small) {
	      node.d3plus.label = {
	        x: 0,
	        y: node.d3plus.r + vars.labels.padding * 2,
	        w: columnWidth * 0.6,
	        h: labelSpace + maxRadius - node.d3plus.r,
	        resize: false
	      };
	    } else {
	      delete node.d3plus.label;
	    }
	  }
	  ref6 = viz.paths;
	  for (pathInt = p = 0, len6 = ref6.length; p < len6; pathInt = ++p) {
	    path = ref6[pathInt];
	    lastHop = vars.focus.value[0];
	    ref7 = path.edges;
	    for (edgeInt = q = 0, len7 = ref7.length; q < len7; edgeInt = ++q) {
	      edge = ref7[edgeInt];
	      nextDir = edge[vars.edges.source][vars.id.value] === lastHop ? "target" : "source";
	      lastDir = nextDir === "target" ? "source" : "target";
	      nextHop = edge[vars.edges[nextDir]][vars.id.value];
	      if (pathLookup[lastHop] !== pathLookup[nextHop]) {
	        edge.d3plus = {
	          spline: true
	        };
	        if ((base = edge[vars.edges.source]).d3plus == null) {
	          base.d3plus = {};
	        }
	        if ((base1 = edge[vars.edges.source].d3plus).edges == null) {
	          base1.edges = {};
	        }
	        if ((base2 = edge[vars.edges.target]).d3plus == null) {
	          base2.d3plus = {};
	        }
	        if ((base3 = edge[vars.edges.target].d3plus).edges == null) {
	          base3.edges = {};
	        }
	        xDiff = edge[nextDir].d3plus.x - edge[lastDir].d3plus.x;
	        edge[lastDir].d3plus.edges[edge[nextDir][vars.id.value]] = {
	          angle: Math.PI,
	          radius: columnWidth / 2
	        };
	        edge[nextDir].d3plus.edges[edge[lastDir][vars.id.value]] = {
	          angle: 0,
	          radius: columnWidth / 2,
	          offset: xDiff - columnWidth
	        };
	      } else {
	        delete edge.d3plus;
	      }
	      lastHop = nextHop;
	    }
	  }
	  return {
	    nodes: vars.data.viz,
	    edges: edges
	  };
	};
	
	viz.filter = function(vars, data) {
	  var added, d, edge, edges, id, ids, j, k, l, len, len1, len2, obj, path, ref, ref1, returnData, source, target;
	  edges = vars.edges.filtered || vars.edges.value;
	  viz.paths = shortestPath(edges, vars.focus.value[0], {
	    target: vars.focus.value[1],
	    distance: vars.edges.size.value || void 0,
	    nodeid: vars.id.value,
	    startpoint: vars.edges.source,
	    endpoint: vars.edges.target,
	    K: vars.edges.limit.value || 5
	  });
	  viz.nodes = [];
	  added = [];
	  ref = viz.paths;
	  for (j = 0, len = ref.length; j < len; j++) {
	    path = ref[j];
	    ref1 = path.edges;
	    for (k = 0, len1 = ref1.length; k < len1; k++) {
	      edge = ref1[k];
	      source = edge[vars.edges.source];
	      target = edge[vars.edges.target];
	      if (added.indexOf(source[vars.id.value]) < 0) {
	        viz.nodes.push(source);
	        added.push(source[vars.id.value]);
	      }
	      if (added.indexOf(target[vars.id.value]) < 0) {
	        viz.nodes.push(target);
	        added.push(target[vars.id.value]);
	      }
	    }
	  }
	  ids = uniqueValues(viz.nodes, vars.id.value, fetchValue, vars);
	  returnData = [];
	  for (l = 0, len2 = ids.length; l < len2; l++) {
	    id = ids[l];
	    d = data.filter(function(d) {
	      return d[vars.id.value] === id;
	    });
	    if (!d[0]) {
	      obj = {
	        d3plus: {}
	      };
	      obj[vars.id.value] = id;
	      returnData.push(obj);
	    } else {
	      returnData.push(d[0]);
	    }
	  }
	  return returnData;
	};
	
	viz.nesting = false;
	
	viz.requirements = [
	  function(vars) {
	    return {
	      status: vars.focus.value.length === 2,
	      text: vars.format.locale.value.method.focus + " x 2"
	    };
	  }, "edges"
	];
	
	viz.scale = 1;
	
	viz.shapes = ["circle", "square", "donut"];
	
	viz.tooltip = "static";
	
	module.exports = viz;


/***/ },
/* 330 */
/***/ function(module, exports, __webpack_require__) {

	var comparator, dataThreshold, groupData, pie;
	
	comparator = __webpack_require__(65);
	
	dataThreshold = __webpack_require__(70);
	
	groupData = __webpack_require__(83);
	
	pie = function(vars) {
	  var d, groupedData, i, item, len, pieData, pieLayout, radius, returnData;
	  pieLayout = d3.layout.pie().value(function(d) {
	    return d.value;
	  }).sort(function(a, b) {
	    if (vars.order.value) {
	      return comparator(a.d3plus, b.d3plus, [vars.order.value], vars.order.sort.value, [], vars);
	    } else if (vars.id.nesting.length > 1) {
	      return comparator(a.d3plus, b.d3plus, vars.id.nesting.concat([vars.size.value]), void 0, [], vars);
	    } else {
	      return comparator(a.d3plus, b.d3plus, [vars.size.value], "desc", [], vars);
	    }
	  });
	  groupedData = groupData(vars, vars.data.viz, []);
	  pieData = pieLayout(groupedData);
	  returnData = [];
	  radius = d3.min([vars.width.viz, vars.height.viz]) / 2 - vars.labels.padding * 2;
	  for (i = 0, len = pieData.length; i < len; i++) {
	    d = pieData[i];
	    item = d.data.d3plus;
	    item.d3plus.startAngle = d.startAngle;
	    item.d3plus.endAngle = d.endAngle;
	    item.d3plus.r = radius;
	    item.d3plus.x = vars.width.viz / 2;
	    item.d3plus.y = vars.height.viz / 2;
	    item.d3plus.share = (d.endAngle - d.startAngle) / (Math.PI * 2);
	    returnData.push(item);
	  }
	  return returnData;
	};
	
	pie.filter = dataThreshold;
	
	pie.requirements = ["data", "size"];
	
	pie.shapes = ["arc"];
	
	pie.threshold = function(vars) {
	  return (40 * 40) / (vars.width.viz * vars.height.viz);
	};
	
	module.exports = pie;


/***/ },
/* 331 */
/***/ function(module, exports, __webpack_require__) {

	var buckets, comparator, dataThreshold, fetchText, fetchValue, fontSizes, offset, radar, sort, textwrap, uniques;
	
	comparator = __webpack_require__(65);
	
	sort = __webpack_require__(19);
	
	dataThreshold = __webpack_require__(70);
	
	fetchText = __webpack_require__(17);
	
	fetchValue = __webpack_require__(3);
	
	fontSizes = __webpack_require__(36);
	
	offset = __webpack_require__(67);
	
	textwrap = __webpack_require__(41);
	
	buckets = __webpack_require__(30);
	
	uniques = __webpack_require__(8);
	
	radar = function(vars) {
	  var a, a2, anchor, angle, buffer, c, center, children, d, data, first, grid, gridStyle, i, idIndex, ids, intervals, j, k, l, labelData, labelGroup, labelHeight, labelIndex, labelStyle, labelWidth, labels, len, len1, len2, len3, m, maxData, maxRadius, n, nextDepth, nextLevel, o, ov, radius, ref, ref1, righty, ringData, ringStyle, rings, second, sizes, text, textStyle, top, total, x, y;
	  data = vars.data.viz;
	  nextDepth = vars.depth.value + 1;
	  nextLevel = vars.id.nesting[nextDepth];
	  children = (function() {
	    var j, len, results;
	    results = [];
	    for (j = 0, len = data.length; j < len; j++) {
	      d = data[j];
	      results.push(d[nextLevel]);
	    }
	    return results;
	  })();
	  total = (function() {
	    var j, len, results;
	    results = [];
	    for (j = 0, len = data.length; j < len; j++) {
	      d = data[j];
	      results.push(uniques(data, nextLevel, fetchValue, vars, nextDepth));
	    }
	    return results;
	  })();
	  total = uniques(d3.merge(total)).length;
	  angle = Math.PI * 2 / total;
	  maxRadius = d3.min([vars.width.viz, vars.height.viz]) / 2;
	  labelHeight = 0;
	  labelWidth = 0;
	  labels = (function() {
	    var j, len, results;
	    results = [];
	    for (j = 0, len = children.length; j < len; j++) {
	      c = children[j];
	      results.push(fetchText(vars, c, nextDepth)[0]);
	    }
	    return results;
	  })();
	  labels = uniques(d3.merge(labels));
	  if (vars.labels.value) {
	    first = offset(Math.PI / 2, maxRadius);
	    second = offset(angle + Math.PI / 2, maxRadius);
	    labelHeight = (first.x - second.x) - vars.labels.padding * 2;
	    textStyle = {
	      "fill": vars.x.ticks.font.color,
	      "font-family": vars.x.ticks.font.family.value,
	      "font-weight": vars.x.ticks.font.weight,
	      "font-size": vars.x.ticks.font.size + "px"
	    };
	    sizes = fontSizes(labels, textStyle, {
	      mod: function(elem) {
	        return textwrap().container(d3.select(elem)).width(vars.height.viz / 8).height(labelHeight).draw();
	      }
	    });
	    labelWidth = d3.max(sizes, function(d) {
	      return d.width;
	    });
	    maxRadius -= labelWidth;
	    maxRadius -= vars.labels.padding * 2;
	  }
	  maxData = (function() {
	    var j, len, results;
	    results = [];
	    for (j = 0, len = children.length; j < len; j++) {
	      c = children[j];
	      results.push((function() {
	        var k, len1, results1;
	        results1 = [];
	        for (k = 0, len1 = c.length; k < len1; k++) {
	          d = c[k];
	          results1.push(fetchValue(vars, d, vars.size.value));
	        }
	        return results1;
	      })());
	    }
	    return results;
	  })();
	  maxData = d3.max(d3.merge(maxData));
	  radius = d3.scale.linear().domain([0, maxData]).range([0, maxRadius]);
	  ids = (function() {
	    var j, len, results;
	    results = [];
	    for (j = 0, len = children.length; j < len; j++) {
	      c = children[j];
	      results.push(fetchValue(vars, c, nextLevel));
	    }
	    return results;
	  })();
	  ids = uniques(d3.merge(ids));
	  idIndex = d3.scale.ordinal().domain(ids).range(d3.range(0, ids.length));
	  for (j = 0, len = data.length; j < len; j++) {
	    d = data[j];
	    d.d3plus.x = vars.width.viz / 2 + vars.margin.top;
	    d.d3plus.y = vars.height.viz / 2 + vars.margin.left;
	    ref = d[nextLevel];
	    for (i = k = 0, len1 = ref.length; k < len1; i = ++k) {
	      a = ref[i];
	      if (!a.d3plus) {
	        a.d3plus = {};
	      }
	      a.d3plus.r = radius(fetchValue(vars, a, vars.size.value));
	      a.d3plus.a = idIndex(fetchValue(vars, a, nextLevel)) * angle;
	    }
	  }
	  intervals = 1;
	  ref1 = [10, 5, 4, 2];
	  for (m = 0, len2 = ref1.length; m < len2; m++) {
	    i = ref1[m];
	    if (maxRadius / i >= 20) {
	      intervals = i;
	      break;
	    }
	  }
	  ringData = buckets([maxRadius / intervals, maxRadius], intervals - 1).reverse();
	  if (ringData.length === intervals) {
	    ringData.shift();
	  }
	  rings = vars.group.selectAll(".d3plus_radar_rings").data(ringData, function(d, i) {
	    return i;
	  });
	  ringStyle = function(ring) {
	    return ring.attr("fill", function(d, i) {
	      if (i === 0) {
	        return vars.axes.background.color;
	      } else {
	        return "transparent";
	      }
	    }).attr("cx", vars.width.viz / 2 + vars.margin.top).attr("cy", vars.height.viz / 2 + vars.margin.left).attr("stroke", vars.x.grid.value ? vars.x.grid.color : "transparent");
	  };
	  rings.enter().append("circle").attr("class", "d3plus_radar_rings").call(ringStyle).attr("r", 0);
	  rings.transition().duration(vars.draw.timing).call(ringStyle).attr("r", function(d) {
	    return d;
	  });
	  rings.exit().transition().duration(vars.draw.timing).attr("opacity", 0).remove();
	  labelIndex = d3.scale.ordinal().domain(labels).range(d3.range(0, labels.length));
	  labelData = [];
	  for (n = 0, len3 = labels.length; n < len3; n++) {
	    l = labels[n];
	    a2 = (angle * labelIndex(l)) - Math.PI / 2;
	    a = a2 * (180 / Math.PI);
	    if (a < -90 || a > 90) {
	      a = a - 180;
	      buffer = -(maxRadius + vars.labels.padding * 2 + labelWidth);
	      anchor = "end";
	    } else {
	      buffer = maxRadius + vars.labels.padding * 2;
	      anchor = "start";
	    }
	    top = a2 < 0 || a2 > Math.PI;
	    righty = a2 < Math.PI / 2;
	    ov = maxRadius;
	    if (vars.labels.value) {
	      ov += vars.labels.padding;
	    }
	    o = offset(a2, ov);
	    x = o.x;
	    y = o.y;
	    if (!righty) {
	      x -= labelWidth;
	    }
	    if (top) {
	      y -= labelHeight;
	    }
	    center = [0, Math.PI].indexOf(angle * labelIndex(l)) >= 0;
	    if (center) {
	      x -= labelWidth / 2;
	    }
	    labelData.push({
	      "text": l,
	      "angle": a,
	      "x": buffer,
	      "anchor": anchor,
	      "offset": o
	    });
	  }
	  labelGroup = vars.group.selectAll("g.d3plus_radar_label_group").data([0]);
	  labelGroup.enter().append("g").attr("class", "d3plus_radar_label_group").attr("transform", "translate(" + vars.width.viz / 2 + "," + vars.height.viz / 2 + ")");
	  labelGroup.transition().duration(vars.draw.timing).attr("transform", "translate(" + vars.width.viz / 2 + "," + vars.height.viz / 2 + ")");
	  text = labelGroup.selectAll(".d3plus_radar_labels").data((vars.labels.value ? labelData : []), function(d, i) {
	    return i;
	  });
	  labelStyle = function(label) {
	    return label.attr(textStyle).each(function(l, i) {
	      return textwrap().container(d3.select(this)).height(labelHeight).width(labelWidth).align(l.anchor).text(l.text).padding(0).valign("middle").x(l.x).y(-labelHeight / 2).draw();
	    }).attr("transform", function(t) {
	      var translate;
	      translate = d3.select(this).attr("transform") || "";
	      if (translate.length) {
	        translate = translate.split(")").slice(-3).join(")");
	      }
	      return "rotate(" + t.angle + ")" + translate;
	    });
	  };
	  text.call(labelStyle);
	  text.enter().append("text").attr("class", "d3plus_radar_labels").attr("opacity", 0).call(labelStyle).transition().duration(vars.draw.timing).attr("opacity", 1);
	  text.exit().transition().duration(vars.draw.timing).attr("opacity", 0).remove();
	  grid = vars.group.selectAll(".d3plus_radar_lines").data(labelData, function(d, i) {
	    return i;
	  });
	  gridStyle = function(grid) {
	    return grid.attr("stroke", vars.x.grid.color).attr("x1", vars.width.viz / 2 + vars.margin.left).attr("y1", vars.height.viz / 2 + vars.margin.top);
	  };
	  grid.enter().append("line").attr("class", "d3plus_radar_lines").call(gridStyle).attr("x2", vars.width.viz / 2 + vars.margin.left).attr("y2", vars.height.viz / 2 + vars.margin.top);
	  grid.transition().duration(vars.draw.timing).call(gridStyle).attr("x2", function(d) {
	    return vars.width.viz / 2 + vars.margin.left + d.offset.x;
	  }).attr("y2", function(d) {
	    return vars.height.viz / 2 + vars.margin.top + d.offset.y;
	  });
	  grid.exit().transition().duration(vars.draw.timing).attr("opacity", 0).remove();
	  vars.mouse.viz = {
	    click: false
	  };
	  return data;
	};
	
	radar.requirements = ["data", "size"];
	
	radar.shapes = ["radial"];
	
	module.exports = radar;


/***/ },
/* 332 */
/***/ function(module, exports, __webpack_require__) {

	var d3sankey, events, removeTooltip, sankey, uniques;
	
	d3sankey = __webpack_require__(421);
	
	events = __webpack_require__(9);
	
	removeTooltip = __webpack_require__(26);
	
	uniques = __webpack_require__(8);
	
	sankey = function(vars) {
	  var d, e, edges, focus, i, j, layout, len, len1, n, nodes, padding, placed, returnData, size;
	  focus = vars.focus.value[0];
	  padding = vars.data.stroke.width * 2;
	  size = vars.size.value.constructor === Number ? vars.size.value : 20;
	  edges = vars.edges.connections(focus, vars.id.value).filter(function(e) {
	    return e[vars.edges.source][vars.id.value] !== focus || e[vars.edges.target][vars.id.value] !== focus;
	  });
	  nodes = [];
	  placed = [];
	  edges = edges.map(function(e) {
	    var s, t;
	    if (e[vars.edges.target][vars.id.value] === focus) {
	      s = {
	        id: "left_" + e[vars.edges.source][vars.id.value],
	        dupe: "left",
	        data: e[vars.edges.source]
	      };
	      t = e[vars.edges.target];
	    } else {
	      s = e[vars.edges.source];
	      t = {
	        id: "right_" + e[vars.edges.target][vars.id.value],
	        dupe: "right",
	        data: e[vars.edges.target]
	      };
	    }
	    if (placed.indexOf(s.id) < 0) {
	      nodes.push(s);
	    }
	    if (placed.indexOf(t.id) < 0) {
	      nodes.push(t);
	    }
	    placed.push(s.id);
	    placed.push(t.id);
	    return {
	      source: s,
	      target: t,
	      value: e[vars.edges.strength.value] || 1
	    };
	  });
	  layout = d3sankey().nodeWidth(size).nodePadding(vars.data.padding.value).size([vars.width.viz - padding * 2, vars.height.viz - padding * 2]).nodes(nodes).links(edges).layout(2);
	  returnData = [];
	  for (i = 0, len = nodes.length; i < len; i++) {
	    n = nodes[i];
	    d = n.data || n;
	    d = {
	      id: d[vars.id.value]
	    };
	    d.d3plus = {
	      x: n.x + n.dx / 2 + padding,
	      y: n.y + n.dy / 2 + padding,
	      width: n.dx,
	      height: n.dy,
	      suffix: n.dupe
	    };
	    returnData.push(d);
	  }
	  vars.edges.path = layout.link();
	  for (j = 0, len1 = edges.length; j < len1; j++) {
	    e = edges[j];
	    e.d3plus = {
	      x: padding,
	      y: padding
	    };
	  }
	  vars.mouse.viz = {};
	  vars.mouse.viz[events.click] = function(d) {
	    var old_focus;
	    if (d[vars.id.value] !== vars.focus.value[0]) {
	      removeTooltip(vars.type.value);
	      old_focus = vars.focus.value[0];
	      vars.history.states.push(function() {
	        return vars.self.focus(old_focus).draw();
	      });
	      return vars.self.focus(d[vars.id.value]).draw();
	    }
	  };
	  return {
	    nodes: returnData,
	    edges: edges
	  };
	};
	
	sankey.requirements = ["edges", "focus", "nodes"];
	
	sankey.shapes = ["square"];
	
	module.exports = sankey;


/***/ },
/* 333 */
/***/ function(module, exports, __webpack_require__) {

	var fetchValue, graph, print, scatter, sort, ticks;
	
	fetchValue = __webpack_require__(3);
	
	graph = __webpack_require__(57);
	
	print = __webpack_require__(2);
	
	sort = __webpack_require__(19);
	
	ticks = __webpack_require__(323);
	
	scatter = function(vars) {
	  var d, domains, i, len, ref;
	  graph(vars, {
	    buffer: "size",
	    mouse: true
	  });
	  domains = vars.x.domain.viz.concat(vars.y.domain.viz);
	  if (domains.indexOf(void 0) >= 0) {
	    return [];
	  }
	  ref = vars.data.viz;
	  for (i = 0, len = ref.length; i < len; i++) {
	    d = ref[i];
	    d.d3plus.x = vars.x.scale.viz(fetchValue(vars, d, vars.x.value));
	    d.d3plus.x += vars.axes.margin.left;
	    d.d3plus.y = vars.y.scale.viz(fetchValue(vars, d, vars.y.value));
	    d.d3plus.y += vars.axes.margin.top;
	    if (typeof vars.size.value === "number" || !vars.size.value) {
	      d.d3plus.r = vars.axes.scale(0);
	    } else {
	      d.d3plus.r = vars.axes.scale(fetchValue(vars, d, vars.size.value));
	    }
	  }
	  ticks(vars);
	  return sort(vars.data.viz, vars.order.value || vars.size.value || vars.id.value, vars.order.sort.value === "desc" ? "asc" : "desc", vars.color.value || [], vars);
	};
	
	scatter.fill = true;
	
	scatter.requirements = ["data", "x", "y"];
	
	scatter.scale = 1.1;
	
	scatter.setup = function(vars) {
	  if (vars.time.value && !vars.axes.discrete) {
	    if (vars.time.value === vars.x.value) {
	      vars.self.x({
	        scale: "discrete"
	      });
	    }
	    if (vars.time.value === vars.y.value) {
	      return vars.self.y({
	        scale: "discrete"
	      });
	    }
	  }
	};
	
	scatter.shapes = ["circle", "square", "donut"];
	
	scatter.tooltip = "static";
	
	module.exports = scatter;


/***/ },
/* 334 */
/***/ function(module, exports, __webpack_require__) {

	var dataThreshold, groupData, mergeObject, tree_map;
	
	dataThreshold = __webpack_require__(70);
	
	groupData = __webpack_require__(83);
	
	mergeObject = __webpack_require__(29);
	
	tree_map = function(vars) {
	  var d, data, groupedData, i, len, returnData, root;
	  groupedData = groupData(vars, vars.data.viz);
	  data = d3.layout.treemap().mode(vars.type.mode.value).round(true).size([vars.width.viz, vars.height.viz]).children(function(d) {
	    return d.values;
	  }).padding(vars.data.padding.value).sort(function(a, b) {
	    var sizeDiff;
	    sizeDiff = a.value - b.value;
	    if (sizeDiff === 0) {
	      return a.id < b.id;
	    } else {
	      return sizeDiff;
	    }
	  }).nodes({
	    name: "root",
	    values: groupedData
	  }).filter(function(d) {
	    return !d.values && d.area;
	  });
	  if (data.length) {
	    root = data[0];
	    while (root.parent) {
	      root = root.parent;
	    }
	    returnData = [];
	    for (i = 0, len = data.length; i < len; i++) {
	      d = data[i];
	      d.d3plus.d3plus = mergeObject(d.d3plus.d3plus, {
	        x: d.x + d.dx / 2,
	        y: d.y + d.dy / 2,
	        width: d.dx,
	        height: d.dy,
	        share: d.value / root.value
	      });
	      returnData.push(d.d3plus);
	    }
	  }
	  return returnData;
	};
	
	tree_map.filter = dataThreshold;
	
	tree_map.modes = ["squarify", "slice", "dice", "slice-dice"];
	
	tree_map.requirements = ["data", "size"];
	
	tree_map.shapes = ["square"];
	
	tree_map.threshold = function(vars) {
	  return (40 * 40) / (vars.width.viz * vars.height.viz);
	};
	
	module.exports = tree_map;


/***/ },
/* 335 */
/***/ function(module, exports, __webpack_require__) {

	var attach, axis, container, flash, getSteps, print, validObject;
	
	attach = __webpack_require__(86);
	
	axis = __webpack_require__(291);
	
	flash = __webpack_require__(149);
	
	getSteps = __webpack_require__(392);
	
	print = __webpack_require__(2);
	
	container = __webpack_require__(258);
	
	validObject = __webpack_require__(7);
	
	module.exports = function() {
	  var vars;
	  vars = {
	    g: {
	      apps: {}
	    },
	    types: {
	      area: __webpack_require__(140),
	      bar: __webpack_require__(318),
	      bubbles: __webpack_require__(320),
	      box: __webpack_require__(319),
	      chart: __webpack_require__(321),
	      geo_map: __webpack_require__(322),
	      line: __webpack_require__(328),
	      network: __webpack_require__(419),
	      paths: __webpack_require__(329),
	      pie: __webpack_require__(330),
	      radar: __webpack_require__(331),
	      rings: __webpack_require__(420),
	      sankey: __webpack_require__(332),
	      scatter: __webpack_require__(333),
	      stacked: __webpack_require__(140),
	      table: __webpack_require__(422),
	      tree_map: __webpack_require__(334)
	    }
	  };
	  vars.self = function(selection) {
	    selection.each(function() {
	      var lastMessage, nextStep, runFunction, runStep, small_height, small_width, steps;
	      vars.draw.frozen = true;
	      vars.error.internal = null;
	      if (!("timing" in vars.draw)) {
	        vars.draw.timing = vars.timing.transitions;
	      }
	      if (vars.error.value) {
	        vars.draw.timing = 0;
	      }
	      container(vars);
	      small_width = vars.width.value <= vars.width.small;
	      small_height = vars.height.value <= vars.height.small;
	      vars.small = small_width || small_height;
	      vars.width.viz = vars.width.value;
	      vars.height.viz = vars.height.value;
	      lastMessage = false;
	      nextStep = function() {
	        if (steps.length) {
	          runStep();
	        } else {
	          if (vars.dev.value) {
	            print.groupEnd();
	            print.timeEnd("total draw time");
	            print.log("\n");
	          }
	        }
	      };
	      runFunction = function(step, name) {
	        name = name || "function";
	        if (step[name] instanceof Array) {
	          step[name].forEach(function(f) {
	            f(vars, nextStep);
	          });
	        } else {
	          if (typeof step[name] === "function") {
	            step[name](vars, nextStep);
	          }
	        }
	        if (!step.wait) {
	          nextStep();
	        }
	      };
	      runStep = function() {
	        var message, run, same, step;
	        step = steps.shift();
	        same = vars.g.message && lastMessage === step.message;
	        run = "check" in step ? step.check : true;
	        if (typeof run === "function") {
	          run = run(vars);
	        }
	        if (run) {
	          if (!same) {
	            if (vars.dev.value) {
	              if (lastMessage !== false) {
	                print.groupEnd();
	              }
	              print.group(step.message);
	            }
	            if (typeof vars.messages.value === "string") {
	              lastMessage = vars.messages.value;
	              message = vars.messages.value;
	            } else {
	              lastMessage = step.message;
	              message = vars.format.value(step.message);
	            }
	            if (vars.draw.update) {
	              flash(vars, message);
	              if (vars.error.value) {
	                runFunction(step);
	              } else {
	                setTimeout((function() {
	                  return runFunction(step);
	                }), 10);
	              }
	            } else {
	              runFunction(step);
	            }
	          } else {
	            runFunction(step);
	          }
	        } else {
	          if ("otherwise" in step) {
	            if (vars.error.value) {
	              runFunction(step, "otherwise");
	            } else {
	              setTimeout((function() {
	                return runFunction(step, "otherwise");
	              }), 10);
	            }
	          } else {
	            nextStep();
	          }
	        }
	      };
	      vars.messages.style.backup = vars.group && vars.group.attr("opacity") === "1" ? "small" : "large";
	      steps = getSteps(vars);
	      runStep();
	    });
	    return vars.self;
	  };
	  attach(vars, {
	    active: __webpack_require__(270),
	    aggs: __webpack_require__(271),
	    attrs: __webpack_require__(272),
	    axes: __webpack_require__(273),
	    background: __webpack_require__(274),
	    "class": __webpack_require__(275),
	    color: __webpack_require__(276),
	    cols: __webpack_require__(415),
	    config: __webpack_require__(277),
	    container: __webpack_require__(278),
	    coords: __webpack_require__(279),
	    csv: __webpack_require__(280),
	    data: __webpack_require__(281),
	    depth: __webpack_require__(282),
	    descs: __webpack_require__(283),
	    dev: __webpack_require__(284),
	    draw: __webpack_require__(416),
	    edges: __webpack_require__(417),
	    error: __webpack_require__(285),
	    focus: __webpack_require__(286),
	    font: __webpack_require__(287),
	    footer: __webpack_require__(288),
	    format: __webpack_require__(289),
	    height: __webpack_require__(290),
	    history: __webpack_require__(292),
	    icon: __webpack_require__(293),
	    id: __webpack_require__(294),
	    labels: __webpack_require__(295),
	    legend: __webpack_require__(296),
	    links: __webpack_require__(297),
	    margin: __webpack_require__(298),
	    messages: __webpack_require__(299),
	    mouse: __webpack_require__(300),
	    nodes: __webpack_require__(301),
	    order: __webpack_require__(302),
	    resize: __webpack_require__(303),
	    shape: __webpack_require__(304),
	    size: __webpack_require__(305),
	    style: __webpack_require__(306),
	    temp: __webpack_require__(307),
	    text: __webpack_require__(308),
	    time: __webpack_require__(309),
	    timeline: __webpack_require__(310),
	    timing: __webpack_require__(311),
	    title: __webpack_require__(312),
	    tooltip: __webpack_require__(313),
	    total: __webpack_require__(314),
	    type: __webpack_require__(315),
	    ui: __webpack_require__(316),
	    width: __webpack_require__(317),
	    x: axis("x"),
	    x2: axis("x2"),
	    y: axis("y"),
	    y2: axis("y2"),
	    zoom: __webpack_require__(418)
	  });
	  return vars.self;
	};


/***/ },
/* 336 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;!function() {
	  var d3 = {
	    version: "3.5.16"
	  };
	  var d3_arraySlice = [].slice, d3_array = function(list) {
	    return d3_arraySlice.call(list);
	  };
	  var d3_document = this.document;
	  function d3_documentElement(node) {
	    return node && (node.ownerDocument || node.document || node).documentElement;
	  }
	  function d3_window(node) {
	    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);
	  }
	  if (d3_document) {
	    try {
	      d3_array(d3_document.documentElement.childNodes)[0].nodeType;
	    } catch (e) {
	      d3_array = function(list) {
	        var i = list.length, array = new Array(i);
	        while (i--) array[i] = list[i];
	        return array;
	      };
	    }
	  }
	  if (!Date.now) Date.now = function() {
	    return +new Date();
	  };
	  if (d3_document) {
	    try {
	      d3_document.createElement("DIV").style.setProperty("opacity", 0, "");
	    } catch (error) {
	      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;
	      d3_element_prototype.setAttribute = function(name, value) {
	        d3_element_setAttribute.call(this, name, value + "");
	      };
	      d3_element_prototype.setAttributeNS = function(space, local, value) {
	        d3_element_setAttributeNS.call(this, space, local, value + "");
	      };
	      d3_style_prototype.setProperty = function(name, value, priority) {
	        d3_style_setProperty.call(this, name, value + "", priority);
	      };
	    }
	  }
	  d3.ascending = d3_ascending;
	  function d3_ascending(a, b) {
	    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;
	  }
	  d3.descending = function(a, b) {
	    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;
	  };
	  d3.min = function(array, f) {
	    var i = -1, n = array.length, a, b;
	    if (arguments.length === 1) {
	      while (++i < n) if ((b = array[i]) != null && b >= b) {
	        a = b;
	        break;
	      }
	      while (++i < n) if ((b = array[i]) != null && a > b) a = b;
	    } else {
	      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {
	        a = b;
	        break;
	      }
	      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;
	    }
	    return a;
	  };
	  d3.max = function(array, f) {
	    var i = -1, n = array.length, a, b;
	    if (arguments.length === 1) {
	      while (++i < n) if ((b = array[i]) != null && b >= b) {
	        a = b;
	        break;
	      }
	      while (++i < n) if ((b = array[i]) != null && b > a) a = b;
	    } else {
	      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {
	        a = b;
	        break;
	      }
	      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;
	    }
	    return a;
	  };
	  d3.extent = function(array, f) {
	    var i = -1, n = array.length, a, b, c;
	    if (arguments.length === 1) {
	      while (++i < n) if ((b = array[i]) != null && b >= b) {
	        a = c = b;
	        break;
	      }
	      while (++i < n) if ((b = array[i]) != null) {
	        if (a > b) a = b;
	        if (c < b) c = b;
	      }
	    } else {
	      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {
	        a = c = b;
	        break;
	      }
	      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {
	        if (a > b) a = b;
	        if (c < b) c = b;
	      }
	    }
	    return [ a, c ];
	  };
	  function d3_number(x) {
	    return x === null ? NaN : +x;
	  }
	  function d3_numeric(x) {
	    return !isNaN(x);
	  }
	  d3.sum = function(array, f) {
	    var s = 0, n = array.length, a, i = -1;
	    if (arguments.length === 1) {
	      while (++i < n) if (d3_numeric(a = +array[i])) s += a;
	    } else {
	      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;
	    }
	    return s;
	  };
	  d3.mean = function(array, f) {
	    var s = 0, n = array.length, a, i = -1, j = n;
	    if (arguments.length === 1) {
	      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;
	    } else {
	      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;
	    }
	    if (j) return s / j;
	  };
	  d3.quantile = function(values, p) {
	    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;
	    return e ? v + e * (values[h] - v) : v;
	  };
	  d3.median = function(array, f) {
	    var numbers = [], n = array.length, a, i = -1;
	    if (arguments.length === 1) {
	      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);
	    } else {
	      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);
	    }
	    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);
	  };
	  d3.variance = function(array, f) {
	    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;
	    if (arguments.length === 1) {
	      while (++i < n) {
	        if (d3_numeric(a = d3_number(array[i]))) {
	          d = a - m;
	          m += d / ++j;
	          s += d * (a - m);
	        }
	      }
	    } else {
	      while (++i < n) {
	        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {
	          d = a - m;
	          m += d / ++j;
	          s += d * (a - m);
	        }
	      }
	    }
	    if (j > 1) return s / (j - 1);
	  };
	  d3.deviation = function() {
	    var v = d3.variance.apply(this, arguments);
	    return v ? Math.sqrt(v) : v;
	  };
	  function d3_bisector(compare) {
	    return {
	      left: function(a, x, lo, hi) {
	        if (arguments.length < 3) lo = 0;
	        if (arguments.length < 4) hi = a.length;
	        while (lo < hi) {
	          var mid = lo + hi >>> 1;
	          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;
	        }
	        return lo;
	      },
	      right: function(a, x, lo, hi) {
	        if (arguments.length < 3) lo = 0;
	        if (arguments.length < 4) hi = a.length;
	        while (lo < hi) {
	          var mid = lo + hi >>> 1;
	          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;
	        }
	        return lo;
	      }
	    };
	  }
	  var d3_bisect = d3_bisector(d3_ascending);
	  d3.bisectLeft = d3_bisect.left;
	  d3.bisect = d3.bisectRight = d3_bisect.right;
	  d3.bisector = function(f) {
	    return d3_bisector(f.length === 1 ? function(d, x) {
	      return d3_ascending(f(d), x);
	    } : f);
	  };
	  d3.shuffle = function(array, i0, i1) {
	    if ((m = arguments.length) < 3) {
	      i1 = array.length;
	      if (m < 2) i0 = 0;
	    }
	    var m = i1 - i0, t, i;
	    while (m) {
	      i = Math.random() * m-- | 0;
	      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;
	    }
	    return array;
	  };
	  d3.permute = function(array, indexes) {
	    var i = indexes.length, permutes = new Array(i);
	    while (i--) permutes[i] = array[indexes[i]];
	    return permutes;
	  };
	  d3.pairs = function(array) {
	    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);
	    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];
	    return pairs;
	  };
	  d3.transpose = function(matrix) {
	    if (!(n = matrix.length)) return [];
	    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {
	      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {
	        row[j] = matrix[j][i];
	      }
	    }
	    return transpose;
	  };
	  function d3_transposeLength(d) {
	    return d.length;
	  }
	  d3.zip = function() {
	    return d3.transpose(arguments);
	  };
	  d3.keys = function(map) {
	    var keys = [];
	    for (var key in map) keys.push(key);
	    return keys;
	  };
	  d3.values = function(map) {
	    var values = [];
	    for (var key in map) values.push(map[key]);
	    return values;
	  };
	  d3.entries = function(map) {
	    var entries = [];
	    for (var key in map) entries.push({
	      key: key,
	      value: map[key]
	    });
	    return entries;
	  };
	  d3.merge = function(arrays) {
	    var n = arrays.length, m, i = -1, j = 0, merged, array;
	    while (++i < n) j += arrays[i].length;
	    merged = new Array(j);
	    while (--n >= 0) {
	      array = arrays[n];
	      m = array.length;
	      while (--m >= 0) {
	        merged[--j] = array[m];
	      }
	    }
	    return merged;
	  };
	  var abs = Math.abs;
	  d3.range = function(start, stop, step) {
	    if (arguments.length < 3) {
	      step = 1;
	      if (arguments.length < 2) {
	        stop = start;
	        start = 0;
	      }
	    }
	    if ((stop - start) / step === Infinity) throw new Error("infinite range");
	    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;
	    start *= k, stop *= k, step *= k;
	    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);
	    return range;
	  };
	  function d3_range_integerScale(x) {
	    var k = 1;
	    while (x * k % 1) k *= 10;
	    return k;
	  }
	  function d3_class(ctor, properties) {
	    for (var key in properties) {
	      Object.defineProperty(ctor.prototype, key, {
	        value: properties[key],
	        enumerable: false
	      });
	    }
	  }
	  d3.map = function(object, f) {
	    var map = new d3_Map();
	    if (object instanceof d3_Map) {
	      object.forEach(function(key, value) {
	        map.set(key, value);
	      });
	    } else if (Array.isArray(object)) {
	      var i = -1, n = object.length, o;
	      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);
	    } else {
	      for (var key in object) map.set(key, object[key]);
	    }
	    return map;
	  };
	  function d3_Map() {
	    this._ = Object.create(null);
	  }
	  var d3_map_proto = "__proto__", d3_map_zero = "\x00";
	  d3_class(d3_Map, {
	    has: d3_map_has,
	    get: function(key) {
	      return this._[d3_map_escape(key)];
	    },
	    set: function(key, value) {
	      return this._[d3_map_escape(key)] = value;
	    },
	    remove: d3_map_remove,
	    keys: d3_map_keys,
	    values: function() {
	      var values = [];
	      for (var key in this._) values.push(this._[key]);
	      return values;
	    },
	    entries: function() {
	      var entries = [];
	      for (var key in this._) entries.push({
	        key: d3_map_unescape(key),
	        value: this._[key]
	      });
	      return entries;
	    },
	    size: d3_map_size,
	    empty: d3_map_empty,
	    forEach: function(f) {
	      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);
	    }
	  });
	  function d3_map_escape(key) {
	    return (key += "") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;
	  }
	  function d3_map_unescape(key) {
	    return (key += "")[0] === d3_map_zero ? key.slice(1) : key;
	  }
	  function d3_map_has(key) {
	    return d3_map_escape(key) in this._;
	  }
	  function d3_map_remove(key) {
	    return (key = d3_map_escape(key)) in this._ && delete this._[key];
	  }
	  function d3_map_keys() {
	    var keys = [];
	    for (var key in this._) keys.push(d3_map_unescape(key));
	    return keys;
	  }
	  function d3_map_size() {
	    var size = 0;
	    for (var key in this._) ++size;
	    return size;
	  }
	  function d3_map_empty() {
	    for (var key in this._) return false;
	    return true;
	  }
	  d3.nest = function() {
	    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;
	    function map(mapType, array, depth) {
	      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;
	      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;
	      while (++i < n) {
	        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {
	          values.push(object);
	        } else {
	          valuesByKey.set(keyValue, [ object ]);
	        }
	      }
	      if (mapType) {
	        object = mapType();
	        setter = function(keyValue, values) {
	          object.set(keyValue, map(mapType, values, depth));
	        };
	      } else {
	        object = {};
	        setter = function(keyValue, values) {
	          object[keyValue] = map(mapType, values, depth);
	        };
	      }
	      valuesByKey.forEach(setter);
	      return object;
	    }
	    function entries(map, depth) {
	      if (depth >= keys.length) return map;
	      var array = [], sortKey = sortKeys[depth++];
	      map.forEach(function(key, keyMap) {
	        array.push({
	          key: key,
	          values: entries(keyMap, depth)
	        });
	      });
	      return sortKey ? array.sort(function(a, b) {
	        return sortKey(a.key, b.key);
	      }) : array;
	    }
	    nest.map = function(array, mapType) {
	      return map(mapType, array, 0);
	    };
	    nest.entries = function(array) {
	      return entries(map(d3.map, array, 0), 0);
	    };
	    nest.key = function(d) {
	      keys.push(d);
	      return nest;
	    };
	    nest.sortKeys = function(order) {
	      sortKeys[keys.length - 1] = order;
	      return nest;
	    };
	    nest.sortValues = function(order) {
	      sortValues = order;
	      return nest;
	    };
	    nest.rollup = function(f) {
	      rollup = f;
	      return nest;
	    };
	    return nest;
	  };
	  d3.set = function(array) {
	    var set = new d3_Set();
	    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);
	    return set;
	  };
	  function d3_Set() {
	    this._ = Object.create(null);
	  }
	  d3_class(d3_Set, {
	    has: d3_map_has,
	    add: function(key) {
	      this._[d3_map_escape(key += "")] = true;
	      return key;
	    },
	    remove: d3_map_remove,
	    values: d3_map_keys,
	    size: d3_map_size,
	    empty: d3_map_empty,
	    forEach: function(f) {
	      for (var key in this._) f.call(this, d3_map_unescape(key));
	    }
	  });
	  d3.behavior = {};
	  function d3_identity(d) {
	    return d;
	  }
	  d3.rebind = function(target, source) {
	    var i = 1, n = arguments.length, method;
	    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);
	    return target;
	  };
	  function d3_rebind(target, source, method) {
	    return function() {
	      var value = method.apply(source, arguments);
	      return value === source ? target : value;
	    };
	  }
	  function d3_vendorSymbol(object, name) {
	    if (name in object) return name;
	    name = name.charAt(0).toUpperCase() + name.slice(1);
	    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {
	      var prefixName = d3_vendorPrefixes[i] + name;
	      if (prefixName in object) return prefixName;
	    }
	  }
	  var d3_vendorPrefixes = [ "webkit", "ms", "moz", "Moz", "o", "O" ];
	  function d3_noop() {}
	  d3.dispatch = function() {
	    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;
	    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);
	    return dispatch;
	  };
	  function d3_dispatch() {}
	  d3_dispatch.prototype.on = function(type, listener) {
	    var i = type.indexOf("."), name = "";
	    if (i >= 0) {
	      name = type.slice(i + 1);
	      type = type.slice(0, i);
	    }
	    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);
	    if (arguments.length === 2) {
	      if (listener == null) for (type in this) {
	        if (this.hasOwnProperty(type)) this[type].on(name, null);
	      }
	      return this;
	    }
	  };
	  function d3_dispatch_event(dispatch) {
	    var listeners = [], listenerByName = new d3_Map();
	    function event() {
	      var z = listeners, i = -1, n = z.length, l;
	      while (++i < n) if (l = z[i].on) l.apply(this, arguments);
	      return dispatch;
	    }
	    event.on = function(name, listener) {
	      var l = listenerByName.get(name), i;
	      if (arguments.length < 2) return l && l.on;
	      if (l) {
	        l.on = null;
	        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));
	        listenerByName.remove(name);
	      }
	      if (listener) listeners.push(listenerByName.set(name, {
	        on: listener
	      }));
	      return dispatch;
	    };
	    return event;
	  }
	  d3.event = null;
	  function d3_eventPreventDefault() {
	    d3.event.preventDefault();
	  }
	  function d3_eventSource() {
	    var e = d3.event, s;
	    while (s = e.sourceEvent) e = s;
	    return e;
	  }
	  function d3_eventDispatch(target) {
	    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;
	    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);
	    dispatch.of = function(thiz, argumentz) {
	      return function(e1) {
	        try {
	          var e0 = e1.sourceEvent = d3.event;
	          e1.target = target;
	          d3.event = e1;
	          dispatch[e1.type].apply(thiz, argumentz);
	        } finally {
	          d3.event = e0;
	        }
	      };
	    };
	    return dispatch;
	  }
	  d3.requote = function(s) {
	    return s.replace(d3_requote_re, "\\$&");
	  };
	  var d3_requote_re = /[\\\^\$\*\+\?\|\[\]\(\)\.\{\}]/g;
	  var d3_subclass = {}.__proto__ ? function(object, prototype) {
	    object.__proto__ = prototype;
	  } : function(object, prototype) {
	    for (var property in prototype) object[property] = prototype[property];
	  };
	  function d3_selection(groups) {
	    d3_subclass(groups, d3_selectionPrototype);
	    return groups;
	  }
	  var d3_select = function(s, n) {
	    return n.querySelector(s);
	  }, d3_selectAll = function(s, n) {
	    return n.querySelectorAll(s);
	  }, d3_selectMatches = function(n, s) {
	    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, "matchesSelector")];
	    d3_selectMatches = function(n, s) {
	      return d3_selectMatcher.call(n, s);
	    };
	    return d3_selectMatches(n, s);
	  };
	  if (typeof Sizzle === "function") {
	    d3_select = function(s, n) {
	      return Sizzle(s, n)[0] || null;
	    };
	    d3_selectAll = Sizzle;
	    d3_selectMatches = Sizzle.matchesSelector;
	  }
	  d3.selection = function() {
	    return d3.select(d3_document.documentElement);
	  };
	  var d3_selectionPrototype = d3.selection.prototype = [];
	  d3_selectionPrototype.select = function(selector) {
	    var subgroups = [], subgroup, subnode, group, node;
	    selector = d3_selection_selector(selector);
	    for (var j = -1, m = this.length; ++j < m; ) {
	      subgroups.push(subgroup = []);
	      subgroup.parentNode = (group = this[j]).parentNode;
	      for (var i = -1, n = group.length; ++i < n; ) {
	        if (node = group[i]) {
	          subgroup.push(subnode = selector.call(node, node.__data__, i, j));
	          if (subnode && "__data__" in node) subnode.__data__ = node.__data__;
	        } else {
	          subgroup.push(null);
	        }
	      }
	    }
	    return d3_selection(subgroups);
	  };
	  function d3_selection_selector(selector) {
	    return typeof selector === "function" ? selector : function() {
	      return d3_select(selector, this);
	    };
	  }
	  d3_selectionPrototype.selectAll = function(selector) {
	    var subgroups = [], subgroup, node;
	    selector = d3_selection_selectorAll(selector);
	    for (var j = -1, m = this.length; ++j < m; ) {
	      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {
	        if (node = group[i]) {
	          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));
	          subgroup.parentNode = node;
	        }
	      }
	    }
	    return d3_selection(subgroups);
	  };
	  function d3_selection_selectorAll(selector) {
	    return typeof selector === "function" ? selector : function() {
	      return d3_selectAll(selector, this);
	    };
	  }
	  var d3_nsXhtml = "http://www.w3.org/1999/xhtml";
	  var d3_nsPrefix = {
	    svg: "http://www.w3.org/2000/svg",
	    xhtml: d3_nsXhtml,
	    xlink: "http://www.w3.org/1999/xlink",
	    xml: "http://www.w3.org/XML/1998/namespace",
	    xmlns: "http://www.w3.org/2000/xmlns/"
	  };
	  d3.ns = {
	    prefix: d3_nsPrefix,
	    qualify: function(name) {
	      var i = name.indexOf(":"), prefix = name;
	      if (i >= 0 && (prefix = name.slice(0, i)) !== "xmlns") name = name.slice(i + 1);
	      return d3_nsPrefix.hasOwnProperty(prefix) ? {
	        space: d3_nsPrefix[prefix],
	        local: name
	      } : name;
	    }
	  };
	  d3_selectionPrototype.attr = function(name, value) {
	    if (arguments.length < 2) {
	      if (typeof name === "string") {
	        var node = this.node();
	        name = d3.ns.qualify(name);
	        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);
	      }
	      for (value in name) this.each(d3_selection_attr(value, name[value]));
	      return this;
	    }
	    return this.each(d3_selection_attr(name, value));
	  };
	  function d3_selection_attr(name, value) {
	    name = d3.ns.qualify(name);
	    function attrNull() {
	      this.removeAttribute(name);
	    }
	    function attrNullNS() {
	      this.removeAttributeNS(name.space, name.local);
	    }
	    function attrConstant() {
	      this.setAttribute(name, value);
	    }
	    function attrConstantNS() {
	      this.setAttributeNS(name.space, name.local, value);
	    }
	    function attrFunction() {
	      var x = value.apply(this, arguments);
	      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);
	    }
	    function attrFunctionNS() {
	      var x = value.apply(this, arguments);
	      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);
	    }
	    return value == null ? name.local ? attrNullNS : attrNull : typeof value === "function" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;
	  }
	  function d3_collapse(s) {
	    return s.trim().replace(/\s+/g, " ");
	  }
	  d3_selectionPrototype.classed = function(name, value) {
	    if (arguments.length < 2) {
	      if (typeof name === "string") {
	        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;
	        if (value = node.classList) {
	          while (++i < n) if (!value.contains(name[i])) return false;
	        } else {
	          value = node.getAttribute("class");
	          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;
	        }
	        return true;
	      }
	      for (value in name) this.each(d3_selection_classed(value, name[value]));
	      return this;
	    }
	    return this.each(d3_selection_classed(name, value));
	  };
	  function d3_selection_classedRe(name) {
	    return new RegExp("(?:^|\\s+)" + d3.requote(name) + "(?:\\s+|$)", "g");
	  }
	  function d3_selection_classes(name) {
	    return (name + "").trim().split(/^|\s+/);
	  }
	  function d3_selection_classed(name, value) {
	    name = d3_selection_classes(name).map(d3_selection_classedName);
	    var n = name.length;
	    function classedConstant() {
	      var i = -1;
	      while (++i < n) name[i](this, value);
	    }
	    function classedFunction() {
	      var i = -1, x = value.apply(this, arguments);
	      while (++i < n) name[i](this, x);
	    }
	    return typeof value === "function" ? classedFunction : classedConstant;
	  }
	  function d3_selection_classedName(name) {
	    var re = d3_selection_classedRe(name);
	    return function(node, value) {
	      if (c = node.classList) return value ? c.add(name) : c.remove(name);
	      var c = node.getAttribute("class") || "";
	      if (value) {
	        re.lastIndex = 0;
	        if (!re.test(c)) node.setAttribute("class", d3_collapse(c + " " + name));
	      } else {
	        node.setAttribute("class", d3_collapse(c.replace(re, " ")));
	      }
	    };
	  }
	  d3_selectionPrototype.style = function(name, value, priority) {
	    var n = arguments.length;
	    if (n < 3) {
	      if (typeof name !== "string") {
	        if (n < 2) value = "";
	        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));
	        return this;
	      }
	      if (n < 2) {
	        var node = this.node();
	        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);
	      }
	      priority = "";
	    }
	    return this.each(d3_selection_style(name, value, priority));
	  };
	  function d3_selection_style(name, value, priority) {
	    function styleNull() {
	      this.style.removeProperty(name);
	    }
	    function styleConstant() {
	      this.style.setProperty(name, value, priority);
	    }
	    function styleFunction() {
	      var x = value.apply(this, arguments);
	      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);
	    }
	    return value == null ? styleNull : typeof value === "function" ? styleFunction : styleConstant;
	  }
	  d3_selectionPrototype.property = function(name, value) {
	    if (arguments.length < 2) {
	      if (typeof name === "string") return this.node()[name];
	      for (value in name) this.each(d3_selection_property(value, name[value]));
	      return this;
	    }
	    return this.each(d3_selection_property(name, value));
	  };
	  function d3_selection_property(name, value) {
	    function propertyNull() {
	      delete this[name];
	    }
	    function propertyConstant() {
	      this[name] = value;
	    }
	    function propertyFunction() {
	      var x = value.apply(this, arguments);
	      if (x == null) delete this[name]; else this[name] = x;
	    }
	    return value == null ? propertyNull : typeof value === "function" ? propertyFunction : propertyConstant;
	  }
	  d3_selectionPrototype.text = function(value) {
	    return arguments.length ? this.each(typeof value === "function" ? function() {
	      var v = value.apply(this, arguments);
	      this.textContent = v == null ? "" : v;
	    } : value == null ? function() {
	      this.textContent = "";
	    } : function() {
	      this.textContent = value;
	    }) : this.node().textContent;
	  };
	  d3_selectionPrototype.html = function(value) {
	    return arguments.length ? this.each(typeof value === "function" ? function() {
	      var v = value.apply(this, arguments);
	      this.innerHTML = v == null ? "" : v;
	    } : value == null ? function() {
	      this.innerHTML = "";
	    } : function() {
	      this.innerHTML = value;
	    }) : this.node().innerHTML;
	  };
	  d3_selectionPrototype.append = function(name) {
	    name = d3_selection_creator(name);
	    return this.select(function() {
	      return this.appendChild(name.apply(this, arguments));
	    });
	  };
	  function d3_selection_creator(name) {
	    function create() {
	      var document = this.ownerDocument, namespace = this.namespaceURI;
	      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);
	    }
	    function createNS() {
	      return this.ownerDocument.createElementNS(name.space, name.local);
	    }
	    return typeof name === "function" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;
	  }
	  d3_selectionPrototype.insert = function(name, before) {
	    name = d3_selection_creator(name);
	    before = d3_selection_selector(before);
	    return this.select(function() {
	      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);
	    });
	  };
	  d3_selectionPrototype.remove = function() {
	    return this.each(d3_selectionRemove);
	  };
	  function d3_selectionRemove() {
	    var parent = this.parentNode;
	    if (parent) parent.removeChild(this);
	  }
	  d3_selectionPrototype.data = function(value, key) {
	    var i = -1, n = this.length, group, node;
	    if (!arguments.length) {
	      value = new Array(n = (group = this[0]).length);
	      while (++i < n) {
	        if (node = group[i]) {
	          value[i] = node.__data__;
	        }
	      }
	      return value;
	    }
	    function bind(group, groupData) {
	      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;
	      if (key) {
	        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;
	        for (i = -1; ++i < n; ) {
	          if (node = group[i]) {
	            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {
	              exitNodes[i] = node;
	            } else {
	              nodeByKeyValue.set(keyValue, node);
	            }
	            keyValues[i] = keyValue;
	          }
	        }
	        for (i = -1; ++i < m; ) {
	          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {
	            enterNodes[i] = d3_selection_dataNode(nodeData);
	          } else if (node !== true) {
	            updateNodes[i] = node;
	            node.__data__ = nodeData;
	          }
	          nodeByKeyValue.set(keyValue, true);
	        }
	        for (i = -1; ++i < n; ) {
	          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {
	            exitNodes[i] = group[i];
	          }
	        }
	      } else {
	        for (i = -1; ++i < n0; ) {
	          node = group[i];
	          nodeData = groupData[i];
	          if (node) {
	            node.__data__ = nodeData;
	            updateNodes[i] = node;
	          } else {
	            enterNodes[i] = d3_selection_dataNode(nodeData);
	          }
	        }
	        for (;i < m; ++i) {
	          enterNodes[i] = d3_selection_dataNode(groupData[i]);
	        }
	        for (;i < n; ++i) {
	          exitNodes[i] = group[i];
	        }
	      }
	      enterNodes.update = updateNodes;
	      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;
	      enter.push(enterNodes);
	      update.push(updateNodes);
	      exit.push(exitNodes);
	    }
	    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);
	    if (typeof value === "function") {
	      while (++i < n) {
	        bind(group = this[i], value.call(group, group.parentNode.__data__, i));
	      }
	    } else {
	      while (++i < n) {
	        bind(group = this[i], value);
	      }
	    }
	    update.enter = function() {
	      return enter;
	    };
	    update.exit = function() {
	      return exit;
	    };
	    return update;
	  };
	  function d3_selection_dataNode(data) {
	    return {
	      __data__: data
	    };
	  }
	  d3_selectionPrototype.datum = function(value) {
	    return arguments.length ? this.property("__data__", value) : this.property("__data__");
	  };
	  d3_selectionPrototype.filter = function(filter) {
	    var subgroups = [], subgroup, group, node;
	    if (typeof filter !== "function") filter = d3_selection_filter(filter);
	    for (var j = 0, m = this.length; j < m; j++) {
	      subgroups.push(subgroup = []);
	      subgroup.parentNode = (group = this[j]).parentNode;
	      for (var i = 0, n = group.length; i < n; i++) {
	        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {
	          subgroup.push(node);
	        }
	      }
	    }
	    return d3_selection(subgroups);
	  };
	  function d3_selection_filter(selector) {
	    return function() {
	      return d3_selectMatches(this, selector);
	    };
	  }
	  d3_selectionPrototype.order = function() {
	    for (var j = -1, m = this.length; ++j < m; ) {
	      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {
	        if (node = group[i]) {
	          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);
	          next = node;
	        }
	      }
	    }
	    return this;
	  };
	  d3_selectionPrototype.sort = function(comparator) {
	    comparator = d3_selection_sortComparator.apply(this, arguments);
	    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);
	    return this.order();
	  };
	  function d3_selection_sortComparator(comparator) {
	    if (!arguments.length) comparator = d3_ascending;
	    return function(a, b) {
	      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;
	    };
	  }
	  d3_selectionPrototype.each = function(callback) {
	    return d3_selection_each(this, function(node, i, j) {
	      callback.call(node, node.__data__, i, j);
	    });
	  };
	  function d3_selection_each(groups, callback) {
	    for (var j = 0, m = groups.length; j < m; j++) {
	      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {
	        if (node = group[i]) callback(node, i, j);
	      }
	    }
	    return groups;
	  }
	  d3_selectionPrototype.call = function(callback) {
	    var args = d3_array(arguments);
	    callback.apply(args[0] = this, args);
	    return this;
	  };
	  d3_selectionPrototype.empty = function() {
	    return !this.node();
	  };
	  d3_selectionPrototype.node = function() {
	    for (var j = 0, m = this.length; j < m; j++) {
	      for (var group = this[j], i = 0, n = group.length; i < n; i++) {
	        var node = group[i];
	        if (node) return node;
	      }
	    }
	    return null;
	  };
	  d3_selectionPrototype.size = function() {
	    var n = 0;
	    d3_selection_each(this, function() {
	      ++n;
	    });
	    return n;
	  };
	  function d3_selection_enter(selection) {
	    d3_subclass(selection, d3_selection_enterPrototype);
	    return selection;
	  }
	  var d3_selection_enterPrototype = [];
	  d3.selection.enter = d3_selection_enter;
	  d3.selection.enter.prototype = d3_selection_enterPrototype;
	  d3_selection_enterPrototype.append = d3_selectionPrototype.append;
	  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;
	  d3_selection_enterPrototype.node = d3_selectionPrototype.node;
	  d3_selection_enterPrototype.call = d3_selectionPrototype.call;
	  d3_selection_enterPrototype.size = d3_selectionPrototype.size;
	  d3_selection_enterPrototype.select = function(selector) {
	    var subgroups = [], subgroup, subnode, upgroup, group, node;
	    for (var j = -1, m = this.length; ++j < m; ) {
	      upgroup = (group = this[j]).update;
	      subgroups.push(subgroup = []);
	      subgroup.parentNode = group.parentNode;
	      for (var i = -1, n = group.length; ++i < n; ) {
	        if (node = group[i]) {
	          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));
	          subnode.__data__ = node.__data__;
	        } else {
	          subgroup.push(null);
	        }
	      }
	    }
	    return d3_selection(subgroups);
	  };
	  d3_selection_enterPrototype.insert = function(name, before) {
	    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);
	    return d3_selectionPrototype.insert.call(this, name, before);
	  };
	  function d3_selection_enterInsertBefore(enter) {
	    var i0, j0;
	    return function(d, i, j) {
	      var group = enter[j].update, n = group.length, node;
	      if (j != j0) j0 = j, i0 = 0;
	      if (i >= i0) i0 = i + 1;
	      while (!(node = group[i0]) && ++i0 < n) ;
	      return node;
	    };
	  }
	  d3.select = function(node) {
	    var group;
	    if (typeof node === "string") {
	      group = [ d3_select(node, d3_document) ];
	      group.parentNode = d3_document.documentElement;
	    } else {
	      group = [ node ];
	      group.parentNode = d3_documentElement(node);
	    }
	    return d3_selection([ group ]);
	  };
	  d3.selectAll = function(nodes) {
	    var group;
	    if (typeof nodes === "string") {
	      group = d3_array(d3_selectAll(nodes, d3_document));
	      group.parentNode = d3_document.documentElement;
	    } else {
	      group = d3_array(nodes);
	      group.parentNode = null;
	    }
	    return d3_selection([ group ]);
	  };
	  d3_selectionPrototype.on = function(type, listener, capture) {
	    var n = arguments.length;
	    if (n < 3) {
	      if (typeof type !== "string") {
	        if (n < 2) listener = false;
	        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));
	        return this;
	      }
	      if (n < 2) return (n = this.node()["__on" + type]) && n._;
	      capture = false;
	    }
	    return this.each(d3_selection_on(type, listener, capture));
	  };
	  function d3_selection_on(type, listener, capture) {
	    var name = "__on" + type, i = type.indexOf("."), wrap = d3_selection_onListener;
	    if (i > 0) type = type.slice(0, i);
	    var filter = d3_selection_onFilters.get(type);
	    if (filter) type = filter, wrap = d3_selection_onFilter;
	    function onRemove() {
	      var l = this[name];
	      if (l) {
	        this.removeEventListener(type, l, l.$);
	        delete this[name];
	      }
	    }
	    function onAdd() {
	      var l = wrap(listener, d3_array(arguments));
	      onRemove.call(this);
	      this.addEventListener(type, this[name] = l, l.$ = capture);
	      l._ = listener;
	    }
	    function removeAll() {
	      var re = new RegExp("^__on([^.]+)" + d3.requote(type) + "$"), match;
	      for (var name in this) {
	        if (match = name.match(re)) {
	          var l = this[name];
	          this.removeEventListener(match[1], l, l.$);
	          delete this[name];
	        }
	      }
	    }
	    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;
	  }
	  var d3_selection_onFilters = d3.map({
	    mouseenter: "mouseover",
	    mouseleave: "mouseout"
	  });
	  if (d3_document) {
	    d3_selection_onFilters.forEach(function(k) {
	      if ("on" + k in d3_document) d3_selection_onFilters.remove(k);
	    });
	  }
	  function d3_selection_onListener(listener, argumentz) {
	    return function(e) {
	      var o = d3.event;
	      d3.event = e;
	      argumentz[0] = this.__data__;
	      try {
	        listener.apply(this, argumentz);
	      } finally {
	        d3.event = o;
	      }
	    };
	  }
	  function d3_selection_onFilter(listener, argumentz) {
	    var l = d3_selection_onListener(listener, argumentz);
	    return function(e) {
	      var target = this, related = e.relatedTarget;
	      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {
	        l.call(target, e);
	      }
	    };
	  }
	  var d3_event_dragSelect, d3_event_dragId = 0;
	  function d3_event_dragSuppress(node) {
	    var name = ".dragsuppress-" + ++d3_event_dragId, click = "click" + name, w = d3.select(d3_window(node)).on("touchmove" + name, d3_eventPreventDefault).on("dragstart" + name, d3_eventPreventDefault).on("selectstart" + name, d3_eventPreventDefault);
	    if (d3_event_dragSelect == null) {
	      d3_event_dragSelect = "onselectstart" in node ? false : d3_vendorSymbol(node.style, "userSelect");
	    }
	    if (d3_event_dragSelect) {
	      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];
	      style[d3_event_dragSelect] = "none";
	    }
	    return function(suppressClick) {
	      w.on(name, null);
	      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;
	      if (suppressClick) {
	        var off = function() {
	          w.on(click, null);
	        };
	        w.on(click, function() {
	          d3_eventPreventDefault();
	          off();
	        }, true);
	        setTimeout(off, 0);
	      }
	    };
	  }
	  d3.mouse = function(container) {
	    return d3_mousePoint(container, d3_eventSource());
	  };
	  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;
	  function d3_mousePoint(container, e) {
	    if (e.changedTouches) e = e.changedTouches[0];
	    var svg = container.ownerSVGElement || container;
	    if (svg.createSVGPoint) {
	      var point = svg.createSVGPoint();
	      if (d3_mouse_bug44083 < 0) {
	        var window = d3_window(container);
	        if (window.scrollX || window.scrollY) {
	          svg = d3.select("body").append("svg").style({
	            position: "absolute",
	            top: 0,
	            left: 0,
	            margin: 0,
	            padding: 0,
	            border: "none"
	          }, "important");
	          var ctm = svg[0][0].getScreenCTM();
	          d3_mouse_bug44083 = !(ctm.f || ctm.e);
	          svg.remove();
	        }
	      }
	      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, 
	      point.y = e.clientY;
	      point = point.matrixTransform(container.getScreenCTM().inverse());
	      return [ point.x, point.y ];
	    }
	    var rect = container.getBoundingClientRect();
	    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];
	  }
	  d3.touch = function(container, touches, identifier) {
	    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;
	    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {
	      if ((touch = touches[i]).identifier === identifier) {
	        return d3_mousePoint(container, touch);
	      }
	    }
	  };
	  d3.behavior.drag = function() {
	    var event = d3_eventDispatch(drag, "drag", "dragstart", "dragend"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, "mousemove", "mouseup"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, "touchmove", "touchend");
	    function drag() {
	      this.on("mousedown.drag", mousedown).on("touchstart.drag", touchstart);
	    }
	    function dragstart(id, position, subject, move, end) {
	      return function() {
	        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = ".drag" + (dragId == null ? "" : "-" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);
	        if (origin) {
	          dragOffset = origin.apply(that, arguments);
	          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];
	        } else {
	          dragOffset = [ 0, 0 ];
	        }
	        dispatch({
	          type: "dragstart"
	        });
	        function moved() {
	          var position1 = position(parent, dragId), dx, dy;
	          if (!position1) return;
	          dx = position1[0] - position0[0];
	          dy = position1[1] - position0[1];
	          dragged |= dx | dy;
	          position0 = position1;
	          dispatch({
	            type: "drag",
	            x: position1[0] + dragOffset[0],
	            y: position1[1] + dragOffset[1],
	            dx: dx,
	            dy: dy
	          });
	        }
	        function ended() {
	          if (!position(parent, dragId)) return;
	          dragSubject.on(move + dragName, null).on(end + dragName, null);
	          dragRestore(dragged);
	          dispatch({
	            type: "dragend"
	          });
	        }
	      };
	    }
	    drag.origin = function(x) {
	      if (!arguments.length) return origin;
	      origin = x;
	      return drag;
	    };
	    return d3.rebind(drag, event, "on");
	  };
	  function d3_behavior_dragTouchId() {
	    return d3.event.changedTouches[0].identifier;
	  }
	  d3.touches = function(container, touches) {
	    if (arguments.length < 2) touches = d3_eventSource().touches;
	    return touches ? d3_array(touches).map(function(touch) {
	      var point = d3_mousePoint(container, touch);
	      point.identifier = touch.identifier;
	      return point;
	    }) : [];
	  };
	  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;
	  function d3_sgn(x) {
	    return x > 0 ? 1 : x < 0 ? -1 : 0;
	  }
	  function d3_cross2d(a, b, c) {
	    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);
	  }
	  function d3_acos(x) {
	    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);
	  }
	  function d3_asin(x) {
	    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);
	  }
	  function d3_sinh(x) {
	    return ((x = Math.exp(x)) - 1 / x) / 2;
	  }
	  function d3_cosh(x) {
	    return ((x = Math.exp(x)) + 1 / x) / 2;
	  }
	  function d3_tanh(x) {
	    return ((x = Math.exp(2 * x)) - 1) / (x + 1);
	  }
	  function d3_haversin(x) {
	    return (x = Math.sin(x / 2)) * x;
	  }
	  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;
	  d3.interpolateZoom = function(p0, p1) {
	    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;
	    if (d2 < ε2) {
	      S = Math.log(w1 / w0) / ρ;
	      i = function(t) {
	        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];
	      };
	    } else {
	      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);
	      S = (r1 - r0) / ρ;
	      i = function(t) {
	        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));
	        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];
	      };
	    }
	    i.duration = S * 1e3;
	    return i;
	  };
	  d3.behavior.zoom = function() {
	    var view = {
	      x: 0,
	      y: 0,
	      k: 1
	    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = "mousedown.zoom", mousemove = "mousemove.zoom", mouseup = "mouseup.zoom", mousewheelTimer, touchstart = "touchstart.zoom", touchtime, event = d3_eventDispatch(zoom, "zoomstart", "zoom", "zoomend"), x0, x1, y0, y1;
	    if (!d3_behavior_zoomWheel) {
	      d3_behavior_zoomWheel = "onwheel" in d3_document ? (d3_behavior_zoomDelta = function() {
	        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);
	      }, "wheel") : "onmousewheel" in d3_document ? (d3_behavior_zoomDelta = function() {
	        return d3.event.wheelDelta;
	      }, "mousewheel") : (d3_behavior_zoomDelta = function() {
	        return -d3.event.detail;
	      }, "MozMousePixelScroll");
	    }
	    function zoom(g) {
	      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + ".zoom", mousewheeled).on("dblclick.zoom", dblclicked).on(touchstart, touchstarted);
	    }
	    zoom.event = function(g) {
	      g.each(function() {
	        var dispatch = event.of(this, arguments), view1 = view;
	        if (d3_transitionInheritId) {
	          d3.select(this).transition().each("start.zoom", function() {
	            view = this.__chart__ || {
	              x: 0,
	              y: 0,
	              k: 1
	            };
	            zoomstarted(dispatch);
	          }).tween("zoom:zoom", function() {
	            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);
	            return function(t) {
	              var l = i(t), k = dx / l[2];
	              this.__chart__ = view = {
	                x: cx - l[0] * k,
	                y: cy - l[1] * k,
	                k: k
	              };
	              zoomed(dispatch);
	            };
	          }).each("interrupt.zoom", function() {
	            zoomended(dispatch);
	          }).each("end.zoom", function() {
	            zoomended(dispatch);
	          });
	        } else {
	          this.__chart__ = view;
	          zoomstarted(dispatch);
	          zoomed(dispatch);
	          zoomended(dispatch);
	        }
	      });
	    };
	    zoom.translate = function(_) {
	      if (!arguments.length) return [ view.x, view.y ];
	      view = {
	        x: +_[0],
	        y: +_[1],
	        k: view.k
	      };
	      rescale();
	      return zoom;
	    };
	    zoom.scale = function(_) {
	      if (!arguments.length) return view.k;
	      view = {
	        x: view.x,
	        y: view.y,
	        k: null
	      };
	      scaleTo(+_);
	      rescale();
	      return zoom;
	    };
	    zoom.scaleExtent = function(_) {
	      if (!arguments.length) return scaleExtent;
	      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];
	      return zoom;
	    };
	    zoom.center = function(_) {
	      if (!arguments.length) return center;
	      center = _ && [ +_[0], +_[1] ];
	      return zoom;
	    };
	    zoom.size = function(_) {
	      if (!arguments.length) return size;
	      size = _ && [ +_[0], +_[1] ];
	      return zoom;
	    };
	    zoom.duration = function(_) {
	      if (!arguments.length) return duration;
	      duration = +_;
	      return zoom;
	    };
	    zoom.x = function(z) {
	      if (!arguments.length) return x1;
	      x1 = z;
	      x0 = z.copy();
	      view = {
	        x: 0,
	        y: 0,
	        k: 1
	      };
	      return zoom;
	    };
	    zoom.y = function(z) {
	      if (!arguments.length) return y1;
	      y1 = z;
	      y0 = z.copy();
	      view = {
	        x: 0,
	        y: 0,
	        k: 1
	      };
	      return zoom;
	    };
	    function location(p) {
	      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];
	    }
	    function point(l) {
	      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];
	    }
	    function scaleTo(s) {
	      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));
	    }
	    function translateTo(p, l) {
	      l = point(l);
	      view.x += p[0] - l[0];
	      view.y += p[1] - l[1];
	    }
	    function zoomTo(that, p, l, k) {
	      that.__chart__ = {
	        x: view.x,
	        y: view.y,
	        k: view.k
	      };
	      scaleTo(Math.pow(2, k));
	      translateTo(center0 = p, l);
	      that = d3.select(that);
	      if (duration > 0) that = that.transition().duration(duration);
	      that.call(zoom.event);
	    }
	    function rescale() {
	      if (x1) x1.domain(x0.range().map(function(x) {
	        return (x - view.x) / view.k;
	      }).map(x0.invert));
	      if (y1) y1.domain(y0.range().map(function(y) {
	        return (y - view.y) / view.k;
	      }).map(y0.invert));
	    }
	    function zoomstarted(dispatch) {
	      if (!zooming++) dispatch({
	        type: "zoomstart"
	      });
	    }
	    function zoomed(dispatch) {
	      rescale();
	      dispatch({
	        type: "zoom",
	        scale: view.k,
	        translate: [ view.x, view.y ]
	      });
	    }
	    function zoomended(dispatch) {
	      if (!--zooming) dispatch({
	        type: "zoomend"
	      }), center0 = null;
	    }
	    function mousedowned() {
	      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);
	      d3_selection_interrupt.call(that);
	      zoomstarted(dispatch);
	      function moved() {
	        dragged = 1;
	        translateTo(d3.mouse(that), location0);
	        zoomed(dispatch);
	      }
	      function ended() {
	        subject.on(mousemove, null).on(mouseup, null);
	        dragRestore(dragged);
	        zoomended(dispatch);
	      }
	    }
	    function touchstarted() {
	      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = ".zoom-" + d3.event.changedTouches[0].identifier, touchmove = "touchmove" + zoomName, touchend = "touchend" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);
	      started();
	      zoomstarted(dispatch);
	      subject.on(mousedown, null).on(touchstart, started);
	      function relocate() {
	        var touches = d3.touches(that);
	        scale0 = view.k;
	        touches.forEach(function(t) {
	          if (t.identifier in locations0) locations0[t.identifier] = location(t);
	        });
	        return touches;
	      }
	      function started() {
	        var target = d3.event.target;
	        d3.select(target).on(touchmove, moved).on(touchend, ended);
	        targets.push(target);
	        var changed = d3.event.changedTouches;
	        for (var i = 0, n = changed.length; i < n; ++i) {
	          locations0[changed[i].identifier] = null;
	        }
	        var touches = relocate(), now = Date.now();
	        if (touches.length === 1) {
	          if (now - touchtime < 500) {
	            var p = touches[0];
	            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);
	            d3_eventPreventDefault();
	          }
	          touchtime = now;
	        } else if (touches.length > 1) {
	          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];
	          distance0 = dx * dx + dy * dy;
	        }
	      }
	      function moved() {
	        var touches = d3.touches(that), p0, l0, p1, l1;
	        d3_selection_interrupt.call(that);
	        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {
	          p1 = touches[i];
	          if (l1 = locations0[p1.identifier]) {
	            if (l0) break;
	            p0 = p1, l0 = l1;
	          }
	        }
	        if (l1) {
	          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);
	          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];
	          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];
	          scaleTo(scale1 * scale0);
	        }
	        touchtime = null;
	        translateTo(p0, l0);
	        zoomed(dispatch);
	      }
	      function ended() {
	        if (d3.event.touches.length) {
	          var changed = d3.event.changedTouches;
	          for (var i = 0, n = changed.length; i < n; ++i) {
	            delete locations0[changed[i].identifier];
	          }
	          for (var identifier in locations0) {
	            return void relocate();
	          }
	        }
	        d3.selectAll(targets).on(zoomName, null);
	        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);
	        dragRestore();
	        zoomended(dispatch);
	      }
	    }
	    function mousewheeled() {
	      var dispatch = event.of(this, arguments);
	      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), 
	      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);
	      mousewheelTimer = setTimeout(function() {
	        mousewheelTimer = null;
	        zoomended(dispatch);
	      }, 50);
	      d3_eventPreventDefault();
	      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);
	      translateTo(center0, translate0);
	      zoomed(dispatch);
	    }
	    function dblclicked() {
	      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;
	      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);
	    }
	    return d3.rebind(zoom, event, "on");
	  };
	  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;
	  d3.color = d3_color;
	  function d3_color() {}
	  d3_color.prototype.toString = function() {
	    return this.rgb() + "";
	  };
	  d3.hsl = d3_hsl;
	  function d3_hsl(h, s, l) {
	    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse("" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);
	  }
	  var d3_hslPrototype = d3_hsl.prototype = new d3_color();
	  d3_hslPrototype.brighter = function(k) {
	    k = Math.pow(.7, arguments.length ? k : 1);
	    return new d3_hsl(this.h, this.s, this.l / k);
	  };
	  d3_hslPrototype.darker = function(k) {
	    k = Math.pow(.7, arguments.length ? k : 1);
	    return new d3_hsl(this.h, this.s, k * this.l);
	  };
	  d3_hslPrototype.rgb = function() {
	    return d3_hsl_rgb(this.h, this.s, this.l);
	  };
	  function d3_hsl_rgb(h, s, l) {
	    var m1, m2;
	    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;
	    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;
	    l = l < 0 ? 0 : l > 1 ? 1 : l;
	    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;
	    m1 = 2 * l - m2;
	    function v(h) {
	      if (h > 360) h -= 360; else if (h < 0) h += 360;
	      if (h < 60) return m1 + (m2 - m1) * h / 60;
	      if (h < 180) return m2;
	      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;
	      return m1;
	    }
	    function vv(h) {
	      return Math.round(v(h) * 255);
	    }
	    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));
	  }
	  d3.hcl = d3_hcl;
	  function d3_hcl(h, c, l) {
	    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);
	  }
	  var d3_hclPrototype = d3_hcl.prototype = new d3_color();
	  d3_hclPrototype.brighter = function(k) {
	    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));
	  };
	  d3_hclPrototype.darker = function(k) {
	    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));
	  };
	  d3_hclPrototype.rgb = function() {
	    return d3_hcl_lab(this.h, this.c, this.l).rgb();
	  };
	  function d3_hcl_lab(h, c, l) {
	    if (isNaN(h)) h = 0;
	    if (isNaN(c)) c = 0;
	    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);
	  }
	  d3.lab = d3_lab;
	  function d3_lab(l, a, b) {
	    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);
	  }
	  var d3_lab_K = 18;
	  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;
	  var d3_labPrototype = d3_lab.prototype = new d3_color();
	  d3_labPrototype.brighter = function(k) {
	    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);
	  };
	  d3_labPrototype.darker = function(k) {
	    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);
	  };
	  d3_labPrototype.rgb = function() {
	    return d3_lab_rgb(this.l, this.a, this.b);
	  };
	  function d3_lab_rgb(l, a, b) {
	    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;
	    x = d3_lab_xyz(x) * d3_lab_X;
	    y = d3_lab_xyz(y) * d3_lab_Y;
	    z = d3_lab_xyz(z) * d3_lab_Z;
	    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));
	  }
	  function d3_lab_hcl(l, a, b) {
	    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);
	  }
	  function d3_lab_xyz(x) {
	    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;
	  }
	  function d3_xyz_lab(x) {
	    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;
	  }
	  function d3_xyz_rgb(r) {
	    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));
	  }
	  d3.rgb = d3_rgb;
	  function d3_rgb(r, g, b) {
	    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse("" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);
	  }
	  function d3_rgbNumber(value) {
	    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);
	  }
	  function d3_rgbString(value) {
	    return d3_rgbNumber(value) + "";
	  }
	  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();
	  d3_rgbPrototype.brighter = function(k) {
	    k = Math.pow(.7, arguments.length ? k : 1);
	    var r = this.r, g = this.g, b = this.b, i = 30;
	    if (!r && !g && !b) return new d3_rgb(i, i, i);
	    if (r && r < i) r = i;
	    if (g && g < i) g = i;
	    if (b && b < i) b = i;
	    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));
	  };
	  d3_rgbPrototype.darker = function(k) {
	    k = Math.pow(.7, arguments.length ? k : 1);
	    return new d3_rgb(k * this.r, k * this.g, k * this.b);
	  };
	  d3_rgbPrototype.hsl = function() {
	    return d3_rgb_hsl(this.r, this.g, this.b);
	  };
	  d3_rgbPrototype.toString = function() {
	    return "#" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);
	  };
	  function d3_rgb_hex(v) {
	    return v < 16 ? "0" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);
	  }
	  function d3_rgb_parse(format, rgb, hsl) {
	    var r = 0, g = 0, b = 0, m1, m2, color;
	    m1 = /([a-z]+)\((.*)\)/.exec(format = format.toLowerCase());
	    if (m1) {
	      m2 = m1[2].split(",");
	      switch (m1[1]) {
	       case "hsl":
	        {
	          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);
	        }
	
	       case "rgb":
	        {
	          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));
	        }
	      }
	    }
	    if (color = d3_rgb_names.get(format)) {
	      return rgb(color.r, color.g, color.b);
	    }
	    if (format != null && format.charAt(0) === "#" && !isNaN(color = parseInt(format.slice(1), 16))) {
	      if (format.length === 4) {
	        r = (color & 3840) >> 4;
	        r = r >> 4 | r;
	        g = color & 240;
	        g = g >> 4 | g;
	        b = color & 15;
	        b = b << 4 | b;
	      } else if (format.length === 7) {
	        r = (color & 16711680) >> 16;
	        g = (color & 65280) >> 8;
	        b = color & 255;
	      }
	    }
	    return rgb(r, g, b);
	  }
	  function d3_rgb_hsl(r, g, b) {
	    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;
	    if (d) {
	      s = l < .5 ? d / (max + min) : d / (2 - max - min);
	      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;
	      h *= 60;
	    } else {
	      h = NaN;
	      s = l > 0 && l < 1 ? 0 : h;
	    }
	    return new d3_hsl(h, s, l);
	  }
	  function d3_rgb_lab(r, g, b) {
	    r = d3_rgb_xyz(r);
	    g = d3_rgb_xyz(g);
	    b = d3_rgb_xyz(b);
	    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);
	    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));
	  }
	  function d3_rgb_xyz(r) {
	    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);
	  }
	  function d3_rgb_parseNumber(c) {
	    var f = parseFloat(c);
	    return c.charAt(c.length - 1) === "%" ? Math.round(f * 2.55) : f;
	  }
	  var d3_rgb_names = d3.map({
	    aliceblue: 15792383,
	    antiquewhite: 16444375,
	    aqua: 65535,
	    aquamarine: 8388564,
	    azure: 15794175,
	    beige: 16119260,
	    bisque: 16770244,
	    black: 0,
	    blanchedalmond: 16772045,
	    blue: 255,
	    blueviolet: 9055202,
	    brown: 10824234,
	    burlywood: 14596231,
	    cadetblue: 6266528,
	    chartreuse: 8388352,
	    chocolate: 13789470,
	    coral: 16744272,
	    cornflowerblue: 6591981,
	    cornsilk: 16775388,
	    crimson: 14423100,
	    cyan: 65535,
	    darkblue: 139,
	    darkcyan: 35723,
	    darkgoldenrod: 12092939,
	    darkgray: 11119017,
	    darkgreen: 25600,
	    darkgrey: 11119017,
	    darkkhaki: 12433259,
	    darkmagenta: 9109643,
	    darkolivegreen: 5597999,
	    darkorange: 16747520,
	    darkorchid: 10040012,
	    darkred: 9109504,
	    darksalmon: 15308410,
	    darkseagreen: 9419919,
	    darkslateblue: 4734347,
	    darkslategray: 3100495,
	    darkslategrey: 3100495,
	    darkturquoise: 52945,
	    darkviolet: 9699539,
	    deeppink: 16716947,
	    deepskyblue: 49151,
	    dimgray: 6908265,
	    dimgrey: 6908265,
	    dodgerblue: 2003199,
	    firebrick: 11674146,
	    floralwhite: 16775920,
	    forestgreen: 2263842,
	    fuchsia: 16711935,
	    gainsboro: 14474460,
	    ghostwhite: 16316671,
	    gold: 16766720,
	    goldenrod: 14329120,
	    gray: 8421504,
	    green: 32768,
	    greenyellow: 11403055,
	    grey: 8421504,
	    honeydew: 15794160,
	    hotpink: 16738740,
	    indianred: 13458524,
	    indigo: 4915330,
	    ivory: 16777200,
	    khaki: 15787660,
	    lavender: 15132410,
	    lavenderblush: 16773365,
	    lawngreen: 8190976,
	    lemonchiffon: 16775885,
	    lightblue: 11393254,
	    lightcoral: 15761536,
	    lightcyan: 14745599,
	    lightgoldenrodyellow: 16448210,
	    lightgray: 13882323,
	    lightgreen: 9498256,
	    lightgrey: 13882323,
	    lightpink: 16758465,
	    lightsalmon: 16752762,
	    lightseagreen: 2142890,
	    lightskyblue: 8900346,
	    lightslategray: 7833753,
	    lightslategrey: 7833753,
	    lightsteelblue: 11584734,
	    lightyellow: 16777184,
	    lime: 65280,
	    limegreen: 3329330,
	    linen: 16445670,
	    magenta: 16711935,
	    maroon: 8388608,
	    mediumaquamarine: 6737322,
	    mediumblue: 205,
	    mediumorchid: 12211667,
	    mediumpurple: 9662683,
	    mediumseagreen: 3978097,
	    mediumslateblue: 8087790,
	    mediumspringgreen: 64154,
	    mediumturquoise: 4772300,
	    mediumvioletred: 13047173,
	    midnightblue: 1644912,
	    mintcream: 16121850,
	    mistyrose: 16770273,
	    moccasin: 16770229,
	    navajowhite: 16768685,
	    navy: 128,
	    oldlace: 16643558,
	    olive: 8421376,
	    olivedrab: 7048739,
	    orange: 16753920,
	    orangered: 16729344,
	    orchid: 14315734,
	    palegoldenrod: 15657130,
	    palegreen: 10025880,
	    paleturquoise: 11529966,
	    palevioletred: 14381203,
	    papayawhip: 16773077,
	    peachpuff: 16767673,
	    peru: 13468991,
	    pink: 16761035,
	    plum: 14524637,
	    powderblue: 11591910,
	    purple: 8388736,
	    rebeccapurple: 6697881,
	    red: 16711680,
	    rosybrown: 12357519,
	    royalblue: 4286945,
	    saddlebrown: 9127187,
	    salmon: 16416882,
	    sandybrown: 16032864,
	    seagreen: 3050327,
	    seashell: 16774638,
	    sienna: 10506797,
	    silver: 12632256,
	    skyblue: 8900331,
	    slateblue: 6970061,
	    slategray: 7372944,
	    slategrey: 7372944,
	    snow: 16775930,
	    springgreen: 65407,
	    steelblue: 4620980,
	    tan: 13808780,
	    teal: 32896,
	    thistle: 14204888,
	    tomato: 16737095,
	    turquoise: 4251856,
	    violet: 15631086,
	    wheat: 16113331,
	    white: 16777215,
	    whitesmoke: 16119285,
	    yellow: 16776960,
	    yellowgreen: 10145074
	  });
	  d3_rgb_names.forEach(function(key, value) {
	    d3_rgb_names.set(key, d3_rgbNumber(value));
	  });
	  function d3_functor(v) {
	    return typeof v === "function" ? v : function() {
	      return v;
	    };
	  }
	  d3.functor = d3_functor;
	  d3.xhr = d3_xhrType(d3_identity);
	  function d3_xhrType(response) {
	    return function(url, mimeType, callback) {
	      if (arguments.length === 2 && typeof mimeType === "function") callback = mimeType, 
	      mimeType = null;
	      return d3_xhr(url, mimeType, response, callback);
	    };
	  }
	  function d3_xhr(url, mimeType, response, callback) {
	    var xhr = {}, dispatch = d3.dispatch("beforesend", "progress", "load", "error"), headers = {}, request = new XMLHttpRequest(), responseType = null;
	    if (this.XDomainRequest && !("withCredentials" in request) && /^(http(s)?:)?\/\//.test(url)) request = new XDomainRequest();
	    "onload" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {
	      request.readyState > 3 && respond();
	    };
	    function respond() {
	      var status = request.status, result;
	      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {
	        try {
	          result = response.call(xhr, request);
	        } catch (e) {
	          dispatch.error.call(xhr, e);
	          return;
	        }
	        dispatch.load.call(xhr, result);
	      } else {
	        dispatch.error.call(xhr, request);
	      }
	    }
	    request.onprogress = function(event) {
	      var o = d3.event;
	      d3.event = event;
	      try {
	        dispatch.progress.call(xhr, request);
	      } finally {
	        d3.event = o;
	      }
	    };
	    xhr.header = function(name, value) {
	      name = (name + "").toLowerCase();
	      if (arguments.length < 2) return headers[name];
	      if (value == null) delete headers[name]; else headers[name] = value + "";
	      return xhr;
	    };
	    xhr.mimeType = function(value) {
	      if (!arguments.length) return mimeType;
	      mimeType = value == null ? null : value + "";
	      return xhr;
	    };
	    xhr.responseType = function(value) {
	      if (!arguments.length) return responseType;
	      responseType = value;
	      return xhr;
	    };
	    xhr.response = function(value) {
	      response = value;
	      return xhr;
	    };
	    [ "get", "post" ].forEach(function(method) {
	      xhr[method] = function() {
	        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));
	      };
	    });
	    xhr.send = function(method, data, callback) {
	      if (arguments.length === 2 && typeof data === "function") callback = data, data = null;
	      request.open(method, url, true);
	      if (mimeType != null && !("accept" in headers)) headers["accept"] = mimeType + ",*/*";
	      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);
	      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);
	      if (responseType != null) request.responseType = responseType;
	      if (callback != null) xhr.on("error", callback).on("load", function(request) {
	        callback(null, request);
	      });
	      dispatch.beforesend.call(xhr, request);
	      request.send(data == null ? null : data);
	      return xhr;
	    };
	    xhr.abort = function() {
	      request.abort();
	      return xhr;
	    };
	    d3.rebind(xhr, dispatch, "on");
	    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));
	  }
	  function d3_xhr_fixCallback(callback) {
	    return callback.length === 1 ? function(error, request) {
	      callback(error == null ? request : null);
	    } : callback;
	  }
	  function d3_xhrHasResponse(request) {
	    var type = request.responseType;
	    return type && type !== "text" ? request.response : request.responseText;
	  }
	  d3.dsv = function(delimiter, mimeType) {
	    var reFormat = new RegExp('["' + delimiter + "\n]"), delimiterCode = delimiter.charCodeAt(0);
	    function dsv(url, row, callback) {
	      if (arguments.length < 3) callback = row, row = null;
	      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);
	      xhr.row = function(_) {
	        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;
	      };
	      return xhr;
	    }
	    function response(request) {
	      return dsv.parse(request.responseText);
	    }
	    function typedResponse(f) {
	      return function(request) {
	        return dsv.parse(request.responseText, f);
	      };
	    }
	    dsv.parse = function(text, f) {
	      var o;
	      return dsv.parseRows(text, function(row, i) {
	        if (o) return o(row, i - 1);
	        var a = new Function("d", "return {" + row.map(function(name, i) {
	          return JSON.stringify(name) + ": d[" + i + "]";
	        }).join(",") + "}");
	        o = f ? function(row, i) {
	          return f(a(row), i);
	        } : a;
	      });
	    };
	    dsv.parseRows = function(text, f) {
	      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;
	      function token() {
	        if (I >= N) return EOF;
	        if (eol) return eol = false, EOL;
	        var j = I;
	        if (text.charCodeAt(j) === 34) {
	          var i = j;
	          while (i++ < N) {
	            if (text.charCodeAt(i) === 34) {
	              if (text.charCodeAt(i + 1) !== 34) break;
	              ++i;
	            }
	          }
	          I = i + 2;
	          var c = text.charCodeAt(i + 1);
	          if (c === 13) {
	            eol = true;
	            if (text.charCodeAt(i + 2) === 10) ++I;
	          } else if (c === 10) {
	            eol = true;
	          }
	          return text.slice(j + 1, i).replace(/""/g, '"');
	        }
	        while (I < N) {
	          var c = text.charCodeAt(I++), k = 1;
	          if (c === 10) eol = true; else if (c === 13) {
	            eol = true;
	            if (text.charCodeAt(I) === 10) ++I, ++k;
	          } else if (c !== delimiterCode) continue;
	          return text.slice(j, I - k);
	        }
	        return text.slice(j);
	      }
	      while ((t = token()) !== EOF) {
	        var a = [];
	        while (t !== EOL && t !== EOF) {
	          a.push(t);
	          t = token();
	        }
	        if (f && (a = f(a, n++)) == null) continue;
	        rows.push(a);
	      }
	      return rows;
	    };
	    dsv.format = function(rows) {
	      if (Array.isArray(rows[0])) return dsv.formatRows(rows);
	      var fieldSet = new d3_Set(), fields = [];
	      rows.forEach(function(row) {
	        for (var field in row) {
	          if (!fieldSet.has(field)) {
	            fields.push(fieldSet.add(field));
	          }
	        }
	      });
	      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {
	        return fields.map(function(field) {
	          return formatValue(row[field]);
	        }).join(delimiter);
	      })).join("\n");
	    };
	    dsv.formatRows = function(rows) {
	      return rows.map(formatRow).join("\n");
	    };
	    function formatRow(row) {
	      return row.map(formatValue).join(delimiter);
	    }
	    function formatValue(text) {
	      return reFormat.test(text) ? '"' + text.replace(/\"/g, '""') + '"' : text;
	    }
	    return dsv;
	  };
	  d3.csv = d3.dsv(",", "text/csv");
	  d3.tsv = d3.dsv("	", "text/tab-separated-values");
	  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, "requestAnimationFrame")] || function(callback) {
	    setTimeout(callback, 17);
	  };
	  d3.timer = function() {
	    d3_timer.apply(this, arguments);
	  };
	  function d3_timer(callback, delay, then) {
	    var n = arguments.length;
	    if (n < 2) delay = 0;
	    if (n < 3) then = Date.now();
	    var time = then + delay, timer = {
	      c: callback,
	      t: time,
	      n: null
	    };
	    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;
	    d3_timer_queueTail = timer;
	    if (!d3_timer_interval) {
	      d3_timer_timeout = clearTimeout(d3_timer_timeout);
	      d3_timer_interval = 1;
	      d3_timer_frame(d3_timer_step);
	    }
	    return timer;
	  }
	  function d3_timer_step() {
	    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;
	    if (delay > 24) {
	      if (isFinite(delay)) {
	        clearTimeout(d3_timer_timeout);
	        d3_timer_timeout = setTimeout(d3_timer_step, delay);
	      }
	      d3_timer_interval = 0;
	    } else {
	      d3_timer_interval = 1;
	      d3_timer_frame(d3_timer_step);
	    }
	  }
	  d3.timer.flush = function() {
	    d3_timer_mark();
	    d3_timer_sweep();
	  };
	  function d3_timer_mark() {
	    var now = Date.now(), timer = d3_timer_queueHead;
	    while (timer) {
	      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;
	      timer = timer.n;
	    }
	    return now;
	  }
	  function d3_timer_sweep() {
	    var t0, t1 = d3_timer_queueHead, time = Infinity;
	    while (t1) {
	      if (t1.c) {
	        if (t1.t < time) time = t1.t;
	        t1 = (t0 = t1).n;
	      } else {
	        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;
	      }
	    }
	    d3_timer_queueTail = t0;
	    return time;
	  }
	  function d3_format_precision(x, p) {
	    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);
	  }
	  d3.round = function(x, n) {
	    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);
	  };
	  var d3_formatPrefixes = [ "y", "z", "a", "f", "p", "n", "µ", "m", "", "k", "M", "G", "T", "P", "E", "Z", "Y" ].map(d3_formatPrefix);
	  d3.formatPrefix = function(value, precision) {
	    var i = 0;
	    if (value = +value) {
	      if (value < 0) value *= -1;
	      if (precision) value = d3.round(value, d3_format_precision(value, precision));
	      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);
	      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));
	    }
	    return d3_formatPrefixes[8 + i / 3];
	  };
	  function d3_formatPrefix(d, i) {
	    var k = Math.pow(10, abs(8 - i) * 3);
	    return {
	      scale: i > 8 ? function(d) {
	        return d / k;
	      } : function(d) {
	        return d * k;
	      },
	      symbol: d
	    };
	  }
	  function d3_locale_numberFormat(locale) {
	    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {
	      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;
	      while (i > 0 && g > 0) {
	        if (length + g + 1 > width) g = Math.max(1, width - length);
	        t.push(value.substring(i -= g, i + g));
	        if ((length += g + 1) > width) break;
	        g = locale_grouping[j = (j + 1) % locale_grouping.length];
	      }
	      return t.reverse().join(locale_thousands);
	    } : d3_identity;
	    return function(specifier) {
	      var match = d3_format_re.exec(specifier), fill = match[1] || " ", align = match[2] || ">", sign = match[3] || "-", symbol = match[4] || "", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = "", suffix = "", integer = false, exponent = true;
	      if (precision) precision = +precision.substring(1);
	      if (zfill || fill === "0" && align === "=") {
	        zfill = fill = "0";
	        align = "=";
	      }
	      switch (type) {
	       case "n":
	        comma = true;
	        type = "g";
	        break;
	
	       case "%":
	        scale = 100;
	        suffix = "%";
	        type = "f";
	        break;
	
	       case "p":
	        scale = 100;
	        suffix = "%";
	        type = "r";
	        break;
	
	       case "b":
	       case "o":
	       case "x":
	       case "X":
	        if (symbol === "#") prefix = "0" + type.toLowerCase();
	
	       case "c":
	        exponent = false;
	
	       case "d":
	        integer = true;
	        precision = 0;
	        break;
	
	       case "s":
	        scale = -1;
	        type = "r";
	        break;
	      }
	      if (symbol === "$") prefix = locale_currency[0], suffix = locale_currency[1];
	      if (type == "r" && !precision) type = "g";
	      if (precision != null) {
	        if (type == "g") precision = Math.max(1, Math.min(21, precision)); else if (type == "e" || type == "f") precision = Math.max(0, Math.min(20, precision));
	      }
	      type = d3_format_types.get(type) || d3_format_typeDefault;
	      var zcomma = zfill && comma;
	      return function(value) {
	        var fullSuffix = suffix;
	        if (integer && value % 1) return "";
	        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, "-") : sign === "-" ? "" : sign;
	        if (scale < 0) {
	          var unit = d3.formatPrefix(value, precision);
	          value = unit.scale(value);
	          fullSuffix = unit.symbol + suffix;
	        } else {
	          value *= scale;
	        }
	        value = type(value, precision);
	        var i = value.lastIndexOf("."), before, after;
	        if (i < 0) {
	          var j = exponent ? value.lastIndexOf("e") : -1;
	          if (j < 0) before = value, after = ""; else before = value.substring(0, j), after = value.substring(j);
	        } else {
	          before = value.substring(0, i);
	          after = locale_decimal + value.substring(i + 1);
	        }
	        if (!zfill && comma) before = formatGroup(before, Infinity);
	        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : "";
	        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);
	        negative += prefix;
	        value = before + after;
	        return (align === "<" ? negative + value + padding : align === ">" ? padding + negative + value : align === "^" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;
	      };
	    };
	  }
	  var d3_format_re = /(?:([^{])?([<>=^]))?([+\- ])?([$#])?(0)?(\d+)?(,)?(\.-?\d+)?([a-z%])?/i;
	  var d3_format_types = d3.map({
	    b: function(x) {
	      return x.toString(2);
	    },
	    c: function(x) {
	      return String.fromCharCode(x);
	    },
	    o: function(x) {
	      return x.toString(8);
	    },
	    x: function(x) {
	      return x.toString(16);
	    },
	    X: function(x) {
	      return x.toString(16).toUpperCase();
	    },
	    g: function(x, p) {
	      return x.toPrecision(p);
	    },
	    e: function(x, p) {
	      return x.toExponential(p);
	    },
	    f: function(x, p) {
	      return x.toFixed(p);
	    },
	    r: function(x, p) {
	      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));
	    }
	  });
	  function d3_format_typeDefault(x) {
	    return x + "";
	  }
	  var d3_time = d3.time = {}, d3_date = Date;
	  function d3_date_utc() {
	    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);
	  }
	  d3_date_utc.prototype = {
	    getDate: function() {
	      return this._.getUTCDate();
	    },
	    getDay: function() {
	      return this._.getUTCDay();
	    },
	    getFullYear: function() {
	      return this._.getUTCFullYear();
	    },
	    getHours: function() {
	      return this._.getUTCHours();
	    },
	    getMilliseconds: function() {
	      return this._.getUTCMilliseconds();
	    },
	    getMinutes: function() {
	      return this._.getUTCMinutes();
	    },
	    getMonth: function() {
	      return this._.getUTCMonth();
	    },
	    getSeconds: function() {
	      return this._.getUTCSeconds();
	    },
	    getTime: function() {
	      return this._.getTime();
	    },
	    getTimezoneOffset: function() {
	      return 0;
	    },
	    valueOf: function() {
	      return this._.valueOf();
	    },
	    setDate: function() {
	      d3_time_prototype.setUTCDate.apply(this._, arguments);
	    },
	    setDay: function() {
	      d3_time_prototype.setUTCDay.apply(this._, arguments);
	    },
	    setFullYear: function() {
	      d3_time_prototype.setUTCFullYear.apply(this._, arguments);
	    },
	    setHours: function() {
	      d3_time_prototype.setUTCHours.apply(this._, arguments);
	    },
	    setMilliseconds: function() {
	      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);
	    },
	    setMinutes: function() {
	      d3_time_prototype.setUTCMinutes.apply(this._, arguments);
	    },
	    setMonth: function() {
	      d3_time_prototype.setUTCMonth.apply(this._, arguments);
	    },
	    setSeconds: function() {
	      d3_time_prototype.setUTCSeconds.apply(this._, arguments);
	    },
	    setTime: function() {
	      d3_time_prototype.setTime.apply(this._, arguments);
	    }
	  };
	  var d3_time_prototype = Date.prototype;
	  function d3_time_interval(local, step, number) {
	    function round(date) {
	      var d0 = local(date), d1 = offset(d0, 1);
	      return date - d0 < d1 - date ? d0 : d1;
	    }
	    function ceil(date) {
	      step(date = local(new d3_date(date - 1)), 1);
	      return date;
	    }
	    function offset(date, k) {
	      step(date = new d3_date(+date), k);
	      return date;
	    }
	    function range(t0, t1, dt) {
	      var time = ceil(t0), times = [];
	      if (dt > 1) {
	        while (time < t1) {
	          if (!(number(time) % dt)) times.push(new Date(+time));
	          step(time, 1);
	        }
	      } else {
	        while (time < t1) times.push(new Date(+time)), step(time, 1);
	      }
	      return times;
	    }
	    function range_utc(t0, t1, dt) {
	      try {
	        d3_date = d3_date_utc;
	        var utc = new d3_date_utc();
	        utc._ = t0;
	        return range(utc, t1, dt);
	      } finally {
	        d3_date = Date;
	      }
	    }
	    local.floor = local;
	    local.round = round;
	    local.ceil = ceil;
	    local.offset = offset;
	    local.range = range;
	    var utc = local.utc = d3_time_interval_utc(local);
	    utc.floor = utc;
	    utc.round = d3_time_interval_utc(round);
	    utc.ceil = d3_time_interval_utc(ceil);
	    utc.offset = d3_time_interval_utc(offset);
	    utc.range = range_utc;
	    return local;
	  }
	  function d3_time_interval_utc(method) {
	    return function(date, k) {
	      try {
	        d3_date = d3_date_utc;
	        var utc = new d3_date_utc();
	        utc._ = date;
	        return method(utc, k)._;
	      } finally {
	        d3_date = Date;
	      }
	    };
	  }
	  d3_time.year = d3_time_interval(function(date) {
	    date = d3_time.day(date);
	    date.setMonth(0, 1);
	    return date;
	  }, function(date, offset) {
	    date.setFullYear(date.getFullYear() + offset);
	  }, function(date) {
	    return date.getFullYear();
	  });
	  d3_time.years = d3_time.year.range;
	  d3_time.years.utc = d3_time.year.utc.range;
	  d3_time.day = d3_time_interval(function(date) {
	    var day = new d3_date(2e3, 0);
	    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());
	    return day;
	  }, function(date, offset) {
	    date.setDate(date.getDate() + offset);
	  }, function(date) {
	    return date.getDate() - 1;
	  });
	  d3_time.days = d3_time.day.range;
	  d3_time.days.utc = d3_time.day.utc.range;
	  d3_time.dayOfYear = function(date) {
	    var year = d3_time.year(date);
	    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);
	  };
	  [ "sunday", "monday", "tuesday", "wednesday", "thursday", "friday", "saturday" ].forEach(function(day, i) {
	    i = 7 - i;
	    var interval = d3_time[day] = d3_time_interval(function(date) {
	      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);
	      return date;
	    }, function(date, offset) {
	      date.setDate(date.getDate() + Math.floor(offset) * 7);
	    }, function(date) {
	      var day = d3_time.year(date).getDay();
	      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);
	    });
	    d3_time[day + "s"] = interval.range;
	    d3_time[day + "s"].utc = interval.utc.range;
	    d3_time[day + "OfYear"] = function(date) {
	      var day = d3_time.year(date).getDay();
	      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);
	    };
	  });
	  d3_time.week = d3_time.sunday;
	  d3_time.weeks = d3_time.sunday.range;
	  d3_time.weeks.utc = d3_time.sunday.utc.range;
	  d3_time.weekOfYear = d3_time.sundayOfYear;
	  function d3_locale_timeFormat(locale) {
	    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;
	    function d3_time_format(template) {
	      var n = template.length;
	      function format(date) {
	        var string = [], i = -1, j = 0, c, p, f;
	        while (++i < n) {
	          if (template.charCodeAt(i) === 37) {
	            string.push(template.slice(j, i));
	            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);
	            if (f = d3_time_formats[c]) c = f(date, p == null ? c === "e" ? " " : "0" : p);
	            string.push(c);
	            j = i + 1;
	          }
	        }
	        string.push(template.slice(j, i));
	        return string.join("");
	      }
	      format.parse = function(string) {
	        var d = {
	          y: 1900,
	          m: 0,
	          d: 1,
	          H: 0,
	          M: 0,
	          S: 0,
	          L: 0,
	          Z: null
	        }, i = d3_time_parse(d, template, string, 0);
	        if (i != string.length) return null;
	        if ("p" in d) d.H = d.H % 12 + d.p * 12;
	        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();
	        if ("j" in d) date.setFullYear(d.y, 0, d.j); else if ("W" in d || "U" in d) {
	          if (!("w" in d)) d.w = "W" in d ? 1 : 0;
	          date.setFullYear(d.y, 0, 1);
	          date.setFullYear(d.y, 0, "W" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);
	        } else date.setFullYear(d.y, d.m, d.d);
	        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);
	        return localZ ? date._ : date;
	      };
	      format.toString = function() {
	        return template;
	      };
	      return format;
	    }
	    function d3_time_parse(date, template, string, j) {
	      var c, p, t, i = 0, n = template.length, m = string.length;
	      while (i < n) {
	        if (j >= m) return -1;
	        c = template.charCodeAt(i++);
	        if (c === 37) {
	          t = template.charAt(i++);
	          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];
	          if (!p || (j = p(date, string, j)) < 0) return -1;
	        } else if (c != string.charCodeAt(j++)) {
	          return -1;
	        }
	      }
	      return j;
	    }
	    d3_time_format.utc = function(template) {
	      var local = d3_time_format(template);
	      function format(date) {
	        try {
	          d3_date = d3_date_utc;
	          var utc = new d3_date();
	          utc._ = date;
	          return local(utc);
	        } finally {
	          d3_date = Date;
	        }
	      }
	      format.parse = function(string) {
	        try {
	          d3_date = d3_date_utc;
	          var date = local.parse(string);
	          return date && date._;
	        } finally {
	          d3_date = Date;
	        }
	      };
	      format.toString = local.toString;
	      return format;
	    };
	    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;
	    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);
	    locale_periods.forEach(function(p, i) {
	      d3_time_periodLookup.set(p.toLowerCase(), i);
	    });
	    var d3_time_formats = {
	      a: function(d) {
	        return locale_shortDays[d.getDay()];
	      },
	      A: function(d) {
	        return locale_days[d.getDay()];
	      },
	      b: function(d) {
	        return locale_shortMonths[d.getMonth()];
	      },
	      B: function(d) {
	        return locale_months[d.getMonth()];
	      },
	      c: d3_time_format(locale_dateTime),
	      d: function(d, p) {
	        return d3_time_formatPad(d.getDate(), p, 2);
	      },
	      e: function(d, p) {
	        return d3_time_formatPad(d.getDate(), p, 2);
	      },
	      H: function(d, p) {
	        return d3_time_formatPad(d.getHours(), p, 2);
	      },
	      I: function(d, p) {
	        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);
	      },
	      j: function(d, p) {
	        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);
	      },
	      L: function(d, p) {
	        return d3_time_formatPad(d.getMilliseconds(), p, 3);
	      },
	      m: function(d, p) {
	        return d3_time_formatPad(d.getMonth() + 1, p, 2);
	      },
	      M: function(d, p) {
	        return d3_time_formatPad(d.getMinutes(), p, 2);
	      },
	      p: function(d) {
	        return locale_periods[+(d.getHours() >= 12)];
	      },
	      S: function(d, p) {
	        return d3_time_formatPad(d.getSeconds(), p, 2);
	      },
	      U: function(d, p) {
	        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);
	      },
	      w: function(d) {
	        return d.getDay();
	      },
	      W: function(d, p) {
	        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);
	      },
	      x: d3_time_format(locale_date),
	      X: d3_time_format(locale_time),
	      y: function(d, p) {
	        return d3_time_formatPad(d.getFullYear() % 100, p, 2);
	      },
	      Y: function(d, p) {
	        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);
	      },
	      Z: d3_time_zone,
	      "%": function() {
	        return "%";
	      }
	    };
	    var d3_time_parsers = {
	      a: d3_time_parseWeekdayAbbrev,
	      A: d3_time_parseWeekday,
	      b: d3_time_parseMonthAbbrev,
	      B: d3_time_parseMonth,
	      c: d3_time_parseLocaleFull,
	      d: d3_time_parseDay,
	      e: d3_time_parseDay,
	      H: d3_time_parseHour24,
	      I: d3_time_parseHour24,
	      j: d3_time_parseDayOfYear,
	      L: d3_time_parseMilliseconds,
	      m: d3_time_parseMonthNumber,
	      M: d3_time_parseMinutes,
	      p: d3_time_parseAmPm,
	      S: d3_time_parseSeconds,
	      U: d3_time_parseWeekNumberSunday,
	      w: d3_time_parseWeekdayNumber,
	      W: d3_time_parseWeekNumberMonday,
	      x: d3_time_parseLocaleDate,
	      X: d3_time_parseLocaleTime,
	      y: d3_time_parseYear,
	      Y: d3_time_parseFullYear,
	      Z: d3_time_parseZone,
	      "%": d3_time_parseLiteralPercent
	    };
	    function d3_time_parseWeekdayAbbrev(date, string, i) {
	      d3_time_dayAbbrevRe.lastIndex = 0;
	      var n = d3_time_dayAbbrevRe.exec(string.slice(i));
	      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
	    }
	    function d3_time_parseWeekday(date, string, i) {
	      d3_time_dayRe.lastIndex = 0;
	      var n = d3_time_dayRe.exec(string.slice(i));
	      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
	    }
	    function d3_time_parseMonthAbbrev(date, string, i) {
	      d3_time_monthAbbrevRe.lastIndex = 0;
	      var n = d3_time_monthAbbrevRe.exec(string.slice(i));
	      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
	    }
	    function d3_time_parseMonth(date, string, i) {
	      d3_time_monthRe.lastIndex = 0;
	      var n = d3_time_monthRe.exec(string.slice(i));
	      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
	    }
	    function d3_time_parseLocaleFull(date, string, i) {
	      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);
	    }
	    function d3_time_parseLocaleDate(date, string, i) {
	      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);
	    }
	    function d3_time_parseLocaleTime(date, string, i) {
	      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);
	    }
	    function d3_time_parseAmPm(date, string, i) {
	      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());
	      return n == null ? -1 : (date.p = n, i);
	    }
	    return d3_time_format;
	  }
	  var d3_time_formatPads = {
	    "-": "",
	    _: " ",
	    "0": "0"
	  }, d3_time_numberRe = /^\s*\d+/, d3_time_percentRe = /^%/;
	  function d3_time_formatPad(value, fill, width) {
	    var sign = value < 0 ? "-" : "", string = (sign ? -value : value) + "", length = string.length;
	    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);
	  }
	  function d3_time_formatRe(names) {
	    return new RegExp("^(?:" + names.map(d3.requote).join("|") + ")", "i");
	  }
	  function d3_time_formatLookup(names) {
	    var map = new d3_Map(), i = -1, n = names.length;
	    while (++i < n) map.set(names[i].toLowerCase(), i);
	    return map;
	  }
	  function d3_time_parseWeekdayNumber(date, string, i) {
	    d3_time_numberRe.lastIndex = 0;
	    var n = d3_time_numberRe.exec(string.slice(i, i + 1));
	    return n ? (date.w = +n[0], i + n[0].length) : -1;
	  }
	  function d3_time_parseWeekNumberSunday(date, string, i) {
	    d3_time_numberRe.lastIndex = 0;
	    var n = d3_time_numberRe.exec(string.slice(i));
	    return n ? (date.U = +n[0], i + n[0].length) : -1;
	  }
	  function d3_time_parseWeekNumberMonday(date, string, i) {
	    d3_time_numberRe.lastIndex = 0;
	    var n = d3_time_numberRe.exec(string.slice(i));
	    return n ? (date.W = +n[0], i + n[0].length) : -1;
	  }
	  function d3_time_parseFullYear(date, string, i) {
	    d3_time_numberRe.lastIndex = 0;
	    var n = d3_time_numberRe.exec(string.slice(i, i + 4));
	    return n ? (date.y = +n[0], i + n[0].length) : -1;
	  }
	  function d3_time_parseYear(date, string, i) {
	    d3_time_numberRe.lastIndex = 0;
	    var n = d3_time_numberRe.exec(string.slice(i, i + 2));
	    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;
	  }
	  function d3_time_parseZone(date, string, i) {
	    return /^[+-]\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, 
	    i + 5) : -1;
	  }
	  function d3_time_expandYear(d) {
	    return d + (d > 68 ? 1900 : 2e3);
	  }
	  function d3_time_parseMonthNumber(date, string, i) {
	    d3_time_numberRe.lastIndex = 0;
	    var n = d3_time_numberRe.exec(string.slice(i, i + 2));
	    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;
	  }
	  function d3_time_parseDay(date, string, i) {
	    d3_time_numberRe.lastIndex = 0;
	    var n = d3_time_numberRe.exec(string.slice(i, i + 2));
	    return n ? (date.d = +n[0], i + n[0].length) : -1;
	  }
	  function d3_time_parseDayOfYear(date, string, i) {
	    d3_time_numberRe.lastIndex = 0;
	    var n = d3_time_numberRe.exec(string.slice(i, i + 3));
	    return n ? (date.j = +n[0], i + n[0].length) : -1;
	  }
	  function d3_time_parseHour24(date, string, i) {
	    d3_time_numberRe.lastIndex = 0;
	    var n = d3_time_numberRe.exec(string.slice(i, i + 2));
	    return n ? (date.H = +n[0], i + n[0].length) : -1;
	  }
	  function d3_time_parseMinutes(date, string, i) {
	    d3_time_numberRe.lastIndex = 0;
	    var n = d3_time_numberRe.exec(string.slice(i, i + 2));
	    return n ? (date.M = +n[0], i + n[0].length) : -1;
	  }
	  function d3_time_parseSeconds(date, string, i) {
	    d3_time_numberRe.lastIndex = 0;
	    var n = d3_time_numberRe.exec(string.slice(i, i + 2));
	    return n ? (date.S = +n[0], i + n[0].length) : -1;
	  }
	  function d3_time_parseMilliseconds(date, string, i) {
	    d3_time_numberRe.lastIndex = 0;
	    var n = d3_time_numberRe.exec(string.slice(i, i + 3));
	    return n ? (date.L = +n[0], i + n[0].length) : -1;
	  }
	  function d3_time_zone(d) {
	    var z = d.getTimezoneOffset(), zs = z > 0 ? "-" : "+", zh = abs(z) / 60 | 0, zm = abs(z) % 60;
	    return zs + d3_time_formatPad(zh, "0", 2) + d3_time_formatPad(zm, "0", 2);
	  }
	  function d3_time_parseLiteralPercent(date, string, i) {
	    d3_time_percentRe.lastIndex = 0;
	    var n = d3_time_percentRe.exec(string.slice(i, i + 1));
	    return n ? i + n[0].length : -1;
	  }
	  function d3_time_formatMulti(formats) {
	    var n = formats.length, i = -1;
	    while (++i < n) formats[i][0] = this(formats[i][0]);
	    return function(date) {
	      var i = 0, f = formats[i];
	      while (!f[1](date)) f = formats[++i];
	      return f[0](date);
	    };
	  }
	  d3.locale = function(locale) {
	    return {
	      numberFormat: d3_locale_numberFormat(locale),
	      timeFormat: d3_locale_timeFormat(locale)
	    };
	  };
	  var d3_locale_enUS = d3.locale({
	    decimal: ".",
	    thousands: ",",
	    grouping: [ 3 ],
	    currency: [ "$", "" ],
	    dateTime: "%a %b %e %X %Y",
	    date: "%m/%d/%Y",
	    time: "%H:%M:%S",
	    periods: [ "AM", "PM" ],
	    days: [ "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday" ],
	    shortDays: [ "Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat" ],
	    months: [ "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" ],
	    shortMonths: [ "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" ]
	  });
	  d3.format = d3_locale_enUS.numberFormat;
	  d3.geo = {};
	  function d3_adder() {}
	  d3_adder.prototype = {
	    s: 0,
	    t: 0,
	    add: function(y) {
	      d3_adderSum(y, this.t, d3_adderTemp);
	      d3_adderSum(d3_adderTemp.s, this.s, this);
	      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;
	    },
	    reset: function() {
	      this.s = this.t = 0;
	    },
	    valueOf: function() {
	      return this.s;
	    }
	  };
	  var d3_adderTemp = new d3_adder();
	  function d3_adderSum(a, b, o) {
	    var x = o.s = a + b, bv = x - a, av = x - bv;
	    o.t = a - av + (b - bv);
	  }
	  d3.geo.stream = function(object, listener) {
	    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {
	      d3_geo_streamObjectType[object.type](object, listener);
	    } else {
	      d3_geo_streamGeometry(object, listener);
	    }
	  };
	  function d3_geo_streamGeometry(geometry, listener) {
	    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {
	      d3_geo_streamGeometryType[geometry.type](geometry, listener);
	    }
	  }
	  var d3_geo_streamObjectType = {
	    Feature: function(feature, listener) {
	      d3_geo_streamGeometry(feature.geometry, listener);
	    },
	    FeatureCollection: function(object, listener) {
	      var features = object.features, i = -1, n = features.length;
	      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);
	    }
	  };
	  var d3_geo_streamGeometryType = {
	    Sphere: function(object, listener) {
	      listener.sphere();
	    },
	    Point: function(object, listener) {
	      object = object.coordinates;
	      listener.point(object[0], object[1], object[2]);
	    },
	    MultiPoint: function(object, listener) {
	      var coordinates = object.coordinates, i = -1, n = coordinates.length;
	      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);
	    },
	    LineString: function(object, listener) {
	      d3_geo_streamLine(object.coordinates, listener, 0);
	    },
	    MultiLineString: function(object, listener) {
	      var coordinates = object.coordinates, i = -1, n = coordinates.length;
	      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);
	    },
	    Polygon: function(object, listener) {
	      d3_geo_streamPolygon(object.coordinates, listener);
	    },
	    MultiPolygon: function(object, listener) {
	      var coordinates = object.coordinates, i = -1, n = coordinates.length;
	      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);
	    },
	    GeometryCollection: function(object, listener) {
	      var geometries = object.geometries, i = -1, n = geometries.length;
	      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);
	    }
	  };
	  function d3_geo_streamLine(coordinates, listener, closed) {
	    var i = -1, n = coordinates.length - closed, coordinate;
	    listener.lineStart();
	    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);
	    listener.lineEnd();
	  }
	  function d3_geo_streamPolygon(coordinates, listener) {
	    var i = -1, n = coordinates.length;
	    listener.polygonStart();
	    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);
	    listener.polygonEnd();
	  }
	  d3.geo.area = function(object) {
	    d3_geo_areaSum = 0;
	    d3.geo.stream(object, d3_geo_area);
	    return d3_geo_areaSum;
	  };
	  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();
	  var d3_geo_area = {
	    sphere: function() {
	      d3_geo_areaSum += 4 * π;
	    },
	    point: d3_noop,
	    lineStart: d3_noop,
	    lineEnd: d3_noop,
	    polygonStart: function() {
	      d3_geo_areaRingSum.reset();
	      d3_geo_area.lineStart = d3_geo_areaRingStart;
	    },
	    polygonEnd: function() {
	      var area = 2 * d3_geo_areaRingSum;
	      d3_geo_areaSum += area < 0 ? 4 * π + area : area;
	      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;
	    }
	  };
	  function d3_geo_areaRingStart() {
	    var λ00, φ00, λ0, cosφ0, sinφ0;
	    d3_geo_area.point = function(λ, φ) {
	      d3_geo_area.point = nextPoint;
	      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), 
	      sinφ0 = Math.sin(φ);
	    };
	    function nextPoint(λ, φ) {
	      λ *= d3_radians;
	      φ = φ * d3_radians / 2 + π / 4;
	      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);
	      d3_geo_areaRingSum.add(Math.atan2(v, u));
	      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;
	    }
	    d3_geo_area.lineEnd = function() {
	      nextPoint(λ00, φ00);
	    };
	  }
	  function d3_geo_cartesian(spherical) {
	    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);
	    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];
	  }
	  function d3_geo_cartesianDot(a, b) {
	    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];
	  }
	  function d3_geo_cartesianCross(a, b) {
	    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];
	  }
	  function d3_geo_cartesianAdd(a, b) {
	    a[0] += b[0];
	    a[1] += b[1];
	    a[2] += b[2];
	  }
	  function d3_geo_cartesianScale(vector, k) {
	    return [ vector[0] * k, vector[1] * k, vector[2] * k ];
	  }
	  function d3_geo_cartesianNormalize(d) {
	    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);
	    d[0] /= l;
	    d[1] /= l;
	    d[2] /= l;
	  }
	  function d3_geo_spherical(cartesian) {
	    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];
	  }
	  function d3_geo_sphericalEqual(a, b) {
	    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;
	  }
	  d3.geo.bounds = function() {
	    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;
	    var bound = {
	      point: point,
	      lineStart: lineStart,
	      lineEnd: lineEnd,
	      polygonStart: function() {
	        bound.point = ringPoint;
	        bound.lineStart = ringStart;
	        bound.lineEnd = ringEnd;
	        dλSum = 0;
	        d3_geo_area.polygonStart();
	      },
	      polygonEnd: function() {
	        d3_geo_area.polygonEnd();
	        bound.point = point;
	        bound.lineStart = lineStart;
	        bound.lineEnd = lineEnd;
	        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;
	        range[0] = λ0, range[1] = λ1;
	      }
	    };
	    function point(λ, φ) {
	      ranges.push(range = [ λ0 = λ, λ1 = λ ]);
	      if (φ < φ0) φ0 = φ;
	      if (φ > φ1) φ1 = φ;
	    }
	    function linePoint(λ, φ) {
	      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);
	      if (p0) {
	        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);
	        d3_geo_cartesianNormalize(inflection);
	        inflection = d3_geo_spherical(inflection);
	        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;
	        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {
	          var φi = inflection[1] * d3_degrees;
	          if (φi > φ1) φ1 = φi;
	        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {
	          var φi = -inflection[1] * d3_degrees;
	          if (φi < φ0) φ0 = φi;
	        } else {
	          if (φ < φ0) φ0 = φ;
	          if (φ > φ1) φ1 = φ;
	        }
	        if (antimeridian) {
	          if (λ < λ_) {
	            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;
	          } else {
	            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;
	          }
	        } else {
	          if (λ1 >= λ0) {
	            if (λ < λ0) λ0 = λ;
	            if (λ > λ1) λ1 = λ;
	          } else {
	            if (λ > λ_) {
	              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;
	            } else {
	              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;
	            }
	          }
	        }
	      } else {
	        point(λ, φ);
	      }
	      p0 = p, λ_ = λ;
	    }
	    function lineStart() {
	      bound.point = linePoint;
	    }
	    function lineEnd() {
	      range[0] = λ0, range[1] = λ1;
	      bound.point = point;
	      p0 = null;
	    }
	    function ringPoint(λ, φ) {
	      if (p0) {
	        var dλ = λ - λ_;
	        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;
	      } else λ__ = λ, φ__ = φ;
	      d3_geo_area.point(λ, φ);
	      linePoint(λ, φ);
	    }
	    function ringStart() {
	      d3_geo_area.lineStart();
	    }
	    function ringEnd() {
	      ringPoint(λ__, φ__);
	      d3_geo_area.lineEnd();
	      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);
	      range[0] = λ0, range[1] = λ1;
	      p0 = null;
	    }
	    function angle(λ0, λ1) {
	      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;
	    }
	    function compareRanges(a, b) {
	      return a[0] - b[0];
	    }
	    function withinRange(x, range) {
	      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;
	    }
	    return function(feature) {
	      φ1 = λ1 = -(λ0 = φ0 = Infinity);
	      ranges = [];
	      d3.geo.stream(feature, bound);
	      var n = ranges.length;
	      if (n) {
	        ranges.sort(compareRanges);
	        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {
	          b = ranges[i];
	          if (withinRange(b[0], a) || withinRange(b[1], a)) {
	            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];
	            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];
	          } else {
	            merged.push(a = b);
	          }
	        }
	        var best = -Infinity, dλ;
	        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {
	          b = merged[i];
	          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];
	        }
	      }
	      ranges = range = null;
	      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];
	    };
	  }();
	  d3.geo.centroid = function(object) {
	    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;
	    d3.geo.stream(object, d3_geo_centroid);
	    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;
	    if (m < ε2) {
	      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;
	      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;
	      m = x * x + y * y + z * z;
	      if (m < ε2) return [ NaN, NaN ];
	    }
	    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];
	  };
	  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;
	  var d3_geo_centroid = {
	    sphere: d3_noop,
	    point: d3_geo_centroidPoint,
	    lineStart: d3_geo_centroidLineStart,
	    lineEnd: d3_geo_centroidLineEnd,
	    polygonStart: function() {
	      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;
	    },
	    polygonEnd: function() {
	      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;
	    }
	  };
	  function d3_geo_centroidPoint(λ, φ) {
	    λ *= d3_radians;
	    var cosφ = Math.cos(φ *= d3_radians);
	    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));
	  }
	  function d3_geo_centroidPointXYZ(x, y, z) {
	    ++d3_geo_centroidW0;
	    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;
	    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;
	    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;
	  }
	  function d3_geo_centroidLineStart() {
	    var x0, y0, z0;
	    d3_geo_centroid.point = function(λ, φ) {
	      λ *= d3_radians;
	      var cosφ = Math.cos(φ *= d3_radians);
	      x0 = cosφ * Math.cos(λ);
	      y0 = cosφ * Math.sin(λ);
	      z0 = Math.sin(φ);
	      d3_geo_centroid.point = nextPoint;
	      d3_geo_centroidPointXYZ(x0, y0, z0);
	    };
	    function nextPoint(λ, φ) {
	      λ *= d3_radians;
	      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);
	      d3_geo_centroidW1 += w;
	      d3_geo_centroidX1 += w * (x0 + (x0 = x));
	      d3_geo_centroidY1 += w * (y0 + (y0 = y));
	      d3_geo_centroidZ1 += w * (z0 + (z0 = z));
	      d3_geo_centroidPointXYZ(x0, y0, z0);
	    }
	  }
	  function d3_geo_centroidLineEnd() {
	    d3_geo_centroid.point = d3_geo_centroidPoint;
	  }
	  function d3_geo_centroidRingStart() {
	    var λ00, φ00, x0, y0, z0;
	    d3_geo_centroid.point = function(λ, φ) {
	      λ00 = λ, φ00 = φ;
	      d3_geo_centroid.point = nextPoint;
	      λ *= d3_radians;
	      var cosφ = Math.cos(φ *= d3_radians);
	      x0 = cosφ * Math.cos(λ);
	      y0 = cosφ * Math.sin(λ);
	      z0 = Math.sin(φ);
	      d3_geo_centroidPointXYZ(x0, y0, z0);
	    };
	    d3_geo_centroid.lineEnd = function() {
	      nextPoint(λ00, φ00);
	      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;
	      d3_geo_centroid.point = d3_geo_centroidPoint;
	    };
	    function nextPoint(λ, φ) {
	      λ *= d3_radians;
	      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);
	      d3_geo_centroidX2 += v * cx;
	      d3_geo_centroidY2 += v * cy;
	      d3_geo_centroidZ2 += v * cz;
	      d3_geo_centroidW1 += w;
	      d3_geo_centroidX1 += w * (x0 + (x0 = x));
	      d3_geo_centroidY1 += w * (y0 + (y0 = y));
	      d3_geo_centroidZ1 += w * (z0 + (z0 = z));
	      d3_geo_centroidPointXYZ(x0, y0, z0);
	    }
	  }
	  function d3_geo_compose(a, b) {
	    function compose(x, y) {
	      return x = a(x, y), b(x[0], x[1]);
	    }
	    if (a.invert && b.invert) compose.invert = function(x, y) {
	      return x = b.invert(x, y), x && a.invert(x[0], x[1]);
	    };
	    return compose;
	  }
	  function d3_true() {
	    return true;
	  }
	  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {
	    var subject = [], clip = [];
	    segments.forEach(function(segment) {
	      if ((n = segment.length - 1) <= 0) return;
	      var n, p0 = segment[0], p1 = segment[n];
	      if (d3_geo_sphericalEqual(p0, p1)) {
	        listener.lineStart();
	        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);
	        listener.lineEnd();
	        return;
	      }
	      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);
	      a.o = b;
	      subject.push(a);
	      clip.push(b);
	      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);
	      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);
	      a.o = b;
	      subject.push(a);
	      clip.push(b);
	    });
	    clip.sort(compare);
	    d3_geo_clipPolygonLinkCircular(subject);
	    d3_geo_clipPolygonLinkCircular(clip);
	    if (!subject.length) return;
	    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {
	      clip[i].e = entry = !entry;
	    }
	    var start = subject[0], points, point;
	    while (1) {
	      var current = start, isSubject = true;
	      while (current.v) if ((current = current.n) === start) return;
	      points = current.z;
	      listener.lineStart();
	      do {
	        current.v = current.o.v = true;
	        if (current.e) {
	          if (isSubject) {
	            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);
	          } else {
	            interpolate(current.x, current.n.x, 1, listener);
	          }
	          current = current.n;
	        } else {
	          if (isSubject) {
	            points = current.p.z;
	            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);
	          } else {
	            interpolate(current.x, current.p.x, -1, listener);
	          }
	          current = current.p;
	        }
	        current = current.o;
	        points = current.z;
	        isSubject = !isSubject;
	      } while (!current.v);
	      listener.lineEnd();
	    }
	  }
	  function d3_geo_clipPolygonLinkCircular(array) {
	    if (!(n = array.length)) return;
	    var n, i = 0, a = array[0], b;
	    while (++i < n) {
	      a.n = b = array[i];
	      b.p = a;
	      a = b;
	    }
	    a.n = b = array[0];
	    b.p = a;
	  }
	  function d3_geo_clipPolygonIntersection(point, points, other, entry) {
	    this.x = point;
	    this.z = points;
	    this.o = other;
	    this.e = entry;
	    this.v = false;
	    this.n = this.p = null;
	  }
	  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {
	    return function(rotate, listener) {
	      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);
	      var clip = {
	        point: point,
	        lineStart: lineStart,
	        lineEnd: lineEnd,
	        polygonStart: function() {
	          clip.point = pointRing;
	          clip.lineStart = ringStart;
	          clip.lineEnd = ringEnd;
	          segments = [];
	          polygon = [];
	        },
	        polygonEnd: function() {
	          clip.point = point;
	          clip.lineStart = lineStart;
	          clip.lineEnd = lineEnd;
	          segments = d3.merge(segments);
	          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);
	          if (segments.length) {
	            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;
	            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);
	          } else if (clipStartInside) {
	            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;
	            listener.lineStart();
	            interpolate(null, null, 1, listener);
	            listener.lineEnd();
	          }
	          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;
	          segments = polygon = null;
	        },
	        sphere: function() {
	          listener.polygonStart();
	          listener.lineStart();
	          interpolate(null, null, 1, listener);
	          listener.lineEnd();
	          listener.polygonEnd();
	        }
	      };
	      function point(λ, φ) {
	        var point = rotate(λ, φ);
	        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);
	      }
	      function pointLine(λ, φ) {
	        var point = rotate(λ, φ);
	        line.point(point[0], point[1]);
	      }
	      function lineStart() {
	        clip.point = pointLine;
	        line.lineStart();
	      }
	      function lineEnd() {
	        clip.point = point;
	        line.lineEnd();
	      }
	      var segments;
	      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;
	      function pointRing(λ, φ) {
	        ring.push([ λ, φ ]);
	        var point = rotate(λ, φ);
	        ringListener.point(point[0], point[1]);
	      }
	      function ringStart() {
	        ringListener.lineStart();
	        ring = [];
	      }
	      function ringEnd() {
	        pointRing(ring[0][0], ring[0][1]);
	        ringListener.lineEnd();
	        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;
	        ring.pop();
	        polygon.push(ring);
	        ring = null;
	        if (!n) return;
	        if (clean & 1) {
	          segment = ringSegments[0];
	          var n = segment.length - 1, i = -1, point;
	          if (n > 0) {
	            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;
	            listener.lineStart();
	            while (++i < n) listener.point((point = segment[i])[0], point[1]);
	            listener.lineEnd();
	          }
	          return;
	        }
	        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));
	        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));
	      }
	      return clip;
	    };
	  }
	  function d3_geo_clipSegmentLength1(segment) {
	    return segment.length > 1;
	  }
	  function d3_geo_clipBufferListener() {
	    var lines = [], line;
	    return {
	      lineStart: function() {
	        lines.push(line = []);
	      },
	      point: function(λ, φ) {
	        line.push([ λ, φ ]);
	      },
	      lineEnd: d3_noop,
	      buffer: function() {
	        var buffer = lines;
	        lines = [];
	        line = null;
	        return buffer;
	      },
	      rejoin: function() {
	        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));
	      }
	    };
	  }
	  function d3_geo_clipSort(a, b) {
	    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);
	  }
	  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);
	  function d3_geo_clipAntimeridianLine(listener) {
	    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;
	    return {
	      lineStart: function() {
	        listener.lineStart();
	        clean = 1;
	      },
	      point: function(λ1, φ1) {
	        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);
	        if (abs(dλ - π) < ε) {
	          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);
	          listener.point(sλ0, φ0);
	          listener.lineEnd();
	          listener.lineStart();
	          listener.point(sλ1, φ0);
	          listener.point(λ1, φ0);
	          clean = 0;
	        } else if (sλ0 !== sλ1 && dλ >= π) {
	          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;
	          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;
	          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);
	          listener.point(sλ0, φ0);
	          listener.lineEnd();
	          listener.lineStart();
	          listener.point(sλ1, φ0);
	          clean = 0;
	        }
	        listener.point(λ0 = λ1, φ0 = φ1);
	        sλ0 = sλ1;
	      },
	      lineEnd: function() {
	        listener.lineEnd();
	        λ0 = φ0 = NaN;
	      },
	      clean: function() {
	        return 2 - clean;
	      }
	    };
	  }
	  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {
	    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);
	    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;
	  }
	  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {
	    var φ;
	    if (from == null) {
	      φ = direction * halfπ;
	      listener.point(-π, φ);
	      listener.point(0, φ);
	      listener.point(π, φ);
	      listener.point(π, 0);
	      listener.point(π, -φ);
	      listener.point(0, -φ);
	      listener.point(-π, -φ);
	      listener.point(-π, 0);
	      listener.point(-π, φ);
	    } else if (abs(from[0] - to[0]) > ε) {
	      var s = from[0] < to[0] ? π : -π;
	      φ = direction * s / 2;
	      listener.point(-s, φ);
	      listener.point(0, φ);
	      listener.point(s, φ);
	    } else {
	      listener.point(to[0], to[1]);
	    }
	  }
	  function d3_geo_pointInPolygon(point, polygon) {
	    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;
	    d3_geo_areaRingSum.reset();
	    for (var i = 0, n = polygon.length; i < n; ++i) {
	      var ring = polygon[i], m = ring.length;
	      if (!m) continue;
	      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;
	      while (true) {
	        if (j === m) j = 0;
	        point = ring[j];
	        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;
	        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));
	        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;
	        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {
	          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));
	          d3_geo_cartesianNormalize(arc);
	          var intersection = d3_geo_cartesianCross(meridianNormal, arc);
	          d3_geo_cartesianNormalize(intersection);
	          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);
	          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {
	            winding += antimeridian ^ dλ >= 0 ? 1 : -1;
	          }
	        }
	        if (!j++) break;
	        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;
	      }
	    }
	    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;
	  }
	  function d3_geo_clipCircle(radius) {
	    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);
	    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);
	    function visible(λ, φ) {
	      return Math.cos(λ) * Math.cos(φ) > cr;
	    }
	    function clipLine(listener) {
	      var point0, c0, v0, v00, clean;
	      return {
	        lineStart: function() {
	          v00 = v0 = false;
	          clean = 1;
	        },
	        point: function(λ, φ) {
	          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;
	          if (!point0 && (v00 = v0 = v)) listener.lineStart();
	          if (v !== v0) {
	            point2 = intersect(point0, point1);
	            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {
	              point1[0] += ε;
	              point1[1] += ε;
	              v = visible(point1[0], point1[1]);
	            }
	          }
	          if (v !== v0) {
	            clean = 0;
	            if (v) {
	              listener.lineStart();
	              point2 = intersect(point1, point0);
	              listener.point(point2[0], point2[1]);
	            } else {
	              point2 = intersect(point0, point1);
	              listener.point(point2[0], point2[1]);
	              listener.lineEnd();
	            }
	            point0 = point2;
	          } else if (notHemisphere && point0 && smallRadius ^ v) {
	            var t;
	            if (!(c & c0) && (t = intersect(point1, point0, true))) {
	              clean = 0;
	              if (smallRadius) {
	                listener.lineStart();
	                listener.point(t[0][0], t[0][1]);
	                listener.point(t[1][0], t[1][1]);
	                listener.lineEnd();
	              } else {
	                listener.point(t[1][0], t[1][1]);
	                listener.lineEnd();
	                listener.lineStart();
	                listener.point(t[0][0], t[0][1]);
	              }
	            }
	          }
	          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {
	            listener.point(point1[0], point1[1]);
	          }
	          point0 = point1, v0 = v, c0 = c;
	        },
	        lineEnd: function() {
	          if (v0) listener.lineEnd();
	          point0 = null;
	        },
	        clean: function() {
	          return clean | (v00 && v0) << 1;
	        }
	      };
	    }
	    function intersect(a, b, two) {
	      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);
	      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;
	      if (!determinant) return !two && a;
	      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);
	      d3_geo_cartesianAdd(A, B);
	      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);
	      if (t2 < 0) return;
	      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);
	      d3_geo_cartesianAdd(q, A);
	      q = d3_geo_spherical(q);
	      if (!two) return q;
	      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;
	      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;
	      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;
	      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;
	      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {
	        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);
	        d3_geo_cartesianAdd(q1, A);
	        return [ q, d3_geo_spherical(q1) ];
	      }
	    }
	    function code(λ, φ) {
	      var r = smallRadius ? radius : π - radius, code = 0;
	      if (λ < -r) code |= 1; else if (λ > r) code |= 2;
	      if (φ < -r) code |= 4; else if (φ > r) code |= 8;
	      return code;
	    }
	  }
	  function d3_geom_clipLine(x0, y0, x1, y1) {
	    return function(line) {
	      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;
	      r = x0 - ax;
	      if (!dx && r > 0) return;
	      r /= dx;
	      if (dx < 0) {
	        if (r < t0) return;
	        if (r < t1) t1 = r;
	      } else if (dx > 0) {
	        if (r > t1) return;
	        if (r > t0) t0 = r;
	      }
	      r = x1 - ax;
	      if (!dx && r < 0) return;
	      r /= dx;
	      if (dx < 0) {
	        if (r > t1) return;
	        if (r > t0) t0 = r;
	      } else if (dx > 0) {
	        if (r < t0) return;
	        if (r < t1) t1 = r;
	      }
	      r = y0 - ay;
	      if (!dy && r > 0) return;
	      r /= dy;
	      if (dy < 0) {
	        if (r < t0) return;
	        if (r < t1) t1 = r;
	      } else if (dy > 0) {
	        if (r > t1) return;
	        if (r > t0) t0 = r;
	      }
	      r = y1 - ay;
	      if (!dy && r < 0) return;
	      r /= dy;
	      if (dy < 0) {
	        if (r > t1) return;
	        if (r > t0) t0 = r;
	      } else if (dy > 0) {
	        if (r < t0) return;
	        if (r < t1) t1 = r;
	      }
	      if (t0 > 0) line.a = {
	        x: ax + t0 * dx,
	        y: ay + t0 * dy
	      };
	      if (t1 < 1) line.b = {
	        x: ax + t1 * dx,
	        y: ay + t1 * dy
	      };
	      return line;
	    };
	  }
	  var d3_geo_clipExtentMAX = 1e9;
	  d3.geo.clipExtent = function() {
	    var x0, y0, x1, y1, stream, clip, clipExtent = {
	      stream: function(output) {
	        if (stream) stream.valid = false;
	        stream = clip(output);
	        stream.valid = true;
	        return stream;
	      },
	      extent: function(_) {
	        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];
	        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);
	        if (stream) stream.valid = false, stream = null;
	        return clipExtent;
	      }
	    };
	    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);
	  };
	  function d3_geo_clipExtent(x0, y0, x1, y1) {
	    return function(listener) {
	      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;
	      var clip = {
	        point: point,
	        lineStart: lineStart,
	        lineEnd: lineEnd,
	        polygonStart: function() {
	          listener = bufferListener;
	          segments = [];
	          polygon = [];
	          clean = true;
	        },
	        polygonEnd: function() {
	          listener = listener_;
	          segments = d3.merge(segments);
	          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;
	          if (inside || visible) {
	            listener.polygonStart();
	            if (inside) {
	              listener.lineStart();
	              interpolate(null, null, 1, listener);
	              listener.lineEnd();
	            }
	            if (visible) {
	              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);
	            }
	            listener.polygonEnd();
	          }
	          segments = polygon = ring = null;
	        }
	      };
	      function insidePolygon(p) {
	        var wn = 0, n = polygon.length, y = p[1];
	        for (var i = 0; i < n; ++i) {
	          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {
	            b = v[j];
	            if (a[1] <= y) {
	              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;
	            } else {
	              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;
	            }
	            a = b;
	          }
	        }
	        return wn !== 0;
	      }
	      function interpolate(from, to, direction, listener) {
	        var a = 0, a1 = 0;
	        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {
	          do {
	            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);
	          } while ((a = (a + direction + 4) % 4) !== a1);
	        } else {
	          listener.point(to[0], to[1]);
	        }
	      }
	      function pointVisible(x, y) {
	        return x0 <= x && x <= x1 && y0 <= y && y <= y1;
	      }
	      function point(x, y) {
	        if (pointVisible(x, y)) listener.point(x, y);
	      }
	      var x__, y__, v__, x_, y_, v_, first, clean;
	      function lineStart() {
	        clip.point = linePoint;
	        if (polygon) polygon.push(ring = []);
	        first = true;
	        v_ = false;
	        x_ = y_ = NaN;
	      }
	      function lineEnd() {
	        if (segments) {
	          linePoint(x__, y__);
	          if (v__ && v_) bufferListener.rejoin();
	          segments.push(bufferListener.buffer());
	        }
	        clip.point = point;
	        if (v_) listener.lineEnd();
	      }
	      function linePoint(x, y) {
	        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));
	        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));
	        var v = pointVisible(x, y);
	        if (polygon) ring.push([ x, y ]);
	        if (first) {
	          x__ = x, y__ = y, v__ = v;
	          first = false;
	          if (v) {
	            listener.lineStart();
	            listener.point(x, y);
	          }
	        } else {
	          if (v && v_) listener.point(x, y); else {
	            var l = {
	              a: {
	                x: x_,
	                y: y_
	              },
	              b: {
	                x: x,
	                y: y
	              }
	            };
	            if (clipLine(l)) {
	              if (!v_) {
	                listener.lineStart();
	                listener.point(l.a.x, l.a.y);
	              }
	              listener.point(l.b.x, l.b.y);
	              if (!v) listener.lineEnd();
	              clean = false;
	            } else if (v) {
	              listener.lineStart();
	              listener.point(x, y);
	              clean = false;
	            }
	          }
	        }
	        x_ = x, y_ = y, v_ = v;
	      }
	      return clip;
	    };
	    function corner(p, direction) {
	      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;
	    }
	    function compare(a, b) {
	      return comparePoints(a.x, b.x);
	    }
	    function comparePoints(a, b) {
	      var ca = corner(a, 1), cb = corner(b, 1);
	      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];
	    }
	  }
	  function d3_geo_conic(projectAt) {
	    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);
	    p.parallels = function(_) {
	      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];
	      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);
	    };
	    return p;
	  }
	  function d3_geo_conicEqualArea(φ0, φ1) {
	    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;
	    function forward(λ, φ) {
	      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;
	      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];
	    }
	    forward.invert = function(x, y) {
	      var ρ0_y = ρ0 - y;
	      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];
	    };
	    return forward;
	  }
	  (d3.geo.conicEqualArea = function() {
	    return d3_geo_conic(d3_geo_conicEqualArea);
	  }).raw = d3_geo_conicEqualArea;
	  d3.geo.albers = function() {
	    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);
	  };
	  d3.geo.albersUsa = function() {
	    var lower48 = d3.geo.albers();
	    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);
	    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);
	    var point, pointStream = {
	      point: function(x, y) {
	        point = [ x, y ];
	      }
	    }, lower48Point, alaskaPoint, hawaiiPoint;
	    function albersUsa(coordinates) {
	      var x = coordinates[0], y = coordinates[1];
	      point = null;
	      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);
	      return point;
	    }
	    albersUsa.invert = function(coordinates) {
	      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;
	      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);
	    };
	    albersUsa.stream = function(stream) {
	      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);
	      return {
	        point: function(x, y) {
	          lower48Stream.point(x, y);
	          alaskaStream.point(x, y);
	          hawaiiStream.point(x, y);
	        },
	        sphere: function() {
	          lower48Stream.sphere();
	          alaskaStream.sphere();
	          hawaiiStream.sphere();
	        },
	        lineStart: function() {
	          lower48Stream.lineStart();
	          alaskaStream.lineStart();
	          hawaiiStream.lineStart();
	        },
	        lineEnd: function() {
	          lower48Stream.lineEnd();
	          alaskaStream.lineEnd();
	          hawaiiStream.lineEnd();
	        },
	        polygonStart: function() {
	          lower48Stream.polygonStart();
	          alaskaStream.polygonStart();
	          hawaiiStream.polygonStart();
	        },
	        polygonEnd: function() {
	          lower48Stream.polygonEnd();
	          alaskaStream.polygonEnd();
	          hawaiiStream.polygonEnd();
	        }
	      };
	    };
	    albersUsa.precision = function(_) {
	      if (!arguments.length) return lower48.precision();
	      lower48.precision(_);
	      alaska.precision(_);
	      hawaii.precision(_);
	      return albersUsa;
	    };
	    albersUsa.scale = function(_) {
	      if (!arguments.length) return lower48.scale();
	      lower48.scale(_);
	      alaska.scale(_ * .35);
	      hawaii.scale(_);
	      return albersUsa.translate(lower48.translate());
	    };
	    albersUsa.translate = function(_) {
	      if (!arguments.length) return lower48.translate();
	      var k = lower48.scale(), x = +_[0], y = +_[1];
	      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;
	      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;
	      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;
	      return albersUsa;
	    };
	    return albersUsa.scale(1070);
	  };
	  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {
	    point: d3_noop,
	    lineStart: d3_noop,
	    lineEnd: d3_noop,
	    polygonStart: function() {
	      d3_geo_pathAreaPolygon = 0;
	      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;
	    },
	    polygonEnd: function() {
	      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;
	      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);
	    }
	  };
	  function d3_geo_pathAreaRingStart() {
	    var x00, y00, x0, y0;
	    d3_geo_pathArea.point = function(x, y) {
	      d3_geo_pathArea.point = nextPoint;
	      x00 = x0 = x, y00 = y0 = y;
	    };
	    function nextPoint(x, y) {
	      d3_geo_pathAreaPolygon += y0 * x - x0 * y;
	      x0 = x, y0 = y;
	    }
	    d3_geo_pathArea.lineEnd = function() {
	      nextPoint(x00, y00);
	    };
	  }
	  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;
	  var d3_geo_pathBounds = {
	    point: d3_geo_pathBoundsPoint,
	    lineStart: d3_noop,
	    lineEnd: d3_noop,
	    polygonStart: d3_noop,
	    polygonEnd: d3_noop
	  };
	  function d3_geo_pathBoundsPoint(x, y) {
	    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;
	    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;
	    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;
	    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;
	  }
	  function d3_geo_pathBuffer() {
	    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];
	    var stream = {
	      point: point,
	      lineStart: function() {
	        stream.point = pointLineStart;
	      },
	      lineEnd: lineEnd,
	      polygonStart: function() {
	        stream.lineEnd = lineEndPolygon;
	      },
	      polygonEnd: function() {
	        stream.lineEnd = lineEnd;
	        stream.point = point;
	      },
	      pointRadius: function(_) {
	        pointCircle = d3_geo_pathBufferCircle(_);
	        return stream;
	      },
	      result: function() {
	        if (buffer.length) {
	          var result = buffer.join("");
	          buffer = [];
	          return result;
	        }
	      }
	    };
	    function point(x, y) {
	      buffer.push("M", x, ",", y, pointCircle);
	    }
	    function pointLineStart(x, y) {
	      buffer.push("M", x, ",", y);
	      stream.point = pointLine;
	    }
	    function pointLine(x, y) {
	      buffer.push("L", x, ",", y);
	    }
	    function lineEnd() {
	      stream.point = point;
	    }
	    function lineEndPolygon() {
	      buffer.push("Z");
	    }
	    return stream;
	  }
	  function d3_geo_pathBufferCircle(radius) {
	    return "m0," + radius + "a" + radius + "," + radius + " 0 1,1 0," + -2 * radius + "a" + radius + "," + radius + " 0 1,1 0," + 2 * radius + "z";
	  }
	  var d3_geo_pathCentroid = {
	    point: d3_geo_pathCentroidPoint,
	    lineStart: d3_geo_pathCentroidLineStart,
	    lineEnd: d3_geo_pathCentroidLineEnd,
	    polygonStart: function() {
	      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;
	    },
	    polygonEnd: function() {
	      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;
	      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;
	      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;
	    }
	  };
	  function d3_geo_pathCentroidPoint(x, y) {
	    d3_geo_centroidX0 += x;
	    d3_geo_centroidY0 += y;
	    ++d3_geo_centroidZ0;
	  }
	  function d3_geo_pathCentroidLineStart() {
	    var x0, y0;
	    d3_geo_pathCentroid.point = function(x, y) {
	      d3_geo_pathCentroid.point = nextPoint;
	      d3_geo_pathCentroidPoint(x0 = x, y0 = y);
	    };
	    function nextPoint(x, y) {
	      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);
	      d3_geo_centroidX1 += z * (x0 + x) / 2;
	      d3_geo_centroidY1 += z * (y0 + y) / 2;
	      d3_geo_centroidZ1 += z;
	      d3_geo_pathCentroidPoint(x0 = x, y0 = y);
	    }
	  }
	  function d3_geo_pathCentroidLineEnd() {
	    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;
	  }
	  function d3_geo_pathCentroidRingStart() {
	    var x00, y00, x0, y0;
	    d3_geo_pathCentroid.point = function(x, y) {
	      d3_geo_pathCentroid.point = nextPoint;
	      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);
	    };
	    function nextPoint(x, y) {
	      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);
	      d3_geo_centroidX1 += z * (x0 + x) / 2;
	      d3_geo_centroidY1 += z * (y0 + y) / 2;
	      d3_geo_centroidZ1 += z;
	      z = y0 * x - x0 * y;
	      d3_geo_centroidX2 += z * (x0 + x);
	      d3_geo_centroidY2 += z * (y0 + y);
	      d3_geo_centroidZ2 += z * 3;
	      d3_geo_pathCentroidPoint(x0 = x, y0 = y);
	    }
	    d3_geo_pathCentroid.lineEnd = function() {
	      nextPoint(x00, y00);
	    };
	  }
	  function d3_geo_pathContext(context) {
	    var pointRadius = 4.5;
	    var stream = {
	      point: point,
	      lineStart: function() {
	        stream.point = pointLineStart;
	      },
	      lineEnd: lineEnd,
	      polygonStart: function() {
	        stream.lineEnd = lineEndPolygon;
	      },
	      polygonEnd: function() {
	        stream.lineEnd = lineEnd;
	        stream.point = point;
	      },
	      pointRadius: function(_) {
	        pointRadius = _;
	        return stream;
	      },
	      result: d3_noop
	    };
	    function point(x, y) {
	      context.moveTo(x + pointRadius, y);
	      context.arc(x, y, pointRadius, 0, τ);
	    }
	    function pointLineStart(x, y) {
	      context.moveTo(x, y);
	      stream.point = pointLine;
	    }
	    function pointLine(x, y) {
	      context.lineTo(x, y);
	    }
	    function lineEnd() {
	      stream.point = point;
	    }
	    function lineEndPolygon() {
	      context.closePath();
	    }
	    return stream;
	  }
	  function d3_geo_resample(project) {
	    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;
	    function resample(stream) {
	      return (maxDepth ? resampleRecursive : resampleNone)(stream);
	    }
	    function resampleNone(stream) {
	      return d3_geo_transformPoint(stream, function(x, y) {
	        x = project(x, y);
	        stream.point(x[0], x[1]);
	      });
	    }
	    function resampleRecursive(stream) {
	      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;
	      var resample = {
	        point: point,
	        lineStart: lineStart,
	        lineEnd: lineEnd,
	        polygonStart: function() {
	          stream.polygonStart();
	          resample.lineStart = ringStart;
	        },
	        polygonEnd: function() {
	          stream.polygonEnd();
	          resample.lineStart = lineStart;
	        }
	      };
	      function point(x, y) {
	        x = project(x, y);
	        stream.point(x[0], x[1]);
	      }
	      function lineStart() {
	        x0 = NaN;
	        resample.point = linePoint;
	        stream.lineStart();
	      }
	      function linePoint(λ, φ) {
	        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);
	        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);
	        stream.point(x0, y0);
	      }
	      function lineEnd() {
	        resample.point = point;
	        stream.lineEnd();
	      }
	      function ringStart() {
	        lineStart();
	        resample.point = ringPoint;
	        resample.lineEnd = ringEnd;
	      }
	      function ringPoint(λ, φ) {
	        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;
	        resample.point = linePoint;
	      }
	      function ringEnd() {
	        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);
	        resample.lineEnd = lineEnd;
	        lineEnd();
	      }
	      return resample;
	    }
	    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {
	      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;
	      if (d2 > 4 * δ2 && depth--) {
	        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;
	        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {
	          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);
	          stream.point(x2, y2);
	          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);
	        }
	      }
	    }
	    resample.precision = function(_) {
	      if (!arguments.length) return Math.sqrt(δ2);
	      maxDepth = (δ2 = _ * _) > 0 && 16;
	      return resample;
	    };
	    return resample;
	  }
	  d3.geo.path = function() {
	    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;
	    function path(object) {
	      if (object) {
	        if (typeof pointRadius === "function") contextStream.pointRadius(+pointRadius.apply(this, arguments));
	        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);
	        d3.geo.stream(object, cacheStream);
	      }
	      return contextStream.result();
	    }
	    path.area = function(object) {
	      d3_geo_pathAreaSum = 0;
	      d3.geo.stream(object, projectStream(d3_geo_pathArea));
	      return d3_geo_pathAreaSum;
	    };
	    path.centroid = function(object) {
	      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;
	      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));
	      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];
	    };
	    path.bounds = function(object) {
	      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);
	      d3.geo.stream(object, projectStream(d3_geo_pathBounds));
	      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];
	    };
	    path.projection = function(_) {
	      if (!arguments.length) return projection;
	      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;
	      return reset();
	    };
	    path.context = function(_) {
	      if (!arguments.length) return context;
	      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);
	      if (typeof pointRadius !== "function") contextStream.pointRadius(pointRadius);
	      return reset();
	    };
	    path.pointRadius = function(_) {
	      if (!arguments.length) return pointRadius;
	      pointRadius = typeof _ === "function" ? _ : (contextStream.pointRadius(+_), +_);
	      return path;
	    };
	    function reset() {
	      cacheStream = null;
	      return path;
	    }
	    return path.projection(d3.geo.albersUsa()).context(null);
	  };
	  function d3_geo_pathProjectStream(project) {
	    var resample = d3_geo_resample(function(x, y) {
	      return project([ x * d3_degrees, y * d3_degrees ]);
	    });
	    return function(stream) {
	      return d3_geo_projectionRadians(resample(stream));
	    };
	  }
	  d3.geo.transform = function(methods) {
	    return {
	      stream: function(stream) {
	        var transform = new d3_geo_transform(stream);
	        for (var k in methods) transform[k] = methods[k];
	        return transform;
	      }
	    };
	  };
	  function d3_geo_transform(stream) {
	    this.stream = stream;
	  }
	  d3_geo_transform.prototype = {
	    point: function(x, y) {
	      this.stream.point(x, y);
	    },
	    sphere: function() {
	      this.stream.sphere();
	    },
	    lineStart: function() {
	      this.stream.lineStart();
	    },
	    lineEnd: function() {
	      this.stream.lineEnd();
	    },
	    polygonStart: function() {
	      this.stream.polygonStart();
	    },
	    polygonEnd: function() {
	      this.stream.polygonEnd();
	    }
	  };
	  function d3_geo_transformPoint(stream, point) {
	    return {
	      point: point,
	      sphere: function() {
	        stream.sphere();
	      },
	      lineStart: function() {
	        stream.lineStart();
	      },
	      lineEnd: function() {
	        stream.lineEnd();
	      },
	      polygonStart: function() {
	        stream.polygonStart();
	      },
	      polygonEnd: function() {
	        stream.polygonEnd();
	      }
	    };
	  }
	  d3.geo.projection = d3_geo_projection;
	  d3.geo.projectionMutator = d3_geo_projectionMutator;
	  function d3_geo_projection(project) {
	    return d3_geo_projectionMutator(function() {
	      return project;
	    })();
	  }
	  function d3_geo_projectionMutator(projectAt) {
	    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {
	      x = project(x, y);
	      return [ x[0] * k + δx, δy - x[1] * k ];
	    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;
	    function projection(point) {
	      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);
	      return [ point[0] * k + δx, δy - point[1] * k ];
	    }
	    function invert(point) {
	      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);
	      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];
	    }
	    projection.stream = function(output) {
	      if (stream) stream.valid = false;
	      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));
	      stream.valid = true;
	      return stream;
	    };
	    projection.clipAngle = function(_) {
	      if (!arguments.length) return clipAngle;
	      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);
	      return invalidate();
	    };
	    projection.clipExtent = function(_) {
	      if (!arguments.length) return clipExtent;
	      clipExtent = _;
	      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;
	      return invalidate();
	    };
	    projection.scale = function(_) {
	      if (!arguments.length) return k;
	      k = +_;
	      return reset();
	    };
	    projection.translate = function(_) {
	      if (!arguments.length) return [ x, y ];
	      x = +_[0];
	      y = +_[1];
	      return reset();
	    };
	    projection.center = function(_) {
	      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];
	      λ = _[0] % 360 * d3_radians;
	      φ = _[1] % 360 * d3_radians;
	      return reset();
	    };
	    projection.rotate = function(_) {
	      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];
	      δλ = _[0] % 360 * d3_radians;
	      δφ = _[1] % 360 * d3_radians;
	      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;
	      return reset();
	    };
	    d3.rebind(projection, projectResample, "precision");
	    function reset() {
	      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);
	      var center = project(λ, φ);
	      δx = x - center[0] * k;
	      δy = y + center[1] * k;
	      return invalidate();
	    }
	    function invalidate() {
	      if (stream) stream.valid = false, stream = null;
	      return projection;
	    }
	    return function() {
	      project = projectAt.apply(this, arguments);
	      projection.invert = project.invert && invert;
	      return reset();
	    };
	  }
	  function d3_geo_projectionRadians(stream) {
	    return d3_geo_transformPoint(stream, function(x, y) {
	      stream.point(x * d3_radians, y * d3_radians);
	    });
	  }
	  function d3_geo_equirectangular(λ, φ) {
	    return [ λ, φ ];
	  }
	  (d3.geo.equirectangular = function() {
	    return d3_geo_projection(d3_geo_equirectangular);
	  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;
	  d3.geo.rotation = function(rotate) {
	    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);
	    function forward(coordinates) {
	      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);
	      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;
	    }
	    forward.invert = function(coordinates) {
	      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);
	      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;
	    };
	    return forward;
	  };
	  function d3_geo_identityRotation(λ, φ) {
	    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];
	  }
	  d3_geo_identityRotation.invert = d3_geo_equirectangular;
	  function d3_geo_rotation(δλ, δφ, δγ) {
	    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;
	  }
	  function d3_geo_forwardRotationλ(δλ) {
	    return function(λ, φ) {
	      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];
	    };
	  }
	  function d3_geo_rotationλ(δλ) {
	    var rotation = d3_geo_forwardRotationλ(δλ);
	    rotation.invert = d3_geo_forwardRotationλ(-δλ);
	    return rotation;
	  }
	  function d3_geo_rotationφγ(δφ, δγ) {
	    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);
	    function rotation(λ, φ) {
	      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;
	      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];
	    }
	    rotation.invert = function(λ, φ) {
	      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;
	      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];
	    };
	    return rotation;
	  }
	  d3.geo.circle = function() {
	    var origin = [ 0, 0 ], angle, precision = 6, interpolate;
	    function circle() {
	      var center = typeof origin === "function" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];
	      interpolate(null, null, 1, {
	        point: function(x, y) {
	          ring.push(x = rotate(x, y));
	          x[0] *= d3_degrees, x[1] *= d3_degrees;
	        }
	      });
	      return {
	        type: "Polygon",
	        coordinates: [ ring ]
	      };
	    }
	    circle.origin = function(x) {
	      if (!arguments.length) return origin;
	      origin = x;
	      return circle;
	    };
	    circle.angle = function(x) {
	      if (!arguments.length) return angle;
	      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);
	      return circle;
	    };
	    circle.precision = function(_) {
	      if (!arguments.length) return precision;
	      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);
	      return circle;
	    };
	    return circle.angle(90);
	  };
	  function d3_geo_circleInterpolate(radius, precision) {
	    var cr = Math.cos(radius), sr = Math.sin(radius);
	    return function(from, to, direction, listener) {
	      var step = direction * precision;
	      if (from != null) {
	        from = d3_geo_circleAngle(cr, from);
	        to = d3_geo_circleAngle(cr, to);
	        if (direction > 0 ? from < to : from > to) from += direction * τ;
	      } else {
	        from = radius + direction * τ;
	        to = radius - .5 * step;
	      }
	      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {
	        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);
	      }
	    };
	  }
	  function d3_geo_circleAngle(cr, point) {
	    var a = d3_geo_cartesian(point);
	    a[0] -= cr;
	    d3_geo_cartesianNormalize(a);
	    var angle = d3_acos(-a[1]);
	    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);
	  }
	  d3.geo.distance = function(a, b) {
	    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;
	    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);
	  };
	  d3.geo.graticule = function() {
	    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;
	    function graticule() {
	      return {
	        type: "MultiLineString",
	        coordinates: lines()
	      };
	    }
	    function lines() {
	      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {
	        return abs(x % DX) > ε;
	      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {
	        return abs(y % DY) > ε;
	      }).map(y));
	    }
	    graticule.lines = function() {
	      return lines().map(function(coordinates) {
	        return {
	          type: "LineString",
	          coordinates: coordinates
	        };
	      });
	    };
	    graticule.outline = function() {
	      return {
	        type: "Polygon",
	        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]
	      };
	    };
	    graticule.extent = function(_) {
	      if (!arguments.length) return graticule.minorExtent();
	      return graticule.majorExtent(_).minorExtent(_);
	    };
	    graticule.majorExtent = function(_) {
	      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];
	      X0 = +_[0][0], X1 = +_[1][0];
	      Y0 = +_[0][1], Y1 = +_[1][1];
	      if (X0 > X1) _ = X0, X0 = X1, X1 = _;
	      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;
	      return graticule.precision(precision);
	    };
	    graticule.minorExtent = function(_) {
	      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];
	      x0 = +_[0][0], x1 = +_[1][0];
	      y0 = +_[0][1], y1 = +_[1][1];
	      if (x0 > x1) _ = x0, x0 = x1, x1 = _;
	      if (y0 > y1) _ = y0, y0 = y1, y1 = _;
	      return graticule.precision(precision);
	    };
	    graticule.step = function(_) {
	      if (!arguments.length) return graticule.minorStep();
	      return graticule.majorStep(_).minorStep(_);
	    };
	    graticule.majorStep = function(_) {
	      if (!arguments.length) return [ DX, DY ];
	      DX = +_[0], DY = +_[1];
	      return graticule;
	    };
	    graticule.minorStep = function(_) {
	      if (!arguments.length) return [ dx, dy ];
	      dx = +_[0], dy = +_[1];
	      return graticule;
	    };
	    graticule.precision = function(_) {
	      if (!arguments.length) return precision;
	      precision = +_;
	      x = d3_geo_graticuleX(y0, y1, 90);
	      y = d3_geo_graticuleY(x0, x1, precision);
	      X = d3_geo_graticuleX(Y0, Y1, 90);
	      Y = d3_geo_graticuleY(X0, X1, precision);
	      return graticule;
	    };
	    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);
	  };
	  function d3_geo_graticuleX(y0, y1, dy) {
	    var y = d3.range(y0, y1 - ε, dy).concat(y1);
	    return function(x) {
	      return y.map(function(y) {
	        return [ x, y ];
	      });
	    };
	  }
	  function d3_geo_graticuleY(x0, x1, dx) {
	    var x = d3.range(x0, x1 - ε, dx).concat(x1);
	    return function(y) {
	      return x.map(function(x) {
	        return [ x, y ];
	      });
	    };
	  }
	  function d3_source(d) {
	    return d.source;
	  }
	  function d3_target(d) {
	    return d.target;
	  }
	  d3.geo.greatArc = function() {
	    var source = d3_source, source_, target = d3_target, target_;
	    function greatArc() {
	      return {
	        type: "LineString",
	        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]
	      };
	    }
	    greatArc.distance = function() {
	      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));
	    };
	    greatArc.source = function(_) {
	      if (!arguments.length) return source;
	      source = _, source_ = typeof _ === "function" ? null : _;
	      return greatArc;
	    };
	    greatArc.target = function(_) {
	      if (!arguments.length) return target;
	      target = _, target_ = typeof _ === "function" ? null : _;
	      return greatArc;
	    };
	    greatArc.precision = function() {
	      return arguments.length ? greatArc : 0;
	    };
	    return greatArc;
	  };
	  d3.geo.interpolate = function(source, target) {
	    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);
	  };
	  function d3_geo_interpolate(x0, y0, x1, y1) {
	    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);
	    var interpolate = d ? function(t) {
	      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;
	      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];
	    } : function() {
	      return [ x0 * d3_degrees, y0 * d3_degrees ];
	    };
	    interpolate.distance = d;
	    return interpolate;
	  }
	  d3.geo.length = function(object) {
	    d3_geo_lengthSum = 0;
	    d3.geo.stream(object, d3_geo_length);
	    return d3_geo_lengthSum;
	  };
	  var d3_geo_lengthSum;
	  var d3_geo_length = {
	    sphere: d3_noop,
	    point: d3_noop,
	    lineStart: d3_geo_lengthLineStart,
	    lineEnd: d3_noop,
	    polygonStart: d3_noop,
	    polygonEnd: d3_noop
	  };
	  function d3_geo_lengthLineStart() {
	    var λ0, sinφ0, cosφ0;
	    d3_geo_length.point = function(λ, φ) {
	      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);
	      d3_geo_length.point = nextPoint;
	    };
	    d3_geo_length.lineEnd = function() {
	      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;
	    };
	    function nextPoint(λ, φ) {
	      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);
	      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);
	      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;
	    }
	  }
	  function d3_geo_azimuthal(scale, angle) {
	    function azimuthal(λ, φ) {
	      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);
	      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];
	    }
	    azimuthal.invert = function(x, y) {
	      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);
	      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];
	    };
	    return azimuthal;
	  }
	  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {
	    return Math.sqrt(2 / (1 + cosλcosφ));
	  }, function(ρ) {
	    return 2 * Math.asin(ρ / 2);
	  });
	  (d3.geo.azimuthalEqualArea = function() {
	    return d3_geo_projection(d3_geo_azimuthalEqualArea);
	  }).raw = d3_geo_azimuthalEqualArea;
	  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {
	    var c = Math.acos(cosλcosφ);
	    return c && c / Math.sin(c);
	  }, d3_identity);
	  (d3.geo.azimuthalEquidistant = function() {
	    return d3_geo_projection(d3_geo_azimuthalEquidistant);
	  }).raw = d3_geo_azimuthalEquidistant;
	  function d3_geo_conicConformal(φ0, φ1) {
	    var cosφ0 = Math.cos(φ0), t = function(φ) {
	      return Math.tan(π / 4 + φ / 2);
	    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;
	    if (!n) return d3_geo_mercator;
	    function forward(λ, φ) {
	      if (F > 0) {
	        if (φ < -halfπ + ε) φ = -halfπ + ε;
	      } else {
	        if (φ > halfπ - ε) φ = halfπ - ε;
	      }
	      var ρ = F / Math.pow(t(φ), n);
	      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];
	    }
	    forward.invert = function(x, y) {
	      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);
	      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];
	    };
	    return forward;
	  }
	  (d3.geo.conicConformal = function() {
	    return d3_geo_conic(d3_geo_conicConformal);
	  }).raw = d3_geo_conicConformal;
	  function d3_geo_conicEquidistant(φ0, φ1) {
	    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;
	    if (abs(n) < ε) return d3_geo_equirectangular;
	    function forward(λ, φ) {
	      var ρ = G - φ;
	      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];
	    }
	    forward.invert = function(x, y) {
	      var ρ0_y = G - y;
	      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];
	    };
	    return forward;
	  }
	  (d3.geo.conicEquidistant = function() {
	    return d3_geo_conic(d3_geo_conicEquidistant);
	  }).raw = d3_geo_conicEquidistant;
	  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {
	    return 1 / cosλcosφ;
	  }, Math.atan);
	  (d3.geo.gnomonic = function() {
	    return d3_geo_projection(d3_geo_gnomonic);
	  }).raw = d3_geo_gnomonic;
	  function d3_geo_mercator(λ, φ) {
	    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];
	  }
	  d3_geo_mercator.invert = function(x, y) {
	    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];
	  };
	  function d3_geo_mercatorProjection(project) {
	    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;
	    m.scale = function() {
	      var v = scale.apply(m, arguments);
	      return v === m ? clipAuto ? m.clipExtent(null) : m : v;
	    };
	    m.translate = function() {
	      var v = translate.apply(m, arguments);
	      return v === m ? clipAuto ? m.clipExtent(null) : m : v;
	    };
	    m.clipExtent = function(_) {
	      var v = clipExtent.apply(m, arguments);
	      if (v === m) {
	        if (clipAuto = _ == null) {
	          var k = π * scale(), t = translate();
	          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);
	        }
	      } else if (clipAuto) {
	        v = null;
	      }
	      return v;
	    };
	    return m.clipExtent(null);
	  }
	  (d3.geo.mercator = function() {
	    return d3_geo_mercatorProjection(d3_geo_mercator);
	  }).raw = d3_geo_mercator;
	  var d3_geo_orthographic = d3_geo_azimuthal(function() {
	    return 1;
	  }, Math.asin);
	  (d3.geo.orthographic = function() {
	    return d3_geo_projection(d3_geo_orthographic);
	  }).raw = d3_geo_orthographic;
	  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {
	    return 1 / (1 + cosλcosφ);
	  }, function(ρ) {
	    return 2 * Math.atan(ρ);
	  });
	  (d3.geo.stereographic = function() {
	    return d3_geo_projection(d3_geo_stereographic);
	  }).raw = d3_geo_stereographic;
	  function d3_geo_transverseMercator(λ, φ) {
	    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];
	  }
	  d3_geo_transverseMercator.invert = function(x, y) {
	    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];
	  };
	  (d3.geo.transverseMercator = function() {
	    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;
	    projection.center = function(_) {
	      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);
	    };
	    projection.rotate = function(_) {
	      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), 
	      [ _[0], _[1], _[2] - 90 ]);
	    };
	    return rotate([ 0, 0, 90 ]);
	  }).raw = d3_geo_transverseMercator;
	  d3.geom = {};
	  function d3_geom_pointX(d) {
	    return d[0];
	  }
	  function d3_geom_pointY(d) {
	    return d[1];
	  }
	  d3.geom.hull = function(vertices) {
	    var x = d3_geom_pointX, y = d3_geom_pointY;
	    if (arguments.length) return hull(vertices);
	    function hull(data) {
	      if (data.length < 3) return [];
	      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];
	      for (i = 0; i < n; i++) {
	        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);
	      }
	      points.sort(d3_geom_hullOrder);
	      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);
	      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);
	      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];
	      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);
	      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);
	      return polygon;
	    }
	    hull.x = function(_) {
	      return arguments.length ? (x = _, hull) : x;
	    };
	    hull.y = function(_) {
	      return arguments.length ? (y = _, hull) : y;
	    };
	    return hull;
	  };
	  function d3_geom_hullUpper(points) {
	    var n = points.length, hull = [ 0, 1 ], hs = 2;
	    for (var i = 2; i < n; i++) {
	      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;
	      hull[hs++] = i;
	    }
	    return hull.slice(0, hs);
	  }
	  function d3_geom_hullOrder(a, b) {
	    return a[0] - b[0] || a[1] - b[1];
	  }
	  d3.geom.polygon = function(coordinates) {
	    d3_subclass(coordinates, d3_geom_polygonPrototype);
	    return coordinates;
	  };
	  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];
	  d3_geom_polygonPrototype.area = function() {
	    var i = -1, n = this.length, a, b = this[n - 1], area = 0;
	    while (++i < n) {
	      a = b;
	      b = this[i];
	      area += a[1] * b[0] - a[0] * b[1];
	    }
	    return area * .5;
	  };
	  d3_geom_polygonPrototype.centroid = function(k) {
	    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;
	    if (!arguments.length) k = -1 / (6 * this.area());
	    while (++i < n) {
	      a = b;
	      b = this[i];
	      c = a[0] * b[1] - b[0] * a[1];
	      x += (a[0] + b[0]) * c;
	      y += (a[1] + b[1]) * c;
	    }
	    return [ x * k, y * k ];
	  };
	  d3_geom_polygonPrototype.clip = function(subject) {
	    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;
	    while (++i < n) {
	      input = subject.slice();
	      subject.length = 0;
	      b = this[i];
	      c = input[(m = input.length - closed) - 1];
	      j = -1;
	      while (++j < m) {
	        d = input[j];
	        if (d3_geom_polygonInside(d, a, b)) {
	          if (!d3_geom_polygonInside(c, a, b)) {
	            subject.push(d3_geom_polygonIntersect(c, d, a, b));
	          }
	          subject.push(d);
	        } else if (d3_geom_polygonInside(c, a, b)) {
	          subject.push(d3_geom_polygonIntersect(c, d, a, b));
	        }
	        c = d;
	      }
	      if (closed) subject.push(subject[0]);
	      a = b;
	    }
	    return subject;
	  };
	  function d3_geom_polygonInside(p, a, b) {
	    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);
	  }
	  function d3_geom_polygonIntersect(c, d, a, b) {
	    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);
	    return [ x1 + ua * x21, y1 + ua * y21 ];
	  }
	  function d3_geom_polygonClosed(coordinates) {
	    var a = coordinates[0], b = coordinates[coordinates.length - 1];
	    return !(a[0] - b[0] || a[1] - b[1]);
	  }
	  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];
	  function d3_geom_voronoiBeach() {
	    d3_geom_voronoiRedBlackNode(this);
	    this.edge = this.site = this.circle = null;
	  }
	  function d3_geom_voronoiCreateBeach(site) {
	    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();
	    beach.site = site;
	    return beach;
	  }
	  function d3_geom_voronoiDetachBeach(beach) {
	    d3_geom_voronoiDetachCircle(beach);
	    d3_geom_voronoiBeaches.remove(beach);
	    d3_geom_voronoiBeachPool.push(beach);
	    d3_geom_voronoiRedBlackNode(beach);
	  }
	  function d3_geom_voronoiRemoveBeach(beach) {
	    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {
	      x: x,
	      y: y
	    }, previous = beach.P, next = beach.N, disappearing = [ beach ];
	    d3_geom_voronoiDetachBeach(beach);
	    var lArc = previous;
	    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {
	      previous = lArc.P;
	      disappearing.unshift(lArc);
	      d3_geom_voronoiDetachBeach(lArc);
	      lArc = previous;
	    }
	    disappearing.unshift(lArc);
	    d3_geom_voronoiDetachCircle(lArc);
	    var rArc = next;
	    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {
	      next = rArc.N;
	      disappearing.push(rArc);
	      d3_geom_voronoiDetachBeach(rArc);
	      rArc = next;
	    }
	    disappearing.push(rArc);
	    d3_geom_voronoiDetachCircle(rArc);
	    var nArcs = disappearing.length, iArc;
	    for (iArc = 1; iArc < nArcs; ++iArc) {
	      rArc = disappearing[iArc];
	      lArc = disappearing[iArc - 1];
	      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);
	    }
	    lArc = disappearing[0];
	    rArc = disappearing[nArcs - 1];
	    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);
	    d3_geom_voronoiAttachCircle(lArc);
	    d3_geom_voronoiAttachCircle(rArc);
	  }
	  function d3_geom_voronoiAddBeach(site) {
	    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;
	    while (node) {
	      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;
	      if (dxl > ε) node = node.L; else {
	        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);
	        if (dxr > ε) {
	          if (!node.R) {
	            lArc = node;
	            break;
	          }
	          node = node.R;
	        } else {
	          if (dxl > -ε) {
	            lArc = node.P;
	            rArc = node;
	          } else if (dxr > -ε) {
	            lArc = node;
	            rArc = node.N;
	          } else {
	            lArc = rArc = node;
	          }
	          break;
	        }
	      }
	    }
	    var newArc = d3_geom_voronoiCreateBeach(site);
	    d3_geom_voronoiBeaches.insert(lArc, newArc);
	    if (!lArc && !rArc) return;
	    if (lArc === rArc) {
	      d3_geom_voronoiDetachCircle(lArc);
	      rArc = d3_geom_voronoiCreateBeach(lArc.site);
	      d3_geom_voronoiBeaches.insert(newArc, rArc);
	      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);
	      d3_geom_voronoiAttachCircle(lArc);
	      d3_geom_voronoiAttachCircle(rArc);
	      return;
	    }
	    if (!rArc) {
	      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);
	      return;
	    }
	    d3_geom_voronoiDetachCircle(lArc);
	    d3_geom_voronoiDetachCircle(rArc);
	    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {
	      x: (cy * hb - by * hc) / d + ax,
	      y: (bx * hc - cx * hb) / d + ay
	    };
	    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);
	    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);
	    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);
	    d3_geom_voronoiAttachCircle(lArc);
	    d3_geom_voronoiAttachCircle(rArc);
	  }
	  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {
	    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;
	    if (!pby2) return rfocx;
	    var lArc = arc.P;
	    if (!lArc) return -Infinity;
	    site = lArc.site;
	    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;
	    if (!plby2) return lfocx;
	    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;
	    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;
	    return (rfocx + lfocx) / 2;
	  }
	  function d3_geom_voronoiRightBreakPoint(arc, directrix) {
	    var rArc = arc.N;
	    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);
	    var site = arc.site;
	    return site.y === directrix ? site.x : Infinity;
	  }
	  function d3_geom_voronoiCell(site) {
	    this.site = site;
	    this.edges = [];
	  }
	  d3_geom_voronoiCell.prototype.prepare = function() {
	    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;
	    while (iHalfEdge--) {
	      edge = halfEdges[iHalfEdge].edge;
	      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);
	    }
	    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);
	    return halfEdges.length;
	  };
	  function d3_geom_voronoiCloseCells(extent) {
	    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;
	    while (iCell--) {
	      cell = cells[iCell];
	      if (!cell || !cell.prepare()) continue;
	      halfEdges = cell.edges;
	      nHalfEdges = halfEdges.length;
	      iHalfEdge = 0;
	      while (iHalfEdge < nHalfEdges) {
	        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;
	        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;
	        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {
	          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {
	            x: x0,
	            y: abs(x2 - x0) < ε ? y2 : y1
	          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {
	            x: abs(y2 - y1) < ε ? x2 : x1,
	            y: y1
	          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {
	            x: x1,
	            y: abs(x2 - x1) < ε ? y2 : y0
	          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {
	            x: abs(y2 - y0) < ε ? x2 : x0,
	            y: y0
	          } : null), cell.site, null));
	          ++nHalfEdges;
	        }
	      }
	    }
	  }
	  function d3_geom_voronoiHalfEdgeOrder(a, b) {
	    return b.angle - a.angle;
	  }
	  function d3_geom_voronoiCircle() {
	    d3_geom_voronoiRedBlackNode(this);
	    this.x = this.y = this.arc = this.site = this.cy = null;
	  }
	  function d3_geom_voronoiAttachCircle(arc) {
	    var lArc = arc.P, rArc = arc.N;
	    if (!lArc || !rArc) return;
	    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;
	    if (lSite === rSite) return;
	    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;
	    var d = 2 * (ax * cy - ay * cx);
	    if (d >= -ε2) return;
	    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;
	    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();
	    circle.arc = arc;
	    circle.site = cSite;
	    circle.x = x + bx;
	    circle.y = cy + Math.sqrt(x * x + y * y);
	    circle.cy = cy;
	    arc.circle = circle;
	    var before = null, node = d3_geom_voronoiCircles._;
	    while (node) {
	      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {
	        if (node.L) node = node.L; else {
	          before = node.P;
	          break;
	        }
	      } else {
	        if (node.R) node = node.R; else {
	          before = node;
	          break;
	        }
	      }
	    }
	    d3_geom_voronoiCircles.insert(before, circle);
	    if (!before) d3_geom_voronoiFirstCircle = circle;
	  }
	  function d3_geom_voronoiDetachCircle(arc) {
	    var circle = arc.circle;
	    if (circle) {
	      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;
	      d3_geom_voronoiCircles.remove(circle);
	      d3_geom_voronoiCirclePool.push(circle);
	      d3_geom_voronoiRedBlackNode(circle);
	      arc.circle = null;
	    }
	  }
	  function d3_geom_voronoiClipEdges(extent) {
	    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;
	    while (i--) {
	      e = edges[i];
	      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {
	        e.a = e.b = null;
	        edges.splice(i, 1);
	      }
	    }
	  }
	  function d3_geom_voronoiConnectEdge(edge, extent) {
	    var vb = edge.b;
	    if (vb) return true;
	    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;
	    if (ry === ly) {
	      if (fx < x0 || fx >= x1) return;
	      if (lx > rx) {
	        if (!va) va = {
	          x: fx,
	          y: y0
	        }; else if (va.y >= y1) return;
	        vb = {
	          x: fx,
	          y: y1
	        };
	      } else {
	        if (!va) va = {
	          x: fx,
	          y: y1
	        }; else if (va.y < y0) return;
	        vb = {
	          x: fx,
	          y: y0
	        };
	      }
	    } else {
	      fm = (lx - rx) / (ry - ly);
	      fb = fy - fm * fx;
	      if (fm < -1 || fm > 1) {
	        if (lx > rx) {
	          if (!va) va = {
	            x: (y0 - fb) / fm,
	            y: y0
	          }; else if (va.y >= y1) return;
	          vb = {
	            x: (y1 - fb) / fm,
	            y: y1
	          };
	        } else {
	          if (!va) va = {
	            x: (y1 - fb) / fm,
	            y: y1
	          }; else if (va.y < y0) return;
	          vb = {
	            x: (y0 - fb) / fm,
	            y: y0
	          };
	        }
	      } else {
	        if (ly < ry) {
	          if (!va) va = {
	            x: x0,
	            y: fm * x0 + fb
	          }; else if (va.x >= x1) return;
	          vb = {
	            x: x1,
	            y: fm * x1 + fb
	          };
	        } else {
	          if (!va) va = {
	            x: x1,
	            y: fm * x1 + fb
	          }; else if (va.x < x0) return;
	          vb = {
	            x: x0,
	            y: fm * x0 + fb
	          };
	        }
	      }
	    }
	    edge.a = va;
	    edge.b = vb;
	    return true;
	  }
	  function d3_geom_voronoiEdge(lSite, rSite) {
	    this.l = lSite;
	    this.r = rSite;
	    this.a = this.b = null;
	  }
	  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {
	    var edge = new d3_geom_voronoiEdge(lSite, rSite);
	    d3_geom_voronoiEdges.push(edge);
	    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);
	    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);
	    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));
	    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));
	    return edge;
	  }
	  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {
	    var edge = new d3_geom_voronoiEdge(lSite, null);
	    edge.a = va;
	    edge.b = vb;
	    d3_geom_voronoiEdges.push(edge);
	    return edge;
	  }
	  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {
	    if (!edge.a && !edge.b) {
	      edge.a = vertex;
	      edge.l = lSite;
	      edge.r = rSite;
	    } else if (edge.l === rSite) {
	      edge.b = vertex;
	    } else {
	      edge.a = vertex;
	    }
	  }
	  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {
	    var va = edge.a, vb = edge.b;
	    this.edge = edge;
	    this.site = lSite;
	    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);
	  }
	  d3_geom_voronoiHalfEdge.prototype = {
	    start: function() {
	      return this.edge.l === this.site ? this.edge.a : this.edge.b;
	    },
	    end: function() {
	      return this.edge.l === this.site ? this.edge.b : this.edge.a;
	    }
	  };
	  function d3_geom_voronoiRedBlackTree() {
	    this._ = null;
	  }
	  function d3_geom_voronoiRedBlackNode(node) {
	    node.U = node.C = node.L = node.R = node.P = node.N = null;
	  }
	  d3_geom_voronoiRedBlackTree.prototype = {
	    insert: function(after, node) {
	      var parent, grandpa, uncle;
	      if (after) {
	        node.P = after;
	        node.N = after.N;
	        if (after.N) after.N.P = node;
	        after.N = node;
	        if (after.R) {
	          after = after.R;
	          while (after.L) after = after.L;
	          after.L = node;
	        } else {
	          after.R = node;
	        }
	        parent = after;
	      } else if (this._) {
	        after = d3_geom_voronoiRedBlackFirst(this._);
	        node.P = null;
	        node.N = after;
	        after.P = after.L = node;
	        parent = after;
	      } else {
	        node.P = node.N = null;
	        this._ = node;
	        parent = null;
	      }
	      node.L = node.R = null;
	      node.U = parent;
	      node.C = true;
	      after = node;
	      while (parent && parent.C) {
	        grandpa = parent.U;
	        if (parent === grandpa.L) {
	          uncle = grandpa.R;
	          if (uncle && uncle.C) {
	            parent.C = uncle.C = false;
	            grandpa.C = true;
	            after = grandpa;
	          } else {
	            if (after === parent.R) {
	              d3_geom_voronoiRedBlackRotateLeft(this, parent);
	              after = parent;
	              parent = after.U;
	            }
	            parent.C = false;
	            grandpa.C = true;
	            d3_geom_voronoiRedBlackRotateRight(this, grandpa);
	          }
	        } else {
	          uncle = grandpa.L;
	          if (uncle && uncle.C) {
	            parent.C = uncle.C = false;
	            grandpa.C = true;
	            after = grandpa;
	          } else {
	            if (after === parent.L) {
	              d3_geom_voronoiRedBlackRotateRight(this, parent);
	              after = parent;
	              parent = after.U;
	            }
	            parent.C = false;
	            grandpa.C = true;
	            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);
	          }
	        }
	        parent = after.U;
	      }
	      this._.C = false;
	    },
	    remove: function(node) {
	      if (node.N) node.N.P = node.P;
	      if (node.P) node.P.N = node.N;
	      node.N = node.P = null;
	      var parent = node.U, sibling, left = node.L, right = node.R, next, red;
	      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);
	      if (parent) {
	        if (parent.L === node) parent.L = next; else parent.R = next;
	      } else {
	        this._ = next;
	      }
	      if (left && right) {
	        red = next.C;
	        next.C = node.C;
	        next.L = left;
	        left.U = next;
	        if (next !== right) {
	          parent = next.U;
	          next.U = node.U;
	          node = next.R;
	          parent.L = node;
	          next.R = right;
	          right.U = next;
	        } else {
	          next.U = parent;
	          parent = next;
	          node = next.R;
	        }
	      } else {
	        red = node.C;
	        node = next;
	      }
	      if (node) node.U = parent;
	      if (red) return;
	      if (node && node.C) {
	        node.C = false;
	        return;
	      }
	      do {
	        if (node === this._) break;
	        if (node === parent.L) {
	          sibling = parent.R;
	          if (sibling.C) {
	            sibling.C = false;
	            parent.C = true;
	            d3_geom_voronoiRedBlackRotateLeft(this, parent);
	            sibling = parent.R;
	          }
	          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {
	            if (!sibling.R || !sibling.R.C) {
	              sibling.L.C = false;
	              sibling.C = true;
	              d3_geom_voronoiRedBlackRotateRight(this, sibling);
	              sibling = parent.R;
	            }
	            sibling.C = parent.C;
	            parent.C = sibling.R.C = false;
	            d3_geom_voronoiRedBlackRotateLeft(this, parent);
	            node = this._;
	            break;
	          }
	        } else {
	          sibling = parent.L;
	          if (sibling.C) {
	            sibling.C = false;
	            parent.C = true;
	            d3_geom_voronoiRedBlackRotateRight(this, parent);
	            sibling = parent.L;
	          }
	          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {
	            if (!sibling.L || !sibling.L.C) {
	              sibling.R.C = false;
	              sibling.C = true;
	              d3_geom_voronoiRedBlackRotateLeft(this, sibling);
	              sibling = parent.L;
	            }
	            sibling.C = parent.C;
	            parent.C = sibling.L.C = false;
	            d3_geom_voronoiRedBlackRotateRight(this, parent);
	            node = this._;
	            break;
	          }
	        }
	        sibling.C = true;
	        node = parent;
	        parent = parent.U;
	      } while (!node.C);
	      if (node) node.C = false;
	    }
	  };
	  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {
	    var p = node, q = node.R, parent = p.U;
	    if (parent) {
	      if (parent.L === p) parent.L = q; else parent.R = q;
	    } else {
	      tree._ = q;
	    }
	    q.U = parent;
	    p.U = q;
	    p.R = q.L;
	    if (p.R) p.R.U = p;
	    q.L = p;
	  }
	  function d3_geom_voronoiRedBlackRotateRight(tree, node) {
	    var p = node, q = node.L, parent = p.U;
	    if (parent) {
	      if (parent.L === p) parent.L = q; else parent.R = q;
	    } else {
	      tree._ = q;
	    }
	    q.U = parent;
	    p.U = q;
	    p.L = q.R;
	    if (p.L) p.L.U = p;
	    q.R = p;
	  }
	  function d3_geom_voronoiRedBlackFirst(node) {
	    while (node.L) node = node.L;
	    return node;
	  }
	  function d3_geom_voronoi(sites, bbox) {
	    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;
	    d3_geom_voronoiEdges = [];
	    d3_geom_voronoiCells = new Array(sites.length);
	    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();
	    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();
	    while (true) {
	      circle = d3_geom_voronoiFirstCircle;
	      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {
	        if (site.x !== x0 || site.y !== y0) {
	          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);
	          d3_geom_voronoiAddBeach(site);
	          x0 = site.x, y0 = site.y;
	        }
	        site = sites.pop();
	      } else if (circle) {
	        d3_geom_voronoiRemoveBeach(circle.arc);
	      } else {
	        break;
	      }
	    }
	    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);
	    var diagram = {
	      cells: d3_geom_voronoiCells,
	      edges: d3_geom_voronoiEdges
	    };
	    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;
	    return diagram;
	  }
	  function d3_geom_voronoiVertexOrder(a, b) {
	    return b.y - a.y || b.x - a.x;
	  }
	  d3.geom.voronoi = function(points) {
	    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;
	    if (points) return voronoi(points);
	    function voronoi(data) {
	      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];
	      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {
	        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {
	          var s = e.start();
	          return [ s.x, s.y ];
	        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];
	        polygon.point = data[i];
	      });
	      return polygons;
	    }
	    function sites(data) {
	      return data.map(function(d, i) {
	        return {
	          x: Math.round(fx(d, i) / ε) * ε,
	          y: Math.round(fy(d, i) / ε) * ε,
	          i: i
	        };
	      });
	    }
	    voronoi.links = function(data) {
	      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {
	        return edge.l && edge.r;
	      }).map(function(edge) {
	        return {
	          source: data[edge.l.i],
	          target: data[edge.r.i]
	        };
	      });
	    };
	    voronoi.triangles = function(data) {
	      var triangles = [];
	      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {
	        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;
	        while (++j < m) {
	          e0 = e1;
	          s0 = s1;
	          e1 = edges[j].edge;
	          s1 = e1.l === site ? e1.r : e1.l;
	          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {
	            triangles.push([ data[i], data[s0.i], data[s1.i] ]);
	          }
	        }
	      });
	      return triangles;
	    };
	    voronoi.x = function(_) {
	      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;
	    };
	    voronoi.y = function(_) {
	      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;
	    };
	    voronoi.clipExtent = function(_) {
	      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;
	      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;
	      return voronoi;
	    };
	    voronoi.size = function(_) {
	      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];
	      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);
	    };
	    return voronoi;
	  };
	  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];
	  function d3_geom_voronoiTriangleArea(a, b, c) {
	    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);
	  }
	  d3.geom.delaunay = function(vertices) {
	    return d3.geom.voronoi().triangles(vertices);
	  };
	  d3.geom.quadtree = function(points, x1, y1, x2, y2) {
	    var x = d3_geom_pointX, y = d3_geom_pointY, compat;
	    if (compat = arguments.length) {
	      x = d3_geom_quadtreeCompatX;
	      y = d3_geom_quadtreeCompatY;
	      if (compat === 3) {
	        y2 = y1;
	        x2 = x1;
	        y1 = x1 = 0;
	      }
	      return quadtree(points);
	    }
	    function quadtree(data) {
	      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;
	      if (x1 != null) {
	        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;
	      } else {
	        x2_ = y2_ = -(x1_ = y1_ = Infinity);
	        xs = [], ys = [];
	        n = data.length;
	        if (compat) for (i = 0; i < n; ++i) {
	          d = data[i];
	          if (d.x < x1_) x1_ = d.x;
	          if (d.y < y1_) y1_ = d.y;
	          if (d.x > x2_) x2_ = d.x;
	          if (d.y > y2_) y2_ = d.y;
	          xs.push(d.x);
	          ys.push(d.y);
	        } else for (i = 0; i < n; ++i) {
	          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);
	          if (x_ < x1_) x1_ = x_;
	          if (y_ < y1_) y1_ = y_;
	          if (x_ > x2_) x2_ = x_;
	          if (y_ > y2_) y2_ = y_;
	          xs.push(x_);
	          ys.push(y_);
	        }
	      }
	      var dx = x2_ - x1_, dy = y2_ - y1_;
	      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;
	      function insert(n, d, x, y, x1, y1, x2, y2) {
	        if (isNaN(x) || isNaN(y)) return;
	        if (n.leaf) {
	          var nx = n.x, ny = n.y;
	          if (nx != null) {
	            if (abs(nx - x) + abs(ny - y) < .01) {
	              insertChild(n, d, x, y, x1, y1, x2, y2);
	            } else {
	              var nPoint = n.point;
	              n.x = n.y = n.point = null;
	              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);
	              insertChild(n, d, x, y, x1, y1, x2, y2);
	            }
	          } else {
	            n.x = x, n.y = y, n.point = d;
	          }
	        } else {
	          insertChild(n, d, x, y, x1, y1, x2, y2);
	        }
	      }
	      function insertChild(n, d, x, y, x1, y1, x2, y2) {
	        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;
	        n.leaf = false;
	        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());
	        if (right) x1 = xm; else x2 = xm;
	        if (below) y1 = ym; else y2 = ym;
	        insert(n, d, x, y, x1, y1, x2, y2);
	      }
	      var root = d3_geom_quadtreeNode();
	      root.add = function(d) {
	        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);
	      };
	      root.visit = function(f) {
	        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);
	      };
	      root.find = function(point) {
	        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);
	      };
	      i = -1;
	      if (x1 == null) {
	        while (++i < n) {
	          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);
	        }
	        --i;
	      } else data.forEach(root.add);
	      xs = ys = data = d = null;
	      return root;
	    }
	    quadtree.x = function(_) {
	      return arguments.length ? (x = _, quadtree) : x;
	    };
	    quadtree.y = function(_) {
	      return arguments.length ? (y = _, quadtree) : y;
	    };
	    quadtree.extent = function(_) {
	      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];
	      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], 
	      y2 = +_[1][1];
	      return quadtree;
	    };
	    quadtree.size = function(_) {
	      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];
	      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];
	      return quadtree;
	    };
	    return quadtree;
	  };
	  function d3_geom_quadtreeCompatX(d) {
	    return d.x;
	  }
	  function d3_geom_quadtreeCompatY(d) {
	    return d.y;
	  }
	  function d3_geom_quadtreeNode() {
	    return {
	      leaf: true,
	      nodes: [],
	      point: null,
	      x: null,
	      y: null
	    };
	  }
	  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {
	    if (!f(node, x1, y1, x2, y2)) {
	      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;
	      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);
	      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);
	      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);
	      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);
	    }
	  }
	  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {
	    var minDistance2 = Infinity, closestPoint;
	    (function find(node, x1, y1, x2, y2) {
	      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;
	      if (point = node.point) {
	        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;
	        if (distance2 < minDistance2) {
	          var distance = Math.sqrt(minDistance2 = distance2);
	          x0 = x - distance, y0 = y - distance;
	          x3 = x + distance, y3 = y + distance;
	          closestPoint = point;
	        }
	      }
	      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;
	      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {
	        if (node = children[i & 3]) switch (i & 3) {
	         case 0:
	          find(node, x1, y1, xm, ym);
	          break;
	
	         case 1:
	          find(node, xm, y1, x2, ym);
	          break;
	
	         case 2:
	          find(node, x1, ym, xm, y2);
	          break;
	
	         case 3:
	          find(node, xm, ym, x2, y2);
	          break;
	        }
	      }
	    })(root, x0, y0, x3, y3);
	    return closestPoint;
	  }
	  d3.interpolateRgb = d3_interpolateRgb;
	  function d3_interpolateRgb(a, b) {
	    a = d3.rgb(a);
	    b = d3.rgb(b);
	    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;
	    return function(t) {
	      return "#" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));
	    };
	  }
	  d3.interpolateObject = d3_interpolateObject;
	  function d3_interpolateObject(a, b) {
	    var i = {}, c = {}, k;
	    for (k in a) {
	      if (k in b) {
	        i[k] = d3_interpolate(a[k], b[k]);
	      } else {
	        c[k] = a[k];
	      }
	    }
	    for (k in b) {
	      if (!(k in a)) {
	        c[k] = b[k];
	      }
	    }
	    return function(t) {
	      for (k in i) c[k] = i[k](t);
	      return c;
	    };
	  }
	  d3.interpolateNumber = d3_interpolateNumber;
	  function d3_interpolateNumber(a, b) {
	    a = +a, b = +b;
	    return function(t) {
	      return a * (1 - t) + b * t;
	    };
	  }
	  d3.interpolateString = d3_interpolateString;
	  function d3_interpolateString(a, b) {
	    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];
	    a = a + "", b = b + "";
	    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {
	      if ((bs = bm.index) > bi) {
	        bs = b.slice(bi, bs);
	        if (s[i]) s[i] += bs; else s[++i] = bs;
	      }
	      if ((am = am[0]) === (bm = bm[0])) {
	        if (s[i]) s[i] += bm; else s[++i] = bm;
	      } else {
	        s[++i] = null;
	        q.push({
	          i: i,
	          x: d3_interpolateNumber(am, bm)
	        });
	      }
	      bi = d3_interpolate_numberB.lastIndex;
	    }
	    if (bi < b.length) {
	      bs = b.slice(bi);
	      if (s[i]) s[i] += bs; else s[++i] = bs;
	    }
	    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {
	      return b(t) + "";
	    }) : function() {
	      return b;
	    } : (b = q.length, function(t) {
	      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);
	      return s.join("");
	    });
	  }
	  var d3_interpolate_numberA = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, "g");
	  d3.interpolate = d3_interpolate;
	  function d3_interpolate(a, b) {
	    var i = d3.interpolators.length, f;
	    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;
	    return f;
	  }
	  d3.interpolators = [ function(a, b) {
	    var t = typeof b;
	    return (t === "string" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\(|hsl\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === "object" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);
	  } ];
	  d3.interpolateArray = d3_interpolateArray;
	  function d3_interpolateArray(a, b) {
	    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;
	    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));
	    for (;i < na; ++i) c[i] = a[i];
	    for (;i < nb; ++i) c[i] = b[i];
	    return function(t) {
	      for (i = 0; i < n0; ++i) c[i] = x[i](t);
	      return c;
	    };
	  }
	  var d3_ease_default = function() {
	    return d3_identity;
	  };
	  var d3_ease = d3.map({
	    linear: d3_ease_default,
	    poly: d3_ease_poly,
	    quad: function() {
	      return d3_ease_quad;
	    },
	    cubic: function() {
	      return d3_ease_cubic;
	    },
	    sin: function() {
	      return d3_ease_sin;
	    },
	    exp: function() {
	      return d3_ease_exp;
	    },
	    circle: function() {
	      return d3_ease_circle;
	    },
	    elastic: d3_ease_elastic,
	    back: d3_ease_back,
	    bounce: function() {
	      return d3_ease_bounce;
	    }
	  });
	  var d3_ease_mode = d3.map({
	    "in": d3_identity,
	    out: d3_ease_reverse,
	    "in-out": d3_ease_reflect,
	    "out-in": function(f) {
	      return d3_ease_reflect(d3_ease_reverse(f));
	    }
	  });
	  d3.ease = function(name) {
	    var i = name.indexOf("-"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : "in";
	    t = d3_ease.get(t) || d3_ease_default;
	    m = d3_ease_mode.get(m) || d3_identity;
	    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));
	  };
	  function d3_ease_clamp(f) {
	    return function(t) {
	      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);
	    };
	  }
	  function d3_ease_reverse(f) {
	    return function(t) {
	      return 1 - f(1 - t);
	    };
	  }
	  function d3_ease_reflect(f) {
	    return function(t) {
	      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));
	    };
	  }
	  function d3_ease_quad(t) {
	    return t * t;
	  }
	  function d3_ease_cubic(t) {
	    return t * t * t;
	  }
	  function d3_ease_cubicInOut(t) {
	    if (t <= 0) return 0;
	    if (t >= 1) return 1;
	    var t2 = t * t, t3 = t2 * t;
	    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);
	  }
	  function d3_ease_poly(e) {
	    return function(t) {
	      return Math.pow(t, e);
	    };
	  }
	  function d3_ease_sin(t) {
	    return 1 - Math.cos(t * halfπ);
	  }
	  function d3_ease_exp(t) {
	    return Math.pow(2, 10 * (t - 1));
	  }
	  function d3_ease_circle(t) {
	    return 1 - Math.sqrt(1 - t * t);
	  }
	  function d3_ease_elastic(a, p) {
	    var s;
	    if (arguments.length < 2) p = .45;
	    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;
	    return function(t) {
	      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);
	    };
	  }
	  function d3_ease_back(s) {
	    if (!s) s = 1.70158;
	    return function(t) {
	      return t * t * ((s + 1) * t - s);
	    };
	  }
	  function d3_ease_bounce(t) {
	    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;
	  }
	  d3.interpolateHcl = d3_interpolateHcl;
	  function d3_interpolateHcl(a, b) {
	    a = d3.hcl(a);
	    b = d3.hcl(b);
	    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;
	    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;
	    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;
	    return function(t) {
	      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + "";
	    };
	  }
	  d3.interpolateHsl = d3_interpolateHsl;
	  function d3_interpolateHsl(a, b) {
	    a = d3.hsl(a);
	    b = d3.hsl(b);
	    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;
	    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;
	    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;
	    return function(t) {
	      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + "";
	    };
	  }
	  d3.interpolateLab = d3_interpolateLab;
	  function d3_interpolateLab(a, b) {
	    a = d3.lab(a);
	    b = d3.lab(b);
	    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;
	    return function(t) {
	      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + "";
	    };
	  }
	  d3.interpolateRound = d3_interpolateRound;
	  function d3_interpolateRound(a, b) {
	    b -= a;
	    return function(t) {
	      return Math.round(a + b * t);
	    };
	  }
	  d3.transform = function(string) {
	    var g = d3_document.createElementNS(d3.ns.prefix.svg, "g");
	    return (d3.transform = function(string) {
	      if (string != null) {
	        g.setAttribute("transform", string);
	        var t = g.transform.baseVal.consolidate();
	      }
	      return new d3_transform(t ? t.matrix : d3_transformIdentity);
	    })(string);
	  };
	  function d3_transform(m) {
	    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;
	    if (r0[0] * r1[1] < r1[0] * r0[1]) {
	      r0[0] *= -1;
	      r0[1] *= -1;
	      kx *= -1;
	      kz *= -1;
	    }
	    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;
	    this.translate = [ m.e, m.f ];
	    this.scale = [ kx, ky ];
	    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;
	  }
	  d3_transform.prototype.toString = function() {
	    return "translate(" + this.translate + ")rotate(" + this.rotate + ")skewX(" + this.skew + ")scale(" + this.scale + ")";
	  };
	  function d3_transformDot(a, b) {
	    return a[0] * b[0] + a[1] * b[1];
	  }
	  function d3_transformNormalize(a) {
	    var k = Math.sqrt(d3_transformDot(a, a));
	    if (k) {
	      a[0] /= k;
	      a[1] /= k;
	    }
	    return k;
	  }
	  function d3_transformCombine(a, b, k) {
	    a[0] += k * b[0];
	    a[1] += k * b[1];
	    return a;
	  }
	  var d3_transformIdentity = {
	    a: 1,
	    b: 0,
	    c: 0,
	    d: 1,
	    e: 0,
	    f: 0
	  };
	  d3.interpolateTransform = d3_interpolateTransform;
	  function d3_interpolateTransformPop(s) {
	    return s.length ? s.pop() + "," : "";
	  }
	  function d3_interpolateTranslate(ta, tb, s, q) {
	    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {
	      var i = s.push("translate(", null, ",", null, ")");
	      q.push({
	        i: i - 4,
	        x: d3_interpolateNumber(ta[0], tb[0])
	      }, {
	        i: i - 2,
	        x: d3_interpolateNumber(ta[1], tb[1])
	      });
	    } else if (tb[0] || tb[1]) {
	      s.push("translate(" + tb + ")");
	    }
	  }
	  function d3_interpolateRotate(ra, rb, s, q) {
	    if (ra !== rb) {
	      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;
	      q.push({
	        i: s.push(d3_interpolateTransformPop(s) + "rotate(", null, ")") - 2,
	        x: d3_interpolateNumber(ra, rb)
	      });
	    } else if (rb) {
	      s.push(d3_interpolateTransformPop(s) + "rotate(" + rb + ")");
	    }
	  }
	  function d3_interpolateSkew(wa, wb, s, q) {
	    if (wa !== wb) {
	      q.push({
	        i: s.push(d3_interpolateTransformPop(s) + "skewX(", null, ")") - 2,
	        x: d3_interpolateNumber(wa, wb)
	      });
	    } else if (wb) {
	      s.push(d3_interpolateTransformPop(s) + "skewX(" + wb + ")");
	    }
	  }
	  function d3_interpolateScale(ka, kb, s, q) {
	    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {
	      var i = s.push(d3_interpolateTransformPop(s) + "scale(", null, ",", null, ")");
	      q.push({
	        i: i - 4,
	        x: d3_interpolateNumber(ka[0], kb[0])
	      }, {
	        i: i - 2,
	        x: d3_interpolateNumber(ka[1], kb[1])
	      });
	    } else if (kb[0] !== 1 || kb[1] !== 1) {
	      s.push(d3_interpolateTransformPop(s) + "scale(" + kb + ")");
	    }
	  }
	  function d3_interpolateTransform(a, b) {
	    var s = [], q = [];
	    a = d3.transform(a), b = d3.transform(b);
	    d3_interpolateTranslate(a.translate, b.translate, s, q);
	    d3_interpolateRotate(a.rotate, b.rotate, s, q);
	    d3_interpolateSkew(a.skew, b.skew, s, q);
	    d3_interpolateScale(a.scale, b.scale, s, q);
	    a = b = null;
	    return function(t) {
	      var i = -1, n = q.length, o;
	      while (++i < n) s[(o = q[i]).i] = o.x(t);
	      return s.join("");
	    };
	  }
	  function d3_uninterpolateNumber(a, b) {
	    b = (b -= a = +a) || 1 / b;
	    return function(x) {
	      return (x - a) / b;
	    };
	  }
	  function d3_uninterpolateClamp(a, b) {
	    b = (b -= a = +a) || 1 / b;
	    return function(x) {
	      return Math.max(0, Math.min(1, (x - a) / b));
	    };
	  }
	  d3.layout = {};
	  d3.layout.bundle = function() {
	    return function(links) {
	      var paths = [], i = -1, n = links.length;
	      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));
	      return paths;
	    };
	  };
	  function d3_layout_bundlePath(link) {
	    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];
	    while (start !== lca) {
	      start = start.parent;
	      points.push(start);
	    }
	    var k = points.length;
	    while (end !== lca) {
	      points.splice(k, 0, end);
	      end = end.parent;
	    }
	    return points;
	  }
	  function d3_layout_bundleAncestors(node) {
	    var ancestors = [], parent = node.parent;
	    while (parent != null) {
	      ancestors.push(node);
	      node = parent;
	      parent = parent.parent;
	    }
	    ancestors.push(node);
	    return ancestors;
	  }
	  function d3_layout_bundleLeastCommonAncestor(a, b) {
	    if (a === b) return a;
	    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;
	    while (aNode === bNode) {
	      sharedNode = aNode;
	      aNode = aNodes.pop();
	      bNode = bNodes.pop();
	    }
	    return sharedNode;
	  }
	  d3.layout.chord = function() {
	    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;
	    function relayout() {
	      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;
	      chords = [];
	      groups = [];
	      k = 0, i = -1;
	      while (++i < n) {
	        x = 0, j = -1;
	        while (++j < n) {
	          x += matrix[i][j];
	        }
	        groupSums.push(x);
	        subgroupIndex.push(d3.range(n));
	        k += x;
	      }
	      if (sortGroups) {
	        groupIndex.sort(function(a, b) {
	          return sortGroups(groupSums[a], groupSums[b]);
	        });
	      }
	      if (sortSubgroups) {
	        subgroupIndex.forEach(function(d, i) {
	          d.sort(function(a, b) {
	            return sortSubgroups(matrix[i][a], matrix[i][b]);
	          });
	        });
	      }
	      k = (τ - padding * n) / k;
	      x = 0, i = -1;
	      while (++i < n) {
	        x0 = x, j = -1;
	        while (++j < n) {
	          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;
	          subgroups[di + "-" + dj] = {
	            index: di,
	            subindex: dj,
	            startAngle: a0,
	            endAngle: a1,
	            value: v
	          };
	        }
	        groups[di] = {
	          index: di,
	          startAngle: x0,
	          endAngle: x,
	          value: groupSums[di]
	        };
	        x += padding;
	      }
	      i = -1;
	      while (++i < n) {
	        j = i - 1;
	        while (++j < n) {
	          var source = subgroups[i + "-" + j], target = subgroups[j + "-" + i];
	          if (source.value || target.value) {
	            chords.push(source.value < target.value ? {
	              source: target,
	              target: source
	            } : {
	              source: source,
	              target: target
	            });
	          }
	        }
	      }
	      if (sortChords) resort();
	    }
	    function resort() {
	      chords.sort(function(a, b) {
	        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);
	      });
	    }
	    chord.matrix = function(x) {
	      if (!arguments.length) return matrix;
	      n = (matrix = x) && matrix.length;
	      chords = groups = null;
	      return chord;
	    };
	    chord.padding = function(x) {
	      if (!arguments.length) return padding;
	      padding = x;
	      chords = groups = null;
	      return chord;
	    };
	    chord.sortGroups = function(x) {
	      if (!arguments.length) return sortGroups;
	      sortGroups = x;
	      chords = groups = null;
	      return chord;
	    };
	    chord.sortSubgroups = function(x) {
	      if (!arguments.length) return sortSubgroups;
	      sortSubgroups = x;
	      chords = null;
	      return chord;
	    };
	    chord.sortChords = function(x) {
	      if (!arguments.length) return sortChords;
	      sortChords = x;
	      if (chords) resort();
	      return chord;
	    };
	    chord.chords = function() {
	      if (!chords) relayout();
	      return chords;
	    };
	    chord.groups = function() {
	      if (!groups) relayout();
	      return groups;
	    };
	    return chord;
	  };
	  d3.layout.force = function() {
	    var force = {}, event = d3.dispatch("start", "tick", "end"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;
	    function repulse(node) {
	      return function(quad, x1, _, x2) {
	        if (quad.point !== node) {
	          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;
	          if (dw * dw / theta2 < dn) {
	            if (dn < chargeDistance2) {
	              var k = quad.charge / dn;
	              node.px -= dx * k;
	              node.py -= dy * k;
	            }
	            return true;
	          }
	          if (quad.point && dn && dn < chargeDistance2) {
	            var k = quad.pointCharge / dn;
	            node.px -= dx * k;
	            node.py -= dy * k;
	          }
	        }
	        return !quad.charge;
	      };
	    }
	    force.tick = function() {
	      if ((alpha *= .99) < .005) {
	        timer = null;
	        event.end({
	          type: "end",
	          alpha: alpha = 0
	        });
	        return true;
	      }
	      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;
	      for (i = 0; i < m; ++i) {
	        o = links[i];
	        s = o.source;
	        t = o.target;
	        x = t.x - s.x;
	        y = t.y - s.y;
	        if (l = x * x + y * y) {
	          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;
	          x *= l;
	          y *= l;
	          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);
	          t.y -= y * k;
	          s.x += x * (k = 1 - k);
	          s.y += y * k;
	        }
	      }
	      if (k = alpha * gravity) {
	        x = size[0] / 2;
	        y = size[1] / 2;
	        i = -1;
	        if (k) while (++i < n) {
	          o = nodes[i];
	          o.x += (x - o.x) * k;
	          o.y += (y - o.y) * k;
	        }
	      }
	      if (charge) {
	        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);
	        i = -1;
	        while (++i < n) {
	          if (!(o = nodes[i]).fixed) {
	            q.visit(repulse(o));
	          }
	        }
	      }
	      i = -1;
	      while (++i < n) {
	        o = nodes[i];
	        if (o.fixed) {
	          o.x = o.px;
	          o.y = o.py;
	        } else {
	          o.x -= (o.px - (o.px = o.x)) * friction;
	          o.y -= (o.py - (o.py = o.y)) * friction;
	        }
	      }
	      event.tick({
	        type: "tick",
	        alpha: alpha
	      });
	    };
	    force.nodes = function(x) {
	      if (!arguments.length) return nodes;
	      nodes = x;
	      return force;
	    };
	    force.links = function(x) {
	      if (!arguments.length) return links;
	      links = x;
	      return force;
	    };
	    force.size = function(x) {
	      if (!arguments.length) return size;
	      size = x;
	      return force;
	    };
	    force.linkDistance = function(x) {
	      if (!arguments.length) return linkDistance;
	      linkDistance = typeof x === "function" ? x : +x;
	      return force;
	    };
	    force.distance = force.linkDistance;
	    force.linkStrength = function(x) {
	      if (!arguments.length) return linkStrength;
	      linkStrength = typeof x === "function" ? x : +x;
	      return force;
	    };
	    force.friction = function(x) {
	      if (!arguments.length) return friction;
	      friction = +x;
	      return force;
	    };
	    force.charge = function(x) {
	      if (!arguments.length) return charge;
	      charge = typeof x === "function" ? x : +x;
	      return force;
	    };
	    force.chargeDistance = function(x) {
	      if (!arguments.length) return Math.sqrt(chargeDistance2);
	      chargeDistance2 = x * x;
	      return force;
	    };
	    force.gravity = function(x) {
	      if (!arguments.length) return gravity;
	      gravity = +x;
	      return force;
	    };
	    force.theta = function(x) {
	      if (!arguments.length) return Math.sqrt(theta2);
	      theta2 = x * x;
	      return force;
	    };
	    force.alpha = function(x) {
	      if (!arguments.length) return alpha;
	      x = +x;
	      if (alpha) {
	        if (x > 0) {
	          alpha = x;
	        } else {
	          timer.c = null, timer.t = NaN, timer = null;
	          event.end({
	            type: "end",
	            alpha: alpha = 0
	          });
	        }
	      } else if (x > 0) {
	        event.start({
	          type: "start",
	          alpha: alpha = x
	        });
	        timer = d3_timer(force.tick);
	      }
	      return force;
	    };
	    force.start = function() {
	      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;
	      for (i = 0; i < n; ++i) {
	        (o = nodes[i]).index = i;
	        o.weight = 0;
	      }
	      for (i = 0; i < m; ++i) {
	        o = links[i];
	        if (typeof o.source == "number") o.source = nodes[o.source];
	        if (typeof o.target == "number") o.target = nodes[o.target];
	        ++o.source.weight;
	        ++o.target.weight;
	      }
	      for (i = 0; i < n; ++i) {
	        o = nodes[i];
	        if (isNaN(o.x)) o.x = position("x", w);
	        if (isNaN(o.y)) o.y = position("y", h);
	        if (isNaN(o.px)) o.px = o.x;
	        if (isNaN(o.py)) o.py = o.y;
	      }
	      distances = [];
	      if (typeof linkDistance === "function") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;
	      strengths = [];
	      if (typeof linkStrength === "function") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;
	      charges = [];
	      if (typeof charge === "function") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;
	      function position(dimension, size) {
	        if (!neighbors) {
	          neighbors = new Array(n);
	          for (j = 0; j < n; ++j) {
	            neighbors[j] = [];
	          }
	          for (j = 0; j < m; ++j) {
	            var o = links[j];
	            neighbors[o.source.index].push(o.target);
	            neighbors[o.target.index].push(o.source);
	          }
	        }
	        var candidates = neighbors[i], j = -1, l = candidates.length, x;
	        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;
	        return Math.random() * size;
	      }
	      return force.resume();
	    };
	    force.resume = function() {
	      return force.alpha(.1);
	    };
	    force.stop = function() {
	      return force.alpha(0);
	    };
	    force.drag = function() {
	      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on("dragstart.force", d3_layout_forceDragstart).on("drag.force", dragmove).on("dragend.force", d3_layout_forceDragend);
	      if (!arguments.length) return drag;
	      this.on("mouseover.force", d3_layout_forceMouseover).on("mouseout.force", d3_layout_forceMouseout).call(drag);
	    };
	    function dragmove(d) {
	      d.px = d3.event.x, d.py = d3.event.y;
	      force.resume();
	    }
	    return d3.rebind(force, event, "on");
	  };
	  function d3_layout_forceDragstart(d) {
	    d.fixed |= 2;
	  }
	  function d3_layout_forceDragend(d) {
	    d.fixed &= ~6;
	  }
	  function d3_layout_forceMouseover(d) {
	    d.fixed |= 4;
	    d.px = d.x, d.py = d.y;
	  }
	  function d3_layout_forceMouseout(d) {
	    d.fixed &= ~4;
	  }
	  function d3_layout_forceAccumulate(quad, alpha, charges) {
	    var cx = 0, cy = 0;
	    quad.charge = 0;
	    if (!quad.leaf) {
	      var nodes = quad.nodes, n = nodes.length, i = -1, c;
	      while (++i < n) {
	        c = nodes[i];
	        if (c == null) continue;
	        d3_layout_forceAccumulate(c, alpha, charges);
	        quad.charge += c.charge;
	        cx += c.charge * c.cx;
	        cy += c.charge * c.cy;
	      }
	    }
	    if (quad.point) {
	      if (!quad.leaf) {
	        quad.point.x += Math.random() - .5;
	        quad.point.y += Math.random() - .5;
	      }
	      var k = alpha * charges[quad.point.index];
	      quad.charge += quad.pointCharge = k;
	      cx += k * quad.point.x;
	      cy += k * quad.point.y;
	    }
	    quad.cx = cx / quad.charge;
	    quad.cy = cy / quad.charge;
	  }
	  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;
	  d3.layout.hierarchy = function() {
	    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;
	    function hierarchy(root) {
	      var stack = [ root ], nodes = [], node;
	      root.depth = 0;
	      while ((node = stack.pop()) != null) {
	        nodes.push(node);
	        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {
	          var n, childs, child;
	          while (--n >= 0) {
	            stack.push(child = childs[n]);
	            child.parent = node;
	            child.depth = node.depth + 1;
	          }
	          if (value) node.value = 0;
	          node.children = childs;
	        } else {
	          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;
	          delete node.children;
	        }
	      }
	      d3_layout_hierarchyVisitAfter(root, function(node) {
	        var childs, parent;
	        if (sort && (childs = node.children)) childs.sort(sort);
	        if (value && (parent = node.parent)) parent.value += node.value;
	      });
	      return nodes;
	    }
	    hierarchy.sort = function(x) {
	      if (!arguments.length) return sort;
	      sort = x;
	      return hierarchy;
	    };
	    hierarchy.children = function(x) {
	      if (!arguments.length) return children;
	      children = x;
	      return hierarchy;
	    };
	    hierarchy.value = function(x) {
	      if (!arguments.length) return value;
	      value = x;
	      return hierarchy;
	    };
	    hierarchy.revalue = function(root) {
	      if (value) {
	        d3_layout_hierarchyVisitBefore(root, function(node) {
	          if (node.children) node.value = 0;
	        });
	        d3_layout_hierarchyVisitAfter(root, function(node) {
	          var parent;
	          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;
	          if (parent = node.parent) parent.value += node.value;
	        });
	      }
	      return root;
	    };
	    return hierarchy;
	  };
	  function d3_layout_hierarchyRebind(object, hierarchy) {
	    d3.rebind(object, hierarchy, "sort", "children", "value");
	    object.nodes = object;
	    object.links = d3_layout_hierarchyLinks;
	    return object;
	  }
	  function d3_layout_hierarchyVisitBefore(node, callback) {
	    var nodes = [ node ];
	    while ((node = nodes.pop()) != null) {
	      callback(node);
	      if ((children = node.children) && (n = children.length)) {
	        var n, children;
	        while (--n >= 0) nodes.push(children[n]);
	      }
	    }
	  }
	  function d3_layout_hierarchyVisitAfter(node, callback) {
	    var nodes = [ node ], nodes2 = [];
	    while ((node = nodes.pop()) != null) {
	      nodes2.push(node);
	      if ((children = node.children) && (n = children.length)) {
	        var i = -1, n, children;
	        while (++i < n) nodes.push(children[i]);
	      }
	    }
	    while ((node = nodes2.pop()) != null) {
	      callback(node);
	    }
	  }
	  function d3_layout_hierarchyChildren(d) {
	    return d.children;
	  }
	  function d3_layout_hierarchyValue(d) {
	    return d.value;
	  }
	  function d3_layout_hierarchySort(a, b) {
	    return b.value - a.value;
	  }
	  function d3_layout_hierarchyLinks(nodes) {
	    return d3.merge(nodes.map(function(parent) {
	      return (parent.children || []).map(function(child) {
	        return {
	          source: parent,
	          target: child
	        };
	      });
	    }));
	  }
	  d3.layout.partition = function() {
	    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];
	    function position(node, x, dx, dy) {
	      var children = node.children;
	      node.x = x;
	      node.y = node.depth * dy;
	      node.dx = dx;
	      node.dy = dy;
	      if (children && (n = children.length)) {
	        var i = -1, n, c, d;
	        dx = node.value ? dx / node.value : 0;
	        while (++i < n) {
	          position(c = children[i], x, d = c.value * dx, dy);
	          x += d;
	        }
	      }
	    }
	    function depth(node) {
	      var children = node.children, d = 0;
	      if (children && (n = children.length)) {
	        var i = -1, n;
	        while (++i < n) d = Math.max(d, depth(children[i]));
	      }
	      return 1 + d;
	    }
	    function partition(d, i) {
	      var nodes = hierarchy.call(this, d, i);
	      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));
	      return nodes;
	    }
	    partition.size = function(x) {
	      if (!arguments.length) return size;
	      size = x;
	      return partition;
	    };
	    return d3_layout_hierarchyRebind(partition, hierarchy);
	  };
	  d3.layout.pie = function() {
	    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;
	    function pie(data) {
	      var n = data.length, values = data.map(function(d, i) {
	        return +value.call(pie, d, i);
	      }), a = +(typeof startAngle === "function" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === "function" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === "function" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;
	      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {
	        return values[j] - values[i];
	      } : function(i, j) {
	        return sort(data[i], data[j]);
	      });
	      index.forEach(function(i) {
	        arcs[i] = {
	          data: data[i],
	          value: v = values[i],
	          startAngle: a,
	          endAngle: a += v * k + pa,
	          padAngle: p
	        };
	      });
	      return arcs;
	    }
	    pie.value = function(_) {
	      if (!arguments.length) return value;
	      value = _;
	      return pie;
	    };
	    pie.sort = function(_) {
	      if (!arguments.length) return sort;
	      sort = _;
	      return pie;
	    };
	    pie.startAngle = function(_) {
	      if (!arguments.length) return startAngle;
	      startAngle = _;
	      return pie;
	    };
	    pie.endAngle = function(_) {
	      if (!arguments.length) return endAngle;
	      endAngle = _;
	      return pie;
	    };
	    pie.padAngle = function(_) {
	      if (!arguments.length) return padAngle;
	      padAngle = _;
	      return pie;
	    };
	    return pie;
	  };
	  var d3_layout_pieSortByValue = {};
	  d3.layout.stack = function() {
	    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;
	    function stack(data, index) {
	      if (!(n = data.length)) return data;
	      var series = data.map(function(d, i) {
	        return values.call(stack, d, i);
	      });
	      var points = series.map(function(d) {
	        return d.map(function(v, i) {
	          return [ x.call(stack, v, i), y.call(stack, v, i) ];
	        });
	      });
	      var orders = order.call(stack, points, index);
	      series = d3.permute(series, orders);
	      points = d3.permute(points, orders);
	      var offsets = offset.call(stack, points, index);
	      var m = series[0].length, n, i, j, o;
	      for (j = 0; j < m; ++j) {
	        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);
	        for (i = 1; i < n; ++i) {
	          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);
	        }
	      }
	      return data;
	    }
	    stack.values = function(x) {
	      if (!arguments.length) return values;
	      values = x;
	      return stack;
	    };
	    stack.order = function(x) {
	      if (!arguments.length) return order;
	      order = typeof x === "function" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;
	      return stack;
	    };
	    stack.offset = function(x) {
	      if (!arguments.length) return offset;
	      offset = typeof x === "function" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;
	      return stack;
	    };
	    stack.x = function(z) {
	      if (!arguments.length) return x;
	      x = z;
	      return stack;
	    };
	    stack.y = function(z) {
	      if (!arguments.length) return y;
	      y = z;
	      return stack;
	    };
	    stack.out = function(z) {
	      if (!arguments.length) return out;
	      out = z;
	      return stack;
	    };
	    return stack;
	  };
	  function d3_layout_stackX(d) {
	    return d.x;
	  }
	  function d3_layout_stackY(d) {
	    return d.y;
	  }
	  function d3_layout_stackOut(d, y0, y) {
	    d.y0 = y0;
	    d.y = y;
	  }
	  var d3_layout_stackOrders = d3.map({
	    "inside-out": function(data) {
	      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {
	        return max[a] - max[b];
	      }), top = 0, bottom = 0, tops = [], bottoms = [];
	      for (i = 0; i < n; ++i) {
	        j = index[i];
	        if (top < bottom) {
	          top += sums[j];
	          tops.push(j);
	        } else {
	          bottom += sums[j];
	          bottoms.push(j);
	        }
	      }
	      return bottoms.reverse().concat(tops);
	    },
	    reverse: function(data) {
	      return d3.range(data.length).reverse();
	    },
	    "default": d3_layout_stackOrderDefault
	  });
	  var d3_layout_stackOffsets = d3.map({
	    silhouette: function(data) {
	      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];
	      for (j = 0; j < m; ++j) {
	        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];
	        if (o > max) max = o;
	        sums.push(o);
	      }
	      for (j = 0; j < m; ++j) {
	        y0[j] = (max - sums[j]) / 2;
	      }
	      return y0;
	    },
	    wiggle: function(data) {
	      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];
	      y0[0] = o = o0 = 0;
	      for (j = 1; j < m; ++j) {
	        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];
	        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {
	          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {
	            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;
	          }
	          s2 += s3 * data[i][j][1];
	        }
	        y0[j] = o -= s1 ? s2 / s1 * dx : 0;
	        if (o < o0) o0 = o;
	      }
	      for (j = 0; j < m; ++j) y0[j] -= o0;
	      return y0;
	    },
	    expand: function(data) {
	      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];
	      for (j = 0; j < m; ++j) {
	        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];
	        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;
	      }
	      for (j = 0; j < m; ++j) y0[j] = 0;
	      return y0;
	    },
	    zero: d3_layout_stackOffsetZero
	  });
	  function d3_layout_stackOrderDefault(data) {
	    return d3.range(data.length);
	  }
	  function d3_layout_stackOffsetZero(data) {
	    var j = -1, m = data[0].length, y0 = [];
	    while (++j < m) y0[j] = 0;
	    return y0;
	  }
	  function d3_layout_stackMaxIndex(array) {
	    var i = 1, j = 0, v = array[0][1], k, n = array.length;
	    for (;i < n; ++i) {
	      if ((k = array[i][1]) > v) {
	        j = i;
	        v = k;
	      }
	    }
	    return j;
	  }
	  function d3_layout_stackReduceSum(d) {
	    return d.reduce(d3_layout_stackSum, 0);
	  }
	  function d3_layout_stackSum(p, d) {
	    return p + d[1];
	  }
	  d3.layout.histogram = function() {
	    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;
	    function histogram(data, i) {
	      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;
	      while (++i < m) {
	        bin = bins[i] = [];
	        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);
	        bin.y = 0;
	      }
	      if (m > 0) {
	        i = -1;
	        while (++i < n) {
	          x = values[i];
	          if (x >= range[0] && x <= range[1]) {
	            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];
	            bin.y += k;
	            bin.push(data[i]);
	          }
	        }
	      }
	      return bins;
	    }
	    histogram.value = function(x) {
	      if (!arguments.length) return valuer;
	      valuer = x;
	      return histogram;
	    };
	    histogram.range = function(x) {
	      if (!arguments.length) return ranger;
	      ranger = d3_functor(x);
	      return histogram;
	    };
	    histogram.bins = function(x) {
	      if (!arguments.length) return binner;
	      binner = typeof x === "number" ? function(range) {
	        return d3_layout_histogramBinFixed(range, x);
	      } : d3_functor(x);
	      return histogram;
	    };
	    histogram.frequency = function(x) {
	      if (!arguments.length) return frequency;
	      frequency = !!x;
	      return histogram;
	    };
	    return histogram;
	  };
	  function d3_layout_histogramBinSturges(range, values) {
	    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));
	  }
	  function d3_layout_histogramBinFixed(range, n) {
	    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];
	    while (++x <= n) f[x] = m * x + b;
	    return f;
	  }
	  function d3_layout_histogramRange(values) {
	    return [ d3.min(values), d3.max(values) ];
	  }
	  d3.layout.pack = function() {
	    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;
	    function pack(d, i) {
	      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === "function" ? radius : function() {
	        return radius;
	      };
	      root.x = root.y = 0;
	      d3_layout_hierarchyVisitAfter(root, function(d) {
	        d.r = +r(d.value);
	      });
	      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);
	      if (padding) {
	        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;
	        d3_layout_hierarchyVisitAfter(root, function(d) {
	          d.r += dr;
	        });
	        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);
	        d3_layout_hierarchyVisitAfter(root, function(d) {
	          d.r -= dr;
	        });
	      }
	      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));
	      return nodes;
	    }
	    pack.size = function(_) {
	      if (!arguments.length) return size;
	      size = _;
	      return pack;
	    };
	    pack.radius = function(_) {
	      if (!arguments.length) return radius;
	      radius = _ == null || typeof _ === "function" ? _ : +_;
	      return pack;
	    };
	    pack.padding = function(_) {
	      if (!arguments.length) return padding;
	      padding = +_;
	      return pack;
	    };
	    return d3_layout_hierarchyRebind(pack, hierarchy);
	  };
	  function d3_layout_packSort(a, b) {
	    return a.value - b.value;
	  }
	  function d3_layout_packInsert(a, b) {
	    var c = a._pack_next;
	    a._pack_next = b;
	    b._pack_prev = a;
	    b._pack_next = c;
	    c._pack_prev = b;
	  }
	  function d3_layout_packSplice(a, b) {
	    a._pack_next = b;
	    b._pack_prev = a;
	  }
	  function d3_layout_packIntersects(a, b) {
	    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;
	    return .999 * dr * dr > dx * dx + dy * dy;
	  }
	  function d3_layout_packSiblings(node) {
	    if (!(nodes = node.children) || !(n = nodes.length)) return;
	    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;
	    function bound(node) {
	      xMin = Math.min(node.x - node.r, xMin);
	      xMax = Math.max(node.x + node.r, xMax);
	      yMin = Math.min(node.y - node.r, yMin);
	      yMax = Math.max(node.y + node.r, yMax);
	    }
	    nodes.forEach(d3_layout_packLink);
	    a = nodes[0];
	    a.x = -a.r;
	    a.y = 0;
	    bound(a);
	    if (n > 1) {
	      b = nodes[1];
	      b.x = b.r;
	      b.y = 0;
	      bound(b);
	      if (n > 2) {
	        c = nodes[2];
	        d3_layout_packPlace(a, b, c);
	        bound(c);
	        d3_layout_packInsert(a, c);
	        a._pack_prev = c;
	        d3_layout_packInsert(c, b);
	        b = a._pack_next;
	        for (i = 3; i < n; i++) {
	          d3_layout_packPlace(a, b, c = nodes[i]);
	          var isect = 0, s1 = 1, s2 = 1;
	          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {
	            if (d3_layout_packIntersects(j, c)) {
	              isect = 1;
	              break;
	            }
	          }
	          if (isect == 1) {
	            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {
	              if (d3_layout_packIntersects(k, c)) {
	                break;
	              }
	            }
	          }
	          if (isect) {
	            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);
	            i--;
	          } else {
	            d3_layout_packInsert(a, c);
	            b = c;
	            bound(c);
	          }
	        }
	      }
	    }
	    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;
	    for (i = 0; i < n; i++) {
	      c = nodes[i];
	      c.x -= cx;
	      c.y -= cy;
	      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));
	    }
	    node.r = cr;
	    nodes.forEach(d3_layout_packUnlink);
	  }
	  function d3_layout_packLink(node) {
	    node._pack_next = node._pack_prev = node;
	  }
	  function d3_layout_packUnlink(node) {
	    delete node._pack_next;
	    delete node._pack_prev;
	  }
	  function d3_layout_packTransform(node, x, y, k) {
	    var children = node.children;
	    node.x = x += k * node.x;
	    node.y = y += k * node.y;
	    node.r *= k;
	    if (children) {
	      var i = -1, n = children.length;
	      while (++i < n) d3_layout_packTransform(children[i], x, y, k);
	    }
	  }
	  function d3_layout_packPlace(a, b, c) {
	    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;
	    if (db && (dx || dy)) {
	      var da = b.r + c.r, dc = dx * dx + dy * dy;
	      da *= da;
	      db *= db;
	      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);
	      c.x = a.x + x * dx + y * dy;
	      c.y = a.y + x * dy - y * dx;
	    } else {
	      c.x = a.x + db;
	      c.y = a.y;
	    }
	  }
	  d3.layout.tree = function() {
	    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;
	    function tree(d, i) {
	      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);
	      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;
	      d3_layout_hierarchyVisitBefore(root1, secondWalk);
	      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {
	        var left = root0, right = root0, bottom = root0;
	        d3_layout_hierarchyVisitBefore(root0, function(node) {
	          if (node.x < left.x) left = node;
	          if (node.x > right.x) right = node;
	          if (node.depth > bottom.depth) bottom = node;
	        });
	        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);
	        d3_layout_hierarchyVisitBefore(root0, function(node) {
	          node.x = (node.x + tx) * kx;
	          node.y = node.depth * ky;
	        });
	      }
	      return nodes;
	    }
	    function wrapTree(root0) {
	      var root1 = {
	        A: null,
	        children: [ root0 ]
	      }, queue = [ root1 ], node1;
	      while ((node1 = queue.pop()) != null) {
	        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {
	          queue.push((children[i] = child = {
	            _: children[i],
	            parent: node1,
	            children: (child = children[i].children) && child.slice() || [],
	            A: null,
	            a: null,
	            z: 0,
	            m: 0,
	            c: 0,
	            s: 0,
	            t: null,
	            i: i
	          }).a = child);
	        }
	      }
	      return root1.children[0];
	    }
	    function firstWalk(v) {
	      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;
	      if (children.length) {
	        d3_layout_treeShift(v);
	        var midpoint = (children[0].z + children[children.length - 1].z) / 2;
	        if (w) {
	          v.z = w.z + separation(v._, w._);
	          v.m = v.z - midpoint;
	        } else {
	          v.z = midpoint;
	        }
	      } else if (w) {
	        v.z = w.z + separation(v._, w._);
	      }
	      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);
	    }
	    function secondWalk(v) {
	      v._.x = v.z + v.parent.m;
	      v.m += v.parent.m;
	    }
	    function apportion(v, w, ancestor) {
	      if (w) {
	        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;
	        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {
	          vom = d3_layout_treeLeft(vom);
	          vop = d3_layout_treeRight(vop);
	          vop.a = v;
	          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);
	          if (shift > 0) {
	            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);
	            sip += shift;
	            sop += shift;
	          }
	          sim += vim.m;
	          sip += vip.m;
	          som += vom.m;
	          sop += vop.m;
	        }
	        if (vim && !d3_layout_treeRight(vop)) {
	          vop.t = vim;
	          vop.m += sim - sop;
	        }
	        if (vip && !d3_layout_treeLeft(vom)) {
	          vom.t = vip;
	          vom.m += sip - som;
	          ancestor = v;
	        }
	      }
	      return ancestor;
	    }
	    function sizeNode(node) {
	      node.x *= size[0];
	      node.y = node.depth * size[1];
	    }
	    tree.separation = function(x) {
	      if (!arguments.length) return separation;
	      separation = x;
	      return tree;
	    };
	    tree.size = function(x) {
	      if (!arguments.length) return nodeSize ? null : size;
	      nodeSize = (size = x) == null ? sizeNode : null;
	      return tree;
	    };
	    tree.nodeSize = function(x) {
	      if (!arguments.length) return nodeSize ? size : null;
	      nodeSize = (size = x) == null ? null : sizeNode;
	      return tree;
	    };
	    return d3_layout_hierarchyRebind(tree, hierarchy);
	  };
	  function d3_layout_treeSeparation(a, b) {
	    return a.parent == b.parent ? 1 : 2;
	  }
	  function d3_layout_treeLeft(v) {
	    var children = v.children;
	    return children.length ? children[0] : v.t;
	  }
	  function d3_layout_treeRight(v) {
	    var children = v.children, n;
	    return (n = children.length) ? children[n - 1] : v.t;
	  }
	  function d3_layout_treeMove(wm, wp, shift) {
	    var change = shift / (wp.i - wm.i);
	    wp.c -= change;
	    wp.s += shift;
	    wm.c += change;
	    wp.z += shift;
	    wp.m += shift;
	  }
	  function d3_layout_treeShift(v) {
	    var shift = 0, change = 0, children = v.children, i = children.length, w;
	    while (--i >= 0) {
	      w = children[i];
	      w.z += shift;
	      w.m += shift;
	      shift += w.s + (change += w.c);
	    }
	  }
	  function d3_layout_treeAncestor(vim, v, ancestor) {
	    return vim.a.parent === v.parent ? vim.a : ancestor;
	  }
	  d3.layout.cluster = function() {
	    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;
	    function cluster(d, i) {
	      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;
	      d3_layout_hierarchyVisitAfter(root, function(node) {
	        var children = node.children;
	        if (children && children.length) {
	          node.x = d3_layout_clusterX(children);
	          node.y = d3_layout_clusterY(children);
	        } else {
	          node.x = previousNode ? x += separation(node, previousNode) : 0;
	          node.y = 0;
	          previousNode = node;
	        }
	      });
	      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;
	      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {
	        node.x = (node.x - root.x) * size[0];
	        node.y = (root.y - node.y) * size[1];
	      } : function(node) {
	        node.x = (node.x - x0) / (x1 - x0) * size[0];
	        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];
	      });
	      return nodes;
	    }
	    cluster.separation = function(x) {
	      if (!arguments.length) return separation;
	      separation = x;
	      return cluster;
	    };
	    cluster.size = function(x) {
	      if (!arguments.length) return nodeSize ? null : size;
	      nodeSize = (size = x) == null;
	      return cluster;
	    };
	    cluster.nodeSize = function(x) {
	      if (!arguments.length) return nodeSize ? size : null;
	      nodeSize = (size = x) != null;
	      return cluster;
	    };
	    return d3_layout_hierarchyRebind(cluster, hierarchy);
	  };
	  function d3_layout_clusterY(children) {
	    return 1 + d3.max(children, function(child) {
	      return child.y;
	    });
	  }
	  function d3_layout_clusterX(children) {
	    return children.reduce(function(x, child) {
	      return x + child.x;
	    }, 0) / children.length;
	  }
	  function d3_layout_clusterLeft(node) {
	    var children = node.children;
	    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;
	  }
	  function d3_layout_clusterRight(node) {
	    var children = node.children, n;
	    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;
	  }
	  d3.layout.treemap = function() {
	    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = "squarify", ratio = .5 * (1 + Math.sqrt(5));
	    function scale(children, k) {
	      var i = -1, n = children.length, child, area;
	      while (++i < n) {
	        area = (child = children[i]).value * (k < 0 ? 0 : k);
	        child.area = isNaN(area) || area <= 0 ? 0 : area;
	      }
	    }
	    function squarify(node) {
	      var children = node.children;
	      if (children && children.length) {
	        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === "slice" ? rect.dx : mode === "dice" ? rect.dy : mode === "slice-dice" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;
	        scale(remaining, rect.dx * rect.dy / node.value);
	        row.area = 0;
	        while ((n = remaining.length) > 0) {
	          row.push(child = remaining[n - 1]);
	          row.area += child.area;
	          if (mode !== "squarify" || (score = worst(row, u)) <= best) {
	            remaining.pop();
	            best = score;
	          } else {
	            row.area -= row.pop().area;
	            position(row, u, rect, false);
	            u = Math.min(rect.dx, rect.dy);
	            row.length = row.area = 0;
	            best = Infinity;
	          }
	        }
	        if (row.length) {
	          position(row, u, rect, true);
	          row.length = row.area = 0;
	        }
	        children.forEach(squarify);
	      }
	    }
	    function stickify(node) {
	      var children = node.children;
	      if (children && children.length) {
	        var rect = pad(node), remaining = children.slice(), child, row = [];
	        scale(remaining, rect.dx * rect.dy / node.value);
	        row.area = 0;
	        while (child = remaining.pop()) {
	          row.push(child);
	          row.area += child.area;
	          if (child.z != null) {
	            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);
	            row.length = row.area = 0;
	          }
	        }
	        children.forEach(stickify);
	      }
	    }
	    function worst(row, u) {
	      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;
	      while (++i < n) {
	        if (!(r = row[i].area)) continue;
	        if (r < rmin) rmin = r;
	        if (r > rmax) rmax = r;
	      }
	      s *= s;
	      u *= u;
	      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;
	    }
	    function position(row, u, rect, flush) {
	      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;
	      if (u == rect.dx) {
	        if (flush || v > rect.dy) v = rect.dy;
	        while (++i < n) {
	          o = row[i];
	          o.x = x;
	          o.y = y;
	          o.dy = v;
	          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);
	        }
	        o.z = true;
	        o.dx += rect.x + rect.dx - x;
	        rect.y += v;
	        rect.dy -= v;
	      } else {
	        if (flush || v > rect.dx) v = rect.dx;
	        while (++i < n) {
	          o = row[i];
	          o.x = x;
	          o.y = y;
	          o.dx = v;
	          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);
	        }
	        o.z = false;
	        o.dy += rect.y + rect.dy - y;
	        rect.x += v;
	        rect.dx -= v;
	      }
	    }
	    function treemap(d) {
	      var nodes = stickies || hierarchy(d), root = nodes[0];
	      root.x = root.y = 0;
	      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;
	      if (stickies) hierarchy.revalue(root);
	      scale([ root ], root.dx * root.dy / root.value);
	      (stickies ? stickify : squarify)(root);
	      if (sticky) stickies = nodes;
	      return nodes;
	    }
	    treemap.size = function(x) {
	      if (!arguments.length) return size;
	      size = x;
	      return treemap;
	    };
	    treemap.padding = function(x) {
	      if (!arguments.length) return padding;
	      function padFunction(node) {
	        var p = x.call(treemap, node, node.depth);
	        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === "number" ? [ p, p, p, p ] : p);
	      }
	      function padConstant(node) {
	        return d3_layout_treemapPad(node, x);
	      }
	      var type;
	      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === "function" ? padFunction : type === "number" ? (x = [ x, x, x, x ], 
	      padConstant) : padConstant;
	      return treemap;
	    };
	    treemap.round = function(x) {
	      if (!arguments.length) return round != Number;
	      round = x ? Math.round : Number;
	      return treemap;
	    };
	    treemap.sticky = function(x) {
	      if (!arguments.length) return sticky;
	      sticky = x;
	      stickies = null;
	      return treemap;
	    };
	    treemap.ratio = function(x) {
	      if (!arguments.length) return ratio;
	      ratio = x;
	      return treemap;
	    };
	    treemap.mode = function(x) {
	      if (!arguments.length) return mode;
	      mode = x + "";
	      return treemap;
	    };
	    return d3_layout_hierarchyRebind(treemap, hierarchy);
	  };
	  function d3_layout_treemapPadNull(node) {
	    return {
	      x: node.x,
	      y: node.y,
	      dx: node.dx,
	      dy: node.dy
	    };
	  }
	  function d3_layout_treemapPad(node, padding) {
	    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];
	    if (dx < 0) {
	      x += dx / 2;
	      dx = 0;
	    }
	    if (dy < 0) {
	      y += dy / 2;
	      dy = 0;
	    }
	    return {
	      x: x,
	      y: y,
	      dx: dx,
	      dy: dy
	    };
	  }
	  d3.random = {
	    normal: function(µ, σ) {
	      var n = arguments.length;
	      if (n < 2) σ = 1;
	      if (n < 1) µ = 0;
	      return function() {
	        var x, y, r;
	        do {
	          x = Math.random() * 2 - 1;
	          y = Math.random() * 2 - 1;
	          r = x * x + y * y;
	        } while (!r || r > 1);
	        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);
	      };
	    },
	    logNormal: function() {
	      var random = d3.random.normal.apply(d3, arguments);
	      return function() {
	        return Math.exp(random());
	      };
	    },
	    bates: function(m) {
	      var random = d3.random.irwinHall(m);
	      return function() {
	        return random() / m;
	      };
	    },
	    irwinHall: function(m) {
	      return function() {
	        for (var s = 0, j = 0; j < m; j++) s += Math.random();
	        return s;
	      };
	    }
	  };
	  d3.scale = {};
	  function d3_scaleExtent(domain) {
	    var start = domain[0], stop = domain[domain.length - 1];
	    return start < stop ? [ start, stop ] : [ stop, start ];
	  }
	  function d3_scaleRange(scale) {
	    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());
	  }
	  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {
	    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);
	    return function(x) {
	      return i(u(x));
	    };
	  }
	  function d3_scale_nice(domain, nice) {
	    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;
	    if (x1 < x0) {
	      dx = i0, i0 = i1, i1 = dx;
	      dx = x0, x0 = x1, x1 = dx;
	    }
	    domain[i0] = nice.floor(x0);
	    domain[i1] = nice.ceil(x1);
	    return domain;
	  }
	  function d3_scale_niceStep(step) {
	    return step ? {
	      floor: function(x) {
	        return Math.floor(x / step) * step;
	      },
	      ceil: function(x) {
	        return Math.ceil(x / step) * step;
	      }
	    } : d3_scale_niceIdentity;
	  }
	  var d3_scale_niceIdentity = {
	    floor: d3_identity,
	    ceil: d3_identity
	  };
	  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {
	    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;
	    if (domain[k] < domain[0]) {
	      domain = domain.slice().reverse();
	      range = range.slice().reverse();
	    }
	    while (++j <= k) {
	      u.push(uninterpolate(domain[j - 1], domain[j]));
	      i.push(interpolate(range[j - 1], range[j]));
	    }
	    return function(x) {
	      var j = d3.bisect(domain, x, 1, k) - 1;
	      return i[j](u[j](x));
	    };
	  }
	  d3.scale.linear = function() {
	    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);
	  };
	  function d3_scale_linear(domain, range, interpolate, clamp) {
	    var output, input;
	    function rescale() {
	      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;
	      output = linear(domain, range, uninterpolate, interpolate);
	      input = linear(range, domain, uninterpolate, d3_interpolate);
	      return scale;
	    }
	    function scale(x) {
	      return output(x);
	    }
	    scale.invert = function(y) {
	      return input(y);
	    };
	    scale.domain = function(x) {
	      if (!arguments.length) return domain;
	      domain = x.map(Number);
	      return rescale();
	    };
	    scale.range = function(x) {
	      if (!arguments.length) return range;
	      range = x;
	      return rescale();
	    };
	    scale.rangeRound = function(x) {
	      return scale.range(x).interpolate(d3_interpolateRound);
	    };
	    scale.clamp = function(x) {
	      if (!arguments.length) return clamp;
	      clamp = x;
	      return rescale();
	    };
	    scale.interpolate = function(x) {
	      if (!arguments.length) return interpolate;
	      interpolate = x;
	      return rescale();
	    };
	    scale.ticks = function(m) {
	      return d3_scale_linearTicks(domain, m);
	    };
	    scale.tickFormat = function(m, format) {
	      return d3_scale_linearTickFormat(domain, m, format);
	    };
	    scale.nice = function(m) {
	      d3_scale_linearNice(domain, m);
	      return rescale();
	    };
	    scale.copy = function() {
	      return d3_scale_linear(domain, range, interpolate, clamp);
	    };
	    return rescale();
	  }
	  function d3_scale_linearRebind(scale, linear) {
	    return d3.rebind(scale, linear, "range", "rangeRound", "interpolate", "clamp");
	  }
	  function d3_scale_linearNice(domain, m) {
	    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));
	    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));
	    return domain;
	  }
	  function d3_scale_linearTickRange(domain, m) {
	    if (m == null) m = 10;
	    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;
	    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;
	    extent[0] = Math.ceil(extent[0] / step) * step;
	    extent[1] = Math.floor(extent[1] / step) * step + step * .5;
	    extent[2] = step;
	    return extent;
	  }
	  function d3_scale_linearTicks(domain, m) {
	    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));
	  }
	  function d3_scale_linearTickFormat(domain, m, format) {
	    var range = d3_scale_linearTickRange(domain, m);
	    if (format) {
	      var match = d3_format_re.exec(format);
	      match.shift();
	      if (match[8] === "s") {
	        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));
	        if (!match[7]) match[7] = "." + d3_scale_linearPrecision(prefix.scale(range[2]));
	        match[8] = "f";
	        format = d3.format(match.join(""));
	        return function(d) {
	          return format(prefix.scale(d)) + prefix.symbol;
	        };
	      }
	      if (!match[7]) match[7] = "." + d3_scale_linearFormatPrecision(match[8], range);
	      format = match.join("");
	    } else {
	      format = ",." + d3_scale_linearPrecision(range[2]) + "f";
	    }
	    return d3.format(format);
	  }
	  var d3_scale_linearFormatSignificant = {
	    s: 1,
	    g: 1,
	    p: 1,
	    r: 1,
	    e: 1
	  };
	  function d3_scale_linearPrecision(value) {
	    return -Math.floor(Math.log(value) / Math.LN10 + .01);
	  }
	  function d3_scale_linearFormatPrecision(type, range) {
	    var p = d3_scale_linearPrecision(range[2]);
	    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== "e") : p - (type === "%") * 2;
	  }
	  d3.scale.log = function() {
	    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);
	  };
	  function d3_scale_log(linear, base, positive, domain) {
	    function log(x) {
	      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);
	    }
	    function pow(x) {
	      return positive ? Math.pow(base, x) : -Math.pow(base, -x);
	    }
	    function scale(x) {
	      return linear(log(x));
	    }
	    scale.invert = function(x) {
	      return pow(linear.invert(x));
	    };
	    scale.domain = function(x) {
	      if (!arguments.length) return domain;
	      positive = x[0] >= 0;
	      linear.domain((domain = x.map(Number)).map(log));
	      return scale;
	    };
	    scale.base = function(_) {
	      if (!arguments.length) return base;
	      base = +_;
	      linear.domain(domain.map(log));
	      return scale;
	    };
	    scale.nice = function() {
	      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);
	      linear.domain(niced);
	      domain = niced.map(pow);
	      return scale;
	    };
	    scale.ticks = function() {
	      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;
	      if (isFinite(j - i)) {
	        if (positive) {
	          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);
	          ticks.push(pow(i));
	        } else {
	          ticks.push(pow(i));
	          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);
	        }
	        for (i = 0; ticks[i] < u; i++) {}
	        for (j = ticks.length; ticks[j - 1] > v; j--) {}
	        ticks = ticks.slice(i, j);
	      }
	      return ticks;
	    };
	    scale.tickFormat = function(n, format) {
	      if (!arguments.length) return d3_scale_logFormat;
	      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== "function") format = d3.format(format);
	      var k = Math.max(1, base * n / scale.ticks().length);
	      return function(d) {
	        var i = d / pow(Math.round(log(d)));
	        if (i * base < base - .5) i *= base;
	        return i <= k ? format(d) : "";
	      };
	    };
	    scale.copy = function() {
	      return d3_scale_log(linear.copy(), base, positive, domain);
	    };
	    return d3_scale_linearRebind(scale, linear);
	  }
	  var d3_scale_logFormat = d3.format(".0e"), d3_scale_logNiceNegative = {
	    floor: function(x) {
	      return -Math.ceil(-x);
	    },
	    ceil: function(x) {
	      return -Math.floor(-x);
	    }
	  };
	  d3.scale.pow = function() {
	    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);
	  };
	  function d3_scale_pow(linear, exponent, domain) {
	    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);
	    function scale(x) {
	      return linear(powp(x));
	    }
	    scale.invert = function(x) {
	      return powb(linear.invert(x));
	    };
	    scale.domain = function(x) {
	      if (!arguments.length) return domain;
	      linear.domain((domain = x.map(Number)).map(powp));
	      return scale;
	    };
	    scale.ticks = function(m) {
	      return d3_scale_linearTicks(domain, m);
	    };
	    scale.tickFormat = function(m, format) {
	      return d3_scale_linearTickFormat(domain, m, format);
	    };
	    scale.nice = function(m) {
	      return scale.domain(d3_scale_linearNice(domain, m));
	    };
	    scale.exponent = function(x) {
	      if (!arguments.length) return exponent;
	      powp = d3_scale_powPow(exponent = x);
	      powb = d3_scale_powPow(1 / exponent);
	      linear.domain(domain.map(powp));
	      return scale;
	    };
	    scale.copy = function() {
	      return d3_scale_pow(linear.copy(), exponent, domain);
	    };
	    return d3_scale_linearRebind(scale, linear);
	  }
	  function d3_scale_powPow(e) {
	    return function(x) {
	      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);
	    };
	  }
	  d3.scale.sqrt = function() {
	    return d3.scale.pow().exponent(.5);
	  };
	  d3.scale.ordinal = function() {
	    return d3_scale_ordinal([], {
	      t: "range",
	      a: [ [] ]
	    });
	  };
	  function d3_scale_ordinal(domain, ranger) {
	    var index, range, rangeBand;
	    function scale(x) {
	      return range[((index.get(x) || (ranger.t === "range" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];
	    }
	    function steps(start, step) {
	      return d3.range(domain.length).map(function(i) {
	        return start + step * i;
	      });
	    }
	    scale.domain = function(x) {
	      if (!arguments.length) return domain;
	      domain = [];
	      index = new d3_Map();
	      var i = -1, n = x.length, xi;
	      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));
	      return scale[ranger.t].apply(scale, ranger.a);
	    };
	    scale.range = function(x) {
	      if (!arguments.length) return range;
	      range = x;
	      rangeBand = 0;
	      ranger = {
	        t: "range",
	        a: arguments
	      };
	      return scale;
	    };
	    scale.rangePoints = function(x, padding) {
	      if (arguments.length < 2) padding = 0;
	      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, 
	      0) : (stop - start) / (domain.length - 1 + padding);
	      range = steps(start + step * padding / 2, step);
	      rangeBand = 0;
	      ranger = {
	        t: "rangePoints",
	        a: arguments
	      };
	      return scale;
	    };
	    scale.rangeRoundPoints = function(x, padding) {
	      if (arguments.length < 2) padding = 0;
	      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), 
	      0) : (stop - start) / (domain.length - 1 + padding) | 0;
	      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);
	      rangeBand = 0;
	      ranger = {
	        t: "rangeRoundPoints",
	        a: arguments
	      };
	      return scale;
	    };
	    scale.rangeBands = function(x, padding, outerPadding) {
	      if (arguments.length < 2) padding = 0;
	      if (arguments.length < 3) outerPadding = padding;
	      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);
	      range = steps(start + step * outerPadding, step);
	      if (reverse) range.reverse();
	      rangeBand = step * (1 - padding);
	      ranger = {
	        t: "rangeBands",
	        a: arguments
	      };
	      return scale;
	    };
	    scale.rangeRoundBands = function(x, padding, outerPadding) {
	      if (arguments.length < 2) padding = 0;
	      if (arguments.length < 3) outerPadding = padding;
	      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));
	      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);
	      if (reverse) range.reverse();
	      rangeBand = Math.round(step * (1 - padding));
	      ranger = {
	        t: "rangeRoundBands",
	        a: arguments
	      };
	      return scale;
	    };
	    scale.rangeBand = function() {
	      return rangeBand;
	    };
	    scale.rangeExtent = function() {
	      return d3_scaleExtent(ranger.a[0]);
	    };
	    scale.copy = function() {
	      return d3_scale_ordinal(domain, ranger);
	    };
	    return scale.domain(domain);
	  }
	  d3.scale.category10 = function() {
	    return d3.scale.ordinal().range(d3_category10);
	  };
	  d3.scale.category20 = function() {
	    return d3.scale.ordinal().range(d3_category20);
	  };
	  d3.scale.category20b = function() {
	    return d3.scale.ordinal().range(d3_category20b);
	  };
	  d3.scale.category20c = function() {
	    return d3.scale.ordinal().range(d3_category20c);
	  };
	  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);
	  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);
	  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);
	  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);
	  d3.scale.quantile = function() {
	    return d3_scale_quantile([], []);
	  };
	  function d3_scale_quantile(domain, range) {
	    var thresholds;
	    function rescale() {
	      var k = 0, q = range.length;
	      thresholds = [];
	      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);
	      return scale;
	    }
	    function scale(x) {
	      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];
	    }
	    scale.domain = function(x) {
	      if (!arguments.length) return domain;
	      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);
	      return rescale();
	    };
	    scale.range = function(x) {
	      if (!arguments.length) return range;
	      range = x;
	      return rescale();
	    };
	    scale.quantiles = function() {
	      return thresholds;
	    };
	    scale.invertExtent = function(y) {
	      y = range.indexOf(y);
	      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];
	    };
	    scale.copy = function() {
	      return d3_scale_quantile(domain, range);
	    };
	    return rescale();
	  }
	  d3.scale.quantize = function() {
	    return d3_scale_quantize(0, 1, [ 0, 1 ]);
	  };
	  function d3_scale_quantize(x0, x1, range) {
	    var kx, i;
	    function scale(x) {
	      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];
	    }
	    function rescale() {
	      kx = range.length / (x1 - x0);
	      i = range.length - 1;
	      return scale;
	    }
	    scale.domain = function(x) {
	      if (!arguments.length) return [ x0, x1 ];
	      x0 = +x[0];
	      x1 = +x[x.length - 1];
	      return rescale();
	    };
	    scale.range = function(x) {
	      if (!arguments.length) return range;
	      range = x;
	      return rescale();
	    };
	    scale.invertExtent = function(y) {
	      y = range.indexOf(y);
	      y = y < 0 ? NaN : y / kx + x0;
	      return [ y, y + 1 / kx ];
	    };
	    scale.copy = function() {
	      return d3_scale_quantize(x0, x1, range);
	    };
	    return rescale();
	  }
	  d3.scale.threshold = function() {
	    return d3_scale_threshold([ .5 ], [ 0, 1 ]);
	  };
	  function d3_scale_threshold(domain, range) {
	    function scale(x) {
	      if (x <= x) return range[d3.bisect(domain, x)];
	    }
	    scale.domain = function(_) {
	      if (!arguments.length) return domain;
	      domain = _;
	      return scale;
	    };
	    scale.range = function(_) {
	      if (!arguments.length) return range;
	      range = _;
	      return scale;
	    };
	    scale.invertExtent = function(y) {
	      y = range.indexOf(y);
	      return [ domain[y - 1], domain[y] ];
	    };
	    scale.copy = function() {
	      return d3_scale_threshold(domain, range);
	    };
	    return scale;
	  }
	  d3.scale.identity = function() {
	    return d3_scale_identity([ 0, 1 ]);
	  };
	  function d3_scale_identity(domain) {
	    function identity(x) {
	      return +x;
	    }
	    identity.invert = identity;
	    identity.domain = identity.range = function(x) {
	      if (!arguments.length) return domain;
	      domain = x.map(identity);
	      return identity;
	    };
	    identity.ticks = function(m) {
	      return d3_scale_linearTicks(domain, m);
	    };
	    identity.tickFormat = function(m, format) {
	      return d3_scale_linearTickFormat(domain, m, format);
	    };
	    identity.copy = function() {
	      return d3_scale_identity(domain);
	    };
	    return identity;
	  }
	  d3.svg = {};
	  function d3_zero() {
	    return 0;
	  }
	  d3.svg.arc = function() {
	    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;
	    function arc() {
	      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;
	      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;
	      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : "") + "Z";
	      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];
	      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {
	        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);
	        if (!cw) p1 *= -1;
	        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));
	        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));
	      }
	      if (r1) {
	        x0 = r1 * Math.cos(a0 + p1);
	        y0 = r1 * Math.sin(a0 + p1);
	        x1 = r1 * Math.cos(a1 - p1);
	        y1 = r1 * Math.sin(a1 - p1);
	        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;
	        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {
	          var h1 = (a0 + a1) / 2;
	          x0 = r1 * Math.cos(h1);
	          y0 = r1 * Math.sin(h1);
	          x1 = y1 = null;
	        }
	      } else {
	        x0 = y0 = 0;
	      }
	      if (r0) {
	        x2 = r0 * Math.cos(a1 - p0);
	        y2 = r0 * Math.sin(a1 - p0);
	        x3 = r0 * Math.cos(a0 + p0);
	        y3 = r0 * Math.sin(a0 + p0);
	        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;
	        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {
	          var h0 = (a0 + a1) / 2;
	          x2 = r0 * Math.cos(h0);
	          y2 = r0 * Math.sin(h0);
	          x3 = y3 = null;
	        }
	      } else {
	        x2 = y2 = 0;
	      }
	      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {
	        cr = r0 < r1 ^ cw ? 0 : 1;
	        var rc1 = rc, rc0 = rc;
	        if (da < π) {
	          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);
	          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));
	          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));
	        }
	        if (x1 != null) {
	          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);
	          if (rc === rc1) {
	            path.push("M", t30[0], "A", rc1, ",", rc1, " 0 0,", cr, " ", t30[1], "A", r1, ",", r1, " 0 ", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), ",", cw, " ", t12[1], "A", rc1, ",", rc1, " 0 0,", cr, " ", t12[0]);
	          } else {
	            path.push("M", t30[0], "A", rc1, ",", rc1, " 0 1,", cr, " ", t12[0]);
	          }
	        } else {
	          path.push("M", x0, ",", y0);
	        }
	        if (x3 != null) {
	          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);
	          if (rc === rc0) {
	            path.push("L", t21[0], "A", rc0, ",", rc0, " 0 0,", cr, " ", t21[1], "A", r0, ",", r0, " 0 ", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), ",", 1 - cw, " ", t03[1], "A", rc0, ",", rc0, " 0 0,", cr, " ", t03[0]);
	          } else {
	            path.push("L", t21[0], "A", rc0, ",", rc0, " 0 0,", cr, " ", t03[0]);
	          }
	        } else {
	          path.push("L", x2, ",", y2);
	        }
	      } else {
	        path.push("M", x0, ",", y0);
	        if (x1 != null) path.push("A", r1, ",", r1, " 0 ", l1, ",", cw, " ", x1, ",", y1);
	        path.push("L", x2, ",", y2);
	        if (x3 != null) path.push("A", r0, ",", r0, " 0 ", l0, ",", 1 - cw, " ", x3, ",", y3);
	      }
	      path.push("Z");
	      return path.join("");
	    }
	    function circleSegment(r1, cw) {
	      return "M0," + r1 + "A" + r1 + "," + r1 + " 0 1," + cw + " 0," + -r1 + "A" + r1 + "," + r1 + " 0 1," + cw + " 0," + r1;
	    }
	    arc.innerRadius = function(v) {
	      if (!arguments.length) return innerRadius;
	      innerRadius = d3_functor(v);
	      return arc;
	    };
	    arc.outerRadius = function(v) {
	      if (!arguments.length) return outerRadius;
	      outerRadius = d3_functor(v);
	      return arc;
	    };
	    arc.cornerRadius = function(v) {
	      if (!arguments.length) return cornerRadius;
	      cornerRadius = d3_functor(v);
	      return arc;
	    };
	    arc.padRadius = function(v) {
	      if (!arguments.length) return padRadius;
	      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);
	      return arc;
	    };
	    arc.startAngle = function(v) {
	      if (!arguments.length) return startAngle;
	      startAngle = d3_functor(v);
	      return arc;
	    };
	    arc.endAngle = function(v) {
	      if (!arguments.length) return endAngle;
	      endAngle = d3_functor(v);
	      return arc;
	    };
	    arc.padAngle = function(v) {
	      if (!arguments.length) return padAngle;
	      padAngle = d3_functor(v);
	      return arc;
	    };
	    arc.centroid = function() {
	      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;
	      return [ Math.cos(a) * r, Math.sin(a) * r ];
	    };
	    return arc;
	  };
	  var d3_svg_arcAuto = "auto";
	  function d3_svg_arcInnerRadius(d) {
	    return d.innerRadius;
	  }
	  function d3_svg_arcOuterRadius(d) {
	    return d.outerRadius;
	  }
	  function d3_svg_arcStartAngle(d) {
	    return d.startAngle;
	  }
	  function d3_svg_arcEndAngle(d) {
	    return d.endAngle;
	  }
	  function d3_svg_arcPadAngle(d) {
	    return d && d.padAngle;
	  }
	  function d3_svg_arcSweep(x0, y0, x1, y1) {
	    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;
	  }
	  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {
	    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;
	    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;
	    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];
	  }
	  function d3_svg_line(projection) {
	    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;
	    function line(data) {
	      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);
	      function segment() {
	        segments.push("M", interpolate(projection(points), tension));
	      }
	      while (++i < n) {
	        if (defined.call(this, d = data[i], i)) {
	          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);
	        } else if (points.length) {
	          segment();
	          points = [];
	        }
	      }
	      if (points.length) segment();
	      return segments.length ? segments.join("") : null;
	    }
	    line.x = function(_) {
	      if (!arguments.length) return x;
	      x = _;
	      return line;
	    };
	    line.y = function(_) {
	      if (!arguments.length) return y;
	      y = _;
	      return line;
	    };
	    line.defined = function(_) {
	      if (!arguments.length) return defined;
	      defined = _;
	      return line;
	    };
	    line.interpolate = function(_) {
	      if (!arguments.length) return interpolateKey;
	      if (typeof _ === "function") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;
	      return line;
	    };
	    line.tension = function(_) {
	      if (!arguments.length) return tension;
	      tension = _;
	      return line;
	    };
	    return line;
	  }
	  d3.svg.line = function() {
	    return d3_svg_line(d3_identity);
	  };
	  var d3_svg_lineInterpolators = d3.map({
	    linear: d3_svg_lineLinear,
	    "linear-closed": d3_svg_lineLinearClosed,
	    step: d3_svg_lineStep,
	    "step-before": d3_svg_lineStepBefore,
	    "step-after": d3_svg_lineStepAfter,
	    basis: d3_svg_lineBasis,
	    "basis-open": d3_svg_lineBasisOpen,
	    "basis-closed": d3_svg_lineBasisClosed,
	    bundle: d3_svg_lineBundle,
	    cardinal: d3_svg_lineCardinal,
	    "cardinal-open": d3_svg_lineCardinalOpen,
	    "cardinal-closed": d3_svg_lineCardinalClosed,
	    monotone: d3_svg_lineMonotone
	  });
	  d3_svg_lineInterpolators.forEach(function(key, value) {
	    value.key = key;
	    value.closed = /-closed$/.test(key);
	  });
	  function d3_svg_lineLinear(points) {
	    return points.length > 1 ? points.join("L") : points + "Z";
	  }
	  function d3_svg_lineLinearClosed(points) {
	    return points.join("L") + "Z";
	  }
	  function d3_svg_lineStep(points) {
	    var i = 0, n = points.length, p = points[0], path = [ p[0], ",", p[1] ];
	    while (++i < n) path.push("H", (p[0] + (p = points[i])[0]) / 2, "V", p[1]);
	    if (n > 1) path.push("H", p[0]);
	    return path.join("");
	  }
	  function d3_svg_lineStepBefore(points) {
	    var i = 0, n = points.length, p = points[0], path = [ p[0], ",", p[1] ];
	    while (++i < n) path.push("V", (p = points[i])[1], "H", p[0]);
	    return path.join("");
	  }
	  function d3_svg_lineStepAfter(points) {
	    var i = 0, n = points.length, p = points[0], path = [ p[0], ",", p[1] ];
	    while (++i < n) path.push("H", (p = points[i])[0], "V", p[1]);
	    return path.join("");
	  }
	  function d3_svg_lineCardinalOpen(points, tension) {
	    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));
	  }
	  function d3_svg_lineCardinalClosed(points, tension) {
	    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), 
	    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));
	  }
	  function d3_svg_lineCardinal(points, tension) {
	    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));
	  }
	  function d3_svg_lineHermite(points, tangents) {
	    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {
	      return d3_svg_lineLinear(points);
	    }
	    var quad = points.length != tangents.length, path = "", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;
	    if (quad) {
	      path += "Q" + (p[0] - t0[0] * 2 / 3) + "," + (p[1] - t0[1] * 2 / 3) + "," + p[0] + "," + p[1];
	      p0 = points[1];
	      pi = 2;
	    }
	    if (tangents.length > 1) {
	      t = tangents[1];
	      p = points[pi];
	      pi++;
	      path += "C" + (p0[0] + t0[0]) + "," + (p0[1] + t0[1]) + "," + (p[0] - t[0]) + "," + (p[1] - t[1]) + "," + p[0] + "," + p[1];
	      for (var i = 2; i < tangents.length; i++, pi++) {
	        p = points[pi];
	        t = tangents[i];
	        path += "S" + (p[0] - t[0]) + "," + (p[1] - t[1]) + "," + p[0] + "," + p[1];
	      }
	    }
	    if (quad) {
	      var lp = points[pi];
	      path += "Q" + (p[0] + t[0] * 2 / 3) + "," + (p[1] + t[1] * 2 / 3) + "," + lp[0] + "," + lp[1];
	    }
	    return path;
	  }
	  function d3_svg_lineCardinalTangents(points, tension) {
	    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;
	    while (++i < n) {
	      p0 = p1;
	      p1 = p2;
	      p2 = points[i];
	      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);
	    }
	    return tangents;
	  }
	  function d3_svg_lineBasis(points) {
	    if (points.length < 3) return d3_svg_lineLinear(points);
	    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, ",", y0, "L", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];
	    points.push(points[n - 1]);
	    while (++i <= n) {
	      pi = points[i];
	      px.shift();
	      px.push(pi[0]);
	      py.shift();
	      py.push(pi[1]);
	      d3_svg_lineBasisBezier(path, px, py);
	    }
	    points.pop();
	    path.push("L", pi);
	    return path.join("");
	  }
	  function d3_svg_lineBasisOpen(points) {
	    if (points.length < 4) return d3_svg_lineLinear(points);
	    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];
	    while (++i < 3) {
	      pi = points[i];
	      px.push(pi[0]);
	      py.push(pi[1]);
	    }
	    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + "," + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));
	    --i;
	    while (++i < n) {
	      pi = points[i];
	      px.shift();
	      px.push(pi[0]);
	      py.shift();
	      py.push(pi[1]);
	      d3_svg_lineBasisBezier(path, px, py);
	    }
	    return path.join("");
	  }
	  function d3_svg_lineBasisClosed(points) {
	    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];
	    while (++i < 4) {
	      pi = points[i % n];
	      px.push(pi[0]);
	      py.push(pi[1]);
	    }
	    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];
	    --i;
	    while (++i < m) {
	      pi = points[i % n];
	      px.shift();
	      px.push(pi[0]);
	      py.shift();
	      py.push(pi[1]);
	      d3_svg_lineBasisBezier(path, px, py);
	    }
	    return path.join("");
	  }
	  function d3_svg_lineBundle(points, tension) {
	    var n = points.length - 1;
	    if (n) {
	      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;
	      while (++i <= n) {
	        p = points[i];
	        t = i / n;
	        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);
	        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);
	      }
	    }
	    return d3_svg_lineBasis(points);
	  }
	  function d3_svg_lineDot4(a, b) {
	    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];
	  }
	  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];
	  function d3_svg_lineBasisBezier(path, x, y) {
	    path.push("C", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));
	  }
	  function d3_svg_lineSlope(p0, p1) {
	    return (p1[1] - p0[1]) / (p1[0] - p0[0]);
	  }
	  function d3_svg_lineFiniteDifferences(points) {
	    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);
	    while (++i < j) {
	      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;
	    }
	    m[i] = d;
	    return m;
	  }
	  function d3_svg_lineMonotoneTangents(points) {
	    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;
	    while (++i < j) {
	      d = d3_svg_lineSlope(points[i], points[i + 1]);
	      if (abs(d) < ε) {
	        m[i] = m[i + 1] = 0;
	      } else {
	        a = m[i] / d;
	        b = m[i + 1] / d;
	        s = a * a + b * b;
	        if (s > 9) {
	          s = d * 3 / Math.sqrt(s);
	          m[i] = s * a;
	          m[i + 1] = s * b;
	        }
	      }
	    }
	    i = -1;
	    while (++i <= j) {
	      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));
	      tangents.push([ s || 0, m[i] * s || 0 ]);
	    }
	    return tangents;
	  }
	  function d3_svg_lineMonotone(points) {
	    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));
	  }
	  d3.svg.line.radial = function() {
	    var line = d3_svg_line(d3_svg_lineRadial);
	    line.radius = line.x, delete line.x;
	    line.angle = line.y, delete line.y;
	    return line;
	  };
	  function d3_svg_lineRadial(points) {
	    var point, i = -1, n = points.length, r, a;
	    while (++i < n) {
	      point = points[i];
	      r = point[0];
	      a = point[1] - halfπ;
	      point[0] = r * Math.cos(a);
	      point[1] = r * Math.sin(a);
	    }
	    return points;
	  }
	  function d3_svg_area(projection) {
	    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = "L", tension = .7;
	    function area(data) {
	      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {
	        return x;
	      } : d3_functor(x1), fy1 = y0 === y1 ? function() {
	        return y;
	      } : d3_functor(y1), x, y;
	      function segment() {
	        segments.push("M", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), "Z");
	      }
	      while (++i < n) {
	        if (defined.call(this, d = data[i], i)) {
	          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);
	          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);
	        } else if (points0.length) {
	          segment();
	          points0 = [];
	          points1 = [];
	        }
	      }
	      if (points0.length) segment();
	      return segments.length ? segments.join("") : null;
	    }
	    area.x = function(_) {
	      if (!arguments.length) return x1;
	      x0 = x1 = _;
	      return area;
	    };
	    area.x0 = function(_) {
	      if (!arguments.length) return x0;
	      x0 = _;
	      return area;
	    };
	    area.x1 = function(_) {
	      if (!arguments.length) return x1;
	      x1 = _;
	      return area;
	    };
	    area.y = function(_) {
	      if (!arguments.length) return y1;
	      y0 = y1 = _;
	      return area;
	    };
	    area.y0 = function(_) {
	      if (!arguments.length) return y0;
	      y0 = _;
	      return area;
	    };
	    area.y1 = function(_) {
	      if (!arguments.length) return y1;
	      y1 = _;
	      return area;
	    };
	    area.defined = function(_) {
	      if (!arguments.length) return defined;
	      defined = _;
	      return area;
	    };
	    area.interpolate = function(_) {
	      if (!arguments.length) return interpolateKey;
	      if (typeof _ === "function") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;
	      interpolateReverse = interpolate.reverse || interpolate;
	      L = interpolate.closed ? "M" : "L";
	      return area;
	    };
	    area.tension = function(_) {
	      if (!arguments.length) return tension;
	      tension = _;
	      return area;
	    };
	    return area;
	  }
	  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;
	  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;
	  d3.svg.area = function() {
	    return d3_svg_area(d3_identity);
	  };
	  d3.svg.area.radial = function() {
	    var area = d3_svg_area(d3_svg_lineRadial);
	    area.radius = area.x, delete area.x;
	    area.innerRadius = area.x0, delete area.x0;
	    area.outerRadius = area.x1, delete area.x1;
	    area.angle = area.y, delete area.y;
	    area.startAngle = area.y0, delete area.y0;
	    area.endAngle = area.y1, delete area.y1;
	    return area;
	  };
	  d3.svg.chord = function() {
	    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;
	    function chord(d, i) {
	      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);
	      return "M" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + "Z";
	    }
	    function subgroup(self, f, d, i) {
	      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;
	      return {
	        r: r,
	        a0: a0,
	        a1: a1,
	        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],
	        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]
	      };
	    }
	    function equals(a, b) {
	      return a.a0 == b.a0 && a.a1 == b.a1;
	    }
	    function arc(r, p, a) {
	      return "A" + r + "," + r + " 0 " + +(a > π) + ",1 " + p;
	    }
	    function curve(r0, p0, r1, p1) {
	      return "Q 0,0 " + p1;
	    }
	    chord.radius = function(v) {
	      if (!arguments.length) return radius;
	      radius = d3_functor(v);
	      return chord;
	    };
	    chord.source = function(v) {
	      if (!arguments.length) return source;
	      source = d3_functor(v);
	      return chord;
	    };
	    chord.target = function(v) {
	      if (!arguments.length) return target;
	      target = d3_functor(v);
	      return chord;
	    };
	    chord.startAngle = function(v) {
	      if (!arguments.length) return startAngle;
	      startAngle = d3_functor(v);
	      return chord;
	    };
	    chord.endAngle = function(v) {
	      if (!arguments.length) return endAngle;
	      endAngle = d3_functor(v);
	      return chord;
	    };
	    return chord;
	  };
	  function d3_svg_chordRadius(d) {
	    return d.radius;
	  }
	  d3.svg.diagonal = function() {
	    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;
	    function diagonal(d, i) {
	      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {
	        x: p0.x,
	        y: m
	      }, {
	        x: p3.x,
	        y: m
	      }, p3 ];
	      p = p.map(projection);
	      return "M" + p[0] + "C" + p[1] + " " + p[2] + " " + p[3];
	    }
	    diagonal.source = function(x) {
	      if (!arguments.length) return source;
	      source = d3_functor(x);
	      return diagonal;
	    };
	    diagonal.target = function(x) {
	      if (!arguments.length) return target;
	      target = d3_functor(x);
	      return diagonal;
	    };
	    diagonal.projection = function(x) {
	      if (!arguments.length) return projection;
	      projection = x;
	      return diagonal;
	    };
	    return diagonal;
	  };
	  function d3_svg_diagonalProjection(d) {
	    return [ d.x, d.y ];
	  }
	  d3.svg.diagonal.radial = function() {
	    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;
	    diagonal.projection = function(x) {
	      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;
	    };
	    return diagonal;
	  };
	  function d3_svg_diagonalRadialProjection(projection) {
	    return function() {
	      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;
	      return [ r * Math.cos(a), r * Math.sin(a) ];
	    };
	  }
	  d3.svg.symbol = function() {
	    var type = d3_svg_symbolType, size = d3_svg_symbolSize;
	    function symbol(d, i) {
	      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));
	    }
	    symbol.type = function(x) {
	      if (!arguments.length) return type;
	      type = d3_functor(x);
	      return symbol;
	    };
	    symbol.size = function(x) {
	      if (!arguments.length) return size;
	      size = d3_functor(x);
	      return symbol;
	    };
	    return symbol;
	  };
	  function d3_svg_symbolSize() {
	    return 64;
	  }
	  function d3_svg_symbolType() {
	    return "circle";
	  }
	  function d3_svg_symbolCircle(size) {
	    var r = Math.sqrt(size / π);
	    return "M0," + r + "A" + r + "," + r + " 0 1,1 0," + -r + "A" + r + "," + r + " 0 1,1 0," + r + "Z";
	  }
	  var d3_svg_symbols = d3.map({
	    circle: d3_svg_symbolCircle,
	    cross: function(size) {
	      var r = Math.sqrt(size / 5) / 2;
	      return "M" + -3 * r + "," + -r + "H" + -r + "V" + -3 * r + "H" + r + "V" + -r + "H" + 3 * r + "V" + r + "H" + r + "V" + 3 * r + "H" + -r + "V" + r + "H" + -3 * r + "Z";
	    },
	    diamond: function(size) {
	      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;
	      return "M0," + -ry + "L" + rx + ",0" + " 0," + ry + " " + -rx + ",0" + "Z";
	    },
	    square: function(size) {
	      var r = Math.sqrt(size) / 2;
	      return "M" + -r + "," + -r + "L" + r + "," + -r + " " + r + "," + r + " " + -r + "," + r + "Z";
	    },
	    "triangle-down": function(size) {
	      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;
	      return "M0," + ry + "L" + rx + "," + -ry + " " + -rx + "," + -ry + "Z";
	    },
	    "triangle-up": function(size) {
	      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;
	      return "M0," + -ry + "L" + rx + "," + ry + " " + -rx + "," + ry + "Z";
	    }
	  });
	  d3.svg.symbolTypes = d3_svg_symbols.keys();
	  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);
	  d3_selectionPrototype.transition = function(name) {
	    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {
	      time: Date.now(),
	      ease: d3_ease_cubicInOut,
	      delay: 0,
	      duration: 250
	    };
	    for (var j = -1, m = this.length; ++j < m; ) {
	      subgroups.push(subgroup = []);
	      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {
	        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);
	        subgroup.push(node);
	      }
	    }
	    return d3_transition(subgroups, ns, id);
	  };
	  d3_selectionPrototype.interrupt = function(name) {
	    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));
	  };
	  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());
	  function d3_selection_interruptNS(ns) {
	    return function() {
	      var lock, activeId, active;
	      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {
	        active.timer.c = null;
	        active.timer.t = NaN;
	        if (--lock.count) delete lock[activeId]; else delete this[ns];
	        lock.active += .5;
	        active.event && active.event.interrupt.call(this, this.__data__, active.index);
	      }
	    };
	  }
	  function d3_transition(groups, ns, id) {
	    d3_subclass(groups, d3_transitionPrototype);
	    groups.namespace = ns;
	    groups.id = id;
	    return groups;
	  }
	  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;
	  d3_transitionPrototype.call = d3_selectionPrototype.call;
	  d3_transitionPrototype.empty = d3_selectionPrototype.empty;
	  d3_transitionPrototype.node = d3_selectionPrototype.node;
	  d3_transitionPrototype.size = d3_selectionPrototype.size;
	  d3.transition = function(selection, name) {
	    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);
	  };
	  d3.transition.prototype = d3_transitionPrototype;
	  d3_transitionPrototype.select = function(selector) {
	    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;
	    selector = d3_selection_selector(selector);
	    for (var j = -1, m = this.length; ++j < m; ) {
	      subgroups.push(subgroup = []);
	      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {
	        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {
	          if ("__data__" in node) subnode.__data__ = node.__data__;
	          d3_transitionNode(subnode, i, ns, id, node[ns][id]);
	          subgroup.push(subnode);
	        } else {
	          subgroup.push(null);
	        }
	      }
	    }
	    return d3_transition(subgroups, ns, id);
	  };
	  d3_transitionPrototype.selectAll = function(selector) {
	    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;
	    selector = d3_selection_selectorAll(selector);
	    for (var j = -1, m = this.length; ++j < m; ) {
	      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {
	        if (node = group[i]) {
	          transition = node[ns][id];
	          subnodes = selector.call(node, node.__data__, i, j);
	          subgroups.push(subgroup = []);
	          for (var k = -1, o = subnodes.length; ++k < o; ) {
	            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);
	            subgroup.push(subnode);
	          }
	        }
	      }
	    }
	    return d3_transition(subgroups, ns, id);
	  };
	  d3_transitionPrototype.filter = function(filter) {
	    var subgroups = [], subgroup, group, node;
	    if (typeof filter !== "function") filter = d3_selection_filter(filter);
	    for (var j = 0, m = this.length; j < m; j++) {
	      subgroups.push(subgroup = []);
	      for (var group = this[j], i = 0, n = group.length; i < n; i++) {
	        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {
	          subgroup.push(node);
	        }
	      }
	    }
	    return d3_transition(subgroups, this.namespace, this.id);
	  };
	  d3_transitionPrototype.tween = function(name, tween) {
	    var id = this.id, ns = this.namespace;
	    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);
	    return d3_selection_each(this, tween == null ? function(node) {
	      node[ns][id].tween.remove(name);
	    } : function(node) {
	      node[ns][id].tween.set(name, tween);
	    });
	  };
	  function d3_transition_tween(groups, name, value, tween) {
	    var id = groups.id, ns = groups.namespace;
	    return d3_selection_each(groups, typeof value === "function" ? function(node, i, j) {
	      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));
	    } : (value = tween(value), function(node) {
	      node[ns][id].tween.set(name, value);
	    }));
	  }
	  d3_transitionPrototype.attr = function(nameNS, value) {
	    if (arguments.length < 2) {
	      for (value in nameNS) this.attr(value, nameNS[value]);
	      return this;
	    }
	    var interpolate = nameNS == "transform" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);
	    function attrNull() {
	      this.removeAttribute(name);
	    }
	    function attrNullNS() {
	      this.removeAttributeNS(name.space, name.local);
	    }
	    function attrTween(b) {
	      return b == null ? attrNull : (b += "", function() {
	        var a = this.getAttribute(name), i;
	        return a !== b && (i = interpolate(a, b), function(t) {
	          this.setAttribute(name, i(t));
	        });
	      });
	    }
	    function attrTweenNS(b) {
	      return b == null ? attrNullNS : (b += "", function() {
	        var a = this.getAttributeNS(name.space, name.local), i;
	        return a !== b && (i = interpolate(a, b), function(t) {
	          this.setAttributeNS(name.space, name.local, i(t));
	        });
	      });
	    }
	    return d3_transition_tween(this, "attr." + nameNS, value, name.local ? attrTweenNS : attrTween);
	  };
	  d3_transitionPrototype.attrTween = function(nameNS, tween) {
	    var name = d3.ns.qualify(nameNS);
	    function attrTween(d, i) {
	      var f = tween.call(this, d, i, this.getAttribute(name));
	      return f && function(t) {
	        this.setAttribute(name, f(t));
	      };
	    }
	    function attrTweenNS(d, i) {
	      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));
	      return f && function(t) {
	        this.setAttributeNS(name.space, name.local, f(t));
	      };
	    }
	    return this.tween("attr." + nameNS, name.local ? attrTweenNS : attrTween);
	  };
	  d3_transitionPrototype.style = function(name, value, priority) {
	    var n = arguments.length;
	    if (n < 3) {
	      if (typeof name !== "string") {
	        if (n < 2) value = "";
	        for (priority in name) this.style(priority, name[priority], value);
	        return this;
	      }
	      priority = "";
	    }
	    function styleNull() {
	      this.style.removeProperty(name);
	    }
	    function styleString(b) {
	      return b == null ? styleNull : (b += "", function() {
	        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;
	        return a !== b && (i = d3_interpolate(a, b), function(t) {
	          this.style.setProperty(name, i(t), priority);
	        });
	      });
	    }
	    return d3_transition_tween(this, "style." + name, value, styleString);
	  };
	  d3_transitionPrototype.styleTween = function(name, tween, priority) {
	    if (arguments.length < 3) priority = "";
	    function styleTween(d, i) {
	      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));
	      return f && function(t) {
	        this.style.setProperty(name, f(t), priority);
	      };
	    }
	    return this.tween("style." + name, styleTween);
	  };
	  d3_transitionPrototype.text = function(value) {
	    return d3_transition_tween(this, "text", value, d3_transition_text);
	  };
	  function d3_transition_text(b) {
	    if (b == null) b = "";
	    return function() {
	      this.textContent = b;
	    };
	  }
	  d3_transitionPrototype.remove = function() {
	    var ns = this.namespace;
	    return this.each("end.transition", function() {
	      var p;
	      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);
	    });
	  };
	  d3_transitionPrototype.ease = function(value) {
	    var id = this.id, ns = this.namespace;
	    if (arguments.length < 1) return this.node()[ns][id].ease;
	    if (typeof value !== "function") value = d3.ease.apply(d3, arguments);
	    return d3_selection_each(this, function(node) {
	      node[ns][id].ease = value;
	    });
	  };
	  d3_transitionPrototype.delay = function(value) {
	    var id = this.id, ns = this.namespace;
	    if (arguments.length < 1) return this.node()[ns][id].delay;
	    return d3_selection_each(this, typeof value === "function" ? function(node, i, j) {
	      node[ns][id].delay = +value.call(node, node.__data__, i, j);
	    } : (value = +value, function(node) {
	      node[ns][id].delay = value;
	    }));
	  };
	  d3_transitionPrototype.duration = function(value) {
	    var id = this.id, ns = this.namespace;
	    if (arguments.length < 1) return this.node()[ns][id].duration;
	    return d3_selection_each(this, typeof value === "function" ? function(node, i, j) {
	      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));
	    } : (value = Math.max(1, value), function(node) {
	      node[ns][id].duration = value;
	    }));
	  };
	  d3_transitionPrototype.each = function(type, listener) {
	    var id = this.id, ns = this.namespace;
	    if (arguments.length < 2) {
	      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;
	      try {
	        d3_transitionInheritId = id;
	        d3_selection_each(this, function(node, i, j) {
	          d3_transitionInherit = node[ns][id];
	          type.call(node, node.__data__, i, j);
	        });
	      } finally {
	        d3_transitionInherit = inherit;
	        d3_transitionInheritId = inheritId;
	      }
	    } else {
	      d3_selection_each(this, function(node) {
	        var transition = node[ns][id];
	        (transition.event || (transition.event = d3.dispatch("start", "end", "interrupt"))).on(type, listener);
	      });
	    }
	    return this;
	  };
	  d3_transitionPrototype.transition = function() {
	    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;
	    for (var j = 0, m = this.length; j < m; j++) {
	      subgroups.push(subgroup = []);
	      for (var group = this[j], i = 0, n = group.length; i < n; i++) {
	        if (node = group[i]) {
	          transition = node[ns][id0];
	          d3_transitionNode(node, i, ns, id1, {
	            time: transition.time,
	            ease: transition.ease,
	            delay: transition.delay + transition.duration,
	            duration: transition.duration
	          });
	        }
	        subgroup.push(node);
	      }
	    }
	    return d3_transition(subgroups, ns, id1);
	  };
	  function d3_transitionNamespace(name) {
	    return name == null ? "__transition__" : "__transition_" + name + "__";
	  }
	  function d3_transitionNode(node, i, ns, id, inherit) {
	    var lock = node[ns] || (node[ns] = {
	      active: 0,
	      count: 0
	    }), transition = lock[id], time, timer, duration, ease, tweens;
	    function schedule(elapsed) {
	      var delay = transition.delay;
	      timer.t = delay + time;
	      if (delay <= elapsed) return start(elapsed - delay);
	      timer.c = start;
	    }
	    function start(elapsed) {
	      var activeId = lock.active, active = lock[activeId];
	      if (active) {
	        active.timer.c = null;
	        active.timer.t = NaN;
	        --lock.count;
	        delete lock[activeId];
	        active.event && active.event.interrupt.call(node, node.__data__, active.index);
	      }
	      for (var cancelId in lock) {
	        if (+cancelId < id) {
	          var cancel = lock[cancelId];
	          cancel.timer.c = null;
	          cancel.timer.t = NaN;
	          --lock.count;
	          delete lock[cancelId];
	        }
	      }
	      timer.c = tick;
	      d3_timer(function() {
	        if (timer.c && tick(elapsed || 1)) {
	          timer.c = null;
	          timer.t = NaN;
	        }
	        return 1;
	      }, 0, time);
	      lock.active = id;
	      transition.event && transition.event.start.call(node, node.__data__, i);
	      tweens = [];
	      transition.tween.forEach(function(key, value) {
	        if (value = value.call(node, node.__data__, i)) {
	          tweens.push(value);
	        }
	      });
	      ease = transition.ease;
	      duration = transition.duration;
	    }
	    function tick(elapsed) {
	      var t = elapsed / duration, e = ease(t), n = tweens.length;
	      while (n > 0) {
	        tweens[--n].call(node, e);
	      }
	      if (t >= 1) {
	        transition.event && transition.event.end.call(node, node.__data__, i);
	        if (--lock.count) delete lock[id]; else delete node[ns];
	        return 1;
	      }
	    }
	    if (!transition) {
	      time = inherit.time;
	      timer = d3_timer(schedule, 0, time);
	      transition = lock[id] = {
	        tween: new d3_Map(),
	        time: time,
	        timer: timer,
	        delay: inherit.delay,
	        duration: inherit.duration,
	        ease: inherit.ease,
	        index: i
	      };
	      inherit = null;
	      ++lock.count;
	    }
	  }
	  d3.svg.axis = function() {
	    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;
	    function axis(g) {
	      g.each(function() {
	        var g = d3.select(this);
	        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();
	        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(".tick").data(ticks, scale1), tickEnter = tick.enter().insert("g", ".domain").attr("class", "tick").style("opacity", ε), tickExit = d3.transition(tick.exit()).style("opacity", ε).remove(), tickUpdate = d3.transition(tick.order()).style("opacity", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;
	        var range = d3_scaleRange(scale1), path = g.selectAll(".domain").data([ 0 ]), pathUpdate = (path.enter().append("path").attr("class", "domain"), 
	        d3.transition(path));
	        tickEnter.append("line");
	        tickEnter.append("text");
	        var lineEnter = tickEnter.select("line"), lineUpdate = tickUpdate.select("line"), text = tick.select("text").text(tickFormat), textEnter = tickEnter.select("text"), textUpdate = tickUpdate.select("text"), sign = orient === "top" || orient === "left" ? -1 : 1, x1, x2, y1, y2;
	        if (orient === "bottom" || orient === "top") {
	          tickTransform = d3_svg_axisX, x1 = "x", y1 = "y", x2 = "x2", y2 = "y2";
	          text.attr("dy", sign < 0 ? "0em" : ".71em").style("text-anchor", "middle");
	          pathUpdate.attr("d", "M" + range[0] + "," + sign * outerTickSize + "V0H" + range[1] + "V" + sign * outerTickSize);
	        } else {
	          tickTransform = d3_svg_axisY, x1 = "y", y1 = "x", x2 = "y2", y2 = "x2";
	          text.attr("dy", ".32em").style("text-anchor", sign < 0 ? "end" : "start");
	          pathUpdate.attr("d", "M" + sign * outerTickSize + "," + range[0] + "H0V" + range[1] + "H" + sign * outerTickSize);
	        }
	        lineEnter.attr(y2, sign * innerTickSize);
	        textEnter.attr(y1, sign * tickSpacing);
	        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);
	        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);
	        if (scale1.rangeBand) {
	          var x = scale1, dx = x.rangeBand() / 2;
	          scale0 = scale1 = function(d) {
	            return x(d) + dx;
	          };
	        } else if (scale0.rangeBand) {
	          scale0 = scale1;
	        } else {
	          tickExit.call(tickTransform, scale1, scale0);
	        }
	        tickEnter.call(tickTransform, scale0, scale1);
	        tickUpdate.call(tickTransform, scale1, scale1);
	      });
	    }
	    axis.scale = function(x) {
	      if (!arguments.length) return scale;
	      scale = x;
	      return axis;
	    };
	    axis.orient = function(x) {
	      if (!arguments.length) return orient;
	      orient = x in d3_svg_axisOrients ? x + "" : d3_svg_axisDefaultOrient;
	      return axis;
	    };
	    axis.ticks = function() {
	      if (!arguments.length) return tickArguments_;
	      tickArguments_ = d3_array(arguments);
	      return axis;
	    };
	    axis.tickValues = function(x) {
	      if (!arguments.length) return tickValues;
	      tickValues = x;
	      return axis;
	    };
	    axis.tickFormat = function(x) {
	      if (!arguments.length) return tickFormat_;
	      tickFormat_ = x;
	      return axis;
	    };
	    axis.tickSize = function(x) {
	      var n = arguments.length;
	      if (!n) return innerTickSize;
	      innerTickSize = +x;
	      outerTickSize = +arguments[n - 1];
	      return axis;
	    };
	    axis.innerTickSize = function(x) {
	      if (!arguments.length) return innerTickSize;
	      innerTickSize = +x;
	      return axis;
	    };
	    axis.outerTickSize = function(x) {
	      if (!arguments.length) return outerTickSize;
	      outerTickSize = +x;
	      return axis;
	    };
	    axis.tickPadding = function(x) {
	      if (!arguments.length) return tickPadding;
	      tickPadding = +x;
	      return axis;
	    };
	    axis.tickSubdivide = function() {
	      return arguments.length && axis;
	    };
	    return axis;
	  };
	  var d3_svg_axisDefaultOrient = "bottom", d3_svg_axisOrients = {
	    top: 1,
	    right: 1,
	    bottom: 1,
	    left: 1
	  };
	  function d3_svg_axisX(selection, x0, x1) {
	    selection.attr("transform", function(d) {
	      var v0 = x0(d);
	      return "translate(" + (isFinite(v0) ? v0 : x1(d)) + ",0)";
	    });
	  }
	  function d3_svg_axisY(selection, y0, y1) {
	    selection.attr("transform", function(d) {
	      var v0 = y0(d);
	      return "translate(0," + (isFinite(v0) ? v0 : y1(d)) + ")";
	    });
	  }
	  d3.svg.brush = function() {
	    var event = d3_eventDispatch(brush, "brushstart", "brush", "brushend"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];
	    function brush(g) {
	      g.each(function() {
	        var g = d3.select(this).style("pointer-events", "all").style("-webkit-tap-highlight-color", "rgba(0,0,0,0)").on("mousedown.brush", brushstart).on("touchstart.brush", brushstart);
	        var background = g.selectAll(".background").data([ 0 ]);
	        background.enter().append("rect").attr("class", "background").style("visibility", "hidden").style("cursor", "crosshair");
	        g.selectAll(".extent").data([ 0 ]).enter().append("rect").attr("class", "extent").style("cursor", "move");
	        var resize = g.selectAll(".resize").data(resizes, d3_identity);
	        resize.exit().remove();
	        resize.enter().append("g").attr("class", function(d) {
	          return "resize " + d;
	        }).style("cursor", function(d) {
	          return d3_svg_brushCursor[d];
	        }).append("rect").attr("x", function(d) {
	          return /[ew]$/.test(d) ? -3 : null;
	        }).attr("y", function(d) {
	          return /^[ns]/.test(d) ? -3 : null;
	        }).attr("width", 6).attr("height", 6).style("visibility", "hidden");
	        resize.style("display", brush.empty() ? "none" : null);
	        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;
	        if (x) {
	          range = d3_scaleRange(x);
	          backgroundUpdate.attr("x", range[0]).attr("width", range[1] - range[0]);
	          redrawX(gUpdate);
	        }
	        if (y) {
	          range = d3_scaleRange(y);
	          backgroundUpdate.attr("y", range[0]).attr("height", range[1] - range[0]);
	          redrawY(gUpdate);
	        }
	        redraw(gUpdate);
	      });
	    }
	    brush.event = function(g) {
	      g.each(function() {
	        var event_ = event.of(this, arguments), extent1 = {
	          x: xExtent,
	          y: yExtent,
	          i: xExtentDomain,
	          j: yExtentDomain
	        }, extent0 = this.__chart__ || extent1;
	        this.__chart__ = extent1;
	        if (d3_transitionInheritId) {
	          d3.select(this).transition().each("start.brush", function() {
	            xExtentDomain = extent0.i;
	            yExtentDomain = extent0.j;
	            xExtent = extent0.x;
	            yExtent = extent0.y;
	            event_({
	              type: "brushstart"
	            });
	          }).tween("brush:brush", function() {
	            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);
	            xExtentDomain = yExtentDomain = null;
	            return function(t) {
	              xExtent = extent1.x = xi(t);
	              yExtent = extent1.y = yi(t);
	              event_({
	                type: "brush",
	                mode: "resize"
	              });
	            };
	          }).each("end.brush", function() {
	            xExtentDomain = extent1.i;
	            yExtentDomain = extent1.j;
	            event_({
	              type: "brush",
	              mode: "resize"
	            });
	            event_({
	              type: "brushend"
	            });
	          });
	        } else {
	          event_({
	            type: "brushstart"
	          });
	          event_({
	            type: "brush",
	            mode: "resize"
	          });
	          event_({
	            type: "brushend"
	          });
	        }
	      });
	    };
	    function redraw(g) {
	      g.selectAll(".resize").attr("transform", function(d) {
	        return "translate(" + xExtent[+/e$/.test(d)] + "," + yExtent[+/^s/.test(d)] + ")";
	      });
	    }
	    function redrawX(g) {
	      g.select(".extent").attr("x", xExtent[0]);
	      g.selectAll(".extent,.n>rect,.s>rect").attr("width", xExtent[1] - xExtent[0]);
	    }
	    function redrawY(g) {
	      g.select(".extent").attr("y", yExtent[0]);
	      g.selectAll(".extent,.e>rect,.w>rect").attr("height", yExtent[1] - yExtent[0]);
	    }
	    function brushstart() {
	      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed("extent"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;
	      var w = d3.select(d3_window(target)).on("keydown.brush", keydown).on("keyup.brush", keyup);
	      if (d3.event.changedTouches) {
	        w.on("touchmove.brush", brushmove).on("touchend.brush", brushend);
	      } else {
	        w.on("mousemove.brush", brushmove).on("mouseup.brush", brushend);
	      }
	      g.interrupt().selectAll("*").interrupt();
	      if (dragging) {
	        origin[0] = xExtent[0] - origin[0];
	        origin[1] = yExtent[0] - origin[1];
	      } else if (resizing) {
	        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);
	        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];
	        origin[0] = xExtent[ex];
	        origin[1] = yExtent[ey];
	      } else if (d3.event.altKey) center = origin.slice();
	      g.style("pointer-events", "none").selectAll(".resize").style("display", null);
	      d3.select("body").style("cursor", eventTarget.style("cursor"));
	      event_({
	        type: "brushstart"
	      });
	      brushmove();
	      function keydown() {
	        if (d3.event.keyCode == 32) {
	          if (!dragging) {
	            center = null;
	            origin[0] -= xExtent[1];
	            origin[1] -= yExtent[1];
	            dragging = 2;
	          }
	          d3_eventPreventDefault();
	        }
	      }
	      function keyup() {
	        if (d3.event.keyCode == 32 && dragging == 2) {
	          origin[0] += xExtent[1];
	          origin[1] += yExtent[1];
	          dragging = 0;
	          d3_eventPreventDefault();
	        }
	      }
	      function brushmove() {
	        var point = d3.mouse(target), moved = false;
	        if (offset) {
	          point[0] += offset[0];
	          point[1] += offset[1];
	        }
	        if (!dragging) {
	          if (d3.event.altKey) {
	            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];
	            origin[0] = xExtent[+(point[0] < center[0])];
	            origin[1] = yExtent[+(point[1] < center[1])];
	          } else center = null;
	        }
	        if (resizingX && move1(point, x, 0)) {
	          redrawX(g);
	          moved = true;
	        }
	        if (resizingY && move1(point, y, 1)) {
	          redrawY(g);
	          moved = true;
	        }
	        if (moved) {
	          redraw(g);
	          event_({
	            type: "brush",
	            mode: dragging ? "move" : "resize"
	          });
	        }
	      }
	      function move1(point, scale, i) {
	        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;
	        if (dragging) {
	          r0 -= position;
	          r1 -= size + position;
	        }
	        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];
	        if (dragging) {
	          max = (min += position) + size;
	        } else {
	          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));
	          if (position < min) {
	            max = min;
	            min = position;
	          } else {
	            max = position;
	          }
	        }
	        if (extent[0] != min || extent[1] != max) {
	          if (i) yExtentDomain = null; else xExtentDomain = null;
	          extent[0] = min;
	          extent[1] = max;
	          return true;
	        }
	      }
	      function brushend() {
	        brushmove();
	        g.style("pointer-events", "all").selectAll(".resize").style("display", brush.empty() ? "none" : null);
	        d3.select("body").style("cursor", null);
	        w.on("mousemove.brush", null).on("mouseup.brush", null).on("touchmove.brush", null).on("touchend.brush", null).on("keydown.brush", null).on("keyup.brush", null);
	        dragRestore();
	        event_({
	          type: "brushend"
	        });
	      }
	    }
	    brush.x = function(z) {
	      if (!arguments.length) return x;
	      x = z;
	      resizes = d3_svg_brushResizes[!x << 1 | !y];
	      return brush;
	    };
	    brush.y = function(z) {
	      if (!arguments.length) return y;
	      y = z;
	      resizes = d3_svg_brushResizes[!x << 1 | !y];
	      return brush;
	    };
	    brush.clamp = function(z) {
	      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;
	      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;
	      return brush;
	    };
	    brush.extent = function(z) {
	      var x0, x1, y0, y1, t;
	      if (!arguments.length) {
	        if (x) {
	          if (xExtentDomain) {
	            x0 = xExtentDomain[0], x1 = xExtentDomain[1];
	          } else {
	            x0 = xExtent[0], x1 = xExtent[1];
	            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);
	            if (x1 < x0) t = x0, x0 = x1, x1 = t;
	          }
	        }
	        if (y) {
	          if (yExtentDomain) {
	            y0 = yExtentDomain[0], y1 = yExtentDomain[1];
	          } else {
	            y0 = yExtent[0], y1 = yExtent[1];
	            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);
	            if (y1 < y0) t = y0, y0 = y1, y1 = t;
	          }
	        }
	        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];
	      }
	      if (x) {
	        x0 = z[0], x1 = z[1];
	        if (y) x0 = x0[0], x1 = x1[0];
	        xExtentDomain = [ x0, x1 ];
	        if (x.invert) x0 = x(x0), x1 = x(x1);
	        if (x1 < x0) t = x0, x0 = x1, x1 = t;
	        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];
	      }
	      if (y) {
	        y0 = z[0], y1 = z[1];
	        if (x) y0 = y0[1], y1 = y1[1];
	        yExtentDomain = [ y0, y1 ];
	        if (y.invert) y0 = y(y0), y1 = y(y1);
	        if (y1 < y0) t = y0, y0 = y1, y1 = t;
	        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];
	      }
	      return brush;
	    };
	    brush.clear = function() {
	      if (!brush.empty()) {
	        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];
	        xExtentDomain = yExtentDomain = null;
	      }
	      return brush;
	    };
	    brush.empty = function() {
	      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];
	    };
	    return d3.rebind(brush, event, "on");
	  };
	  var d3_svg_brushCursor = {
	    n: "ns-resize",
	    e: "ew-resize",
	    s: "ns-resize",
	    w: "ew-resize",
	    nw: "nwse-resize",
	    ne: "nesw-resize",
	    se: "nwse-resize",
	    sw: "nesw-resize"
	  };
	  var d3_svg_brushResizes = [ [ "n", "e", "s", "w", "nw", "ne", "se", "sw" ], [ "e", "w" ], [ "n", "s" ], [] ];
	  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;
	  var d3_time_formatUtc = d3_time_format.utc;
	  var d3_time_formatIso = d3_time_formatUtc("%Y-%m-%dT%H:%M:%S.%LZ");
	  d3_time_format.iso = Date.prototype.toISOString && +new Date("2000-01-01T00:00:00.000Z") ? d3_time_formatIsoNative : d3_time_formatIso;
	  function d3_time_formatIsoNative(date) {
	    return date.toISOString();
	  }
	  d3_time_formatIsoNative.parse = function(string) {
	    var date = new Date(string);
	    return isNaN(date) ? null : date;
	  };
	  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;
	  d3_time.second = d3_time_interval(function(date) {
	    return new d3_date(Math.floor(date / 1e3) * 1e3);
	  }, function(date, offset) {
	    date.setTime(date.getTime() + Math.floor(offset) * 1e3);
	  }, function(date) {
	    return date.getSeconds();
	  });
	  d3_time.seconds = d3_time.second.range;
	  d3_time.seconds.utc = d3_time.second.utc.range;
	  d3_time.minute = d3_time_interval(function(date) {
	    return new d3_date(Math.floor(date / 6e4) * 6e4);
	  }, function(date, offset) {
	    date.setTime(date.getTime() + Math.floor(offset) * 6e4);
	  }, function(date) {
	    return date.getMinutes();
	  });
	  d3_time.minutes = d3_time.minute.range;
	  d3_time.minutes.utc = d3_time.minute.utc.range;
	  d3_time.hour = d3_time_interval(function(date) {
	    var timezone = date.getTimezoneOffset() / 60;
	    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);
	  }, function(date, offset) {
	    date.setTime(date.getTime() + Math.floor(offset) * 36e5);
	  }, function(date) {
	    return date.getHours();
	  });
	  d3_time.hours = d3_time.hour.range;
	  d3_time.hours.utc = d3_time.hour.utc.range;
	  d3_time.month = d3_time_interval(function(date) {
	    date = d3_time.day(date);
	    date.setDate(1);
	    return date;
	  }, function(date, offset) {
	    date.setMonth(date.getMonth() + offset);
	  }, function(date) {
	    return date.getMonth();
	  });
	  d3_time.months = d3_time.month.range;
	  d3_time.months.utc = d3_time.month.utc.range;
	  function d3_time_scale(linear, methods, format) {
	    function scale(x) {
	      return linear(x);
	    }
	    scale.invert = function(x) {
	      return d3_time_scaleDate(linear.invert(x));
	    };
	    scale.domain = function(x) {
	      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);
	      linear.domain(x);
	      return scale;
	    };
	    function tickMethod(extent, count) {
	      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);
	      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {
	        return d / 31536e6;
	      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];
	    }
	    scale.nice = function(interval, skip) {
	      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === "number" && tickMethod(extent, interval);
	      if (method) interval = method[0], skip = method[1];
	      function skipped(date) {
	        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;
	      }
	      return scale.domain(d3_scale_nice(domain, skip > 1 ? {
	        floor: function(date) {
	          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);
	          return date;
	        },
	        ceil: function(date) {
	          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);
	          return date;
	        }
	      } : interval));
	    };
	    scale.ticks = function(interval, skip) {
	      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === "number" ? tickMethod(extent, interval) : !interval.range && [ {
	        range: interval
	      }, skip ];
	      if (method) interval = method[0], skip = method[1];
	      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);
	    };
	    scale.tickFormat = function() {
	      return format;
	    };
	    scale.copy = function() {
	      return d3_time_scale(linear.copy(), methods, format);
	    };
	    return d3_scale_linearRebind(scale, linear);
	  }
	  function d3_time_scaleDate(t) {
	    return new Date(t);
	  }
	  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];
	  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];
	  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ ".%L", function(d) {
	    return d.getMilliseconds();
	  } ], [ ":%S", function(d) {
	    return d.getSeconds();
	  } ], [ "%I:%M", function(d) {
	    return d.getMinutes();
	  } ], [ "%I %p", function(d) {
	    return d.getHours();
	  } ], [ "%a %d", function(d) {
	    return d.getDay() && d.getDate() != 1;
	  } ], [ "%b %d", function(d) {
	    return d.getDate() != 1;
	  } ], [ "%B", function(d) {
	    return d.getMonth();
	  } ], [ "%Y", d3_true ] ]);
	  var d3_time_scaleMilliseconds = {
	    range: function(start, stop, step) {
	      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);
	    },
	    floor: d3_identity,
	    ceil: d3_identity
	  };
	  d3_time_scaleLocalMethods.year = d3_time.year;
	  d3_time.scale = function() {
	    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);
	  };
	  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {
	    return [ m[0].utc, m[1] ];
	  });
	  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ ".%L", function(d) {
	    return d.getUTCMilliseconds();
	  } ], [ ":%S", function(d) {
	    return d.getUTCSeconds();
	  } ], [ "%I:%M", function(d) {
	    return d.getUTCMinutes();
	  } ], [ "%I %p", function(d) {
	    return d.getUTCHours();
	  } ], [ "%a %d", function(d) {
	    return d.getUTCDay() && d.getUTCDate() != 1;
	  } ], [ "%b %d", function(d) {
	    return d.getUTCDate() != 1;
	  } ], [ "%B", function(d) {
	    return d.getUTCMonth();
	  } ], [ "%Y", d3_true ] ]);
	  d3_time_scaleUtcMethods.year = d3_time.year.utc;
	  d3_time.scale.utc = function() {
	    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);
	  };
	  d3.text = d3_xhrType(function(request) {
	    return request.responseText;
	  });
	  d3.json = function(url, callback) {
	    return d3_xhr(url, "application/json", d3_json, callback);
	  };
	  function d3_json(request) {
	    return JSON.parse(request.responseText);
	  }
	  d3.html = function(url, callback) {
	    return d3_xhr(url, "text/html", d3_html, callback);
	  };
	  function d3_html(request) {
	    var range = d3_document.createRange();
	    range.selectNode(d3_document.body);
	    return range.createContextualFragment(request.responseText);
	  }
	  d3.xml = d3_xhrType(function(request) {
	    return request.responseXML;
	  });
	  if (true) this.d3 = d3, !(__WEBPACK_AMD_DEFINE_FACTORY__ = (d3), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); else if (typeof module === "object" && module.exports) module.exports = d3; else this.d3 = d3;
	}();

/***/ },
/* 337 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	__webpack_require__(232)
	
	module.exports = __webpack_require__(231)


/***/ },
/* 338 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(339);


/***/ },
/* 339 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// Generated by CoffeeScript 1.8.0
	(function() {
	  var Heap, defaultCmp, floor, heapify, heappop, heappush, heappushpop, heapreplace, insort, min, nlargest, nsmallest, updateItem, _siftdown, _siftup;
	
	  floor = Math.floor, min = Math.min;
	
	
	  /*
	  Default comparison function to be used
	   */
	
	  defaultCmp = function(x, y) {
	    if (x < y) {
	      return -1;
	    }
	    if (x > y) {
	      return 1;
	    }
	    return 0;
	  };
	
	
	  /*
	  Insert item x in list a, and keep it sorted assuming a is sorted.
	  
	  If x is already in a, insert it to the right of the rightmost x.
	  
	  Optional args lo (default 0) and hi (default a.length) bound the slice
	  of a to be searched.
	   */
	
	  insort = function(a, x, lo, hi, cmp) {
	    var mid;
	    if (lo == null) {
	      lo = 0;
	    }
	    if (cmp == null) {
	      cmp = defaultCmp;
	    }
	    if (lo < 0) {
	      throw new Error('lo must be non-negative');
	    }
	    if (hi == null) {
	      hi = a.length;
	    }
	    while (lo < hi) {
	      mid = floor((lo + hi) / 2);
	      if (cmp(x, a[mid]) < 0) {
	        hi = mid;
	      } else {
	        lo = mid + 1;
	      }
	    }
	    return ([].splice.apply(a, [lo, lo - lo].concat(x)), x);
	  };
	
	
	  /*
	  Push item onto heap, maintaining the heap invariant.
	   */
	
	  heappush = function(array, item, cmp) {
	    if (cmp == null) {
	      cmp = defaultCmp;
	    }
	    array.push(item);
	    return _siftdown(array, 0, array.length - 1, cmp);
	  };
	
	
	  /*
	  Pop the smallest item off the heap, maintaining the heap invariant.
	   */
	
	  heappop = function(array, cmp) {
	    var lastelt, returnitem;
	    if (cmp == null) {
	      cmp = defaultCmp;
	    }
	    lastelt = array.pop();
	    if (array.length) {
	      returnitem = array[0];
	      array[0] = lastelt;
	      _siftup(array, 0, cmp);
	    } else {
	      returnitem = lastelt;
	    }
	    return returnitem;
	  };
	
	
	  /*
	  Pop and return the current smallest value, and add the new item.
	  
	  This is more efficient than heappop() followed by heappush(), and can be
	  more appropriate when using a fixed size heap. Note that the value
	  returned may be larger than item! That constrains reasonable use of
	  this routine unless written as part of a conditional replacement:
	      if item > array[0]
	        item = heapreplace(array, item)
	   */
	
	  heapreplace = function(array, item, cmp) {
	    var returnitem;
	    if (cmp == null) {
	      cmp = defaultCmp;
	    }
	    returnitem = array[0];
	    array[0] = item;
	    _siftup(array, 0, cmp);
	    return returnitem;
	  };
	
	
	  /*
	  Fast version of a heappush followed by a heappop.
	   */
	
	  heappushpop = function(array, item, cmp) {
	    var _ref;
	    if (cmp == null) {
	      cmp = defaultCmp;
	    }
	    if (array.length && cmp(array[0], item) < 0) {
	      _ref = [array[0], item], item = _ref[0], array[0] = _ref[1];
	      _siftup(array, 0, cmp);
	    }
	    return item;
	  };
	
	
	  /*
	  Transform list into a heap, in-place, in O(array.length) time.
	   */
	
	  heapify = function(array, cmp) {
	    var i, _i, _j, _len, _ref, _ref1, _results, _results1;
	    if (cmp == null) {
	      cmp = defaultCmp;
	    }
	    _ref1 = (function() {
	      _results1 = [];
	      for (var _j = 0, _ref = floor(array.length / 2); 0 <= _ref ? _j < _ref : _j > _ref; 0 <= _ref ? _j++ : _j--){ _results1.push(_j); }
	      return _results1;
	    }).apply(this).reverse();
	    _results = [];
	    for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
	      i = _ref1[_i];
	      _results.push(_siftup(array, i, cmp));
	    }
	    return _results;
	  };
	
	
	  /*
	  Update the position of the given item in the heap.
	  This function should be called every time the item is being modified.
	   */
	
	  updateItem = function(array, item, cmp) {
	    var pos;
	    if (cmp == null) {
	      cmp = defaultCmp;
	    }
	    pos = array.indexOf(item);
	    if (pos === -1) {
	      return;
	    }
	    _siftdown(array, 0, pos, cmp);
	    return _siftup(array, pos, cmp);
	  };
	
	
	  /*
	  Find the n largest elements in a dataset.
	   */
	
	  nlargest = function(array, n, cmp) {
	    var elem, result, _i, _len, _ref;
	    if (cmp == null) {
	      cmp = defaultCmp;
	    }
	    result = array.slice(0, n);
	    if (!result.length) {
	      return result;
	    }
	    heapify(result, cmp);
	    _ref = array.slice(n);
	    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
	      elem = _ref[_i];
	      heappushpop(result, elem, cmp);
	    }
	    return result.sort(cmp).reverse();
	  };
	
	
	  /*
	  Find the n smallest elements in a dataset.
	   */
	
	  nsmallest = function(array, n, cmp) {
	    var elem, i, los, result, _i, _j, _len, _ref, _ref1, _results;
	    if (cmp == null) {
	      cmp = defaultCmp;
	    }
	    if (n * 10 <= array.length) {
	      result = array.slice(0, n).sort(cmp);
	      if (!result.length) {
	        return result;
	      }
	      los = result[result.length - 1];
	      _ref = array.slice(n);
	      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
	        elem = _ref[_i];
	        if (cmp(elem, los) < 0) {
	          insort(result, elem, 0, null, cmp);
	          result.pop();
	          los = result[result.length - 1];
	        }
	      }
	      return result;
	    }
	    heapify(array, cmp);
	    _results = [];
	    for (i = _j = 0, _ref1 = min(n, array.length); 0 <= _ref1 ? _j < _ref1 : _j > _ref1; i = 0 <= _ref1 ? ++_j : --_j) {
	      _results.push(heappop(array, cmp));
	    }
	    return _results;
	  };
	
	  _siftdown = function(array, startpos, pos, cmp) {
	    var newitem, parent, parentpos;
	    if (cmp == null) {
	      cmp = defaultCmp;
	    }
	    newitem = array[pos];
	    while (pos > startpos) {
	      parentpos = (pos - 1) >> 1;
	      parent = array[parentpos];
	      if (cmp(newitem, parent) < 0) {
	        array[pos] = parent;
	        pos = parentpos;
	        continue;
	      }
	      break;
	    }
	    return array[pos] = newitem;
	  };
	
	  _siftup = function(array, pos, cmp) {
	    var childpos, endpos, newitem, rightpos, startpos;
	    if (cmp == null) {
	      cmp = defaultCmp;
	    }
	    endpos = array.length;
	    startpos = pos;
	    newitem = array[pos];
	    childpos = 2 * pos + 1;
	    while (childpos < endpos) {
	      rightpos = childpos + 1;
	      if (rightpos < endpos && !(cmp(array[childpos], array[rightpos]) < 0)) {
	        childpos = rightpos;
	      }
	      array[pos] = array[childpos];
	      pos = childpos;
	      childpos = 2 * pos + 1;
	    }
	    array[pos] = newitem;
	    return _siftdown(array, startpos, pos, cmp);
	  };
	
	  Heap = (function() {
	    Heap.push = heappush;
	
	    Heap.pop = heappop;
	
	    Heap.replace = heapreplace;
	
	    Heap.pushpop = heappushpop;
	
	    Heap.heapify = heapify;
	
	    Heap.updateItem = updateItem;
	
	    Heap.nlargest = nlargest;
	
	    Heap.nsmallest = nsmallest;
	
	    function Heap(cmp) {
	      this.cmp = cmp != null ? cmp : defaultCmp;
	      this.nodes = [];
	    }
	
	    Heap.prototype.push = function(x) {
	      return heappush(this.nodes, x, this.cmp);
	    };
	
	    Heap.prototype.pop = function() {
	      return heappop(this.nodes, this.cmp);
	    };
	
	    Heap.prototype.peek = function() {
	      return this.nodes[0];
	    };
	
	    Heap.prototype.contains = function(x) {
	      return this.nodes.indexOf(x) !== -1;
	    };
	
	    Heap.prototype.replace = function(x) {
	      return heapreplace(this.nodes, x, this.cmp);
	    };
	
	    Heap.prototype.pushpop = function(x) {
	      return heappushpop(this.nodes, x, this.cmp);
	    };
	
	    Heap.prototype.heapify = function() {
	      return heapify(this.nodes, this.cmp);
	    };
	
	    Heap.prototype.updateItem = function(x) {
	      return updateItem(this.nodes, x, this.cmp);
	    };
	
	    Heap.prototype.clear = function() {
	      return this.nodes = [];
	    };
	
	    Heap.prototype.empty = function() {
	      return this.nodes.length === 0;
	    };
	
	    Heap.prototype.size = function() {
	      return this.nodes.length;
	    };
	
	    Heap.prototype.clone = function() {
	      var heap;
	      heap = new Heap();
	      heap.nodes = this.nodes.slice(0);
	      return heap;
	    };
	
	    Heap.prototype.toArray = function() {
	      return this.nodes.slice(0);
	    };
	
	    Heap.prototype.insert = Heap.prototype.push;
	
	    Heap.prototype.top = Heap.prototype.peek;
	
	    Heap.prototype.front = Heap.prototype.peek;
	
	    Heap.prototype.has = Heap.prototype.contains;
	
	    Heap.prototype.copy = Heap.prototype.clone;
	
	    return Heap;
	
	  })();
	
	  (function(root, factory) {
	    if (true) {
	      return !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	    } else if (typeof exports === 'object') {
	      return module.exports = factory();
	    } else {
	      return root.Heap = factory();
	    }
	  })(this, function() {
	    return Heap;
	  });
	
	}).call(this);


/***/ },
/* 340 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {"use strict";
	
	var numeric = ( false)?(function numeric() {}):(exports);
	if(typeof global !== "undefined") { global.numeric = numeric; }
	
	numeric.version = "1.2.6";
	
	// 1. Utility functions
	numeric.bench = function bench (f,interval) {
	    var t1,t2,n,i;
	    if(typeof interval === "undefined") { interval = 15; }
	    n = 0.5;
	    t1 = new Date();
	    while(1) {
	        n*=2;
	        for(i=n;i>3;i-=4) { f(); f(); f(); f(); }
	        while(i>0) { f(); i--; }
	        t2 = new Date();
	        if(t2-t1 > interval) break;
	    }
	    for(i=n;i>3;i-=4) { f(); f(); f(); f(); }
	    while(i>0) { f(); i--; }
	    t2 = new Date();
	    return 1000*(3*n-1)/(t2-t1);
	}
	
	numeric._myIndexOf = (function _myIndexOf(w) {
	    var n = this.length,k;
	    for(k=0;k<n;++k) if(this[k]===w) return k;
	    return -1;
	});
	numeric.myIndexOf = (Array.prototype.indexOf)?Array.prototype.indexOf:numeric._myIndexOf;
	
	numeric.Function = Function;
	numeric.precision = 4;
	numeric.largeArray = 50;
	
	numeric.prettyPrint = function prettyPrint(x) {
	    function fmtnum(x) {
	        if(x === 0) { return '0'; }
	        if(isNaN(x)) { return 'NaN'; }
	        if(x<0) { return '-'+fmtnum(-x); }
	        if(isFinite(x)) {
	            var scale = Math.floor(Math.log(x) / Math.log(10));
	            var normalized = x / Math.pow(10,scale);
	            var basic = normalized.toPrecision(numeric.precision);
	            if(parseFloat(basic) === 10) { scale++; normalized = 1; basic = normalized.toPrecision(numeric.precision); }
	            return parseFloat(basic).toString()+'e'+scale.toString();
	        }
	        return 'Infinity';
	    }
	    var ret = [];
	    function foo(x) {
	        var k;
	        if(typeof x === "undefined") { ret.push(Array(numeric.precision+8).join(' ')); return false; }
	        if(typeof x === "string") { ret.push('"'+x+'"'); return false; }
	        if(typeof x === "boolean") { ret.push(x.toString()); return false; }
	        if(typeof x === "number") {
	            var a = fmtnum(x);
	            var b = x.toPrecision(numeric.precision);
	            var c = parseFloat(x.toString()).toString();
	            var d = [a,b,c,parseFloat(b).toString(),parseFloat(c).toString()];
	            for(k=1;k<d.length;k++) { if(d[k].length < a.length) a = d[k]; }
	            ret.push(Array(numeric.precision+8-a.length).join(' ')+a);
	            return false;
	        }
	        if(x === null) { ret.push("null"); return false; }
	        if(typeof x === "function") { 
	            ret.push(x.toString());
	            var flag = false;
	            for(k in x) { if(x.hasOwnProperty(k)) { 
	                if(flag) ret.push(',\n');
	                else ret.push('\n{');
	                flag = true; 
	                ret.push(k); 
	                ret.push(': \n'); 
	                foo(x[k]); 
	            } }
	            if(flag) ret.push('}\n');
	            return true;
	        }
	        if(x instanceof Array) {
	            if(x.length > numeric.largeArray) { ret.push('...Large Array...'); return true; }
	            var flag = false;
	            ret.push('[');
	            for(k=0;k<x.length;k++) { if(k>0) { ret.push(','); if(flag) ret.push('\n '); } flag = foo(x[k]); }
	            ret.push(']');
	            return true;
	        }
	        ret.push('{');
	        var flag = false;
	        for(k in x) { if(x.hasOwnProperty(k)) { if(flag) ret.push(',\n'); flag = true; ret.push(k); ret.push(': \n'); foo(x[k]); } }
	        ret.push('}');
	        return true;
	    }
	    foo(x);
	    return ret.join('');
	}
	
	numeric.parseDate = function parseDate(d) {
	    function foo(d) {
	        if(typeof d === 'string') { return Date.parse(d.replace(/-/g,'/')); }
	        if(!(d instanceof Array)) { throw new Error("parseDate: parameter must be arrays of strings"); }
	        var ret = [],k;
	        for(k=0;k<d.length;k++) { ret[k] = foo(d[k]); }
	        return ret;
	    }
	    return foo(d);
	}
	
	numeric.parseFloat = function parseFloat_(d) {
	    function foo(d) {
	        if(typeof d === 'string') { return parseFloat(d); }
	        if(!(d instanceof Array)) { throw new Error("parseFloat: parameter must be arrays of strings"); }
	        var ret = [],k;
	        for(k=0;k<d.length;k++) { ret[k] = foo(d[k]); }
	        return ret;
	    }
	    return foo(d);
	}
	
	numeric.parseCSV = function parseCSV(t) {
	    var foo = t.split('\n');
	    var j,k;
	    var ret = [];
	    var pat = /(([^'",]*)|('[^']*')|("[^"]*")),/g;
	    var patnum = /^\s*(([+-]?[0-9]+(\.[0-9]*)?(e[+-]?[0-9]+)?)|([+-]?[0-9]*(\.[0-9]+)?(e[+-]?[0-9]+)?))\s*$/;
	    var stripper = function(n) { return n.substr(0,n.length-1); }
	    var count = 0;
	    for(k=0;k<foo.length;k++) {
	      var bar = (foo[k]+",").match(pat),baz;
	      if(bar.length>0) {
	          ret[count] = [];
	          for(j=0;j<bar.length;j++) {
	              baz = stripper(bar[j]);
	              if(patnum.test(baz)) { ret[count][j] = parseFloat(baz); }
	              else ret[count][j] = baz;
	          }
	          count++;
	      }
	    }
	    return ret;
	}
	
	numeric.toCSV = function toCSV(A) {
	    var s = numeric.dim(A);
	    var i,j,m,n,row,ret;
	    m = s[0];
	    n = s[1];
	    ret = [];
	    for(i=0;i<m;i++) {
	        row = [];
	        for(j=0;j<m;j++) { row[j] = A[i][j].toString(); }
	        ret[i] = row.join(', ');
	    }
	    return ret.join('\n')+'\n';
	}
	
	numeric.getURL = function getURL(url) {
	    var client = new XMLHttpRequest();
	    client.open("GET",url,false);
	    client.send();
	    return client;
	}
	
	numeric.imageURL = function imageURL(img) {
	    function base64(A) {
	        var n = A.length, i,x,y,z,p,q,r,s;
	        var key = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
	        var ret = "";
	        for(i=0;i<n;i+=3) {
	            x = A[i];
	            y = A[i+1];
	            z = A[i+2];
	            p = x >> 2;
	            q = ((x & 3) << 4) + (y >> 4);
	            r = ((y & 15) << 2) + (z >> 6);
	            s = z & 63;
	            if(i+1>=n) { r = s = 64; }
	            else if(i+2>=n) { s = 64; }
	            ret += key.charAt(p) + key.charAt(q) + key.charAt(r) + key.charAt(s);
	            }
	        return ret;
	    }
	    function crc32Array (a,from,to) {
	        if(typeof from === "undefined") { from = 0; }
	        if(typeof to === "undefined") { to = a.length; }
	        var table = [0x00000000, 0x77073096, 0xEE0E612C, 0x990951BA, 0x076DC419, 0x706AF48F, 0xE963A535, 0x9E6495A3,
	                     0x0EDB8832, 0x79DCB8A4, 0xE0D5E91E, 0x97D2D988, 0x09B64C2B, 0x7EB17CBD, 0xE7B82D07, 0x90BF1D91, 
	                     0x1DB71064, 0x6AB020F2, 0xF3B97148, 0x84BE41DE, 0x1ADAD47D, 0x6DDDE4EB, 0xF4D4B551, 0x83D385C7,
	                     0x136C9856, 0x646BA8C0, 0xFD62F97A, 0x8A65C9EC, 0x14015C4F, 0x63066CD9, 0xFA0F3D63, 0x8D080DF5, 
	                     0x3B6E20C8, 0x4C69105E, 0xD56041E4, 0xA2677172, 0x3C03E4D1, 0x4B04D447, 0xD20D85FD, 0xA50AB56B, 
	                     0x35B5A8FA, 0x42B2986C, 0xDBBBC9D6, 0xACBCF940, 0x32D86CE3, 0x45DF5C75, 0xDCD60DCF, 0xABD13D59, 
	                     0x26D930AC, 0x51DE003A, 0xC8D75180, 0xBFD06116, 0x21B4F4B5, 0x56B3C423, 0xCFBA9599, 0xB8BDA50F,
	                     0x2802B89E, 0x5F058808, 0xC60CD9B2, 0xB10BE924, 0x2F6F7C87, 0x58684C11, 0xC1611DAB, 0xB6662D3D,
	                     0x76DC4190, 0x01DB7106, 0x98D220BC, 0xEFD5102A, 0x71B18589, 0x06B6B51F, 0x9FBFE4A5, 0xE8B8D433,
	                     0x7807C9A2, 0x0F00F934, 0x9609A88E, 0xE10E9818, 0x7F6A0DBB, 0x086D3D2D, 0x91646C97, 0xE6635C01, 
	                     0x6B6B51F4, 0x1C6C6162, 0x856530D8, 0xF262004E, 0x6C0695ED, 0x1B01A57B, 0x8208F4C1, 0xF50FC457, 
	                     0x65B0D9C6, 0x12B7E950, 0x8BBEB8EA, 0xFCB9887C, 0x62DD1DDF, 0x15DA2D49, 0x8CD37CF3, 0xFBD44C65, 
	                     0x4DB26158, 0x3AB551CE, 0xA3BC0074, 0xD4BB30E2, 0x4ADFA541, 0x3DD895D7, 0xA4D1C46D, 0xD3D6F4FB, 
	                     0x4369E96A, 0x346ED9FC, 0xAD678846, 0xDA60B8D0, 0x44042D73, 0x33031DE5, 0xAA0A4C5F, 0xDD0D7CC9, 
	                     0x5005713C, 0x270241AA, 0xBE0B1010, 0xC90C2086, 0x5768B525, 0x206F85B3, 0xB966D409, 0xCE61E49F, 
	                     0x5EDEF90E, 0x29D9C998, 0xB0D09822, 0xC7D7A8B4, 0x59B33D17, 0x2EB40D81, 0xB7BD5C3B, 0xC0BA6CAD, 
	                     0xEDB88320, 0x9ABFB3B6, 0x03B6E20C, 0x74B1D29A, 0xEAD54739, 0x9DD277AF, 0x04DB2615, 0x73DC1683, 
	                     0xE3630B12, 0x94643B84, 0x0D6D6A3E, 0x7A6A5AA8, 0xE40ECF0B, 0x9309FF9D, 0x0A00AE27, 0x7D079EB1, 
	                     0xF00F9344, 0x8708A3D2, 0x1E01F268, 0x6906C2FE, 0xF762575D, 0x806567CB, 0x196C3671, 0x6E6B06E7, 
	                     0xFED41B76, 0x89D32BE0, 0x10DA7A5A, 0x67DD4ACC, 0xF9B9DF6F, 0x8EBEEFF9, 0x17B7BE43, 0x60B08ED5, 
	                     0xD6D6A3E8, 0xA1D1937E, 0x38D8C2C4, 0x4FDFF252, 0xD1BB67F1, 0xA6BC5767, 0x3FB506DD, 0x48B2364B, 
	                     0xD80D2BDA, 0xAF0A1B4C, 0x36034AF6, 0x41047A60, 0xDF60EFC3, 0xA867DF55, 0x316E8EEF, 0x4669BE79, 
	                     0xCB61B38C, 0xBC66831A, 0x256FD2A0, 0x5268E236, 0xCC0C7795, 0xBB0B4703, 0x220216B9, 0x5505262F, 
	                     0xC5BA3BBE, 0xB2BD0B28, 0x2BB45A92, 0x5CB36A04, 0xC2D7FFA7, 0xB5D0CF31, 0x2CD99E8B, 0x5BDEAE1D, 
	                     0x9B64C2B0, 0xEC63F226, 0x756AA39C, 0x026D930A, 0x9C0906A9, 0xEB0E363F, 0x72076785, 0x05005713, 
	                     0x95BF4A82, 0xE2B87A14, 0x7BB12BAE, 0x0CB61B38, 0x92D28E9B, 0xE5D5BE0D, 0x7CDCEFB7, 0x0BDBDF21, 
	                     0x86D3D2D4, 0xF1D4E242, 0x68DDB3F8, 0x1FDA836E, 0x81BE16CD, 0xF6B9265B, 0x6FB077E1, 0x18B74777, 
	                     0x88085AE6, 0xFF0F6A70, 0x66063BCA, 0x11010B5C, 0x8F659EFF, 0xF862AE69, 0x616BFFD3, 0x166CCF45, 
	                     0xA00AE278, 0xD70DD2EE, 0x4E048354, 0x3903B3C2, 0xA7672661, 0xD06016F7, 0x4969474D, 0x3E6E77DB, 
	                     0xAED16A4A, 0xD9D65ADC, 0x40DF0B66, 0x37D83BF0, 0xA9BCAE53, 0xDEBB9EC5, 0x47B2CF7F, 0x30B5FFE9, 
	                     0xBDBDF21C, 0xCABAC28A, 0x53B39330, 0x24B4A3A6, 0xBAD03605, 0xCDD70693, 0x54DE5729, 0x23D967BF, 
	                     0xB3667A2E, 0xC4614AB8, 0x5D681B02, 0x2A6F2B94, 0xB40BBE37, 0xC30C8EA1, 0x5A05DF1B, 0x2D02EF8D];
	     
	        var crc = -1, y = 0, n = a.length,i;
	
	        for (i = from; i < to; i++) {
	            y = (crc ^ a[i]) & 0xFF;
	            crc = (crc >>> 8) ^ table[y];
	        }
	     
	        return crc ^ (-1);
	    }
	
	    var h = img[0].length, w = img[0][0].length, s1, s2, next,k,length,a,b,i,j,adler32,crc32;
	    var stream = [
	                  137, 80, 78, 71, 13, 10, 26, 10,                           //  0: PNG signature
	                  0,0,0,13,                                                  //  8: IHDR Chunk length
	                  73, 72, 68, 82,                                            // 12: "IHDR" 
	                  (w >> 24) & 255, (w >> 16) & 255, (w >> 8) & 255, w&255,   // 16: Width
	                  (h >> 24) & 255, (h >> 16) & 255, (h >> 8) & 255, h&255,   // 20: Height
	                  8,                                                         // 24: bit depth
	                  2,                                                         // 25: RGB
	                  0,                                                         // 26: deflate
	                  0,                                                         // 27: no filter
	                  0,                                                         // 28: no interlace
	                  -1,-2,-3,-4,                                               // 29: CRC
	                  -5,-6,-7,-8,                                               // 33: IDAT Chunk length
	                  73, 68, 65, 84,                                            // 37: "IDAT"
	                  // RFC 1950 header starts here
	                  8,                                                         // 41: RFC1950 CMF
	                  29                                                         // 42: RFC1950 FLG
	                  ];
	    crc32 = crc32Array(stream,12,29);
	    stream[29] = (crc32>>24)&255;
	    stream[30] = (crc32>>16)&255;
	    stream[31] = (crc32>>8)&255;
	    stream[32] = (crc32)&255;
	    s1 = 1;
	    s2 = 0;
	    for(i=0;i<h;i++) {
	        if(i<h-1) { stream.push(0); }
	        else { stream.push(1); }
	        a = (3*w+1+(i===0))&255; b = ((3*w+1+(i===0))>>8)&255;
	        stream.push(a); stream.push(b);
	        stream.push((~a)&255); stream.push((~b)&255);
	        if(i===0) stream.push(0);
	        for(j=0;j<w;j++) {
	            for(k=0;k<3;k++) {
	                a = img[k][i][j];
	                if(a>255) a = 255;
	                else if(a<0) a=0;
	                else a = Math.round(a);
	                s1 = (s1 + a )%65521;
	                s2 = (s2 + s1)%65521;
	                stream.push(a);
	            }
	        }
	        stream.push(0);
	    }
	    adler32 = (s2<<16)+s1;
	    stream.push((adler32>>24)&255);
	    stream.push((adler32>>16)&255);
	    stream.push((adler32>>8)&255);
	    stream.push((adler32)&255);
	    length = stream.length - 41;
	    stream[33] = (length>>24)&255;
	    stream[34] = (length>>16)&255;
	    stream[35] = (length>>8)&255;
	    stream[36] = (length)&255;
	    crc32 = crc32Array(stream,37);
	    stream.push((crc32>>24)&255);
	    stream.push((crc32>>16)&255);
	    stream.push((crc32>>8)&255);
	    stream.push((crc32)&255);
	    stream.push(0);
	    stream.push(0);
	    stream.push(0);
	    stream.push(0);
	//    a = stream.length;
	    stream.push(73);  // I
	    stream.push(69);  // E
	    stream.push(78);  // N
	    stream.push(68);  // D
	    stream.push(174); // CRC1
	    stream.push(66);  // CRC2
	    stream.push(96);  // CRC3
	    stream.push(130); // CRC4
	    return 'data:image/png;base64,'+base64(stream);
	}
	
	// 2. Linear algebra with Arrays.
	numeric._dim = function _dim(x) {
	    var ret = [];
	    while(typeof x === "object") { ret.push(x.length); x = x[0]; }
	    return ret;
	}
	
	numeric.dim = function dim(x) {
	    var y,z;
	    if(typeof x === "object") {
	        y = x[0];
	        if(typeof y === "object") {
	            z = y[0];
	            if(typeof z === "object") {
	                return numeric._dim(x);
	            }
	            return [x.length,y.length];
	        }
	        return [x.length];
	    }
	    return [];
	}
	
	numeric.mapreduce = function mapreduce(body,init) {
	    return Function('x','accum','_s','_k',
	            'if(typeof accum === "undefined") accum = '+init+';\n'+
	            'if(typeof x === "number") { var xi = x; '+body+'; return accum; }\n'+
	            'if(typeof _s === "undefined") _s = numeric.dim(x);\n'+
	            'if(typeof _k === "undefined") _k = 0;\n'+
	            'var _n = _s[_k];\n'+
	            'var i,xi;\n'+
	            'if(_k < _s.length-1) {\n'+
	            '    for(i=_n-1;i>=0;i--) {\n'+
	            '        accum = arguments.callee(x[i],accum,_s,_k+1);\n'+
	            '    }'+
	            '    return accum;\n'+
	            '}\n'+
	            'for(i=_n-1;i>=1;i-=2) { \n'+
	            '    xi = x[i];\n'+
	            '    '+body+';\n'+
	            '    xi = x[i-1];\n'+
	            '    '+body+';\n'+
	            '}\n'+
	            'if(i === 0) {\n'+
	            '    xi = x[i];\n'+
	            '    '+body+'\n'+
	            '}\n'+
	            'return accum;'
	            );
	}
	numeric.mapreduce2 = function mapreduce2(body,setup) {
	    return Function('x',
	            'var n = x.length;\n'+
	            'var i,xi;\n'+setup+';\n'+
	            'for(i=n-1;i!==-1;--i) { \n'+
	            '    xi = x[i];\n'+
	            '    '+body+';\n'+
	            '}\n'+
	            'return accum;'
	            );
	}
	
	
	numeric.same = function same(x,y) {
	    var i,n;
	    if(!(x instanceof Array) || !(y instanceof Array)) { return false; }
	    n = x.length;
	    if(n !== y.length) { return false; }
	    for(i=0;i<n;i++) {
	        if(x[i] === y[i]) { continue; }
	        if(typeof x[i] === "object") { if(!same(x[i],y[i])) return false; }
	        else { return false; }
	    }
	    return true;
	}
	
	numeric.rep = function rep(s,v,k) {
	    if(typeof k === "undefined") { k=0; }
	    var n = s[k], ret = Array(n), i;
	    if(k === s.length-1) {
	        for(i=n-2;i>=0;i-=2) { ret[i+1] = v; ret[i] = v; }
	        if(i===-1) { ret[0] = v; }
	        return ret;
	    }
	    for(i=n-1;i>=0;i--) { ret[i] = numeric.rep(s,v,k+1); }
	    return ret;
	}
	
	
	numeric.dotMMsmall = function dotMMsmall(x,y) {
	    var i,j,k,p,q,r,ret,foo,bar,woo,i0,k0,p0,r0;
	    p = x.length; q = y.length; r = y[0].length;
	    ret = Array(p);
	    for(i=p-1;i>=0;i--) {
	        foo = Array(r);
	        bar = x[i];
	        for(k=r-1;k>=0;k--) {
	            woo = bar[q-1]*y[q-1][k];
	            for(j=q-2;j>=1;j-=2) {
	                i0 = j-1;
	                woo += bar[j]*y[j][k] + bar[i0]*y[i0][k];
	            }
	            if(j===0) { woo += bar[0]*y[0][k]; }
	            foo[k] = woo;
	        }
	        ret[i] = foo;
	    }
	    return ret;
	}
	numeric._getCol = function _getCol(A,j,x) {
	    var n = A.length, i;
	    for(i=n-1;i>0;--i) {
	        x[i] = A[i][j];
	        --i;
	        x[i] = A[i][j];
	    }
	    if(i===0) x[0] = A[0][j];
	}
	numeric.dotMMbig = function dotMMbig(x,y){
	    var gc = numeric._getCol, p = y.length, v = Array(p);
	    var m = x.length, n = y[0].length, A = new Array(m), xj;
	    var VV = numeric.dotVV;
	    var i,j,k,z;
	    --p;
	    --m;
	    for(i=m;i!==-1;--i) A[i] = Array(n);
	    --n;
	    for(i=n;i!==-1;--i) {
	        gc(y,i,v);
	        for(j=m;j!==-1;--j) {
	            z=0;
	            xj = x[j];
	            A[j][i] = VV(xj,v);
	        }
	    }
	    return A;
	}
	
	numeric.dotMV = function dotMV(x,y) {
	    var p = x.length, q = y.length,i;
	    var ret = Array(p), dotVV = numeric.dotVV;
	    for(i=p-1;i>=0;i--) { ret[i] = dotVV(x[i],y); }
	    return ret;
	}
	
	numeric.dotVM = function dotVM(x,y) {
	    var i,j,k,p,q,r,ret,foo,bar,woo,i0,k0,p0,r0,s1,s2,s3,baz,accum;
	    p = x.length; q = y[0].length;
	    ret = Array(q);
	    for(k=q-1;k>=0;k--) {
	        woo = x[p-1]*y[p-1][k];
	        for(j=p-2;j>=1;j-=2) {
	            i0 = j-1;
	            woo += x[j]*y[j][k] + x[i0]*y[i0][k];
	        }
	        if(j===0) { woo += x[0]*y[0][k]; }
	        ret[k] = woo;
	    }
	    return ret;
	}
	
	numeric.dotVV = function dotVV(x,y) {
	    var i,n=x.length,i1,ret = x[n-1]*y[n-1];
	    for(i=n-2;i>=1;i-=2) {
	        i1 = i-1;
	        ret += x[i]*y[i] + x[i1]*y[i1];
	    }
	    if(i===0) { ret += x[0]*y[0]; }
	    return ret;
	}
	
	numeric.dot = function dot(x,y) {
	    var d = numeric.dim;
	    switch(d(x).length*1000+d(y).length) {
	    case 2002:
	        if(y.length < 10) return numeric.dotMMsmall(x,y);
	        else return numeric.dotMMbig(x,y);
	    case 2001: return numeric.dotMV(x,y);
	    case 1002: return numeric.dotVM(x,y);
	    case 1001: return numeric.dotVV(x,y);
	    case 1000: return numeric.mulVS(x,y);
	    case 1: return numeric.mulSV(x,y);
	    case 0: return x*y;
	    default: throw new Error('numeric.dot only works on vectors and matrices');
	    }
	}
	
	numeric.diag = function diag(d) {
	    var i,i1,j,n = d.length, A = Array(n), Ai;
	    for(i=n-1;i>=0;i--) {
	        Ai = Array(n);
	        i1 = i+2;
	        for(j=n-1;j>=i1;j-=2) {
	            Ai[j] = 0;
	            Ai[j-1] = 0;
	        }
	        if(j>i) { Ai[j] = 0; }
	        Ai[i] = d[i];
	        for(j=i-1;j>=1;j-=2) {
	            Ai[j] = 0;
	            Ai[j-1] = 0;
	        }
	        if(j===0) { Ai[0] = 0; }
	        A[i] = Ai;
	    }
	    return A;
	}
	numeric.getDiag = function(A) {
	    var n = Math.min(A.length,A[0].length),i,ret = Array(n);
	    for(i=n-1;i>=1;--i) {
	        ret[i] = A[i][i];
	        --i;
	        ret[i] = A[i][i];
	    }
	    if(i===0) {
	        ret[0] = A[0][0];
	    }
	    return ret;
	}
	
	numeric.identity = function identity(n) { return numeric.diag(numeric.rep([n],1)); }
	numeric.pointwise = function pointwise(params,body,setup) {
	    if(typeof setup === "undefined") { setup = ""; }
	    var fun = [];
	    var k;
	    var avec = /\[i\]$/,p,thevec = '';
	    var haveret = false;
	    for(k=0;k<params.length;k++) {
	        if(avec.test(params[k])) {
	            p = params[k].substring(0,params[k].length-3);
	            thevec = p;
	        } else { p = params[k]; }
	        if(p==='ret') haveret = true;
	        fun.push(p);
	    }
	    fun[params.length] = '_s';
	    fun[params.length+1] = '_k';
	    fun[params.length+2] = (
	            'if(typeof _s === "undefined") _s = numeric.dim('+thevec+');\n'+
	            'if(typeof _k === "undefined") _k = 0;\n'+
	            'var _n = _s[_k];\n'+
	            'var i'+(haveret?'':', ret = Array(_n)')+';\n'+
	            'if(_k < _s.length-1) {\n'+
	            '    for(i=_n-1;i>=0;i--) ret[i] = arguments.callee('+params.join(',')+',_s,_k+1);\n'+
	            '    return ret;\n'+
	            '}\n'+
	            setup+'\n'+
	            'for(i=_n-1;i!==-1;--i) {\n'+
	            '    '+body+'\n'+
	            '}\n'+
	            'return ret;'
	            );
	    return Function.apply(null,fun);
	}
	numeric.pointwise2 = function pointwise2(params,body,setup) {
	    if(typeof setup === "undefined") { setup = ""; }
	    var fun = [];
	    var k;
	    var avec = /\[i\]$/,p,thevec = '';
	    var haveret = false;
	    for(k=0;k<params.length;k++) {
	        if(avec.test(params[k])) {
	            p = params[k].substring(0,params[k].length-3);
	            thevec = p;
	        } else { p = params[k]; }
	        if(p==='ret') haveret = true;
	        fun.push(p);
	    }
	    fun[params.length] = (
	            'var _n = '+thevec+'.length;\n'+
	            'var i'+(haveret?'':', ret = Array(_n)')+';\n'+
	            setup+'\n'+
	            'for(i=_n-1;i!==-1;--i) {\n'+
	            body+'\n'+
	            '}\n'+
	            'return ret;'
	            );
	    return Function.apply(null,fun);
	}
	numeric._biforeach = (function _biforeach(x,y,s,k,f) {
	    if(k === s.length-1) { f(x,y); return; }
	    var i,n=s[k];
	    for(i=n-1;i>=0;i--) { _biforeach(typeof x==="object"?x[i]:x,typeof y==="object"?y[i]:y,s,k+1,f); }
	});
	numeric._biforeach2 = (function _biforeach2(x,y,s,k,f) {
	    if(k === s.length-1) { return f(x,y); }
	    var i,n=s[k],ret = Array(n);
	    for(i=n-1;i>=0;--i) { ret[i] = _biforeach2(typeof x==="object"?x[i]:x,typeof y==="object"?y[i]:y,s,k+1,f); }
	    return ret;
	});
	numeric._foreach = (function _foreach(x,s,k,f) {
	    if(k === s.length-1) { f(x); return; }
	    var i,n=s[k];
	    for(i=n-1;i>=0;i--) { _foreach(x[i],s,k+1,f); }
	});
	numeric._foreach2 = (function _foreach2(x,s,k,f) {
	    if(k === s.length-1) { return f(x); }
	    var i,n=s[k], ret = Array(n);
	    for(i=n-1;i>=0;i--) { ret[i] = _foreach2(x[i],s,k+1,f); }
	    return ret;
	});
	
	/*numeric.anyV = numeric.mapreduce('if(xi) return true;','false');
	numeric.allV = numeric.mapreduce('if(!xi) return false;','true');
	numeric.any = function(x) { if(typeof x.length === "undefined") return x; return numeric.anyV(x); }
	numeric.all = function(x) { if(typeof x.length === "undefined") return x; return numeric.allV(x); }*/
	
	numeric.ops2 = {
	        add: '+',
	        sub: '-',
	        mul: '*',
	        div: '/',
	        mod: '%',
	        and: '&&',
	        or:  '||',
	        eq:  '===',
	        neq: '!==',
	        lt:  '<',
	        gt:  '>',
	        leq: '<=',
	        geq: '>=',
	        band: '&',
	        bor: '|',
	        bxor: '^',
	        lshift: '<<',
	        rshift: '>>',
	        rrshift: '>>>'
	};
	numeric.opseq = {
	        addeq: '+=',
	        subeq: '-=',
	        muleq: '*=',
	        diveq: '/=',
	        modeq: '%=',
	        lshifteq: '<<=',
	        rshifteq: '>>=',
	        rrshifteq: '>>>=',
	        bandeq: '&=',
	        boreq: '|=',
	        bxoreq: '^='
	};
	numeric.mathfuns = ['abs','acos','asin','atan','ceil','cos',
	                    'exp','floor','log','round','sin','sqrt','tan',
	                    'isNaN','isFinite'];
	numeric.mathfuns2 = ['atan2','pow','max','min'];
	numeric.ops1 = {
	        neg: '-',
	        not: '!',
	        bnot: '~',
	        clone: ''
	};
	numeric.mapreducers = {
	        any: ['if(xi) return true;','var accum = false;'],
	        all: ['if(!xi) return false;','var accum = true;'],
	        sum: ['accum += xi;','var accum = 0;'],
	        prod: ['accum *= xi;','var accum = 1;'],
	        norm2Squared: ['accum += xi*xi;','var accum = 0;'],
	        norminf: ['accum = max(accum,abs(xi));','var accum = 0, max = Math.max, abs = Math.abs;'],
	        norm1: ['accum += abs(xi)','var accum = 0, abs = Math.abs;'],
	        sup: ['accum = max(accum,xi);','var accum = -Infinity, max = Math.max;'],
	        inf: ['accum = min(accum,xi);','var accum = Infinity, min = Math.min;']
	};
	
	(function () {
	    var i,o;
	    for(i=0;i<numeric.mathfuns2.length;++i) {
	        o = numeric.mathfuns2[i];
	        numeric.ops2[o] = o;
	    }
	    for(i in numeric.ops2) {
	        if(numeric.ops2.hasOwnProperty(i)) {
	            o = numeric.ops2[i];
	            var code, codeeq, setup = '';
	            if(numeric.myIndexOf.call(numeric.mathfuns2,i)!==-1) {
	                setup = 'var '+o+' = Math.'+o+';\n';
	                code = function(r,x,y) { return r+' = '+o+'('+x+','+y+')'; };
	                codeeq = function(x,y) { return x+' = '+o+'('+x+','+y+')'; };
	            } else {
	                code = function(r,x,y) { return r+' = '+x+' '+o+' '+y; };
	                if(numeric.opseq.hasOwnProperty(i+'eq')) {
	                    codeeq = function(x,y) { return x+' '+o+'= '+y; };
	                } else {
	                    codeeq = function(x,y) { return x+' = '+x+' '+o+' '+y; };                    
	                }
	            }
	            numeric[i+'VV'] = numeric.pointwise2(['x[i]','y[i]'],code('ret[i]','x[i]','y[i]'),setup);
	            numeric[i+'SV'] = numeric.pointwise2(['x','y[i]'],code('ret[i]','x','y[i]'),setup);
	            numeric[i+'VS'] = numeric.pointwise2(['x[i]','y'],code('ret[i]','x[i]','y'),setup);
	            numeric[i] = Function(
	                    'var n = arguments.length, i, x = arguments[0], y;\n'+
	                    'var VV = numeric.'+i+'VV, VS = numeric.'+i+'VS, SV = numeric.'+i+'SV;\n'+
	                    'var dim = numeric.dim;\n'+
	                    'for(i=1;i!==n;++i) { \n'+
	                    '  y = arguments[i];\n'+
	                    '  if(typeof x === "object") {\n'+
	                    '      if(typeof y === "object") x = numeric._biforeach2(x,y,dim(x),0,VV);\n'+
	                    '      else x = numeric._biforeach2(x,y,dim(x),0,VS);\n'+
	                    '  } else if(typeof y === "object") x = numeric._biforeach2(x,y,dim(y),0,SV);\n'+
	                    '  else '+codeeq('x','y')+'\n'+
	                    '}\nreturn x;\n');
	            numeric[o] = numeric[i];
	            numeric[i+'eqV'] = numeric.pointwise2(['ret[i]','x[i]'], codeeq('ret[i]','x[i]'),setup);
	            numeric[i+'eqS'] = numeric.pointwise2(['ret[i]','x'], codeeq('ret[i]','x'),setup);
	            numeric[i+'eq'] = Function(
	                    'var n = arguments.length, i, x = arguments[0], y;\n'+
	                    'var V = numeric.'+i+'eqV, S = numeric.'+i+'eqS\n'+
	                    'var s = numeric.dim(x);\n'+
	                    'for(i=1;i!==n;++i) { \n'+
	                    '  y = arguments[i];\n'+
	                    '  if(typeof y === "object") numeric._biforeach(x,y,s,0,V);\n'+
	                    '  else numeric._biforeach(x,y,s,0,S);\n'+
	                    '}\nreturn x;\n');
	        }
	    }
	    for(i=0;i<numeric.mathfuns2.length;++i) {
	        o = numeric.mathfuns2[i];
	        delete numeric.ops2[o];
	    }
	    for(i=0;i<numeric.mathfuns.length;++i) {
	        o = numeric.mathfuns[i];
	        numeric.ops1[o] = o;
	    }
	    for(i in numeric.ops1) {
	        if(numeric.ops1.hasOwnProperty(i)) {
	            setup = '';
	            o = numeric.ops1[i];
	            if(numeric.myIndexOf.call(numeric.mathfuns,i)!==-1) {
	                if(Math.hasOwnProperty(o)) setup = 'var '+o+' = Math.'+o+';\n';
	            }
	            numeric[i+'eqV'] = numeric.pointwise2(['ret[i]'],'ret[i] = '+o+'(ret[i]);',setup);
	            numeric[i+'eq'] = Function('x',
	                    'if(typeof x !== "object") return '+o+'x\n'+
	                    'var i;\n'+
	                    'var V = numeric.'+i+'eqV;\n'+
	                    'var s = numeric.dim(x);\n'+
	                    'numeric._foreach(x,s,0,V);\n'+
	                    'return x;\n');
	            numeric[i+'V'] = numeric.pointwise2(['x[i]'],'ret[i] = '+o+'(x[i]);',setup);
	            numeric[i] = Function('x',
	                    'if(typeof x !== "object") return '+o+'(x)\n'+
	                    'var i;\n'+
	                    'var V = numeric.'+i+'V;\n'+
	                    'var s = numeric.dim(x);\n'+
	                    'return numeric._foreach2(x,s,0,V);\n');
	        }
	    }
	    for(i=0;i<numeric.mathfuns.length;++i) {
	        o = numeric.mathfuns[i];
	        delete numeric.ops1[o];
	    }
	    for(i in numeric.mapreducers) {
	        if(numeric.mapreducers.hasOwnProperty(i)) {
	            o = numeric.mapreducers[i];
	            numeric[i+'V'] = numeric.mapreduce2(o[0],o[1]);
	            numeric[i] = Function('x','s','k',
	                    o[1]+
	                    'if(typeof x !== "object") {'+
	                    '    xi = x;\n'+
	                    o[0]+';\n'+
	                    '    return accum;\n'+
	                    '}'+
	                    'if(typeof s === "undefined") s = numeric.dim(x);\n'+
	                    'if(typeof k === "undefined") k = 0;\n'+
	                    'if(k === s.length-1) return numeric.'+i+'V(x);\n'+
	                    'var xi;\n'+
	                    'var n = x.length, i;\n'+
	                    'for(i=n-1;i!==-1;--i) {\n'+
	                    '   xi = arguments.callee(x[i]);\n'+
	                    o[0]+';\n'+
	                    '}\n'+
	                    'return accum;\n');
	        }
	    }
	}());
	
	numeric.truncVV = numeric.pointwise(['x[i]','y[i]'],'ret[i] = round(x[i]/y[i])*y[i];','var round = Math.round;');
	numeric.truncVS = numeric.pointwise(['x[i]','y'],'ret[i] = round(x[i]/y)*y;','var round = Math.round;');
	numeric.truncSV = numeric.pointwise(['x','y[i]'],'ret[i] = round(x/y[i])*y[i];','var round = Math.round;');
	numeric.trunc = function trunc(x,y) {
	    if(typeof x === "object") {
	        if(typeof y === "object") return numeric.truncVV(x,y);
	        return numeric.truncVS(x,y);
	    }
	    if (typeof y === "object") return numeric.truncSV(x,y);
	    return Math.round(x/y)*y;
	}
	
	numeric.inv = function inv(x) {
	    var s = numeric.dim(x), abs = Math.abs, m = s[0], n = s[1];
	    var A = numeric.clone(x), Ai, Aj;
	    var I = numeric.identity(m), Ii, Ij;
	    var i,j,k,x;
	    for(j=0;j<n;++j) {
	        var i0 = -1;
	        var v0 = -1;
	        for(i=j;i!==m;++i) { k = abs(A[i][j]); if(k>v0) { i0 = i; v0 = k; } }
	        Aj = A[i0]; A[i0] = A[j]; A[j] = Aj;
	        Ij = I[i0]; I[i0] = I[j]; I[j] = Ij;
	        x = Aj[j];
	        for(k=j;k!==n;++k)    Aj[k] /= x; 
	        for(k=n-1;k!==-1;--k) Ij[k] /= x;
	        for(i=m-1;i!==-1;--i) {
	            if(i!==j) {
	                Ai = A[i];
	                Ii = I[i];
	                x = Ai[j];
	                for(k=j+1;k!==n;++k)  Ai[k] -= Aj[k]*x;
	                for(k=n-1;k>0;--k) { Ii[k] -= Ij[k]*x; --k; Ii[k] -= Ij[k]*x; }
	                if(k===0) Ii[0] -= Ij[0]*x;
	            }
	        }
	    }
	    return I;
	}
	
	numeric.det = function det(x) {
	    var s = numeric.dim(x);
	    if(s.length !== 2 || s[0] !== s[1]) { throw new Error('numeric: det() only works on square matrices'); }
	    var n = s[0], ret = 1,i,j,k,A = numeric.clone(x),Aj,Ai,alpha,temp,k1,k2,k3;
	    for(j=0;j<n-1;j++) {
	        k=j;
	        for(i=j+1;i<n;i++) { if(Math.abs(A[i][j]) > Math.abs(A[k][j])) { k = i; } }
	        if(k !== j) {
	            temp = A[k]; A[k] = A[j]; A[j] = temp;
	            ret *= -1;
	        }
	        Aj = A[j];
	        for(i=j+1;i<n;i++) {
	            Ai = A[i];
	            alpha = Ai[j]/Aj[j];
	            for(k=j+1;k<n-1;k+=2) {
	                k1 = k+1;
	                Ai[k] -= Aj[k]*alpha;
	                Ai[k1] -= Aj[k1]*alpha;
	            }
	            if(k!==n) { Ai[k] -= Aj[k]*alpha; }
	        }
	        if(Aj[j] === 0) { return 0; }
	        ret *= Aj[j];
	    }
	    return ret*A[j][j];
	}
	
	numeric.transpose = function transpose(x) {
	    var i,j,m = x.length,n = x[0].length, ret=Array(n),A0,A1,Bj;
	    for(j=0;j<n;j++) ret[j] = Array(m);
	    for(i=m-1;i>=1;i-=2) {
	        A1 = x[i];
	        A0 = x[i-1];
	        for(j=n-1;j>=1;--j) {
	            Bj = ret[j]; Bj[i] = A1[j]; Bj[i-1] = A0[j];
	            --j;
	            Bj = ret[j]; Bj[i] = A1[j]; Bj[i-1] = A0[j];
	        }
	        if(j===0) {
	            Bj = ret[0]; Bj[i] = A1[0]; Bj[i-1] = A0[0];
	        }
	    }
	    if(i===0) {
	        A0 = x[0];
	        for(j=n-1;j>=1;--j) {
	            ret[j][0] = A0[j];
	            --j;
	            ret[j][0] = A0[j];
	        }
	        if(j===0) { ret[0][0] = A0[0]; }
	    }
	    return ret;
	}
	numeric.negtranspose = function negtranspose(x) {
	    var i,j,m = x.length,n = x[0].length, ret=Array(n),A0,A1,Bj;
	    for(j=0;j<n;j++) ret[j] = Array(m);
	    for(i=m-1;i>=1;i-=2) {
	        A1 = x[i];
	        A0 = x[i-1];
	        for(j=n-1;j>=1;--j) {
	            Bj = ret[j]; Bj[i] = -A1[j]; Bj[i-1] = -A0[j];
	            --j;
	            Bj = ret[j]; Bj[i] = -A1[j]; Bj[i-1] = -A0[j];
	        }
	        if(j===0) {
	            Bj = ret[0]; Bj[i] = -A1[0]; Bj[i-1] = -A0[0];
	        }
	    }
	    if(i===0) {
	        A0 = x[0];
	        for(j=n-1;j>=1;--j) {
	            ret[j][0] = -A0[j];
	            --j;
	            ret[j][0] = -A0[j];
	        }
	        if(j===0) { ret[0][0] = -A0[0]; }
	    }
	    return ret;
	}
	
	numeric._random = function _random(s,k) {
	    var i,n=s[k],ret=Array(n), rnd;
	    if(k === s.length-1) {
	        rnd = Math.random;
	        for(i=n-1;i>=1;i-=2) {
	            ret[i] = rnd();
	            ret[i-1] = rnd();
	        }
	        if(i===0) { ret[0] = rnd(); }
	        return ret;
	    }
	    for(i=n-1;i>=0;i--) ret[i] = _random(s,k+1);
	    return ret;
	}
	numeric.random = function random(s) { return numeric._random(s,0); }
	
	numeric.norm2 = function norm2(x) { return Math.sqrt(numeric.norm2Squared(x)); }
	
	numeric.linspace = function linspace(a,b,n) {
	    if(typeof n === "undefined") n = Math.max(Math.round(b-a)+1,1);
	    if(n<2) { return n===1?[a]:[]; }
	    var i,ret = Array(n);
	    n--;
	    for(i=n;i>=0;i--) { ret[i] = (i*b+(n-i)*a)/n; }
	    return ret;
	}
	
	numeric.getBlock = function getBlock(x,from,to) {
	    var s = numeric.dim(x);
	    function foo(x,k) {
	        var i,a = from[k], n = to[k]-a, ret = Array(n);
	        if(k === s.length-1) {
	            for(i=n;i>=0;i--) { ret[i] = x[i+a]; }
	            return ret;
	        }
	        for(i=n;i>=0;i--) { ret[i] = foo(x[i+a],k+1); }
	        return ret;
	    }
	    return foo(x,0);
	}
	
	numeric.setBlock = function setBlock(x,from,to,B) {
	    var s = numeric.dim(x);
	    function foo(x,y,k) {
	        var i,a = from[k], n = to[k]-a;
	        if(k === s.length-1) { for(i=n;i>=0;i--) { x[i+a] = y[i]; } }
	        for(i=n;i>=0;i--) { foo(x[i+a],y[i],k+1); }
	    }
	    foo(x,B,0);
	    return x;
	}
	
	numeric.getRange = function getRange(A,I,J) {
	    var m = I.length, n = J.length;
	    var i,j;
	    var B = Array(m), Bi, AI;
	    for(i=m-1;i!==-1;--i) {
	        B[i] = Array(n);
	        Bi = B[i];
	        AI = A[I[i]];
	        for(j=n-1;j!==-1;--j) Bi[j] = AI[J[j]];
	    }
	    return B;
	}
	
	numeric.blockMatrix = function blockMatrix(X) {
	    var s = numeric.dim(X);
	    if(s.length<4) return numeric.blockMatrix([X]);
	    var m=s[0],n=s[1],M,N,i,j,Xij;
	    M = 0; N = 0;
	    for(i=0;i<m;++i) M+=X[i][0].length;
	    for(j=0;j<n;++j) N+=X[0][j][0].length;
	    var Z = Array(M);
	    for(i=0;i<M;++i) Z[i] = Array(N);
	    var I=0,J,ZI,k,l,Xijk;
	    for(i=0;i<m;++i) {
	        J=N;
	        for(j=n-1;j!==-1;--j) {
	            Xij = X[i][j];
	            J -= Xij[0].length;
	            for(k=Xij.length-1;k!==-1;--k) {
	                Xijk = Xij[k];
	                ZI = Z[I+k];
	                for(l = Xijk.length-1;l!==-1;--l) ZI[J+l] = Xijk[l];
	            }
	        }
	        I += X[i][0].length;
	    }
	    return Z;
	}
	
	numeric.tensor = function tensor(x,y) {
	    if(typeof x === "number" || typeof y === "number") return numeric.mul(x,y);
	    var s1 = numeric.dim(x), s2 = numeric.dim(y);
	    if(s1.length !== 1 || s2.length !== 1) {
	        throw new Error('numeric: tensor product is only defined for vectors');
	    }
	    var m = s1[0], n = s2[0], A = Array(m), Ai, i,j,xi;
	    for(i=m-1;i>=0;i--) {
	        Ai = Array(n);
	        xi = x[i];
	        for(j=n-1;j>=3;--j) {
	            Ai[j] = xi * y[j];
	            --j;
	            Ai[j] = xi * y[j];
	            --j;
	            Ai[j] = xi * y[j];
	            --j;
	            Ai[j] = xi * y[j];
	        }
	        while(j>=0) { Ai[j] = xi * y[j]; --j; }
	        A[i] = Ai;
	    }
	    return A;
	}
	
	// 3. The Tensor type T
	numeric.T = function T(x,y) { this.x = x; this.y = y; }
	numeric.t = function t(x,y) { return new numeric.T(x,y); }
	
	numeric.Tbinop = function Tbinop(rr,rc,cr,cc,setup) {
	    var io = numeric.indexOf;
	    if(typeof setup !== "string") {
	        var k;
	        setup = '';
	        for(k in numeric) {
	            if(numeric.hasOwnProperty(k) && (rr.indexOf(k)>=0 || rc.indexOf(k)>=0 || cr.indexOf(k)>=0 || cc.indexOf(k)>=0) && k.length>1) {
	                setup += 'var '+k+' = numeric.'+k+';\n';
	            }
	        }
	    }
	    return Function(['y'],
	            'var x = this;\n'+
	            'if(!(y instanceof numeric.T)) { y = new numeric.T(y); }\n'+
	            setup+'\n'+
	            'if(x.y) {'+
	            '  if(y.y) {'+
	            '    return new numeric.T('+cc+');\n'+
	            '  }\n'+
	            '  return new numeric.T('+cr+');\n'+
	            '}\n'+
	            'if(y.y) {\n'+
	            '  return new numeric.T('+rc+');\n'+
	            '}\n'+
	            'return new numeric.T('+rr+');\n'
	    );
	}
	
	numeric.T.prototype.add = numeric.Tbinop(
	        'add(x.x,y.x)',
	        'add(x.x,y.x),y.y',
	        'add(x.x,y.x),x.y',
	        'add(x.x,y.x),add(x.y,y.y)');
	numeric.T.prototype.sub = numeric.Tbinop(
	        'sub(x.x,y.x)',
	        'sub(x.x,y.x),neg(y.y)',
	        'sub(x.x,y.x),x.y',
	        'sub(x.x,y.x),sub(x.y,y.y)');
	numeric.T.prototype.mul = numeric.Tbinop(
	        'mul(x.x,y.x)',
	        'mul(x.x,y.x),mul(x.x,y.y)',
	        'mul(x.x,y.x),mul(x.y,y.x)',
	        'sub(mul(x.x,y.x),mul(x.y,y.y)),add(mul(x.x,y.y),mul(x.y,y.x))');
	
	numeric.T.prototype.reciprocal = function reciprocal() {
	    var mul = numeric.mul, div = numeric.div;
	    if(this.y) {
	        var d = numeric.add(mul(this.x,this.x),mul(this.y,this.y));
	        return new numeric.T(div(this.x,d),div(numeric.neg(this.y),d));
	    }
	    return new T(div(1,this.x));
	}
	numeric.T.prototype.div = function div(y) {
	    if(!(y instanceof numeric.T)) y = new numeric.T(y);
	    if(y.y) { return this.mul(y.reciprocal()); }
	    var div = numeric.div;
	    if(this.y) { return new numeric.T(div(this.x,y.x),div(this.y,y.x)); }
	    return new numeric.T(div(this.x,y.x));
	}
	numeric.T.prototype.dot = numeric.Tbinop(
	        'dot(x.x,y.x)',
	        'dot(x.x,y.x),dot(x.x,y.y)',
	        'dot(x.x,y.x),dot(x.y,y.x)',
	        'sub(dot(x.x,y.x),dot(x.y,y.y)),add(dot(x.x,y.y),dot(x.y,y.x))'
	        );
	numeric.T.prototype.transpose = function transpose() {
	    var t = numeric.transpose, x = this.x, y = this.y;
	    if(y) { return new numeric.T(t(x),t(y)); }
	    return new numeric.T(t(x));
	}
	numeric.T.prototype.transjugate = function transjugate() {
	    var t = numeric.transpose, x = this.x, y = this.y;
	    if(y) { return new numeric.T(t(x),numeric.negtranspose(y)); }
	    return new numeric.T(t(x));
	}
	numeric.Tunop = function Tunop(r,c,s) {
	    if(typeof s !== "string") { s = ''; }
	    return Function(
	            'var x = this;\n'+
	            s+'\n'+
	            'if(x.y) {'+
	            '  '+c+';\n'+
	            '}\n'+
	            r+';\n'
	    );
	}
	
	numeric.T.prototype.exp = numeric.Tunop(
	        'return new numeric.T(ex)',
	        'return new numeric.T(mul(cos(x.y),ex),mul(sin(x.y),ex))',
	        'var ex = numeric.exp(x.x), cos = numeric.cos, sin = numeric.sin, mul = numeric.mul;');
	numeric.T.prototype.conj = numeric.Tunop(
	        'return new numeric.T(x.x);',
	        'return new numeric.T(x.x,numeric.neg(x.y));');
	numeric.T.prototype.neg = numeric.Tunop(
	        'return new numeric.T(neg(x.x));',
	        'return new numeric.T(neg(x.x),neg(x.y));',
	        'var neg = numeric.neg;');
	numeric.T.prototype.sin = numeric.Tunop(
	        'return new numeric.T(numeric.sin(x.x))',
	        'return x.exp().sub(x.neg().exp()).div(new numeric.T(0,2));');
	numeric.T.prototype.cos = numeric.Tunop(
	        'return new numeric.T(numeric.cos(x.x))',
	        'return x.exp().add(x.neg().exp()).div(2);');
	numeric.T.prototype.abs = numeric.Tunop(
	        'return new numeric.T(numeric.abs(x.x));',
	        'return new numeric.T(numeric.sqrt(numeric.add(mul(x.x,x.x),mul(x.y,x.y))));',
	        'var mul = numeric.mul;');
	numeric.T.prototype.log = numeric.Tunop(
	        'return new numeric.T(numeric.log(x.x));',
	        'var theta = new numeric.T(numeric.atan2(x.y,x.x)), r = x.abs();\n'+
	        'return new numeric.T(numeric.log(r.x),theta.x);');
	numeric.T.prototype.norm2 = numeric.Tunop(
	        'return numeric.norm2(x.x);',
	        'var f = numeric.norm2Squared;\n'+
	        'return Math.sqrt(f(x.x)+f(x.y));');
	numeric.T.prototype.inv = function inv() {
	    var A = this;
	    if(typeof A.y === "undefined") { return new numeric.T(numeric.inv(A.x)); }
	    var n = A.x.length, i, j, k;
	    var Rx = numeric.identity(n),Ry = numeric.rep([n,n],0);
	    var Ax = numeric.clone(A.x), Ay = numeric.clone(A.y);
	    var Aix, Aiy, Ajx, Ajy, Rix, Riy, Rjx, Rjy;
	    var i,j,k,d,d1,ax,ay,bx,by,temp;
	    for(i=0;i<n;i++) {
	        ax = Ax[i][i]; ay = Ay[i][i];
	        d = ax*ax+ay*ay;
	        k = i;
	        for(j=i+1;j<n;j++) {
	            ax = Ax[j][i]; ay = Ay[j][i];
	            d1 = ax*ax+ay*ay;
	            if(d1 > d) { k=j; d = d1; }
	        }
	        if(k!==i) {
	            temp = Ax[i]; Ax[i] = Ax[k]; Ax[k] = temp;
	            temp = Ay[i]; Ay[i] = Ay[k]; Ay[k] = temp;
	            temp = Rx[i]; Rx[i] = Rx[k]; Rx[k] = temp;
	            temp = Ry[i]; Ry[i] = Ry[k]; Ry[k] = temp;
	        }
	        Aix = Ax[i]; Aiy = Ay[i];
	        Rix = Rx[i]; Riy = Ry[i];
	        ax = Aix[i]; ay = Aiy[i];
	        for(j=i+1;j<n;j++) {
	            bx = Aix[j]; by = Aiy[j];
	            Aix[j] = (bx*ax+by*ay)/d;
	            Aiy[j] = (by*ax-bx*ay)/d;
	        }
	        for(j=0;j<n;j++) {
	            bx = Rix[j]; by = Riy[j];
	            Rix[j] = (bx*ax+by*ay)/d;
	            Riy[j] = (by*ax-bx*ay)/d;
	        }
	        for(j=i+1;j<n;j++) {
	            Ajx = Ax[j]; Ajy = Ay[j];
	            Rjx = Rx[j]; Rjy = Ry[j];
	            ax = Ajx[i]; ay = Ajy[i];
	            for(k=i+1;k<n;k++) {
	                bx = Aix[k]; by = Aiy[k];
	                Ajx[k] -= bx*ax-by*ay;
	                Ajy[k] -= by*ax+bx*ay;
	            }
	            for(k=0;k<n;k++) {
	                bx = Rix[k]; by = Riy[k];
	                Rjx[k] -= bx*ax-by*ay;
	                Rjy[k] -= by*ax+bx*ay;
	            }
	        }
	    }
	    for(i=n-1;i>0;i--) {
	        Rix = Rx[i]; Riy = Ry[i];
	        for(j=i-1;j>=0;j--) {
	            Rjx = Rx[j]; Rjy = Ry[j];
	            ax = Ax[j][i]; ay = Ay[j][i];
	            for(k=n-1;k>=0;k--) {
	                bx = Rix[k]; by = Riy[k];
	                Rjx[k] -= ax*bx - ay*by;
	                Rjy[k] -= ax*by + ay*bx;
	            }
	        }
	    }
	    return new numeric.T(Rx,Ry);
	}
	numeric.T.prototype.get = function get(i) {
	    var x = this.x, y = this.y, k = 0, ik, n = i.length;
	    if(y) {
	        while(k<n) {
	            ik = i[k];
	            x = x[ik];
	            y = y[ik];
	            k++;
	        }
	        return new numeric.T(x,y);
	    }
	    while(k<n) {
	        ik = i[k];
	        x = x[ik];
	        k++;
	    }
	    return new numeric.T(x);
	}
	numeric.T.prototype.set = function set(i,v) {
	    var x = this.x, y = this.y, k = 0, ik, n = i.length, vx = v.x, vy = v.y;
	    if(n===0) {
	        if(vy) { this.y = vy; }
	        else if(y) { this.y = undefined; }
	        this.x = x;
	        return this;
	    }
	    if(vy) {
	        if(y) { /* ok */ }
	        else {
	            y = numeric.rep(numeric.dim(x),0);
	            this.y = y;
	        }
	        while(k<n-1) {
	            ik = i[k];
	            x = x[ik];
	            y = y[ik];
	            k++;
	        }
	        ik = i[k];
	        x[ik] = vx;
	        y[ik] = vy;
	        return this;
	    }
	    if(y) {
	        while(k<n-1) {
	            ik = i[k];
	            x = x[ik];
	            y = y[ik];
	            k++;
	        }
	        ik = i[k];
	        x[ik] = vx;
	        if(vx instanceof Array) y[ik] = numeric.rep(numeric.dim(vx),0);
	        else y[ik] = 0;
	        return this;
	    }
	    while(k<n-1) {
	        ik = i[k];
	        x = x[ik];
	        k++;
	    }
	    ik = i[k];
	    x[ik] = vx;
	    return this;
	}
	numeric.T.prototype.getRows = function getRows(i0,i1) {
	    var n = i1-i0+1, j;
	    var rx = Array(n), ry, x = this.x, y = this.y;
	    for(j=i0;j<=i1;j++) { rx[j-i0] = x[j]; }
	    if(y) {
	        ry = Array(n);
	        for(j=i0;j<=i1;j++) { ry[j-i0] = y[j]; }
	        return new numeric.T(rx,ry);
	    }
	    return new numeric.T(rx);
	}
	numeric.T.prototype.setRows = function setRows(i0,i1,A) {
	    var j;
	    var rx = this.x, ry = this.y, x = A.x, y = A.y;
	    for(j=i0;j<=i1;j++) { rx[j] = x[j-i0]; }
	    if(y) {
	        if(!ry) { ry = numeric.rep(numeric.dim(rx),0); this.y = ry; }
	        for(j=i0;j<=i1;j++) { ry[j] = y[j-i0]; }
	    } else if(ry) {
	        for(j=i0;j<=i1;j++) { ry[j] = numeric.rep([x[j-i0].length],0); }
	    }
	    return this;
	}
	numeric.T.prototype.getRow = function getRow(k) {
	    var x = this.x, y = this.y;
	    if(y) { return new numeric.T(x[k],y[k]); }
	    return new numeric.T(x[k]);
	}
	numeric.T.prototype.setRow = function setRow(i,v) {
	    var rx = this.x, ry = this.y, x = v.x, y = v.y;
	    rx[i] = x;
	    if(y) {
	        if(!ry) { ry = numeric.rep(numeric.dim(rx),0); this.y = ry; }
	        ry[i] = y;
	    } else if(ry) {
	        ry = numeric.rep([x.length],0);
	    }
	    return this;
	}
	
	numeric.T.prototype.getBlock = function getBlock(from,to) {
	    var x = this.x, y = this.y, b = numeric.getBlock;
	    if(y) { return new numeric.T(b(x,from,to),b(y,from,to)); }
	    return new numeric.T(b(x,from,to));
	}
	numeric.T.prototype.setBlock = function setBlock(from,to,A) {
	    if(!(A instanceof numeric.T)) A = new numeric.T(A);
	    var x = this.x, y = this.y, b = numeric.setBlock, Ax = A.x, Ay = A.y;
	    if(Ay) {
	        if(!y) { this.y = numeric.rep(numeric.dim(this),0); y = this.y; }
	        b(x,from,to,Ax);
	        b(y,from,to,Ay);
	        return this;
	    }
	    b(x,from,to,Ax);
	    if(y) b(y,from,to,numeric.rep(numeric.dim(Ax),0));
	}
	numeric.T.rep = function rep(s,v) {
	    var T = numeric.T;
	    if(!(v instanceof T)) v = new T(v);
	    var x = v.x, y = v.y, r = numeric.rep;
	    if(y) return new T(r(s,x),r(s,y));
	    return new T(r(s,x));
	}
	numeric.T.diag = function diag(d) {
	    if(!(d instanceof numeric.T)) d = new numeric.T(d);
	    var x = d.x, y = d.y, diag = numeric.diag;
	    if(y) return new numeric.T(diag(x),diag(y));
	    return new numeric.T(diag(x));
	}
	numeric.T.eig = function eig() {
	    if(this.y) { throw new Error('eig: not implemented for complex matrices.'); }
	    return numeric.eig(this.x);
	}
	numeric.T.identity = function identity(n) { return new numeric.T(numeric.identity(n)); }
	numeric.T.prototype.getDiag = function getDiag() {
	    var n = numeric;
	    var x = this.x, y = this.y;
	    if(y) { return new n.T(n.getDiag(x),n.getDiag(y)); }
	    return new n.T(n.getDiag(x));
	}
	
	// 4. Eigenvalues of real matrices
	
	numeric.house = function house(x) {
	    var v = numeric.clone(x);
	    var s = x[0] >= 0 ? 1 : -1;
	    var alpha = s*numeric.norm2(x);
	    v[0] += alpha;
	    var foo = numeric.norm2(v);
	    if(foo === 0) { /* this should not happen */ throw new Error('eig: internal error'); }
	    return numeric.div(v,foo);
	}
	
	numeric.toUpperHessenberg = function toUpperHessenberg(me) {
	    var s = numeric.dim(me);
	    if(s.length !== 2 || s[0] !== s[1]) { throw new Error('numeric: toUpperHessenberg() only works on square matrices'); }
	    var m = s[0], i,j,k,x,v,A = numeric.clone(me),B,C,Ai,Ci,Q = numeric.identity(m),Qi;
	    for(j=0;j<m-2;j++) {
	        x = Array(m-j-1);
	        for(i=j+1;i<m;i++) { x[i-j-1] = A[i][j]; }
	        if(numeric.norm2(x)>0) {
	            v = numeric.house(x);
	            B = numeric.getBlock(A,[j+1,j],[m-1,m-1]);
	            C = numeric.tensor(v,numeric.dot(v,B));
	            for(i=j+1;i<m;i++) { Ai = A[i]; Ci = C[i-j-1]; for(k=j;k<m;k++) Ai[k] -= 2*Ci[k-j]; }
	            B = numeric.getBlock(A,[0,j+1],[m-1,m-1]);
	            C = numeric.tensor(numeric.dot(B,v),v);
	            for(i=0;i<m;i++) { Ai = A[i]; Ci = C[i]; for(k=j+1;k<m;k++) Ai[k] -= 2*Ci[k-j-1]; }
	            B = Array(m-j-1);
	            for(i=j+1;i<m;i++) B[i-j-1] = Q[i];
	            C = numeric.tensor(v,numeric.dot(v,B));
	            for(i=j+1;i<m;i++) { Qi = Q[i]; Ci = C[i-j-1]; for(k=0;k<m;k++) Qi[k] -= 2*Ci[k]; }
	        }
	    }
	    return {H:A, Q:Q};
	}
	
	numeric.epsilon = 2.220446049250313e-16;
	
	numeric.QRFrancis = function(H,maxiter) {
	    if(typeof maxiter === "undefined") { maxiter = 10000; }
	    H = numeric.clone(H);
	    var H0 = numeric.clone(H);
	    var s = numeric.dim(H),m=s[0],x,v,a,b,c,d,det,tr, Hloc, Q = numeric.identity(m), Qi, Hi, B, C, Ci,i,j,k,iter;
	    if(m<3) { return {Q:Q, B:[ [0,m-1] ]}; }
	    var epsilon = numeric.epsilon;
	    for(iter=0;iter<maxiter;iter++) {
	        for(j=0;j<m-1;j++) {
	            if(Math.abs(H[j+1][j]) < epsilon*(Math.abs(H[j][j])+Math.abs(H[j+1][j+1]))) {
	                var QH1 = numeric.QRFrancis(numeric.getBlock(H,[0,0],[j,j]),maxiter);
	                var QH2 = numeric.QRFrancis(numeric.getBlock(H,[j+1,j+1],[m-1,m-1]),maxiter);
	                B = Array(j+1);
	                for(i=0;i<=j;i++) { B[i] = Q[i]; }
	                C = numeric.dot(QH1.Q,B);
	                for(i=0;i<=j;i++) { Q[i] = C[i]; }
	                B = Array(m-j-1);
	                for(i=j+1;i<m;i++) { B[i-j-1] = Q[i]; }
	                C = numeric.dot(QH2.Q,B);
	                for(i=j+1;i<m;i++) { Q[i] = C[i-j-1]; }
	                return {Q:Q,B:QH1.B.concat(numeric.add(QH2.B,j+1))};
	            }
	        }
	        a = H[m-2][m-2]; b = H[m-2][m-1];
	        c = H[m-1][m-2]; d = H[m-1][m-1];
	        tr = a+d;
	        det = (a*d-b*c);
	        Hloc = numeric.getBlock(H, [0,0], [2,2]);
	        if(tr*tr>=4*det) {
	            var s1,s2;
	            s1 = 0.5*(tr+Math.sqrt(tr*tr-4*det));
	            s2 = 0.5*(tr-Math.sqrt(tr*tr-4*det));
	            Hloc = numeric.add(numeric.sub(numeric.dot(Hloc,Hloc),
	                                           numeric.mul(Hloc,s1+s2)),
	                               numeric.diag(numeric.rep([3],s1*s2)));
	        } else {
	            Hloc = numeric.add(numeric.sub(numeric.dot(Hloc,Hloc),
	                                           numeric.mul(Hloc,tr)),
	                               numeric.diag(numeric.rep([3],det)));
	        }
	        x = [Hloc[0][0],Hloc[1][0],Hloc[2][0]];
	        v = numeric.house(x);
	        B = [H[0],H[1],H[2]];
	        C = numeric.tensor(v,numeric.dot(v,B));
	        for(i=0;i<3;i++) { Hi = H[i]; Ci = C[i]; for(k=0;k<m;k++) Hi[k] -= 2*Ci[k]; }
	        B = numeric.getBlock(H, [0,0],[m-1,2]);
	        C = numeric.tensor(numeric.dot(B,v),v);
	        for(i=0;i<m;i++) { Hi = H[i]; Ci = C[i]; for(k=0;k<3;k++) Hi[k] -= 2*Ci[k]; }
	        B = [Q[0],Q[1],Q[2]];
	        C = numeric.tensor(v,numeric.dot(v,B));
	        for(i=0;i<3;i++) { Qi = Q[i]; Ci = C[i]; for(k=0;k<m;k++) Qi[k] -= 2*Ci[k]; }
	        var J;
	        for(j=0;j<m-2;j++) {
	            for(k=j;k<=j+1;k++) {
	                if(Math.abs(H[k+1][k]) < epsilon*(Math.abs(H[k][k])+Math.abs(H[k+1][k+1]))) {
	                    var QH1 = numeric.QRFrancis(numeric.getBlock(H,[0,0],[k,k]),maxiter);
	                    var QH2 = numeric.QRFrancis(numeric.getBlock(H,[k+1,k+1],[m-1,m-1]),maxiter);
	                    B = Array(k+1);
	                    for(i=0;i<=k;i++) { B[i] = Q[i]; }
	                    C = numeric.dot(QH1.Q,B);
	                    for(i=0;i<=k;i++) { Q[i] = C[i]; }
	                    B = Array(m-k-1);
	                    for(i=k+1;i<m;i++) { B[i-k-1] = Q[i]; }
	                    C = numeric.dot(QH2.Q,B);
	                    for(i=k+1;i<m;i++) { Q[i] = C[i-k-1]; }
	                    return {Q:Q,B:QH1.B.concat(numeric.add(QH2.B,k+1))};
	                }
	            }
	            J = Math.min(m-1,j+3);
	            x = Array(J-j);
	            for(i=j+1;i<=J;i++) { x[i-j-1] = H[i][j]; }
	            v = numeric.house(x);
	            B = numeric.getBlock(H, [j+1,j],[J,m-1]);
	            C = numeric.tensor(v,numeric.dot(v,B));
	            for(i=j+1;i<=J;i++) { Hi = H[i]; Ci = C[i-j-1]; for(k=j;k<m;k++) Hi[k] -= 2*Ci[k-j]; }
	            B = numeric.getBlock(H, [0,j+1],[m-1,J]);
	            C = numeric.tensor(numeric.dot(B,v),v);
	            for(i=0;i<m;i++) { Hi = H[i]; Ci = C[i]; for(k=j+1;k<=J;k++) Hi[k] -= 2*Ci[k-j-1]; }
	            B = Array(J-j);
	            for(i=j+1;i<=J;i++) B[i-j-1] = Q[i];
	            C = numeric.tensor(v,numeric.dot(v,B));
	            for(i=j+1;i<=J;i++) { Qi = Q[i]; Ci = C[i-j-1]; for(k=0;k<m;k++) Qi[k] -= 2*Ci[k]; }
	        }
	    }
	    throw new Error('numeric: eigenvalue iteration does not converge -- increase maxiter?');
	}
	
	numeric.eig = function eig(A,maxiter) {
	    var QH = numeric.toUpperHessenberg(A);
	    var QB = numeric.QRFrancis(QH.H,maxiter);
	    var T = numeric.T;
	    var n = A.length,i,k,flag = false,B = QB.B,H = numeric.dot(QB.Q,numeric.dot(QH.H,numeric.transpose(QB.Q)));
	    var Q = new T(numeric.dot(QB.Q,QH.Q)),Q0;
	    var m = B.length,j;
	    var a,b,c,d,p1,p2,disc,x,y,p,q,n1,n2;
	    var sqrt = Math.sqrt;
	    for(k=0;k<m;k++) {
	        i = B[k][0];
	        if(i === B[k][1]) {
	            // nothing
	        } else {
	            j = i+1;
	            a = H[i][i];
	            b = H[i][j];
	            c = H[j][i];
	            d = H[j][j];
	            if(b === 0 && c === 0) continue;
	            p1 = -a-d;
	            p2 = a*d-b*c;
	            disc = p1*p1-4*p2;
	            if(disc>=0) {
	                if(p1<0) x = -0.5*(p1-sqrt(disc));
	                else     x = -0.5*(p1+sqrt(disc));
	                n1 = (a-x)*(a-x)+b*b;
	                n2 = c*c+(d-x)*(d-x);
	                if(n1>n2) {
	                    n1 = sqrt(n1);
	                    p = (a-x)/n1;
	                    q = b/n1;
	                } else {
	                    n2 = sqrt(n2);
	                    p = c/n2;
	                    q = (d-x)/n2;
	                }
	                Q0 = new T([[q,-p],[p,q]]);
	                Q.setRows(i,j,Q0.dot(Q.getRows(i,j)));
	            } else {
	                x = -0.5*p1;
	                y = 0.5*sqrt(-disc);
	                n1 = (a-x)*(a-x)+b*b;
	                n2 = c*c+(d-x)*(d-x);
	                if(n1>n2) {
	                    n1 = sqrt(n1+y*y);
	                    p = (a-x)/n1;
	                    q = b/n1;
	                    x = 0;
	                    y /= n1;
	                } else {
	                    n2 = sqrt(n2+y*y);
	                    p = c/n2;
	                    q = (d-x)/n2;
	                    x = y/n2;
	                    y = 0;
	                }
	                Q0 = new T([[q,-p],[p,q]],[[x,y],[y,-x]]);
	                Q.setRows(i,j,Q0.dot(Q.getRows(i,j)));
	            }
	        }
	    }
	    var R = Q.dot(A).dot(Q.transjugate()), n = A.length, E = numeric.T.identity(n);
	    for(j=0;j<n;j++) {
	        if(j>0) {
	            for(k=j-1;k>=0;k--) {
	                var Rk = R.get([k,k]), Rj = R.get([j,j]);
	                if(numeric.neq(Rk.x,Rj.x) || numeric.neq(Rk.y,Rj.y)) {
	                    x = R.getRow(k).getBlock([k],[j-1]);
	                    y = E.getRow(j).getBlock([k],[j-1]);
	                    E.set([j,k],(R.get([k,j]).neg().sub(x.dot(y))).div(Rk.sub(Rj)));
	                } else {
	                    E.setRow(j,E.getRow(k));
	                    continue;
	                }
	            }
	        }
	    }
	    for(j=0;j<n;j++) {
	        x = E.getRow(j);
	        E.setRow(j,x.div(x.norm2()));
	    }
	    E = E.transpose();
	    E = Q.transjugate().dot(E);
	    return { lambda:R.getDiag(), E:E };
	};
	
	// 5. Compressed Column Storage matrices
	numeric.ccsSparse = function ccsSparse(A) {
	    var m = A.length,n,foo, i,j, counts = [];
	    for(i=m-1;i!==-1;--i) {
	        foo = A[i];
	        for(j in foo) {
	            j = parseInt(j);
	            while(j>=counts.length) counts[counts.length] = 0;
	            if(foo[j]!==0) counts[j]++;
	        }
	    }
	    var n = counts.length;
	    var Ai = Array(n+1);
	    Ai[0] = 0;
	    for(i=0;i<n;++i) Ai[i+1] = Ai[i] + counts[i];
	    var Aj = Array(Ai[n]), Av = Array(Ai[n]);
	    for(i=m-1;i!==-1;--i) {
	        foo = A[i];
	        for(j in foo) {
	            if(foo[j]!==0) {
	                counts[j]--;
	                Aj[Ai[j]+counts[j]] = i;
	                Av[Ai[j]+counts[j]] = foo[j];
	            }
	        }
	    }
	    return [Ai,Aj,Av];
	}
	numeric.ccsFull = function ccsFull(A) {
	    var Ai = A[0], Aj = A[1], Av = A[2], s = numeric.ccsDim(A), m = s[0], n = s[1], i,j,j0,j1,k;
	    var B = numeric.rep([m,n],0);
	    for(i=0;i<n;i++) {
	        j0 = Ai[i];
	        j1 = Ai[i+1];
	        for(j=j0;j<j1;++j) { B[Aj[j]][i] = Av[j]; }
	    }
	    return B;
	}
	numeric.ccsTSolve = function ccsTSolve(A,b,x,bj,xj) {
	    var Ai = A[0], Aj = A[1], Av = A[2],m = Ai.length-1, max = Math.max,n=0;
	    if(typeof bj === "undefined") x = numeric.rep([m],0);
	    if(typeof bj === "undefined") bj = numeric.linspace(0,x.length-1);
	    if(typeof xj === "undefined") xj = [];
	    function dfs(j) {
	        var k;
	        if(x[j] !== 0) return;
	        x[j] = 1;
	        for(k=Ai[j];k<Ai[j+1];++k) dfs(Aj[k]);
	        xj[n] = j;
	        ++n;
	    }
	    var i,j,j0,j1,k,l,l0,l1,a;
	    for(i=bj.length-1;i!==-1;--i) { dfs(bj[i]); }
	    xj.length = n;
	    for(i=xj.length-1;i!==-1;--i) { x[xj[i]] = 0; }
	    for(i=bj.length-1;i!==-1;--i) { j = bj[i]; x[j] = b[j]; }
	    for(i=xj.length-1;i!==-1;--i) {
	        j = xj[i];
	        j0 = Ai[j];
	        j1 = max(Ai[j+1],j0);
	        for(k=j0;k!==j1;++k) { if(Aj[k] === j) { x[j] /= Av[k]; break; } }
	        a = x[j];
	        for(k=j0;k!==j1;++k) {
	            l = Aj[k];
	            if(l !== j) x[l] -= a*Av[k];
	        }
	    }
	    return x;
	}
	numeric.ccsDFS = function ccsDFS(n) {
	    this.k = Array(n);
	    this.k1 = Array(n);
	    this.j = Array(n);
	}
	numeric.ccsDFS.prototype.dfs = function dfs(J,Ai,Aj,x,xj,Pinv) {
	    var m = 0,foo,n=xj.length;
	    var k = this.k, k1 = this.k1, j = this.j,km,k11;
	    if(x[J]!==0) return;
	    x[J] = 1;
	    j[0] = J;
	    k[0] = km = Ai[J];
	    k1[0] = k11 = Ai[J+1];
	    while(1) {
	        if(km >= k11) {
	            xj[n] = j[m];
	            if(m===0) return;
	            ++n;
	            --m;
	            km = k[m];
	            k11 = k1[m];
	        } else {
	            foo = Pinv[Aj[km]];
	            if(x[foo] === 0) {
	                x[foo] = 1;
	                k[m] = km;
	                ++m;
	                j[m] = foo;
	                km = Ai[foo];
	                k1[m] = k11 = Ai[foo+1];
	            } else ++km;
	        }
	    }
	}
	numeric.ccsLPSolve = function ccsLPSolve(A,B,x,xj,I,Pinv,dfs) {
	    var Ai = A[0], Aj = A[1], Av = A[2],m = Ai.length-1, n=0;
	    var Bi = B[0], Bj = B[1], Bv = B[2];
	    
	    var i,i0,i1,j,J,j0,j1,k,l,l0,l1,a;
	    i0 = Bi[I];
	    i1 = Bi[I+1];
	    xj.length = 0;
	    for(i=i0;i<i1;++i) { dfs.dfs(Pinv[Bj[i]],Ai,Aj,x,xj,Pinv); }
	    for(i=xj.length-1;i!==-1;--i) { x[xj[i]] = 0; }
	    for(i=i0;i!==i1;++i) { j = Pinv[Bj[i]]; x[j] = Bv[i]; }
	    for(i=xj.length-1;i!==-1;--i) {
	        j = xj[i];
	        j0 = Ai[j];
	        j1 = Ai[j+1];
	        for(k=j0;k<j1;++k) { if(Pinv[Aj[k]] === j) { x[j] /= Av[k]; break; } }
	        a = x[j];
	        for(k=j0;k<j1;++k) {
	            l = Pinv[Aj[k]];
	            if(l !== j) x[l] -= a*Av[k];
	        }
	    }
	    return x;
	}
	numeric.ccsLUP1 = function ccsLUP1(A,threshold) {
	    var m = A[0].length-1;
	    var L = [numeric.rep([m+1],0),[],[]], U = [numeric.rep([m+1], 0),[],[]];
	    var Li = L[0], Lj = L[1], Lv = L[2], Ui = U[0], Uj = U[1], Uv = U[2];
	    var x = numeric.rep([m],0), xj = numeric.rep([m],0);
	    var i,j,k,j0,j1,a,e,c,d,K;
	    var sol = numeric.ccsLPSolve, max = Math.max, abs = Math.abs;
	    var P = numeric.linspace(0,m-1),Pinv = numeric.linspace(0,m-1);
	    var dfs = new numeric.ccsDFS(m);
	    if(typeof threshold === "undefined") { threshold = 1; }
	    for(i=0;i<m;++i) {
	        sol(L,A,x,xj,i,Pinv,dfs);
	        a = -1;
	        e = -1;
	        for(j=xj.length-1;j!==-1;--j) {
	            k = xj[j];
	            if(k <= i) continue;
	            c = abs(x[k]);
	            if(c > a) { e = k; a = c; }
	        }
	        if(abs(x[i])<threshold*a) {
	            j = P[i];
	            a = P[e];
	            P[i] = a; Pinv[a] = i;
	            P[e] = j; Pinv[j] = e;
	            a = x[i]; x[i] = x[e]; x[e] = a;
	        }
	        a = Li[i];
	        e = Ui[i];
	        d = x[i];
	        Lj[a] = P[i];
	        Lv[a] = 1;
	        ++a;
	        for(j=xj.length-1;j!==-1;--j) {
	            k = xj[j];
	            c = x[k];
	            xj[j] = 0;
	            x[k] = 0;
	            if(k<=i) { Uj[e] = k; Uv[e] = c;   ++e; }
	            else     { Lj[a] = P[k]; Lv[a] = c/d; ++a; }
	        }
	        Li[i+1] = a;
	        Ui[i+1] = e;
	    }
	    for(j=Lj.length-1;j!==-1;--j) { Lj[j] = Pinv[Lj[j]]; }
	    return {L:L, U:U, P:P, Pinv:Pinv};
	}
	numeric.ccsDFS0 = function ccsDFS0(n) {
	    this.k = Array(n);
	    this.k1 = Array(n);
	    this.j = Array(n);
	}
	numeric.ccsDFS0.prototype.dfs = function dfs(J,Ai,Aj,x,xj,Pinv,P) {
	    var m = 0,foo,n=xj.length;
	    var k = this.k, k1 = this.k1, j = this.j,km,k11;
	    if(x[J]!==0) return;
	    x[J] = 1;
	    j[0] = J;
	    k[0] = km = Ai[Pinv[J]];
	    k1[0] = k11 = Ai[Pinv[J]+1];
	    while(1) {
	        if(isNaN(km)) throw new Error("Ow!");
	        if(km >= k11) {
	            xj[n] = Pinv[j[m]];
	            if(m===0) return;
	            ++n;
	            --m;
	            km = k[m];
	            k11 = k1[m];
	        } else {
	            foo = Aj[km];
	            if(x[foo] === 0) {
	                x[foo] = 1;
	                k[m] = km;
	                ++m;
	                j[m] = foo;
	                foo = Pinv[foo];
	                km = Ai[foo];
	                k1[m] = k11 = Ai[foo+1];
	            } else ++km;
	        }
	    }
	}
	numeric.ccsLPSolve0 = function ccsLPSolve0(A,B,y,xj,I,Pinv,P,dfs) {
	    var Ai = A[0], Aj = A[1], Av = A[2],m = Ai.length-1, n=0;
	    var Bi = B[0], Bj = B[1], Bv = B[2];
	    
	    var i,i0,i1,j,J,j0,j1,k,l,l0,l1,a;
	    i0 = Bi[I];
	    i1 = Bi[I+1];
	    xj.length = 0;
	    for(i=i0;i<i1;++i) { dfs.dfs(Bj[i],Ai,Aj,y,xj,Pinv,P); }
	    for(i=xj.length-1;i!==-1;--i) { j = xj[i]; y[P[j]] = 0; }
	    for(i=i0;i!==i1;++i) { j = Bj[i]; y[j] = Bv[i]; }
	    for(i=xj.length-1;i!==-1;--i) {
	        j = xj[i];
	        l = P[j];
	        j0 = Ai[j];
	        j1 = Ai[j+1];
	        for(k=j0;k<j1;++k) { if(Aj[k] === l) { y[l] /= Av[k]; break; } }
	        a = y[l];
	        for(k=j0;k<j1;++k) y[Aj[k]] -= a*Av[k];
	        y[l] = a;
	    }
	}
	numeric.ccsLUP0 = function ccsLUP0(A,threshold) {
	    var m = A[0].length-1;
	    var L = [numeric.rep([m+1],0),[],[]], U = [numeric.rep([m+1], 0),[],[]];
	    var Li = L[0], Lj = L[1], Lv = L[2], Ui = U[0], Uj = U[1], Uv = U[2];
	    var y = numeric.rep([m],0), xj = numeric.rep([m],0);
	    var i,j,k,j0,j1,a,e,c,d,K;
	    var sol = numeric.ccsLPSolve0, max = Math.max, abs = Math.abs;
	    var P = numeric.linspace(0,m-1),Pinv = numeric.linspace(0,m-1);
	    var dfs = new numeric.ccsDFS0(m);
	    if(typeof threshold === "undefined") { threshold = 1; }
	    for(i=0;i<m;++i) {
	        sol(L,A,y,xj,i,Pinv,P,dfs);
	        a = -1;
	        e = -1;
	        for(j=xj.length-1;j!==-1;--j) {
	            k = xj[j];
	            if(k <= i) continue;
	            c = abs(y[P[k]]);
	            if(c > a) { e = k; a = c; }
	        }
	        if(abs(y[P[i]])<threshold*a) {
	            j = P[i];
	            a = P[e];
	            P[i] = a; Pinv[a] = i;
	            P[e] = j; Pinv[j] = e;
	        }
	        a = Li[i];
	        e = Ui[i];
	        d = y[P[i]];
	        Lj[a] = P[i];
	        Lv[a] = 1;
	        ++a;
	        for(j=xj.length-1;j!==-1;--j) {
	            k = xj[j];
	            c = y[P[k]];
	            xj[j] = 0;
	            y[P[k]] = 0;
	            if(k<=i) { Uj[e] = k; Uv[e] = c;   ++e; }
	            else     { Lj[a] = P[k]; Lv[a] = c/d; ++a; }
	        }
	        Li[i+1] = a;
	        Ui[i+1] = e;
	    }
	    for(j=Lj.length-1;j!==-1;--j) { Lj[j] = Pinv[Lj[j]]; }
	    return {L:L, U:U, P:P, Pinv:Pinv};
	}
	numeric.ccsLUP = numeric.ccsLUP0;
	
	numeric.ccsDim = function ccsDim(A) { return [numeric.sup(A[1])+1,A[0].length-1]; }
	numeric.ccsGetBlock = function ccsGetBlock(A,i,j) {
	    var s = numeric.ccsDim(A),m=s[0],n=s[1];
	    if(typeof i === "undefined") { i = numeric.linspace(0,m-1); }
	    else if(typeof i === "number") { i = [i]; }
	    if(typeof j === "undefined") { j = numeric.linspace(0,n-1); }
	    else if(typeof j === "number") { j = [j]; }
	    var p,p0,p1,P = i.length,q,Q = j.length,r,jq,ip;
	    var Bi = numeric.rep([n],0), Bj=[], Bv=[], B = [Bi,Bj,Bv];
	    var Ai = A[0], Aj = A[1], Av = A[2];
	    var x = numeric.rep([m],0),count=0,flags = numeric.rep([m],0);
	    for(q=0;q<Q;++q) {
	        jq = j[q];
	        var q0 = Ai[jq];
	        var q1 = Ai[jq+1];
	        for(p=q0;p<q1;++p) {
	            r = Aj[p];
	            flags[r] = 1;
	            x[r] = Av[p];
	        }
	        for(p=0;p<P;++p) {
	            ip = i[p];
	            if(flags[ip]) {
	                Bj[count] = p;
	                Bv[count] = x[i[p]];
	                ++count;
	            }
	        }
	        for(p=q0;p<q1;++p) {
	            r = Aj[p];
	            flags[r] = 0;
	        }
	        Bi[q+1] = count;
	    }
	    return B;
	}
	
	numeric.ccsDot = function ccsDot(A,B) {
	    var Ai = A[0], Aj = A[1], Av = A[2];
	    var Bi = B[0], Bj = B[1], Bv = B[2];
	    var sA = numeric.ccsDim(A), sB = numeric.ccsDim(B);
	    var m = sA[0], n = sA[1], o = sB[1];
	    var x = numeric.rep([m],0), flags = numeric.rep([m],0), xj = Array(m);
	    var Ci = numeric.rep([o],0), Cj = [], Cv = [], C = [Ci,Cj,Cv];
	    var i,j,k,j0,j1,i0,i1,l,p,a,b;
	    for(k=0;k!==o;++k) {
	        j0 = Bi[k];
	        j1 = Bi[k+1];
	        p = 0;
	        for(j=j0;j<j1;++j) {
	            a = Bj[j];
	            b = Bv[j];
	            i0 = Ai[a];
	            i1 = Ai[a+1];
	            for(i=i0;i<i1;++i) {
	                l = Aj[i];
	                if(flags[l]===0) {
	                    xj[p] = l;
	                    flags[l] = 1;
	                    p = p+1;
	                }
	                x[l] = x[l] + Av[i]*b;
	            }
	        }
	        j0 = Ci[k];
	        j1 = j0+p;
	        Ci[k+1] = j1;
	        for(j=p-1;j!==-1;--j) {
	            b = j0+j;
	            i = xj[j];
	            Cj[b] = i;
	            Cv[b] = x[i];
	            flags[i] = 0;
	            x[i] = 0;
	        }
	        Ci[k+1] = Ci[k]+p;
	    }
	    return C;
	}
	
	numeric.ccsLUPSolve = function ccsLUPSolve(LUP,B) {
	    var L = LUP.L, U = LUP.U, P = LUP.P;
	    var Bi = B[0];
	    var flag = false;
	    if(typeof Bi !== "object") { B = [[0,B.length],numeric.linspace(0,B.length-1),B]; Bi = B[0]; flag = true; }
	    var Bj = B[1], Bv = B[2];
	    var n = L[0].length-1, m = Bi.length-1;
	    var x = numeric.rep([n],0), xj = Array(n);
	    var b = numeric.rep([n],0), bj = Array(n);
	    var Xi = numeric.rep([m+1],0), Xj = [], Xv = [];
	    var sol = numeric.ccsTSolve;
	    var i,j,j0,j1,k,J,N=0;
	    for(i=0;i<m;++i) {
	        k = 0;
	        j0 = Bi[i];
	        j1 = Bi[i+1];
	        for(j=j0;j<j1;++j) { 
	            J = LUP.Pinv[Bj[j]];
	            bj[k] = J;
	            b[J] = Bv[j];
	            ++k;
	        }
	        bj.length = k;
	        sol(L,b,x,bj,xj);
	        for(j=bj.length-1;j!==-1;--j) b[bj[j]] = 0;
	        sol(U,x,b,xj,bj);
	        if(flag) return b;
	        for(j=xj.length-1;j!==-1;--j) x[xj[j]] = 0;
	        for(j=bj.length-1;j!==-1;--j) {
	            J = bj[j];
	            Xj[N] = J;
	            Xv[N] = b[J];
	            b[J] = 0;
	            ++N;
	        }
	        Xi[i+1] = N;
	    }
	    return [Xi,Xj,Xv];
	}
	
	numeric.ccsbinop = function ccsbinop(body,setup) {
	    if(typeof setup === "undefined") setup='';
	    return Function('X','Y',
	            'var Xi = X[0], Xj = X[1], Xv = X[2];\n'+
	            'var Yi = Y[0], Yj = Y[1], Yv = Y[2];\n'+
	            'var n = Xi.length-1,m = Math.max(numeric.sup(Xj),numeric.sup(Yj))+1;\n'+
	            'var Zi = numeric.rep([n+1],0), Zj = [], Zv = [];\n'+
	            'var x = numeric.rep([m],0),y = numeric.rep([m],0);\n'+
	            'var xk,yk,zk;\n'+
	            'var i,j,j0,j1,k,p=0;\n'+
	            setup+
	            'for(i=0;i<n;++i) {\n'+
	            '  j0 = Xi[i]; j1 = Xi[i+1];\n'+
	            '  for(j=j0;j!==j1;++j) {\n'+
	            '    k = Xj[j];\n'+
	            '    x[k] = 1;\n'+
	            '    Zj[p] = k;\n'+
	            '    ++p;\n'+
	            '  }\n'+
	            '  j0 = Yi[i]; j1 = Yi[i+1];\n'+
	            '  for(j=j0;j!==j1;++j) {\n'+
	            '    k = Yj[j];\n'+
	            '    y[k] = Yv[j];\n'+
	            '    if(x[k] === 0) {\n'+
	            '      Zj[p] = k;\n'+
	            '      ++p;\n'+
	            '    }\n'+
	            '  }\n'+
	            '  Zi[i+1] = p;\n'+
	            '  j0 = Xi[i]; j1 = Xi[i+1];\n'+
	            '  for(j=j0;j!==j1;++j) x[Xj[j]] = Xv[j];\n'+
	            '  j0 = Zi[i]; j1 = Zi[i+1];\n'+
	            '  for(j=j0;j!==j1;++j) {\n'+
	            '    k = Zj[j];\n'+
	            '    xk = x[k];\n'+
	            '    yk = y[k];\n'+
	            body+'\n'+
	            '    Zv[j] = zk;\n'+
	            '  }\n'+
	            '  j0 = Xi[i]; j1 = Xi[i+1];\n'+
	            '  for(j=j0;j!==j1;++j) x[Xj[j]] = 0;\n'+
	            '  j0 = Yi[i]; j1 = Yi[i+1];\n'+
	            '  for(j=j0;j!==j1;++j) y[Yj[j]] = 0;\n'+
	            '}\n'+
	            'return [Zi,Zj,Zv];'
	            );
	};
	
	(function() {
	    var k,A,B,C;
	    for(k in numeric.ops2) {
	        if(isFinite(eval('1'+numeric.ops2[k]+'0'))) A = '[Y[0],Y[1],numeric.'+k+'(X,Y[2])]';
	        else A = 'NaN';
	        if(isFinite(eval('0'+numeric.ops2[k]+'1'))) B = '[X[0],X[1],numeric.'+k+'(X[2],Y)]';
	        else B = 'NaN';
	        if(isFinite(eval('1'+numeric.ops2[k]+'0')) && isFinite(eval('0'+numeric.ops2[k]+'1'))) C = 'numeric.ccs'+k+'MM(X,Y)';
	        else C = 'NaN';
	        numeric['ccs'+k+'MM'] = numeric.ccsbinop('zk = xk '+numeric.ops2[k]+'yk;');
	        numeric['ccs'+k] = Function('X','Y',
	                'if(typeof X === "number") return '+A+';\n'+
	                'if(typeof Y === "number") return '+B+';\n'+
	                'return '+C+';\n'
	                );
	    }
	}());
	
	numeric.ccsScatter = function ccsScatter(A) {
	    var Ai = A[0], Aj = A[1], Av = A[2];
	    var n = numeric.sup(Aj)+1,m=Ai.length;
	    var Ri = numeric.rep([n],0),Rj=Array(m), Rv = Array(m);
	    var counts = numeric.rep([n],0),i;
	    for(i=0;i<m;++i) counts[Aj[i]]++;
	    for(i=0;i<n;++i) Ri[i+1] = Ri[i] + counts[i];
	    var ptr = Ri.slice(0),k,Aii;
	    for(i=0;i<m;++i) {
	        Aii = Aj[i];
	        k = ptr[Aii];
	        Rj[k] = Ai[i];
	        Rv[k] = Av[i];
	        ptr[Aii]=ptr[Aii]+1;
	    }
	    return [Ri,Rj,Rv];
	}
	
	numeric.ccsGather = function ccsGather(A) {
	    var Ai = A[0], Aj = A[1], Av = A[2];
	    var n = Ai.length-1,m = Aj.length;
	    var Ri = Array(m), Rj = Array(m), Rv = Array(m);
	    var i,j,j0,j1,p;
	    p=0;
	    for(i=0;i<n;++i) {
	        j0 = Ai[i];
	        j1 = Ai[i+1];
	        for(j=j0;j!==j1;++j) {
	            Rj[p] = i;
	            Ri[p] = Aj[j];
	            Rv[p] = Av[j];
	            ++p;
	        }
	    }
	    return [Ri,Rj,Rv];
	}
	
	// The following sparse linear algebra routines are deprecated.
	
	numeric.sdim = function dim(A,ret,k) {
	    if(typeof ret === "undefined") { ret = []; }
	    if(typeof A !== "object") return ret;
	    if(typeof k === "undefined") { k=0; }
	    if(!(k in ret)) { ret[k] = 0; }
	    if(A.length > ret[k]) ret[k] = A.length;
	    var i;
	    for(i in A) {
	        if(A.hasOwnProperty(i)) dim(A[i],ret,k+1);
	    }
	    return ret;
	};
	
	numeric.sclone = function clone(A,k,n) {
	    if(typeof k === "undefined") { k=0; }
	    if(typeof n === "undefined") { n = numeric.sdim(A).length; }
	    var i,ret = Array(A.length);
	    if(k === n-1) {
	        for(i in A) { if(A.hasOwnProperty(i)) ret[i] = A[i]; }
	        return ret;
	    }
	    for(i in A) {
	        if(A.hasOwnProperty(i)) ret[i] = clone(A[i],k+1,n);
	    }
	    return ret;
	}
	
	numeric.sdiag = function diag(d) {
	    var n = d.length,i,ret = Array(n),i1,i2,i3;
	    for(i=n-1;i>=1;i-=2) {
	        i1 = i-1;
	        ret[i] = []; ret[i][i] = d[i];
	        ret[i1] = []; ret[i1][i1] = d[i1];
	    }
	    if(i===0) { ret[0] = []; ret[0][0] = d[i]; }
	    return ret;
	}
	
	numeric.sidentity = function identity(n) { return numeric.sdiag(numeric.rep([n],1)); }
	
	numeric.stranspose = function transpose(A) {
	    var ret = [], n = A.length, i,j,Ai;
	    for(i in A) {
	        if(!(A.hasOwnProperty(i))) continue;
	        Ai = A[i];
	        for(j in Ai) {
	            if(!(Ai.hasOwnProperty(j))) continue;
	            if(typeof ret[j] !== "object") { ret[j] = []; }
	            ret[j][i] = Ai[j];
	        }
	    }
	    return ret;
	}
	
	numeric.sLUP = function LUP(A,tol) {
	    throw new Error("The function numeric.sLUP had a bug in it and has been removed. Please use the new numeric.ccsLUP function instead.");
	};
	
	numeric.sdotMM = function dotMM(A,B) {
	    var p = A.length, q = B.length, BT = numeric.stranspose(B), r = BT.length, Ai, BTk;
	    var i,j,k,accum;
	    var ret = Array(p),reti;
	    for(i=p-1;i>=0;i--) {
	        reti = [];
	        Ai = A[i];
	        for(k=r-1;k>=0;k--) {
	            accum = 0;
	            BTk = BT[k];
	            for(j in Ai) {
	                if(!(Ai.hasOwnProperty(j))) continue;
	                if(j in BTk) { accum += Ai[j]*BTk[j]; }
	            }
	            if(accum) reti[k] = accum;
	        }
	        ret[i] = reti;
	    }
	    return ret;
	}
	
	numeric.sdotMV = function dotMV(A,x) {
	    var p = A.length, Ai, i,j;
	    var ret = Array(p), accum;
	    for(i=p-1;i>=0;i--) {
	        Ai = A[i];
	        accum = 0;
	        for(j in Ai) {
	            if(!(Ai.hasOwnProperty(j))) continue;
	            if(x[j]) accum += Ai[j]*x[j];
	        }
	        if(accum) ret[i] = accum;
	    }
	    return ret;
	}
	
	numeric.sdotVM = function dotMV(x,A) {
	    var i,j,Ai,alpha;
	    var ret = [], accum;
	    for(i in x) {
	        if(!x.hasOwnProperty(i)) continue;
	        Ai = A[i];
	        alpha = x[i];
	        for(j in Ai) {
	            if(!Ai.hasOwnProperty(j)) continue;
	            if(!ret[j]) { ret[j] = 0; }
	            ret[j] += alpha*Ai[j];
	        }
	    }
	    return ret;
	}
	
	numeric.sdotVV = function dotVV(x,y) {
	    var i,ret=0;
	    for(i in x) { if(x[i] && y[i]) ret+= x[i]*y[i]; }
	    return ret;
	}
	
	numeric.sdot = function dot(A,B) {
	    var m = numeric.sdim(A).length, n = numeric.sdim(B).length;
	    var k = m*1000+n;
	    switch(k) {
	    case 0: return A*B;
	    case 1001: return numeric.sdotVV(A,B);
	    case 2001: return numeric.sdotMV(A,B);
	    case 1002: return numeric.sdotVM(A,B);
	    case 2002: return numeric.sdotMM(A,B);
	    default: throw new Error('numeric.sdot not implemented for tensors of order '+m+' and '+n);
	    }
	}
	
	numeric.sscatter = function scatter(V) {
	    var n = V[0].length, Vij, i, j, m = V.length, A = [], Aj;
	    for(i=n-1;i>=0;--i) {
	        if(!V[m-1][i]) continue;
	        Aj = A;
	        for(j=0;j<m-2;j++) {
	            Vij = V[j][i];
	            if(!Aj[Vij]) Aj[Vij] = [];
	            Aj = Aj[Vij];
	        }
	        Aj[V[j][i]] = V[j+1][i];
	    }
	    return A;
	}
	
	numeric.sgather = function gather(A,ret,k) {
	    if(typeof ret === "undefined") ret = [];
	    if(typeof k === "undefined") k = [];
	    var n,i,Ai;
	    n = k.length;
	    for(i in A) {
	        if(A.hasOwnProperty(i)) {
	            k[n] = parseInt(i);
	            Ai = A[i];
	            if(typeof Ai === "number") {
	                if(Ai) {
	                    if(ret.length === 0) {
	                        for(i=n+1;i>=0;--i) ret[i] = [];
	                    }
	                    for(i=n;i>=0;--i) ret[i].push(k[i]);
	                    ret[n+1].push(Ai);
	                }
	            } else gather(Ai,ret,k);
	        }
	    }
	    if(k.length>n) k.pop();
	    return ret;
	}
	
	// 6. Coordinate matrices
	numeric.cLU = function LU(A) {
	    var I = A[0], J = A[1], V = A[2];
	    var p = I.length, m=0, i,j,k,a,b,c;
	    for(i=0;i<p;i++) if(I[i]>m) m=I[i];
	    m++;
	    var L = Array(m), U = Array(m), left = numeric.rep([m],Infinity), right = numeric.rep([m],-Infinity);
	    var Ui, Uj,alpha;
	    for(k=0;k<p;k++) {
	        i = I[k];
	        j = J[k];
	        if(j<left[i]) left[i] = j;
	        if(j>right[i]) right[i] = j;
	    }
	    for(i=0;i<m-1;i++) { if(right[i] > right[i+1]) right[i+1] = right[i]; }
	    for(i=m-1;i>=1;i--) { if(left[i]<left[i-1]) left[i-1] = left[i]; }
	    var countL = 0, countU = 0;
	    for(i=0;i<m;i++) {
	        U[i] = numeric.rep([right[i]-left[i]+1],0);
	        L[i] = numeric.rep([i-left[i]],0);
	        countL += i-left[i]+1;
	        countU += right[i]-i+1;
	    }
	    for(k=0;k<p;k++) { i = I[k]; U[i][J[k]-left[i]] = V[k]; }
	    for(i=0;i<m-1;i++) {
	        a = i-left[i];
	        Ui = U[i];
	        for(j=i+1;left[j]<=i && j<m;j++) {
	            b = i-left[j];
	            c = right[i]-i;
	            Uj = U[j];
	            alpha = Uj[b]/Ui[a];
	            if(alpha) {
	                for(k=1;k<=c;k++) { Uj[k+b] -= alpha*Ui[k+a]; }
	                L[j][i-left[j]] = alpha;
	            }
	        }
	    }
	    var Ui = [], Uj = [], Uv = [], Li = [], Lj = [], Lv = [];
	    var p,q,foo;
	    p=0; q=0;
	    for(i=0;i<m;i++) {
	        a = left[i];
	        b = right[i];
	        foo = U[i];
	        for(j=i;j<=b;j++) {
	            if(foo[j-a]) {
	                Ui[p] = i;
	                Uj[p] = j;
	                Uv[p] = foo[j-a];
	                p++;
	            }
	        }
	        foo = L[i];
	        for(j=a;j<i;j++) {
	            if(foo[j-a]) {
	                Li[q] = i;
	                Lj[q] = j;
	                Lv[q] = foo[j-a];
	                q++;
	            }
	        }
	        Li[q] = i;
	        Lj[q] = i;
	        Lv[q] = 1;
	        q++;
	    }
	    return {U:[Ui,Uj,Uv], L:[Li,Lj,Lv]};
	};
	
	numeric.cLUsolve = function LUsolve(lu,b) {
	    var L = lu.L, U = lu.U, ret = numeric.clone(b);
	    var Li = L[0], Lj = L[1], Lv = L[2];
	    var Ui = U[0], Uj = U[1], Uv = U[2];
	    var p = Ui.length, q = Li.length;
	    var m = ret.length,i,j,k;
	    k = 0;
	    for(i=0;i<m;i++) {
	        while(Lj[k] < i) {
	            ret[i] -= Lv[k]*ret[Lj[k]];
	            k++;
	        }
	        k++;
	    }
	    k = p-1;
	    for(i=m-1;i>=0;i--) {
	        while(Uj[k] > i) {
	            ret[i] -= Uv[k]*ret[Uj[k]];
	            k--;
	        }
	        ret[i] /= Uv[k];
	        k--;
	    }
	    return ret;
	};
	
	numeric.cgrid = function grid(n,shape) {
	    if(typeof n === "number") n = [n,n];
	    var ret = numeric.rep(n,-1);
	    var i,j,count;
	    if(typeof shape !== "function") {
	        switch(shape) {
	        case 'L':
	            shape = function(i,j) { return (i>=n[0]/2 || j<n[1]/2); }
	            break;
	        default:
	            shape = function(i,j) { return true; };
	            break;
	        }
	    }
	    count=0;
	    for(i=1;i<n[0]-1;i++) for(j=1;j<n[1]-1;j++) 
	        if(shape(i,j)) {
	            ret[i][j] = count;
	            count++;
	        }
	    return ret;
	}
	
	numeric.cdelsq = function delsq(g) {
	    var dir = [[-1,0],[0,-1],[0,1],[1,0]];
	    var s = numeric.dim(g), m = s[0], n = s[1], i,j,k,p,q;
	    var Li = [], Lj = [], Lv = [];
	    for(i=1;i<m-1;i++) for(j=1;j<n-1;j++) {
	        if(g[i][j]<0) continue;
	        for(k=0;k<4;k++) {
	            p = i+dir[k][0];
	            q = j+dir[k][1];
	            if(g[p][q]<0) continue;
	            Li.push(g[i][j]);
	            Lj.push(g[p][q]);
	            Lv.push(-1);
	        }
	        Li.push(g[i][j]);
	        Lj.push(g[i][j]);
	        Lv.push(4);
	    }
	    return [Li,Lj,Lv];
	}
	
	numeric.cdotMV = function dotMV(A,x) {
	    var ret, Ai = A[0], Aj = A[1], Av = A[2],k,p=Ai.length,N;
	    N=0;
	    for(k=0;k<p;k++) { if(Ai[k]>N) N = Ai[k]; }
	    N++;
	    ret = numeric.rep([N],0);
	    for(k=0;k<p;k++) { ret[Ai[k]]+=Av[k]*x[Aj[k]]; }
	    return ret;
	}
	
	// 7. Splines
	
	numeric.Spline = function Spline(x,yl,yr,kl,kr) { this.x = x; this.yl = yl; this.yr = yr; this.kl = kl; this.kr = kr; }
	numeric.Spline.prototype._at = function _at(x1,p) {
	    var x = this.x;
	    var yl = this.yl;
	    var yr = this.yr;
	    var kl = this.kl;
	    var kr = this.kr;
	    var x1,a,b,t;
	    var add = numeric.add, sub = numeric.sub, mul = numeric.mul;
	    a = sub(mul(kl[p],x[p+1]-x[p]),sub(yr[p+1],yl[p]));
	    b = add(mul(kr[p+1],x[p]-x[p+1]),sub(yr[p+1],yl[p]));
	    t = (x1-x[p])/(x[p+1]-x[p]);
	    var s = t*(1-t);
	    return add(add(add(mul(1-t,yl[p]),mul(t,yr[p+1])),mul(a,s*(1-t))),mul(b,s*t));
	}
	numeric.Spline.prototype.at = function at(x0) {
	    if(typeof x0 === "number") {
	        var x = this.x;
	        var n = x.length;
	        var p,q,mid,floor = Math.floor,a,b,t;
	        p = 0;
	        q = n-1;
	        while(q-p>1) {
	            mid = floor((p+q)/2);
	            if(x[mid] <= x0) p = mid;
	            else q = mid;
	        }
	        return this._at(x0,p);
	    }
	    var n = x0.length, i, ret = Array(n);
	    for(i=n-1;i!==-1;--i) ret[i] = this.at(x0[i]);
	    return ret;
	}
	numeric.Spline.prototype.diff = function diff() {
	    var x = this.x;
	    var yl = this.yl;
	    var yr = this.yr;
	    var kl = this.kl;
	    var kr = this.kr;
	    var n = yl.length;
	    var i,dx,dy;
	    var zl = kl, zr = kr, pl = Array(n), pr = Array(n);
	    var add = numeric.add, mul = numeric.mul, div = numeric.div, sub = numeric.sub;
	    for(i=n-1;i!==-1;--i) {
	        dx = x[i+1]-x[i];
	        dy = sub(yr[i+1],yl[i]);
	        pl[i] = div(add(mul(dy, 6),mul(kl[i],-4*dx),mul(kr[i+1],-2*dx)),dx*dx);
	        pr[i+1] = div(add(mul(dy,-6),mul(kl[i], 2*dx),mul(kr[i+1], 4*dx)),dx*dx);
	    }
	    return new numeric.Spline(x,zl,zr,pl,pr);
	}
	numeric.Spline.prototype.roots = function roots() {
	    function sqr(x) { return x*x; }
	    function heval(y0,y1,k0,k1,x) {
	        var A = k0*2-(y1-y0);
	        var B = -k1*2+(y1-y0);
	        var t = (x+1)*0.5;
	        var s = t*(1-t);
	        return (1-t)*y0+t*y1+A*s*(1-t)+B*s*t;
	    }
	    var ret = [];
	    var x = this.x, yl = this.yl, yr = this.yr, kl = this.kl, kr = this.kr;
	    if(typeof yl[0] === "number") {
	        yl = [yl];
	        yr = [yr];
	        kl = [kl];
	        kr = [kr];
	    }
	    var m = yl.length,n=x.length-1,i,j,k,y,s,t;
	    var ai,bi,ci,di, ret = Array(m),ri,k0,k1,y0,y1,A,B,D,dx,cx,stops,z0,z1,zm,t0,t1,tm;
	    var sqrt = Math.sqrt;
	    for(i=0;i!==m;++i) {
	        ai = yl[i];
	        bi = yr[i];
	        ci = kl[i];
	        di = kr[i];
	        ri = [];
	        for(j=0;j!==n;j++) {
	            if(j>0 && bi[j]*ai[j]<0) ri.push(x[j]);
	            dx = (x[j+1]-x[j]);
	            cx = x[j];
	            y0 = ai[j];
	            y1 = bi[j+1];
	            k0 = ci[j]/dx;
	            k1 = di[j+1]/dx;
	            D = sqr(k0-k1+3*(y0-y1)) + 12*k1*y0;
	            A = k1+3*y0+2*k0-3*y1;
	            B = 3*(k1+k0+2*(y0-y1));
	            if(D<=0) {
	                z0 = A/B;
	                if(z0>x[j] && z0<x[j+1]) stops = [x[j],z0,x[j+1]];
	                else stops = [x[j],x[j+1]];
	            } else {
	                z0 = (A-sqrt(D))/B;
	                z1 = (A+sqrt(D))/B;
	                stops = [x[j]];
	                if(z0>x[j] && z0<x[j+1]) stops.push(z0);
	                if(z1>x[j] && z1<x[j+1]) stops.push(z1);
	                stops.push(x[j+1]);
	            }
	            t0 = stops[0];
	            z0 = this._at(t0,j);
	            for(k=0;k<stops.length-1;k++) {
	                t1 = stops[k+1];
	                z1 = this._at(t1,j);
	                if(z0 === 0) {
	                    ri.push(t0); 
	                    t0 = t1;
	                    z0 = z1;
	                    continue;
	                }
	                if(z1 === 0 || z0*z1>0) {
	                    t0 = t1;
	                    z0 = z1;
	                    continue;
	                }
	                var side = 0;
	                while(1) {
	                    tm = (z0*t1-z1*t0)/(z0-z1);
	                    if(tm <= t0 || tm >= t1) { break; }
	                    zm = this._at(tm,j);
	                    if(zm*z1>0) {
	                        t1 = tm;
	                        z1 = zm;
	                        if(side === -1) z0*=0.5;
	                        side = -1;
	                    } else if(zm*z0>0) {
	                        t0 = tm;
	                        z0 = zm;
	                        if(side === 1) z1*=0.5;
	                        side = 1;
	                    } else break;
	                }
	                ri.push(tm);
	                t0 = stops[k+1];
	                z0 = this._at(t0, j);
	            }
	            if(z1 === 0) ri.push(t1);
	        }
	        ret[i] = ri;
	    }
	    if(typeof this.yl[0] === "number") return ret[0];
	    return ret;
	}
	numeric.spline = function spline(x,y,k1,kn) {
	    var n = x.length, b = [], dx = [], dy = [];
	    var i;
	    var sub = numeric.sub,mul = numeric.mul,add = numeric.add;
	    for(i=n-2;i>=0;i--) { dx[i] = x[i+1]-x[i]; dy[i] = sub(y[i+1],y[i]); }
	    if(typeof k1 === "string" || typeof kn === "string") { 
	        k1 = kn = "periodic";
	    }
	    // Build sparse tridiagonal system
	    var T = [[],[],[]];
	    switch(typeof k1) {
	    case "undefined":
	        b[0] = mul(3/(dx[0]*dx[0]),dy[0]);
	        T[0].push(0,0);
	        T[1].push(0,1);
	        T[2].push(2/dx[0],1/dx[0]);
	        break;
	    case "string":
	        b[0] = add(mul(3/(dx[n-2]*dx[n-2]),dy[n-2]),mul(3/(dx[0]*dx[0]),dy[0]));
	        T[0].push(0,0,0);
	        T[1].push(n-2,0,1);
	        T[2].push(1/dx[n-2],2/dx[n-2]+2/dx[0],1/dx[0]);
	        break;
	    default:
	        b[0] = k1;
	        T[0].push(0);
	        T[1].push(0);
	        T[2].push(1);
	        break;
	    }
	    for(i=1;i<n-1;i++) {
	        b[i] = add(mul(3/(dx[i-1]*dx[i-1]),dy[i-1]),mul(3/(dx[i]*dx[i]),dy[i]));
	        T[0].push(i,i,i);
	        T[1].push(i-1,i,i+1);
	        T[2].push(1/dx[i-1],2/dx[i-1]+2/dx[i],1/dx[i]);
	    }
	    switch(typeof kn) {
	    case "undefined":
	        b[n-1] = mul(3/(dx[n-2]*dx[n-2]),dy[n-2]);
	        T[0].push(n-1,n-1);
	        T[1].push(n-2,n-1);
	        T[2].push(1/dx[n-2],2/dx[n-2]);
	        break;
	    case "string":
	        T[1][T[1].length-1] = 0;
	        break;
	    default:
	        b[n-1] = kn;
	        T[0].push(n-1);
	        T[1].push(n-1);
	        T[2].push(1);
	        break;
	    }
	    if(typeof b[0] !== "number") b = numeric.transpose(b);
	    else b = [b];
	    var k = Array(b.length);
	    if(typeof k1 === "string") {
	        for(i=k.length-1;i!==-1;--i) {
	            k[i] = numeric.ccsLUPSolve(numeric.ccsLUP(numeric.ccsScatter(T)),b[i]);
	            k[i][n-1] = k[i][0];
	        }
	    } else {
	        for(i=k.length-1;i!==-1;--i) {
	            k[i] = numeric.cLUsolve(numeric.cLU(T),b[i]);
	        }
	    }
	    if(typeof y[0] === "number") k = k[0];
	    else k = numeric.transpose(k);
	    return new numeric.Spline(x,y,y,k,k);
	}
	
	// 8. FFT
	numeric.fftpow2 = function fftpow2(x,y) {
	    var n = x.length;
	    if(n === 1) return;
	    var cos = Math.cos, sin = Math.sin, i,j;
	    var xe = Array(n/2), ye = Array(n/2), xo = Array(n/2), yo = Array(n/2);
	    j = n/2;
	    for(i=n-1;i!==-1;--i) {
	        --j;
	        xo[j] = x[i];
	        yo[j] = y[i];
	        --i;
	        xe[j] = x[i];
	        ye[j] = y[i];
	    }
	    fftpow2(xe,ye);
	    fftpow2(xo,yo);
	    j = n/2;
	    var t,k = (-6.2831853071795864769252867665590057683943387987502116419/n),ci,si;
	    for(i=n-1;i!==-1;--i) {
	        --j;
	        if(j === -1) j = n/2-1;
	        t = k*i;
	        ci = cos(t);
	        si = sin(t);
	        x[i] = xe[j] + ci*xo[j] - si*yo[j];
	        y[i] = ye[j] + ci*yo[j] + si*xo[j];
	    }
	}
	numeric._ifftpow2 = function _ifftpow2(x,y) {
	    var n = x.length;
	    if(n === 1) return;
	    var cos = Math.cos, sin = Math.sin, i,j;
	    var xe = Array(n/2), ye = Array(n/2), xo = Array(n/2), yo = Array(n/2);
	    j = n/2;
	    for(i=n-1;i!==-1;--i) {
	        --j;
	        xo[j] = x[i];
	        yo[j] = y[i];
	        --i;
	        xe[j] = x[i];
	        ye[j] = y[i];
	    }
	    _ifftpow2(xe,ye);
	    _ifftpow2(xo,yo);
	    j = n/2;
	    var t,k = (6.2831853071795864769252867665590057683943387987502116419/n),ci,si;
	    for(i=n-1;i!==-1;--i) {
	        --j;
	        if(j === -1) j = n/2-1;
	        t = k*i;
	        ci = cos(t);
	        si = sin(t);
	        x[i] = xe[j] + ci*xo[j] - si*yo[j];
	        y[i] = ye[j] + ci*yo[j] + si*xo[j];
	    }
	}
	numeric.ifftpow2 = function ifftpow2(x,y) {
	    numeric._ifftpow2(x,y);
	    numeric.diveq(x,x.length);
	    numeric.diveq(y,y.length);
	}
	numeric.convpow2 = function convpow2(ax,ay,bx,by) {
	    numeric.fftpow2(ax,ay);
	    numeric.fftpow2(bx,by);
	    var i,n = ax.length,axi,bxi,ayi,byi;
	    for(i=n-1;i!==-1;--i) {
	        axi = ax[i]; ayi = ay[i]; bxi = bx[i]; byi = by[i];
	        ax[i] = axi*bxi-ayi*byi;
	        ay[i] = axi*byi+ayi*bxi;
	    }
	    numeric.ifftpow2(ax,ay);
	}
	numeric.T.prototype.fft = function fft() {
	    var x = this.x, y = this.y;
	    var n = x.length, log = Math.log, log2 = log(2),
	        p = Math.ceil(log(2*n-1)/log2), m = Math.pow(2,p);
	    var cx = numeric.rep([m],0), cy = numeric.rep([m],0), cos = Math.cos, sin = Math.sin;
	    var k, c = (-3.141592653589793238462643383279502884197169399375105820/n),t;
	    var a = numeric.rep([m],0), b = numeric.rep([m],0),nhalf = Math.floor(n/2);
	    for(k=0;k<n;k++) a[k] = x[k];
	    if(typeof y !== "undefined") for(k=0;k<n;k++) b[k] = y[k];
	    cx[0] = 1;
	    for(k=1;k<=m/2;k++) {
	        t = c*k*k;
	        cx[k] = cos(t);
	        cy[k] = sin(t);
	        cx[m-k] = cos(t);
	        cy[m-k] = sin(t)
	    }
	    var X = new numeric.T(a,b), Y = new numeric.T(cx,cy);
	    X = X.mul(Y);
	    numeric.convpow2(X.x,X.y,numeric.clone(Y.x),numeric.neg(Y.y));
	    X = X.mul(Y);
	    X.x.length = n;
	    X.y.length = n;
	    return X;
	}
	numeric.T.prototype.ifft = function ifft() {
	    var x = this.x, y = this.y;
	    var n = x.length, log = Math.log, log2 = log(2),
	        p = Math.ceil(log(2*n-1)/log2), m = Math.pow(2,p);
	    var cx = numeric.rep([m],0), cy = numeric.rep([m],0), cos = Math.cos, sin = Math.sin;
	    var k, c = (3.141592653589793238462643383279502884197169399375105820/n),t;
	    var a = numeric.rep([m],0), b = numeric.rep([m],0),nhalf = Math.floor(n/2);
	    for(k=0;k<n;k++) a[k] = x[k];
	    if(typeof y !== "undefined") for(k=0;k<n;k++) b[k] = y[k];
	    cx[0] = 1;
	    for(k=1;k<=m/2;k++) {
	        t = c*k*k;
	        cx[k] = cos(t);
	        cy[k] = sin(t);
	        cx[m-k] = cos(t);
	        cy[m-k] = sin(t)
	    }
	    var X = new numeric.T(a,b), Y = new numeric.T(cx,cy);
	    X = X.mul(Y);
	    numeric.convpow2(X.x,X.y,numeric.clone(Y.x),numeric.neg(Y.y));
	    X = X.mul(Y);
	    X.x.length = n;
	    X.y.length = n;
	    return X.div(n);
	}
	
	//9. Unconstrained optimization
	numeric.gradient = function gradient(f,x) {
	    var n = x.length;
	    var f0 = f(x);
	    if(isNaN(f0)) throw new Error('gradient: f(x) is a NaN!');
	    var max = Math.max;
	    var i,x0 = numeric.clone(x),f1,f2, J = Array(n);
	    var div = numeric.div, sub = numeric.sub,errest,roundoff,max = Math.max,eps = 1e-3,abs = Math.abs, min = Math.min;
	    var t0,t1,t2,it=0,d1,d2,N;
	    for(i=0;i<n;i++) {
	        var h = max(1e-6*f0,1e-8);
	        while(1) {
	            ++it;
	            if(it>20) { throw new Error("Numerical gradient fails"); }
	            x0[i] = x[i]+h;
	            f1 = f(x0);
	            x0[i] = x[i]-h;
	            f2 = f(x0);
	            x0[i] = x[i];
	            if(isNaN(f1) || isNaN(f2)) { h/=16; continue; }
	            J[i] = (f1-f2)/(2*h);
	            t0 = x[i]-h;
	            t1 = x[i];
	            t2 = x[i]+h;
	            d1 = (f1-f0)/h;
	            d2 = (f0-f2)/h;
	            N = max(abs(J[i]),abs(f0),abs(f1),abs(f2),abs(t0),abs(t1),abs(t2),1e-8);
	            errest = min(max(abs(d1-J[i]),abs(d2-J[i]),abs(d1-d2))/N,h/N);
	            if(errest>eps) { h/=16; }
	            else break;
	            }
	    }
	    return J;
	}
	
	numeric.uncmin = function uncmin(f,x0,tol,gradient,maxit,callback,options) {
	    var grad = numeric.gradient;
	    if(typeof options === "undefined") { options = {}; }
	    if(typeof tol === "undefined") { tol = 1e-8; }
	    if(typeof gradient === "undefined") { gradient = function(x) { return grad(f,x); }; }
	    if(typeof maxit === "undefined") maxit = 1000;
	    x0 = numeric.clone(x0);
	    var n = x0.length;
	    var f0 = f(x0),f1,df0;
	    if(isNaN(f0)) throw new Error('uncmin: f(x0) is a NaN!');
	    var max = Math.max, norm2 = numeric.norm2;
	    tol = max(tol,numeric.epsilon);
	    var step,g0,g1,H1 = options.Hinv || numeric.identity(n);
	    var dot = numeric.dot, inv = numeric.inv, sub = numeric.sub, add = numeric.add, ten = numeric.tensor, div = numeric.div, mul = numeric.mul;
	    var all = numeric.all, isfinite = numeric.isFinite, neg = numeric.neg;
	    var it=0,i,s,x1,y,Hy,Hs,ys,i0,t,nstep,t1,t2;
	    var msg = "";
	    g0 = gradient(x0);
	    while(it<maxit) {
	        if(typeof callback === "function") { if(callback(it,x0,f0,g0,H1)) { msg = "Callback returned true"; break; } }
	        if(!all(isfinite(g0))) { msg = "Gradient has Infinity or NaN"; break; }
	        step = neg(dot(H1,g0));
	        if(!all(isfinite(step))) { msg = "Search direction has Infinity or NaN"; break; }
	        nstep = norm2(step);
	        if(nstep < tol) { msg="Newton step smaller than tol"; break; }
	        t = 1;
	        df0 = dot(g0,step);
	        // line search
	        x1 = x0;
	        while(it < maxit) {
	            if(t*nstep < tol) { break; }
	            s = mul(step,t);
	            x1 = add(x0,s);
	            f1 = f(x1);
	            if(f1-f0 >= 0.1*t*df0 || isNaN(f1)) {
	                t *= 0.5;
	                ++it;
	                continue;
	            }
	            break;
	        }
	        if(t*nstep < tol) { msg = "Line search step size smaller than tol"; break; }
	        if(it === maxit) { msg = "maxit reached during line search"; break; }
	        g1 = gradient(x1);
	        y = sub(g1,g0);
	        ys = dot(y,s);
	        Hy = dot(H1,y);
	        H1 = sub(add(H1,
	                mul(
	                        (ys+dot(y,Hy))/(ys*ys),
	                        ten(s,s)    )),
	                div(add(ten(Hy,s),ten(s,Hy)),ys));
	        x0 = x1;
	        f0 = f1;
	        g0 = g1;
	        ++it;
	    }
	    return {solution: x0, f: f0, gradient: g0, invHessian: H1, iterations:it, message: msg};
	}
	
	// 10. Ode solver (Dormand-Prince)
	numeric.Dopri = function Dopri(x,y,f,ymid,iterations,msg,events) {
	    this.x = x;
	    this.y = y;
	    this.f = f;
	    this.ymid = ymid;
	    this.iterations = iterations;
	    this.events = events;
	    this.message = msg;
	}
	numeric.Dopri.prototype._at = function _at(xi,j) {
	    function sqr(x) { return x*x; }
	    var sol = this;
	    var xs = sol.x;
	    var ys = sol.y;
	    var k1 = sol.f;
	    var ymid = sol.ymid;
	    var n = xs.length;
	    var x0,x1,xh,y0,y1,yh,xi;
	    var floor = Math.floor,h;
	    var c = 0.5;
	    var add = numeric.add, mul = numeric.mul,sub = numeric.sub, p,q,w;
	    x0 = xs[j];
	    x1 = xs[j+1];
	    y0 = ys[j];
	    y1 = ys[j+1];
	    h  = x1-x0;
	    xh = x0+c*h;
	    yh = ymid[j];
	    p = sub(k1[j  ],mul(y0,1/(x0-xh)+2/(x0-x1)));
	    q = sub(k1[j+1],mul(y1,1/(x1-xh)+2/(x1-x0)));
	    w = [sqr(xi - x1) * (xi - xh) / sqr(x0 - x1) / (x0 - xh),
	         sqr(xi - x0) * sqr(xi - x1) / sqr(x0 - xh) / sqr(x1 - xh),
	         sqr(xi - x0) * (xi - xh) / sqr(x1 - x0) / (x1 - xh),
	         (xi - x0) * sqr(xi - x1) * (xi - xh) / sqr(x0-x1) / (x0 - xh),
	         (xi - x1) * sqr(xi - x0) * (xi - xh) / sqr(x0-x1) / (x1 - xh)];
	    return add(add(add(add(mul(y0,w[0]),
	                           mul(yh,w[1])),
	                           mul(y1,w[2])),
	                           mul( p,w[3])),
	                           mul( q,w[4]));
	}
	numeric.Dopri.prototype.at = function at(x) {
	    var i,j,k,floor = Math.floor;
	    if(typeof x !== "number") {
	        var n = x.length, ret = Array(n);
	        for(i=n-1;i!==-1;--i) {
	            ret[i] = this.at(x[i]);
	        }
	        return ret;
	    }
	    var x0 = this.x;
	    i = 0; j = x0.length-1;
	    while(j-i>1) {
	        k = floor(0.5*(i+j));
	        if(x0[k] <= x) i = k;
	        else j = k;
	    }
	    return this._at(x,i);
	}
	
	numeric.dopri = function dopri(x0,x1,y0,f,tol,maxit,event) {
	    if(typeof tol === "undefined") { tol = 1e-6; }
	    if(typeof maxit === "undefined") { maxit = 1000; }
	    var xs = [x0], ys = [y0], k1 = [f(x0,y0)], k2,k3,k4,k5,k6,k7, ymid = [];
	    var A2 = 1/5;
	    var A3 = [3/40,9/40];
	    var A4 = [44/45,-56/15,32/9];
	    var A5 = [19372/6561,-25360/2187,64448/6561,-212/729];
	    var A6 = [9017/3168,-355/33,46732/5247,49/176,-5103/18656];
	    var b = [35/384,0,500/1113,125/192,-2187/6784,11/84];
	    var bm = [0.5*6025192743/30085553152,
	              0,
	              0.5*51252292925/65400821598,
	              0.5*-2691868925/45128329728,
	              0.5*187940372067/1594534317056,
	              0.5*-1776094331/19743644256,
	              0.5*11237099/235043384];
	    var c = [1/5,3/10,4/5,8/9,1,1];
	    var e = [-71/57600,0,71/16695,-71/1920,17253/339200,-22/525,1/40];
	    var i = 0,er,j;
	    var h = (x1-x0)/10;
	    var it = 0;
	    var add = numeric.add, mul = numeric.mul, y1,erinf;
	    var max = Math.max, min = Math.min, abs = Math.abs, norminf = numeric.norminf,pow = Math.pow;
	    var any = numeric.any, lt = numeric.lt, and = numeric.and, sub = numeric.sub;
	    var e0, e1, ev;
	    var ret = new numeric.Dopri(xs,ys,k1,ymid,-1,"");
	    if(typeof event === "function") e0 = event(x0,y0);
	    while(x0<x1 && it<maxit) {
	        ++it;
	        if(x0+h>x1) h = x1-x0;
	        k2 = f(x0+c[0]*h,                add(y0,mul(   A2*h,k1[i])));
	        k3 = f(x0+c[1]*h,            add(add(y0,mul(A3[0]*h,k1[i])),mul(A3[1]*h,k2)));
	        k4 = f(x0+c[2]*h,        add(add(add(y0,mul(A4[0]*h,k1[i])),mul(A4[1]*h,k2)),mul(A4[2]*h,k3)));
	        k5 = f(x0+c[3]*h,    add(add(add(add(y0,mul(A5[0]*h,k1[i])),mul(A5[1]*h,k2)),mul(A5[2]*h,k3)),mul(A5[3]*h,k4)));
	        k6 = f(x0+c[4]*h,add(add(add(add(add(y0,mul(A6[0]*h,k1[i])),mul(A6[1]*h,k2)),mul(A6[2]*h,k3)),mul(A6[3]*h,k4)),mul(A6[4]*h,k5)));
	        y1 = add(add(add(add(add(y0,mul(k1[i],h*b[0])),mul(k3,h*b[2])),mul(k4,h*b[3])),mul(k5,h*b[4])),mul(k6,h*b[5]));
	        k7 = f(x0+h,y1);
	        er = add(add(add(add(add(mul(k1[i],h*e[0]),mul(k3,h*e[2])),mul(k4,h*e[3])),mul(k5,h*e[4])),mul(k6,h*e[5])),mul(k7,h*e[6]));
	        if(typeof er === "number") erinf = abs(er);
	        else erinf = norminf(er);
	        if(erinf > tol) { // reject
	            h = 0.2*h*pow(tol/erinf,0.25);
	            if(x0+h === x0) {
	                ret.msg = "Step size became too small";
	                break;
	            }
	            continue;
	        }
	        ymid[i] = add(add(add(add(add(add(y0,
	                mul(k1[i],h*bm[0])),
	                mul(k3   ,h*bm[2])),
	                mul(k4   ,h*bm[3])),
	                mul(k5   ,h*bm[4])),
	                mul(k6   ,h*bm[5])),
	                mul(k7   ,h*bm[6]));
	        ++i;
	        xs[i] = x0+h;
	        ys[i] = y1;
	        k1[i] = k7;
	        if(typeof event === "function") {
	            var yi,xl = x0,xr = x0+0.5*h,xi;
	            e1 = event(xr,ymid[i-1]);
	            ev = and(lt(e0,0),lt(0,e1));
	            if(!any(ev)) { xl = xr; xr = x0+h; e0 = e1; e1 = event(xr,y1); ev = and(lt(e0,0),lt(0,e1)); }
	            if(any(ev)) {
	                var xc, yc, en,ei;
	                var side=0, sl = 1.0, sr = 1.0;
	                while(1) {
	                    if(typeof e0 === "number") xi = (sr*e1*xl-sl*e0*xr)/(sr*e1-sl*e0);
	                    else {
	                        xi = xr;
	                        for(j=e0.length-1;j!==-1;--j) {
	                            if(e0[j]<0 && e1[j]>0) xi = min(xi,(sr*e1[j]*xl-sl*e0[j]*xr)/(sr*e1[j]-sl*e0[j]));
	                        }
	                    }
	                    if(xi <= xl || xi >= xr) break;
	                    yi = ret._at(xi, i-1);
	                    ei = event(xi,yi);
	                    en = and(lt(e0,0),lt(0,ei));
	                    if(any(en)) {
	                        xr = xi;
	                        e1 = ei;
	                        ev = en;
	                        sr = 1.0;
	                        if(side === -1) sl *= 0.5;
	                        else sl = 1.0;
	                        side = -1;
	                    } else {
	                        xl = xi;
	                        e0 = ei;
	                        sl = 1.0;
	                        if(side === 1) sr *= 0.5;
	                        else sr = 1.0;
	                        side = 1;
	                    }
	                }
	                y1 = ret._at(0.5*(x0+xi),i-1);
	                ret.f[i] = f(xi,yi);
	                ret.x[i] = xi;
	                ret.y[i] = yi;
	                ret.ymid[i-1] = y1;
	                ret.events = ev;
	                ret.iterations = it;
	                return ret;
	            }
	        }
	        x0 += h;
	        y0 = y1;
	        e0 = e1;
	        h = min(0.8*h*pow(tol/erinf,0.25),4*h);
	    }
	    ret.iterations = it;
	    return ret;
	}
	
	// 11. Ax = b
	numeric.LU = function(A, fast) {
	  fast = fast || false;
	
	  var abs = Math.abs;
	  var i, j, k, absAjk, Akk, Ak, Pk, Ai;
	  var max;
	  var n = A.length, n1 = n-1;
	  var P = new Array(n);
	  if(!fast) A = numeric.clone(A);
	
	  for (k = 0; k < n; ++k) {
	    Pk = k;
	    Ak = A[k];
	    max = abs(Ak[k]);
	    for (j = k + 1; j < n; ++j) {
	      absAjk = abs(A[j][k]);
	      if (max < absAjk) {
	        max = absAjk;
	        Pk = j;
	      }
	    }
	    P[k] = Pk;
	
	    if (Pk != k) {
	      A[k] = A[Pk];
	      A[Pk] = Ak;
	      Ak = A[k];
	    }
	
	    Akk = Ak[k];
	
	    for (i = k + 1; i < n; ++i) {
	      A[i][k] /= Akk;
	    }
	
	    for (i = k + 1; i < n; ++i) {
	      Ai = A[i];
	      for (j = k + 1; j < n1; ++j) {
	        Ai[j] -= Ai[k] * Ak[j];
	        ++j;
	        Ai[j] -= Ai[k] * Ak[j];
	      }
	      if(j===n1) Ai[j] -= Ai[k] * Ak[j];
	    }
	  }
	
	  return {
	    LU: A,
	    P:  P
	  };
	}
	
	numeric.LUsolve = function LUsolve(LUP, b) {
	  var i, j;
	  var LU = LUP.LU;
	  var n   = LU.length;
	  var x = numeric.clone(b);
	  var P   = LUP.P;
	  var Pi, LUi, LUii, tmp;
	
	  for (i=n-1;i!==-1;--i) x[i] = b[i];
	  for (i = 0; i < n; ++i) {
	    Pi = P[i];
	    if (P[i] !== i) {
	      tmp = x[i];
	      x[i] = x[Pi];
	      x[Pi] = tmp;
	    }
	
	    LUi = LU[i];
	    for (j = 0; j < i; ++j) {
	      x[i] -= x[j] * LUi[j];
	    }
	  }
	
	  for (i = n - 1; i >= 0; --i) {
	    LUi = LU[i];
	    for (j = i + 1; j < n; ++j) {
	      x[i] -= x[j] * LUi[j];
	    }
	
	    x[i] /= LUi[i];
	  }
	
	  return x;
	}
	
	numeric.solve = function solve(A,b,fast) { return numeric.LUsolve(numeric.LU(A,fast), b); }
	
	// 12. Linear programming
	numeric.echelonize = function echelonize(A) {
	    var s = numeric.dim(A), m = s[0], n = s[1];
	    var I = numeric.identity(m);
	    var P = Array(m);
	    var i,j,k,l,Ai,Ii,Z,a;
	    var abs = Math.abs;
	    var diveq = numeric.diveq;
	    A = numeric.clone(A);
	    for(i=0;i<m;++i) {
	        k = 0;
	        Ai = A[i];
	        Ii = I[i];
	        for(j=1;j<n;++j) if(abs(Ai[k])<abs(Ai[j])) k=j;
	        P[i] = k;
	        diveq(Ii,Ai[k]);
	        diveq(Ai,Ai[k]);
	        for(j=0;j<m;++j) if(j!==i) {
	            Z = A[j]; a = Z[k];
	            for(l=n-1;l!==-1;--l) Z[l] -= Ai[l]*a;
	            Z = I[j];
	            for(l=m-1;l!==-1;--l) Z[l] -= Ii[l]*a;
	        }
	    }
	    return {I:I, A:A, P:P};
	}
	
	numeric.__solveLP = function __solveLP(c,A,b,tol,maxit,x,flag) {
	    var sum = numeric.sum, log = numeric.log, mul = numeric.mul, sub = numeric.sub, dot = numeric.dot, div = numeric.div, add = numeric.add;
	    var m = c.length, n = b.length,y;
	    var unbounded = false, cb,i0=0;
	    var alpha = 1.0;
	    var f0,df0,AT = numeric.transpose(A), svd = numeric.svd,transpose = numeric.transpose,leq = numeric.leq, sqrt = Math.sqrt, abs = Math.abs;
	    var muleq = numeric.muleq;
	    var norm = numeric.norminf, any = numeric.any,min = Math.min;
	    var all = numeric.all, gt = numeric.gt;
	    var p = Array(m), A0 = Array(n),e=numeric.rep([n],1), H;
	    var solve = numeric.solve, z = sub(b,dot(A,x)),count;
	    var dotcc = dot(c,c);
	    var g;
	    for(count=i0;count<maxit;++count) {
	        var i,j,d;
	        for(i=n-1;i!==-1;--i) A0[i] = div(A[i],z[i]);
	        var A1 = transpose(A0);
	        for(i=m-1;i!==-1;--i) p[i] = (/*x[i]+*/sum(A1[i]));
	        alpha = 0.25*abs(dotcc/dot(c,p));
	        var a1 = 100*sqrt(dotcc/dot(p,p));
	        if(!isFinite(alpha) || alpha>a1) alpha = a1;
	        g = add(c,mul(alpha,p));
	        H = dot(A1,A0);
	        for(i=m-1;i!==-1;--i) H[i][i] += 1;
	        d = solve(H,div(g,alpha),true);
	        var t0 = div(z,dot(A,d));
	        var t = 1.0;
	        for(i=n-1;i!==-1;--i) if(t0[i]<0) t = min(t,-0.999*t0[i]);
	        y = sub(x,mul(d,t));
	        z = sub(b,dot(A,y));
	        if(!all(gt(z,0))) return { solution: x, message: "", iterations: count };
	        x = y;
	        if(alpha<tol) return { solution: y, message: "", iterations: count };
	        if(flag) {
	            var s = dot(c,g), Ag = dot(A,g);
	            unbounded = true;
	            for(i=n-1;i!==-1;--i) if(s*Ag[i]<0) { unbounded = false; break; }
	        } else {
	            if(x[m-1]>=0) unbounded = false;
	            else unbounded = true;
	        }
	        if(unbounded) return { solution: y, message: "Unbounded", iterations: count };
	    }
	    return { solution: x, message: "maximum iteration count exceeded", iterations:count };
	}
	
	numeric._solveLP = function _solveLP(c,A,b,tol,maxit) {
	    var m = c.length, n = b.length,y;
	    var sum = numeric.sum, log = numeric.log, mul = numeric.mul, sub = numeric.sub, dot = numeric.dot, div = numeric.div, add = numeric.add;
	    var c0 = numeric.rep([m],0).concat([1]);
	    var J = numeric.rep([n,1],-1);
	    var A0 = numeric.blockMatrix([[A                   ,   J  ]]);
	    var b0 = b;
	    var y = numeric.rep([m],0).concat(Math.max(0,numeric.sup(numeric.neg(b)))+1);
	    var x0 = numeric.__solveLP(c0,A0,b0,tol,maxit,y,false);
	    var x = numeric.clone(x0.solution);
	    x.length = m;
	    var foo = numeric.inf(sub(b,dot(A,x)));
	    if(foo<0) { return { solution: NaN, message: "Infeasible", iterations: x0.iterations }; }
	    var ret = numeric.__solveLP(c, A, b, tol, maxit-x0.iterations, x, true);
	    ret.iterations += x0.iterations;
	    return ret;
	};
	
	numeric.solveLP = function solveLP(c,A,b,Aeq,beq,tol,maxit) {
	    if(typeof maxit === "undefined") maxit = 1000;
	    if(typeof tol === "undefined") tol = numeric.epsilon;
	    if(typeof Aeq === "undefined") return numeric._solveLP(c,A,b,tol,maxit);
	    var m = Aeq.length, n = Aeq[0].length, o = A.length;
	    var B = numeric.echelonize(Aeq);
	    var flags = numeric.rep([n],0);
	    var P = B.P;
	    var Q = [];
	    var i;
	    for(i=P.length-1;i!==-1;--i) flags[P[i]] = 1;
	    for(i=n-1;i!==-1;--i) if(flags[i]===0) Q.push(i);
	    var g = numeric.getRange;
	    var I = numeric.linspace(0,m-1), J = numeric.linspace(0,o-1);
	    var Aeq2 = g(Aeq,I,Q), A1 = g(A,J,P), A2 = g(A,J,Q), dot = numeric.dot, sub = numeric.sub;
	    var A3 = dot(A1,B.I);
	    var A4 = sub(A2,dot(A3,Aeq2)), b4 = sub(b,dot(A3,beq));
	    var c1 = Array(P.length), c2 = Array(Q.length);
	    for(i=P.length-1;i!==-1;--i) c1[i] = c[P[i]];
	    for(i=Q.length-1;i!==-1;--i) c2[i] = c[Q[i]];
	    var c4 = sub(c2,dot(c1,dot(B.I,Aeq2)));
	    var S = numeric._solveLP(c4,A4,b4,tol,maxit);
	    var x2 = S.solution;
	    if(x2!==x2) return S;
	    var x1 = dot(B.I,sub(beq,dot(Aeq2,x2)));
	    var x = Array(c.length);
	    for(i=P.length-1;i!==-1;--i) x[P[i]] = x1[i];
	    for(i=Q.length-1;i!==-1;--i) x[Q[i]] = x2[i];
	    return { solution: x, message:S.message, iterations: S.iterations };
	}
	
	numeric.MPStoLP = function MPStoLP(MPS) {
	    if(MPS instanceof String) { MPS.split('\n'); }
	    var state = 0;
	    var states = ['Initial state','NAME','ROWS','COLUMNS','RHS','BOUNDS','ENDATA'];
	    var n = MPS.length;
	    var i,j,z,N=0,rows = {}, sign = [], rl = 0, vars = {}, nv = 0;
	    var name;
	    var c = [], A = [], b = [];
	    function err(e) { throw new Error('MPStoLP: '+e+'\nLine '+i+': '+MPS[i]+'\nCurrent state: '+states[state]+'\n'); }
	    for(i=0;i<n;++i) {
	        z = MPS[i];
	        var w0 = z.match(/\S*/g);
	        var w = [];
	        for(j=0;j<w0.length;++j) if(w0[j]!=="") w.push(w0[j]);
	        if(w.length === 0) continue;
	        for(j=0;j<states.length;++j) if(z.substr(0,states[j].length) === states[j]) break;
	        if(j<states.length) {
	            state = j;
	            if(j===1) { name = w[1]; }
	            if(j===6) return { name:name, c:c, A:numeric.transpose(A), b:b, rows:rows, vars:vars };
	            continue;
	        }
	        switch(state) {
	        case 0: case 1: err('Unexpected line');
	        case 2: 
	            switch(w[0]) {
	            case 'N': if(N===0) N = w[1]; else err('Two or more N rows'); break;
	            case 'L': rows[w[1]] = rl; sign[rl] = 1; b[rl] = 0; ++rl; break;
	            case 'G': rows[w[1]] = rl; sign[rl] = -1;b[rl] = 0; ++rl; break;
	            case 'E': rows[w[1]] = rl; sign[rl] = 0;b[rl] = 0; ++rl; break;
	            default: err('Parse error '+numeric.prettyPrint(w));
	            }
	            break;
	        case 3:
	            if(!vars.hasOwnProperty(w[0])) { vars[w[0]] = nv; c[nv] = 0; A[nv] = numeric.rep([rl],0); ++nv; }
	            var p = vars[w[0]];
	            for(j=1;j<w.length;j+=2) {
	                if(w[j] === N) { c[p] = parseFloat(w[j+1]); continue; }
	                var q = rows[w[j]];
	                A[p][q] = (sign[q]<0?-1:1)*parseFloat(w[j+1]);
	            }
	            break;
	        case 4:
	            for(j=1;j<w.length;j+=2) b[rows[w[j]]] = (sign[rows[w[j]]]<0?-1:1)*parseFloat(w[j+1]);
	            break;
	        case 5: /*FIXME*/ break;
	        case 6: err('Internal error');
	        }
	    }
	    err('Reached end of file without ENDATA');
	}
	// seedrandom.js version 2.0.
	// Author: David Bau 4/2/2011
	//
	// Defines a method Math.seedrandom() that, when called, substitutes
	// an explicitly seeded RC4-based algorithm for Math.random().  Also
	// supports automatic seeding from local or network sources of entropy.
	//
	// Usage:
	//
	//   <script src=http://davidbau.com/encode/seedrandom-min.js></script>
	//
	//   Math.seedrandom('yipee'); Sets Math.random to a function that is
	//                             initialized using the given explicit seed.
	//
	//   Math.seedrandom();        Sets Math.random to a function that is
	//                             seeded using the current time, dom state,
	//                             and other accumulated local entropy.
	//                             The generated seed string is returned.
	//
	//   Math.seedrandom('yowza', true);
	//                             Seeds using the given explicit seed mixed
	//                             together with accumulated entropy.
	//
	//   <script src="http://bit.ly/srandom-512"></script>
	//                             Seeds using physical random bits downloaded
	//                             from random.org.
	//
	//   <script src="https://jsonlib.appspot.com/urandom?callback=Math.seedrandom">
	//   </script>                 Seeds using urandom bits from call.jsonlib.com,
	//                             which is faster than random.org.
	//
	// Examples:
	//
	//   Math.seedrandom("hello");            // Use "hello" as the seed.
	//   document.write(Math.random());       // Always 0.5463663768140734
	//   document.write(Math.random());       // Always 0.43973793770592234
	//   var rng1 = Math.random;              // Remember the current prng.
	//
	//   var autoseed = Math.seedrandom();    // New prng with an automatic seed.
	//   document.write(Math.random());       // Pretty much unpredictable.
	//
	//   Math.random = rng1;                  // Continue "hello" prng sequence.
	//   document.write(Math.random());       // Always 0.554769432473455
	//
	//   Math.seedrandom(autoseed);           // Restart at the previous seed.
	//   document.write(Math.random());       // Repeat the 'unpredictable' value.
	//
	// Notes:
	//
	// Each time seedrandom('arg') is called, entropy from the passed seed
	// is accumulated in a pool to help generate future seeds for the
	// zero-argument form of Math.seedrandom, so entropy can be injected over
	// time by calling seedrandom with explicit data repeatedly.
	//
	// On speed - This javascript implementation of Math.random() is about
	// 3-10x slower than the built-in Math.random() because it is not native
	// code, but this is typically fast enough anyway.  Seeding is more expensive,
	// especially if you use auto-seeding.  Some details (timings on Chrome 4):
	//
	// Our Math.random()            - avg less than 0.002 milliseconds per call
	// seedrandom('explicit')       - avg less than 0.5 milliseconds per call
	// seedrandom('explicit', true) - avg less than 2 milliseconds per call
	// seedrandom()                 - avg about 38 milliseconds per call
	//
	// LICENSE (BSD):
	//
	// Copyright 2010 David Bau, all rights reserved.
	//
	// Redistribution and use in source and binary forms, with or without
	// modification, are permitted provided that the following conditions are met:
	// 
	//   1. Redistributions of source code must retain the above copyright
	//      notice, this list of conditions and the following disclaimer.
	//
	//   2. Redistributions in binary form must reproduce the above copyright
	//      notice, this list of conditions and the following disclaimer in the
	//      documentation and/or other materials provided with the distribution.
	// 
	//   3. Neither the name of this module nor the names of its contributors may
	//      be used to endorse or promote products derived from this software
	//      without specific prior written permission.
	// 
	// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
	// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
	// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
	// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
	// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
	// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
	// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
	// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
	// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
	// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
	// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	//
	/**
	 * All code is in an anonymous closure to keep the global namespace clean.
	 *
	 * @param {number=} overflow 
	 * @param {number=} startdenom
	 */
	
	// Patched by Seb so that seedrandom.js does not pollute the Math object.
	// My tests suggest that doing Math.trouble = 1 makes Math lookups about 5%
	// slower.
	numeric.seedrandom = { pow:Math.pow, random:Math.random };
	
	(function (pool, math, width, chunks, significance, overflow, startdenom) {
	
	
	//
	// seedrandom()
	// This is the seedrandom function described above.
	//
	math['seedrandom'] = function seedrandom(seed, use_entropy) {
	  var key = [];
	  var arc4;
	
	  // Flatten the seed string or build one from local entropy if needed.
	  seed = mixkey(flatten(
	    use_entropy ? [seed, pool] :
	    arguments.length ? seed :
	    [new Date().getTime(), pool, window], 3), key);
	
	  // Use the seed to initialize an ARC4 generator.
	  arc4 = new ARC4(key);
	
	  // Mix the randomness into accumulated entropy.
	  mixkey(arc4.S, pool);
	
	  // Override Math.random
	
	  // This function returns a random double in [0, 1) that contains
	  // randomness in every bit of the mantissa of the IEEE 754 value.
	
	  math['random'] = function random() {  // Closure to return a random double:
	    var n = arc4.g(chunks);             // Start with a numerator n < 2 ^ 48
	    var d = startdenom;                 //   and denominator d = 2 ^ 48.
	    var x = 0;                          //   and no 'extra last byte'.
	    while (n < significance) {          // Fill up all significant digits by
	      n = (n + x) * width;              //   shifting numerator and
	      d *= width;                       //   denominator and generating a
	      x = arc4.g(1);                    //   new least-significant-byte.
	    }
	    while (n >= overflow) {             // To avoid rounding up, before adding
	      n /= 2;                           //   last byte, shift everything
	      d /= 2;                           //   right using integer math until
	      x >>>= 1;                         //   we have exactly the desired bits.
	    }
	    return (n + x) / d;                 // Form the number within [0, 1).
	  };
	
	  // Return the seed that was used
	  return seed;
	};
	
	//
	// ARC4
	//
	// An ARC4 implementation.  The constructor takes a key in the form of
	// an array of at most (width) integers that should be 0 <= x < (width).
	//
	// The g(count) method returns a pseudorandom integer that concatenates
	// the next (count) outputs from ARC4.  Its return value is a number x
	// that is in the range 0 <= x < (width ^ count).
	//
	/** @constructor */
	function ARC4(key) {
	  var t, u, me = this, keylen = key.length;
	  var i = 0, j = me.i = me.j = me.m = 0;
	  me.S = [];
	  me.c = [];
	
	  // The empty key [] is treated as [0].
	  if (!keylen) { key = [keylen++]; }
	
	  // Set up S using the standard key scheduling algorithm.
	  while (i < width) { me.S[i] = i++; }
	  for (i = 0; i < width; i++) {
	    t = me.S[i];
	    j = lowbits(j + t + key[i % keylen]);
	    u = me.S[j];
	    me.S[i] = u;
	    me.S[j] = t;
	  }
	
	  // The "g" method returns the next (count) outputs as one number.
	  me.g = function getnext(count) {
	    var s = me.S;
	    var i = lowbits(me.i + 1); var t = s[i];
	    var j = lowbits(me.j + t); var u = s[j];
	    s[i] = u;
	    s[j] = t;
	    var r = s[lowbits(t + u)];
	    while (--count) {
	      i = lowbits(i + 1); t = s[i];
	      j = lowbits(j + t); u = s[j];
	      s[i] = u;
	      s[j] = t;
	      r = r * width + s[lowbits(t + u)];
	    }
	    me.i = i;
	    me.j = j;
	    return r;
	  };
	  // For robust unpredictability discard an initial batch of values.
	  // See http://www.rsa.com/rsalabs/node.asp?id=2009
	  me.g(width);
	}
	
	//
	// flatten()
	// Converts an object tree to nested arrays of strings.
	//
	/** @param {Object=} result 
	  * @param {string=} prop
	  * @param {string=} typ */
	function flatten(obj, depth, result, prop, typ) {
	  result = [];
	  typ = typeof(obj);
	  if (depth && typ == 'object') {
	    for (prop in obj) {
	      if (prop.indexOf('S') < 5) {    // Avoid FF3 bug (local/sessionStorage)
	        try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}
	      }
	    }
	  }
	  return (result.length ? result : obj + (typ != 'string' ? '\0' : ''));
	}
	
	//
	// mixkey()
	// Mixes a string seed into a key that is an array of integers, and
	// returns a shortened string seed that is equivalent to the result key.
	//
	/** @param {number=} smear 
	  * @param {number=} j */
	function mixkey(seed, key, smear, j) {
	  seed += '';                         // Ensure the seed is a string
	  smear = 0;
	  for (j = 0; j < seed.length; j++) {
	    key[lowbits(j)] =
	      lowbits((smear ^= key[lowbits(j)] * 19) + seed.charCodeAt(j));
	  }
	  seed = '';
	  for (j in key) { seed += String.fromCharCode(key[j]); }
	  return seed;
	}
	
	//
	// lowbits()
	// A quick "n mod width" for width a power of 2.
	//
	function lowbits(n) { return n & (width - 1); }
	
	//
	// The following constants are related to IEEE 754 limits.
	//
	startdenom = math.pow(width, chunks);
	significance = math.pow(2, significance);
	overflow = significance * 2;
	
	//
	// When seedrandom.js is loaded, we immediately mix a few bits
	// from the built-in RNG into the entropy pool.  Because we do
	// not want to intefere with determinstic PRNG state later,
	// seedrandom will not call math.random on its own again after
	// initialization.
	//
	mixkey(math.random(), pool);
	
	// End anonymous scope, and pass initial values.
	}(
	  [],   // pool: entropy pool starts empty
	  numeric.seedrandom, // math: package containing random, pow, and seedrandom
	  256,  // width: each RC4 output is 0 <= x < 256
	  6,    // chunks: at least six RC4 outputs for each double
	  52    // significance: there are 52 significant digits in a double
	  ));
	/* This file is a slightly modified version of quadprog.js from Alberto Santini.
	 * It has been slightly modified by Sébastien Loisel to make sure that it handles
	 * 0-based Arrays instead of 1-based Arrays.
	 * License is in resources/LICENSE.quadprog */
	(function(exports) {
	
	function base0to1(A) {
	    if(typeof A !== "object") { return A; }
	    var ret = [], i,n=A.length;
	    for(i=0;i<n;i++) ret[i+1] = base0to1(A[i]);
	    return ret;
	}
	function base1to0(A) {
	    if(typeof A !== "object") { return A; }
	    var ret = [], i,n=A.length;
	    for(i=1;i<n;i++) ret[i-1] = base1to0(A[i]);
	    return ret;
	}
	
	function dpori(a, lda, n) {
	    var i, j, k, kp1, t;
	
	    for (k = 1; k <= n; k = k + 1) {
	        a[k][k] = 1 / a[k][k];
	        t = -a[k][k];
	        //~ dscal(k - 1, t, a[1][k], 1);
	        for (i = 1; i < k; i = i + 1) {
	            a[i][k] = t * a[i][k];
	        }
	
	        kp1 = k + 1;
	        if (n < kp1) {
	            break;
	        }
	        for (j = kp1; j <= n; j = j + 1) {
	            t = a[k][j];
	            a[k][j] = 0;
	            //~ daxpy(k, t, a[1][k], 1, a[1][j], 1);
	            for (i = 1; i <= k; i = i + 1) {
	                a[i][j] = a[i][j] + (t * a[i][k]);
	            }
	        }
	    }
	
	}
	
	function dposl(a, lda, n, b) {
	    var i, k, kb, t;
	
	    for (k = 1; k <= n; k = k + 1) {
	        //~ t = ddot(k - 1, a[1][k], 1, b[1], 1);
	        t = 0;
	        for (i = 1; i < k; i = i + 1) {
	            t = t + (a[i][k] * b[i]);
	        }
	
	        b[k] = (b[k] - t) / a[k][k];
	    }
	
	    for (kb = 1; kb <= n; kb = kb + 1) {
	        k = n + 1 - kb;
	        b[k] = b[k] / a[k][k];
	        t = -b[k];
	        //~ daxpy(k - 1, t, a[1][k], 1, b[1], 1);
	        for (i = 1; i < k; i = i + 1) {
	            b[i] = b[i] + (t * a[i][k]);
	        }
	    }
	}
	
	function dpofa(a, lda, n, info) {
	    var i, j, jm1, k, t, s;
	
	    for (j = 1; j <= n; j = j + 1) {
	        info[1] = j;
	        s = 0;
	        jm1 = j - 1;
	        if (jm1 < 1) {
	            s = a[j][j] - s;
	            if (s <= 0) {
	                break;
	            }
	            a[j][j] = Math.sqrt(s);
	        } else {
	            for (k = 1; k <= jm1; k = k + 1) {
	                //~ t = a[k][j] - ddot(k - 1, a[1][k], 1, a[1][j], 1);
	                t = a[k][j];
	                for (i = 1; i < k; i = i + 1) {
	                    t = t - (a[i][j] * a[i][k]);
	                }
	                t = t / a[k][k];
	                a[k][j] = t;
	                s = s + t * t;
	            }
	            s = a[j][j] - s;
	            if (s <= 0) {
	                break;
	            }
	            a[j][j] = Math.sqrt(s);
	        }
	        info[1] = 0;
	    }
	}
	
	function qpgen2(dmat, dvec, fddmat, n, sol, crval, amat,
	    bvec, fdamat, q, meq, iact, nact, iter, work, ierr) {
	
	    var i, j, l, l1, info, it1, iwzv, iwrv, iwrm, iwsv, iwuv, nvl, r, iwnbv,
	        temp, sum, t1, tt, gc, gs, nu,
	        t1inf, t2min,
	        vsmall, tmpa, tmpb,
	        go;
	
	    r = Math.min(n, q);
	    l = 2 * n + (r * (r + 5)) / 2 + 2 * q + 1;
	
	    vsmall = 1.0e-60;
	    do {
	        vsmall = vsmall + vsmall;
	        tmpa = 1 + 0.1 * vsmall;
	        tmpb = 1 + 0.2 * vsmall;
	    } while (tmpa <= 1 || tmpb <= 1);
	
	    for (i = 1; i <= n; i = i + 1) {
	        work[i] = dvec[i];
	    }
	    for (i = n + 1; i <= l; i = i + 1) {
	        work[i] = 0;
	    }
	    for (i = 1; i <= q; i = i + 1) {
	        iact[i] = 0;
	    }
	
	    info = [];
	
	    if (ierr[1] === 0) {
	        dpofa(dmat, fddmat, n, info);
	        if (info[1] !== 0) {
	            ierr[1] = 2;
	            return;
	        }
	        dposl(dmat, fddmat, n, dvec);
	        dpori(dmat, fddmat, n);
	    } else {
	        for (j = 1; j <= n; j = j + 1) {
	            sol[j] = 0;
	            for (i = 1; i <= j; i = i + 1) {
	                sol[j] = sol[j] + dmat[i][j] * dvec[i];
	            }
	        }
	        for (j = 1; j <= n; j = j + 1) {
	            dvec[j] = 0;
	            for (i = j; i <= n; i = i + 1) {
	                dvec[j] = dvec[j] + dmat[j][i] * sol[i];
	            }
	        }
	    }
	
	    crval[1] = 0;
	    for (j = 1; j <= n; j = j + 1) {
	        sol[j] = dvec[j];
	        crval[1] = crval[1] + work[j] * sol[j];
	        work[j] = 0;
	        for (i = j + 1; i <= n; i = i + 1) {
	            dmat[i][j] = 0;
	        }
	    }
	    crval[1] = -crval[1] / 2;
	    ierr[1] = 0;
	
	    iwzv = n;
	    iwrv = iwzv + n;
	    iwuv = iwrv + r;
	    iwrm = iwuv + r + 1;
	    iwsv = iwrm + (r * (r + 1)) / 2;
	    iwnbv = iwsv + q;
	
	    for (i = 1; i <= q; i = i + 1) {
	        sum = 0;
	        for (j = 1; j <= n; j = j + 1) {
	            sum = sum + amat[j][i] * amat[j][i];
	        }
	        work[iwnbv + i] = Math.sqrt(sum);
	    }
	    nact = 0;
	    iter[1] = 0;
	    iter[2] = 0;
	
	    function fn_goto_50() {
	        iter[1] = iter[1] + 1;
	
	        l = iwsv;
	        for (i = 1; i <= q; i = i + 1) {
	            l = l + 1;
	            sum = -bvec[i];
	            for (j = 1; j <= n; j = j + 1) {
	                sum = sum + amat[j][i] * sol[j];
	            }
	            if (Math.abs(sum) < vsmall) {
	                sum = 0;
	            }
	            if (i > meq) {
	                work[l] = sum;
	            } else {
	                work[l] = -Math.abs(sum);
	                if (sum > 0) {
	                    for (j = 1; j <= n; j = j + 1) {
	                        amat[j][i] = -amat[j][i];
	                    }
	                    bvec[i] = -bvec[i];
	                }
	            }
	        }
	
	        for (i = 1; i <= nact; i = i + 1) {
	            work[iwsv + iact[i]] = 0;
	        }
	
	        nvl = 0;
	        temp = 0;
	        for (i = 1; i <= q; i = i + 1) {
	            if (work[iwsv + i] < temp * work[iwnbv + i]) {
	                nvl = i;
	                temp = work[iwsv + i] / work[iwnbv + i];
	            }
	        }
	        if (nvl === 0) {
	            return 999;
	        }
	
	        return 0;
	    }
	
	    function fn_goto_55() {
	        for (i = 1; i <= n; i = i + 1) {
	            sum = 0;
	            for (j = 1; j <= n; j = j + 1) {
	                sum = sum + dmat[j][i] * amat[j][nvl];
	            }
	            work[i] = sum;
	        }
	
	        l1 = iwzv;
	        for (i = 1; i <= n; i = i + 1) {
	            work[l1 + i] = 0;
	        }
	        for (j = nact + 1; j <= n; j = j + 1) {
	            for (i = 1; i <= n; i = i + 1) {
	                work[l1 + i] = work[l1 + i] + dmat[i][j] * work[j];
	            }
	        }
	
	        t1inf = true;
	        for (i = nact; i >= 1; i = i - 1) {
	            sum = work[i];
	            l = iwrm + (i * (i + 3)) / 2;
	            l1 = l - i;
	            for (j = i + 1; j <= nact; j = j + 1) {
	                sum = sum - work[l] * work[iwrv + j];
	                l = l + j;
	            }
	            sum = sum / work[l1];
	            work[iwrv + i] = sum;
	            if (iact[i] < meq) {
	                // continue;
	                break;
	            }
	            if (sum < 0) {
	                // continue;
	                break;
	            }
	            t1inf = false;
	            it1 = i;
	        }
	
	        if (!t1inf) {
	            t1 = work[iwuv + it1] / work[iwrv + it1];
	            for (i = 1; i <= nact; i = i + 1) {
	                if (iact[i] < meq) {
	                    // continue;
	                    break;
	                }
	                if (work[iwrv + i] < 0) {
	                    // continue;
	                    break;
	                }
	                temp = work[iwuv + i] / work[iwrv + i];
	                if (temp < t1) {
	                    t1 = temp;
	                    it1 = i;
	                }
	            }
	        }
	
	        sum = 0;
	        for (i = iwzv + 1; i <= iwzv + n; i = i + 1) {
	            sum = sum + work[i] * work[i];
	        }
	        if (Math.abs(sum) <= vsmall) {
	            if (t1inf) {
	                ierr[1] = 1;
	                // GOTO 999
	                return 999;
	            } else {
	                for (i = 1; i <= nact; i = i + 1) {
	                    work[iwuv + i] = work[iwuv + i] - t1 * work[iwrv + i];
	                }
	                work[iwuv + nact + 1] = work[iwuv + nact + 1] + t1;
	                // GOTO 700
	                return 700;
	            }
	        } else {
	            sum = 0;
	            for (i = 1; i <= n; i = i + 1) {
	                sum = sum + work[iwzv + i] * amat[i][nvl];
	            }
	            tt = -work[iwsv + nvl] / sum;
	            t2min = true;
	            if (!t1inf) {
	                if (t1 < tt) {
	                    tt = t1;
	                    t2min = false;
	                }
	            }
	
	            for (i = 1; i <= n; i = i + 1) {
	                sol[i] = sol[i] + tt * work[iwzv + i];
	                if (Math.abs(sol[i]) < vsmall) {
	                    sol[i] = 0;
	                }
	            }
	
	            crval[1] = crval[1] + tt * sum * (tt / 2 + work[iwuv + nact + 1]);
	            for (i = 1; i <= nact; i = i + 1) {
	                work[iwuv + i] = work[iwuv + i] - tt * work[iwrv + i];
	            }
	            work[iwuv + nact + 1] = work[iwuv + nact + 1] + tt;
	
	            if (t2min) {
	                nact = nact + 1;
	                iact[nact] = nvl;
	
	                l = iwrm + ((nact - 1) * nact) / 2 + 1;
	                for (i = 1; i <= nact - 1; i = i + 1) {
	                    work[l] = work[i];
	                    l = l + 1;
	                }
	
	                if (nact === n) {
	                    work[l] = work[n];
	                } else {
	                    for (i = n; i >= nact + 1; i = i - 1) {
	                        if (work[i] === 0) {
	                            // continue;
	                            break;
	                        }
	                        gc = Math.max(Math.abs(work[i - 1]), Math.abs(work[i]));
	                        gs = Math.min(Math.abs(work[i - 1]), Math.abs(work[i]));
	                        if (work[i - 1] >= 0) {
	                            temp = Math.abs(gc * Math.sqrt(1 + gs * gs / (gc * gc)));
	                        } else {
	                            temp = -Math.abs(gc * Math.sqrt(1 + gs * gs / (gc * gc)));
	                        }
	                        gc = work[i - 1] / temp;
	                        gs = work[i] / temp;
	
	                        if (gc === 1) {
	                            // continue;
	                            break;
	                        }
	                        if (gc === 0) {
	                            work[i - 1] = gs * temp;
	                            for (j = 1; j <= n; j = j + 1) {
	                                temp = dmat[j][i - 1];
	                                dmat[j][i - 1] = dmat[j][i];
	                                dmat[j][i] = temp;
	                            }
	                        } else {
	                            work[i - 1] = temp;
	                            nu = gs / (1 + gc);
	                            for (j = 1; j <= n; j = j + 1) {
	                                temp = gc * dmat[j][i - 1] + gs * dmat[j][i];
	                                dmat[j][i] = nu * (dmat[j][i - 1] + temp) - dmat[j][i];
	                                dmat[j][i - 1] = temp;
	
	                            }
	                        }
	                    }
	                    work[l] = work[nact];
	                }
	            } else {
	                sum = -bvec[nvl];
	                for (j = 1; j <= n; j = j + 1) {
	                    sum = sum + sol[j] * amat[j][nvl];
	                }
	                if (nvl > meq) {
	                    work[iwsv + nvl] = sum;
	                } else {
	                    work[iwsv + nvl] = -Math.abs(sum);
	                    if (sum > 0) {
	                        for (j = 1; j <= n; j = j + 1) {
	                            amat[j][nvl] = -amat[j][nvl];
	                        }
	                        bvec[nvl] = -bvec[nvl];
	                    }
	                }
	                // GOTO 700
	                return 700;
	            }
	        }
	
	        return 0;
	    }
	
	    function fn_goto_797() {
	        l = iwrm + (it1 * (it1 + 1)) / 2 + 1;
	        l1 = l + it1;
	        if (work[l1] === 0) {
	            // GOTO 798
	            return 798;
	        }
	        gc = Math.max(Math.abs(work[l1 - 1]), Math.abs(work[l1]));
	        gs = Math.min(Math.abs(work[l1 - 1]), Math.abs(work[l1]));
	        if (work[l1 - 1] >= 0) {
	            temp = Math.abs(gc * Math.sqrt(1 + gs * gs / (gc * gc)));
	        } else {
	            temp = -Math.abs(gc * Math.sqrt(1 + gs * gs / (gc * gc)));
	        }
	        gc = work[l1 - 1] / temp;
	        gs = work[l1] / temp;
	
	        if (gc === 1) {
	            // GOTO 798
	            return 798;
	        }
	        if (gc === 0) {
	            for (i = it1 + 1; i <= nact; i = i + 1) {
	                temp = work[l1 - 1];
	                work[l1 - 1] = work[l1];
	                work[l1] = temp;
	                l1 = l1 + i;
	            }
	            for (i = 1; i <= n; i = i + 1) {
	                temp = dmat[i][it1];
	                dmat[i][it1] = dmat[i][it1 + 1];
	                dmat[i][it1 + 1] = temp;
	            }
	        } else {
	            nu = gs / (1 + gc);
	            for (i = it1 + 1; i <= nact; i = i + 1) {
	                temp = gc * work[l1 - 1] + gs * work[l1];
	                work[l1] = nu * (work[l1 - 1] + temp) - work[l1];
	                work[l1 - 1] = temp;
	                l1 = l1 + i;
	            }
	            for (i = 1; i <= n; i = i + 1) {
	                temp = gc * dmat[i][it1] + gs * dmat[i][it1 + 1];
	                dmat[i][it1 + 1] = nu * (dmat[i][it1] + temp) - dmat[i][it1 + 1];
	                dmat[i][it1] = temp;
	            }
	        }
	
	        return 0;
	    }
	
	    function fn_goto_798() {
	        l1 = l - it1;
	        for (i = 1; i <= it1; i = i + 1) {
	            work[l1] = work[l];
	            l = l + 1;
	            l1 = l1 + 1;
	        }
	
	        work[iwuv + it1] = work[iwuv + it1 + 1];
	        iact[it1] = iact[it1 + 1];
	        it1 = it1 + 1;
	        if (it1 < nact) {
	            // GOTO 797
	            return 797;
	        }
	
	        return 0;
	    }
	
	    function fn_goto_799() {
	        work[iwuv + nact] = work[iwuv + nact + 1];
	        work[iwuv + nact + 1] = 0;
	        iact[nact] = 0;
	        nact = nact - 1;
	        iter[2] = iter[2] + 1;
	
	        return 0;
	    }
	
	    go = 0;
	    while (true) {
	        go = fn_goto_50();
	        if (go === 999) {
	            return;
	        }
	        while (true) {
	            go = fn_goto_55();
	            if (go === 0) {
	                break;
	            }
	            if (go === 999) {
	                return;
	            }
	            if (go === 700) {
	                if (it1 === nact) {
	                    fn_goto_799();
	                } else {
	                    while (true) {
	                        fn_goto_797();
	                        go = fn_goto_798();
	                        if (go !== 797) {
	                            break;
	                        }
	                    }
	                    fn_goto_799();
	                }
	            }
	        }
	    }
	
	}
	
	function solveQP(Dmat, dvec, Amat, bvec, meq, factorized) {
	    Dmat = base0to1(Dmat);
	    dvec = base0to1(dvec);
	    Amat = base0to1(Amat);
	    var i, n, q,
	        nact, r,
	        crval = [], iact = [], sol = [], work = [], iter = [],
	        message;
	
	    meq = meq || 0;
	    factorized = factorized ? base0to1(factorized) : [undefined, 0];
	    bvec = bvec ? base0to1(bvec) : [];
	
	    // In Fortran the array index starts from 1
	    n = Dmat.length - 1;
	    q = Amat[1].length - 1;
	
	    if (!bvec) {
	        for (i = 1; i <= q; i = i + 1) {
	            bvec[i] = 0;
	        }
	    }
	    for (i = 1; i <= q; i = i + 1) {
	        iact[i] = 0;
	    }
	    nact = 0;
	    r = Math.min(n, q);
	    for (i = 1; i <= n; i = i + 1) {
	        sol[i] = 0;
	    }
	    crval[1] = 0;
	    for (i = 1; i <= (2 * n + (r * (r + 5)) / 2 + 2 * q + 1); i = i + 1) {
	        work[i] = 0;
	    }
	    for (i = 1; i <= 2; i = i + 1) {
	        iter[i] = 0;
	    }
	
	    qpgen2(Dmat, dvec, n, n, sol, crval, Amat,
	        bvec, n, q, meq, iact, nact, iter, work, factorized);
	
	    message = "";
	    if (factorized[1] === 1) {
	        message = "constraints are inconsistent, no solution!";
	    }
	    if (factorized[1] === 2) {
	        message = "matrix D in quadratic function is not positive definite!";
	    }
	
	    return {
	        solution: base1to0(sol),
	        value: base1to0(crval),
	        unconstrained_solution: base1to0(dvec),
	        iterations: base1to0(iter),
	        iact: base1to0(iact),
	        message: message
	    };
	}
	exports.solveQP = solveQP;
	}(numeric));
	/*
	Shanti Rao sent me this routine by private email. I had to modify it
	slightly to work on Arrays instead of using a Matrix object.
	It is apparently translated from http://stitchpanorama.sourceforge.net/Python/svd.py
	*/
	
	numeric.svd= function svd(A) {
	    var temp;
	//Compute the thin SVD from G. H. Golub and C. Reinsch, Numer. Math. 14, 403-420 (1970)
		var prec= numeric.epsilon; //Math.pow(2,-52) // assumes double prec
		var tolerance= 1.e-64/prec;
		var itmax= 50;
		var c=0;
		var i=0;
		var j=0;
		var k=0;
		var l=0;
		
		var u= numeric.clone(A);
		var m= u.length;
		
		var n= u[0].length;
		
		if (m < n) throw "Need more rows than columns"
		
		var e = new Array(n);
		var q = new Array(n);
		for (i=0; i<n; i++) e[i] = q[i] = 0.0;
		var v = numeric.rep([n,n],0);
	//	v.zero();
		
	 	function pythag(a,b)
	 	{
			a = Math.abs(a)
			b = Math.abs(b)
			if (a > b)
				return a*Math.sqrt(1.0+(b*b/a/a))
			else if (b == 0.0) 
				return a
			return b*Math.sqrt(1.0+(a*a/b/b))
		}
	
		//Householder's reduction to bidiagonal form
	
		var f= 0.0;
		var g= 0.0;
		var h= 0.0;
		var x= 0.0;
		var y= 0.0;
		var z= 0.0;
		var s= 0.0;
		
		for (i=0; i < n; i++)
		{	
			e[i]= g;
			s= 0.0;
			l= i+1;
			for (j=i; j < m; j++) 
				s += (u[j][i]*u[j][i]);
			if (s <= tolerance)
				g= 0.0;
			else
			{	
				f= u[i][i];
				g= Math.sqrt(s);
				if (f >= 0.0) g= -g;
				h= f*g-s
				u[i][i]=f-g;
				for (j=l; j < n; j++)
				{
					s= 0.0
					for (k=i; k < m; k++) 
						s += u[k][i]*u[k][j]
					f= s/h
					for (k=i; k < m; k++) 
						u[k][j]+=f*u[k][i]
				}
			}
			q[i]= g
			s= 0.0
			for (j=l; j < n; j++) 
				s= s + u[i][j]*u[i][j]
			if (s <= tolerance)
				g= 0.0
			else
			{	
				f= u[i][i+1]
				g= Math.sqrt(s)
				if (f >= 0.0) g= -g
				h= f*g - s
				u[i][i+1] = f-g;
				for (j=l; j < n; j++) e[j]= u[i][j]/h
				for (j=l; j < m; j++)
				{	
					s=0.0
					for (k=l; k < n; k++) 
						s += (u[j][k]*u[i][k])
					for (k=l; k < n; k++) 
						u[j][k]+=s*e[k]
				}	
			}
			y= Math.abs(q[i])+Math.abs(e[i])
			if (y>x) 
				x=y
		}
		
		// accumulation of right hand gtransformations
		for (i=n-1; i != -1; i+= -1)
		{	
			if (g != 0.0)
			{
			 	h= g*u[i][i+1]
				for (j=l; j < n; j++) 
					v[j][i]=u[i][j]/h
				for (j=l; j < n; j++)
				{	
					s=0.0
					for (k=l; k < n; k++) 
						s += u[i][k]*v[k][j]
					for (k=l; k < n; k++) 
						v[k][j]+=(s*v[k][i])
				}	
			}
			for (j=l; j < n; j++)
			{
				v[i][j] = 0;
				v[j][i] = 0;
			}
			v[i][i] = 1;
			g= e[i]
			l= i
		}
		
		// accumulation of left hand transformations
		for (i=n-1; i != -1; i+= -1)
		{	
			l= i+1
			g= q[i]
			for (j=l; j < n; j++) 
				u[i][j] = 0;
			if (g != 0.0)
			{
				h= u[i][i]*g
				for (j=l; j < n; j++)
				{
					s=0.0
					for (k=l; k < m; k++) s += u[k][i]*u[k][j];
					f= s/h
					for (k=i; k < m; k++) u[k][j]+=f*u[k][i];
				}
				for (j=i; j < m; j++) u[j][i] = u[j][i]/g;
			}
			else
				for (j=i; j < m; j++) u[j][i] = 0;
			u[i][i] += 1;
		}
		
		// diagonalization of the bidiagonal form
		prec= prec*x
		for (k=n-1; k != -1; k+= -1)
		{
			for (var iteration=0; iteration < itmax; iteration++)
			{	// test f splitting
				var test_convergence = false
				for (l=k; l != -1; l+= -1)
				{	
					if (Math.abs(e[l]) <= prec)
					{	test_convergence= true
						break 
					}
					if (Math.abs(q[l-1]) <= prec)
						break 
				}
				if (!test_convergence)
				{	// cancellation of e[l] if l>0
					c= 0.0
					s= 1.0
					var l1= l-1
					for (i =l; i<k+1; i++)
					{	
						f= s*e[i]
						e[i]= c*e[i]
						if (Math.abs(f) <= prec)
							break
						g= q[i]
						h= pythag(f,g)
						q[i]= h
						c= g/h
						s= -f/h
						for (j=0; j < m; j++)
						{	
							y= u[j][l1]
							z= u[j][i]
							u[j][l1] =  y*c+(z*s)
							u[j][i] = -y*s+(z*c)
						} 
					}	
				}
				// test f convergence
				z= q[k]
				if (l== k)
				{	//convergence
					if (z<0.0)
					{	//q[k] is made non-negative
						q[k]= -z
						for (j=0; j < n; j++)
							v[j][k] = -v[j][k]
					}
					break  //break out of iteration loop and move on to next k value
				}
				if (iteration >= itmax-1)
					throw 'Error: no convergence.'
				// shift from bottom 2x2 minor
				x= q[l]
				y= q[k-1]
				g= e[k-1]
				h= e[k]
				f= ((y-z)*(y+z)+(g-h)*(g+h))/(2.0*h*y)
				g= pythag(f,1.0)
				if (f < 0.0)
					f= ((x-z)*(x+z)+h*(y/(f-g)-h))/x
				else
					f= ((x-z)*(x+z)+h*(y/(f+g)-h))/x
				// next QR transformation
				c= 1.0
				s= 1.0
				for (i=l+1; i< k+1; i++)
				{	
					g= e[i]
					y= q[i]
					h= s*g
					g= c*g
					z= pythag(f,h)
					e[i-1]= z
					c= f/z
					s= h/z
					f= x*c+g*s
					g= -x*s+g*c
					h= y*s
					y= y*c
					for (j=0; j < n; j++)
					{	
						x= v[j][i-1]
						z= v[j][i]
						v[j][i-1] = x*c+z*s
						v[j][i] = -x*s+z*c
					}
					z= pythag(f,h)
					q[i-1]= z
					c= f/z
					s= h/z
					f= c*g+s*y
					x= -s*g+c*y
					for (j=0; j < m; j++)
					{
						y= u[j][i-1]
						z= u[j][i]
						u[j][i-1] = y*c+z*s
						u[j][i] = -y*s+z*c
					}
				}
				e[l]= 0.0
				e[k]= f
				q[k]= x
			} 
		}
			
		//vt= transpose(v)
		//return (u,q,vt)
		for (i=0;i<q.length; i++) 
		  if (q[i] < prec) q[i] = 0
		  
		//sort eigenvalues	
		for (i=0; i< n; i++)
		{	 
		//writeln(q)
		 for (j=i-1; j >= 0; j--)
		 {
		  if (q[j] < q[i])
		  {
		//  writeln(i,'-',j)
		   c = q[j]
		   q[j] = q[i]
		   q[i] = c
		   for(k=0;k<u.length;k++) { temp = u[k][i]; u[k][i] = u[k][j]; u[k][j] = temp; }
		   for(k=0;k<v.length;k++) { temp = v[k][i]; v[k][i] = v[k][j]; v[k][j] = temp; }
	//	   u.swapCols(i,j)
	//	   v.swapCols(i,j)
		   i = j	   
		  }
		 }	
		}
		
		return {U:u,S:q,V:v}
	};
	
	
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 341 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;/*
	 (c) 2013, Vladimir Agafonkin
	 Simplify.js, a high-performance JS polyline simplification library
	 mourner.github.io/simplify-js
	*/
	
	(function () { 'use strict';
	
	// to suit your point format, run search/replace for '.x' and '.y';
	// for 3D version, see 3d branch (configurability would draw significant performance overhead)
	
	// square distance between 2 points
	function getSqDist(p1, p2) {
	
	    var dx = p1.x - p2.x,
	        dy = p1.y - p2.y;
	
	    return dx * dx + dy * dy;
	}
	
	// square distance from a point to a segment
	function getSqSegDist(p, p1, p2) {
	
	    var x = p1.x,
	        y = p1.y,
	        dx = p2.x - x,
	        dy = p2.y - y;
	
	    if (dx !== 0 || dy !== 0) {
	
	        var t = ((p.x - x) * dx + (p.y - y) * dy) / (dx * dx + dy * dy);
	
	        if (t > 1) {
	            x = p2.x;
	            y = p2.y;
	
	        } else if (t > 0) {
	            x += dx * t;
	            y += dy * t;
	        }
	    }
	
	    dx = p.x - x;
	    dy = p.y - y;
	
	    return dx * dx + dy * dy;
	}
	// rest of the code doesn't care about point format
	
	// basic distance-based simplification
	function simplifyRadialDist(points, sqTolerance) {
	
	    var prevPoint = points[0],
	        newPoints = [prevPoint],
	        point;
	
	    for (var i = 1, len = points.length; i < len; i++) {
	        point = points[i];
	
	        if (getSqDist(point, prevPoint) > sqTolerance) {
	            newPoints.push(point);
	            prevPoint = point;
	        }
	    }
	
	    if (prevPoint !== point) newPoints.push(point);
	
	    return newPoints;
	}
	
	// simplification using optimized Douglas-Peucker algorithm with recursion elimination
	function simplifyDouglasPeucker(points, sqTolerance) {
	
	    var len = points.length,
	        MarkerArray = typeof Uint8Array !== 'undefined' ? Uint8Array : Array,
	        markers = new MarkerArray(len),
	        first = 0,
	        last = len - 1,
	        stack = [],
	        newPoints = [],
	        i, maxSqDist, sqDist, index;
	
	    markers[first] = markers[last] = 1;
	
	    while (last) {
	
	        maxSqDist = 0;
	
	        for (i = first + 1; i < last; i++) {
	            sqDist = getSqSegDist(points[i], points[first], points[last]);
	
	            if (sqDist > maxSqDist) {
	                index = i;
	                maxSqDist = sqDist;
	            }
	        }
	
	        if (maxSqDist > sqTolerance) {
	            markers[index] = 1;
	            stack.push(first, index, index, last);
	        }
	
	        last = stack.pop();
	        first = stack.pop();
	    }
	
	    for (i = 0; i < len; i++) {
	        if (markers[i]) newPoints.push(points[i]);
	    }
	
	    return newPoints;
	}
	
	// both algorithms combined for awesome performance
	function simplify(points, tolerance, highestQuality) {
	
	    var sqTolerance = tolerance !== undefined ? tolerance * tolerance : 1;
	
	    points = highestQuality ? points : simplifyRadialDist(points, sqTolerance);
	    points = simplifyDouglasPeucker(points, sqTolerance);
	
	    return points;
	}
	
	// export as AMD module / Node module / browser or worker variable
	if (true) !(__WEBPACK_AMD_DEFINE_RESULT__ = function() { return simplify; }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	else if (typeof module !== 'undefined') module.exports = simplify;
	else if (typeof self !== 'undefined') self.simplify = simplify;
	else window.simplify = simplify;
	
	})();


/***/ },
/* 342 */
/***/ function(module, exports, __webpack_require__) {

	"use strict"
	
	module.exports = createKDTree
	module.exports.deserialize = deserializeKDTree
	
	var ndarray = __webpack_require__(97)
	var ndselect = __webpack_require__(357)
	var pack = __webpack_require__(350)
	var ops = __webpack_require__(143)
	var ndscratch = __webpack_require__(356)
	var pool = __webpack_require__(98)
	var inorderTree = __webpack_require__(344)
	var bits = __webpack_require__(142)
	var KDTHeap = __webpack_require__(343)
	
	function KDTree(points, ids, n, d) {
	  this.points = points
	  this.ids = ids
	  this.dimension = d
	  this.length = n
	}
	
	var proto = KDTree.prototype
	
	proto.serialize = function() {
	  if(this.length > 0) {
	    return {
	      p: Array.prototype.slice.call(this.points.data, 0, this.length*this.dimension),
	      i: Array.prototype.slice.call(this.ids, 0, this.length)
	    }
	  } else {
	    return { d: this.dimension }
	  }
	}
	
	//Range query
	proto.range = function kdtRangeQuery(lo, hi, visit) {
	  var n = this.length
	  if(n < 1) {
	    return
	  }
	
	  //Check degenerate case
	  var d = this.dimension
	  for(var i=0; i<d; ++i) {
	    if(hi[i] < lo[i]) {
	      return
	    }
	  }
	
	  var points = this.points
	  var ids = this.ids
	
	  //Walk tree in level order, skipping subtrees which do not intersect range
	  var visitRange = ndscratch.malloc([n, 2, d])
	  var visitIndex = pool.mallocInt32(n)
	  var rangeData = visitRange.data
	  var pointData = points.data
	  var visitCount = 1
	  var visitTop = 0
	  var retval
	
	  visitIndex[0] = 0
	  pack(lo, visitRange.pick(0,0))
	  pack(hi, visitRange.pick(0,1))
	  
	  while(visitTop < visitCount) {
	    var idx = visitIndex[visitTop]
	    var k = bits.log2(idx+1)%d
	    var loidx = visitRange.index(visitTop, 0, 0)
	    var hiidx = visitRange.index(visitTop, 1, 0)
	    var pidx = points.index(idx, 0)
	
	    var visitPoint = true
	    for(var i=0; i<d; ++i) {
	      var pc = pointData[pidx+i]
	      if((pc < rangeData[loidx + i]) || 
	         (rangeData[hiidx + i] < pc)) {
	        visitPoint = false
	        break
	      }
	    }
	    if(visitPoint) {
	      retval = visit(ids[idx])
	      if(retval !== undefined) {
	        break
	      }
	    }
	
	    //Visit children
	    var pk = pointData[pidx+k]
	    var hk = rangeData[hiidx+k]
	    var lk = rangeData[loidx+k]
	    if(lk <= pk) {
	      var left = 2 * idx + 1
	      if(left < n) {
	        visitIndex[visitCount] = left
	        var y = visitRange.index(visitCount, 0, 0)
	        for(var i=0; i<d; ++i) {
	          rangeData[y+i] = rangeData[loidx+i]
	        }
	        var z = visitRange.index(visitCount, 1, 0)
	        for(var i=0; i<d; ++i) {
	          rangeData[z+i] = rangeData[hiidx+i]
	        }
	        rangeData[z+k] = Math.min(hk, pk)
	        visitCount += 1
	      }
	    }
	    if(pk <= hk) {
	      var right = 2 * (idx + 1)
	      if(right < n) {
	        visitIndex[visitCount] = right
	        var y = visitRange.index(visitCount, 0, 0)
	        for(var i=0; i<d; ++i) {
	          rangeData[y+i] = rangeData[loidx+i]
	        }
	        var z = visitRange.index(visitCount, 1, 0)
	        for(var i=0; i<d; ++i) {
	          rangeData[z+i] = rangeData[hiidx+i]
	        }
	        rangeData[y+k] = Math.max(lk, pk)
	        visitCount += 1
	      }
	    }
	
	    //Increment pointer
	    visitTop += 1
	  }
	  ndscratch.free(visitRange)
	  pool.free(visitIndex)
	  return retval
	}
	
	proto.rnn = function(point, radius, visit) {
	  if(radius < 0) {
	    return
	  }
	  var n = this.length
	  if(n < 1) {
	    return
	  }
	  var d = this.dimension
	  var points = this.points
	  var ids = this.ids
	
	  //Walk tree in level order, skipping subtrees which do not intersect sphere
	  var visitDistance = ndscratch.malloc([n, d])
	  var visitIndex = pool.mallocInt32(n)
	  var distanceData = visitDistance.data
	  var pointData = points.data
	  var visitCount = 1
	  var visitTop = 0
	  var r2 = radius*radius
	  var retval
	
	  //Initialize top of queue
	  visitIndex[0] = 0
	  for(var i=0; i<d; ++i) {
	    visitDistance.set(0, i, 0)
	  }
	
	  //Walk over queue
	  while(visitTop < visitCount) {
	    var idx = visitIndex[visitTop]
	    var pidx = points.index(idx, 0)
	
	    //Check if point in sphere
	    var d2 = 0.0
	    for(var i=0; i<d; ++i) {
	      d2 += Math.pow(point[i] - pointData[pidx+i], 2)
	    }
	    if(d2 <= r2) {
	      retval = visit(ids[idx])
	      if(retval !== undefined) {
	        break
	      }
	    }
	
	    //Visit children
	    var k = bits.log2(idx+1)%d
	    var ds = 0.0
	    var didx = visitDistance.index(visitTop, 0)
	    for(var i=0; i<d; ++i) {
	      if(i !== k) {
	        ds += distanceData[didx + i]
	      }
	    }
	
	    //Handle split axis
	    var qk = point[k]
	    var pk = pointData[pidx+k]
	    var dk = distanceData[didx+k]
	    var lk = dk
	    var hk = dk
	    if(qk < pk) {
	      hk = Math.max(dk, Math.pow(pk - qk, 2))
	    } else {
	      lk = Math.max(dk, Math.pow(pk - qk, 2))
	    }
	
	    var d2l = lk + ds
	    var d2h = hk + ds
	
	    if(d2l <= r2) {
	      var left = 2 * idx + 1
	      if(left < n) {
	        visitIndex[visitCount] = left
	        var y = visitDistance.index(visitCount, 0)
	        for(var i=0; i<d; ++i) {
	          distanceData[y+i] = distanceData[didx+i]
	        }
	        distanceData[y+k] = lk
	        visitCount += 1
	      }
	    }
	    if(d2h <= r2) {
	      var right = 2 * (idx + 1)
	      if(right < n) {
	        visitIndex[visitCount] = right
	        var y = visitDistance.index(visitCount, 0)
	        for(var i=0; i<d; ++i) {
	          distanceData[y+i] = distanceData[didx+i]
	        }
	        distanceData[y+k] = hk
	        visitCount += 1
	      }
	    }
	
	    //Increment pointer
	    visitTop += 1
	  }
	
	  ndscratch.free(visitDistance)
	  pool.free(visitIndex)
	  return retval
	}
	
	proto.nn = function(point, maxDistance) {
	  var n = this.length
	  if(n < 1) {
	    return -1
	  }
	  if(typeof maxDistance === "number") {
	    if(maxDistance < 0) {
	      return -1
	    } 
	  } else {
	    maxDistance = Infinity
	  }
	  var d = this.dimension
	  var points = this.points
	  var pointData = points.data
	  var dataVector = pool.mallocFloat64(d)
	
	  var toVisit = new KDTHeap(n, d+1)
	  var index = toVisit.index
	  var data = toVisit.data
	  index[0] = 0
	  for(var i=0; i<=d; ++i) {
	    data[i] = 0
	  }
	  toVisit.count += 1
	
	  var nearest = -1
	  var nearestD = maxDistance
	
	  while(toVisit.count > 0) {
	    if(data[0] >= nearestD) {
	      break
	    }
	
	    var idx = index[0]
	    var pidx = points.index(idx, 0)
	    var d2 = 0.0
	    for(var i=0; i<d; ++i) {
	      d2 += Math.pow(point[i]-pointData[pidx+i], 2)
	    }
	    if(d2 < nearestD) {
	      nearestD = d2
	      nearest = idx
	    }
	
	    //Compute distance bounds for children
	    var k = bits.log2(idx+1)%d
	    var ds = 0
	    for(var i=0; i<d; ++i) {
	      var dd = data[i+1]
	      if(i !== k) {
	        ds += dd
	      }
	      dataVector[i] = dd
	    }
	    var qk = point[k]
	    var pk = pointData[pidx+k]
	    var dk = dataVector[k]
	    var lk = dk
	    var hk = dk
	    if(qk < pk) {
	      hk = Math.max(dk, Math.pow(pk - qk, 2))
	    } else {
	      lk = Math.max(dk, Math.pow(pk - qk, 2))
	    }
	    var d2l = lk + ds
	    var d2h = hk + ds
	
	    toVisit.pop()
	    
	    if(d2l < nearestD) {
	      var left = 2 * idx + 1
	      if(left < n) {
	        var vcount = toVisit.count
	        index[vcount] = left
	        var vptr = vcount * (d+1)
	        data[vptr] = d2l
	        for(var i=1; i<=d; ++i) {
	          data[vptr+i] = dataVector[i-1]
	        }
	        data[vptr+k+1] = lk
	        toVisit.push()
	      }
	    }
	    if(d2h < nearestD) {
	      var right = 2 * (idx + 1)
	      if(right < n) {
	        var vcount = toVisit.count
	        index[vcount] = right
	        var vptr = vcount * (d+1)
	        data[vptr] = d2h
	        for(var i=1; i<=d; ++i) {
	          data[vptr+i] = dataVector[i-1]
	        }
	        data[vptr+k+1] = hk
	        toVisit.push()
	      }
	    }
	  }
	
	  pool.freeFloat64(dataVector)
	  toVisit.dispose()
	  
	  if(nearest < 0) {
	    return -1
	  }
	  return this.ids[nearest]
	}
	
	proto.knn = function(point, maxPoints, maxDistance) {
	  //Check degenerate cases
	  if(typeof maxDistance === "number") {
	    if(maxDistance < 0) {
	      return []
	    }
	  } else {
	    maxDistance = Infinity
	  }
	  var n = this.length
	  if(n < 1) {
	    return []
	  }
	  if(typeof maxPoints === "number") {
	    if(maxPoints <= 0) {
	      return []
	    }
	    maxPoints = Math.min(maxPoints, n)|0
	  } else {
	    maxPoints = n
	  }
	  var ids = this.ids
	
	  var d = this.dimension
	  var points = this.points
	  var pointData = points.data
	  var dataVector = pool.mallocFloat64(d)
	  
	  //List of closest points
	  var closestPoints = new KDTHeap(maxPoints, 1)
	  var cl_index = closestPoints.index
	  var cl_data = closestPoints.data
	
	  var toVisit = new KDTHeap(n, d+1)
	  var index = toVisit.index
	  var data = toVisit.data
	  index[0] = 0
	  for(var i=0; i<=d; ++i) {
	    data[i] = 0
	  }
	  toVisit.count += 1
	
	  var nearest = -1
	  var nearestD = maxDistance
	
	  while(toVisit.count > 0) {
	    if(data[0] >= nearestD) {
	      break
	    }
	
	    var idx = index[0]
	    var pidx = points.index(idx, 0)
	    var d2 = 0.0
	    for(var i=0; i<d; ++i) {
	      d2 += Math.pow(point[i]-pointData[pidx+i], 2)
	    }
	    if(d2 < nearestD) {
	      if(closestPoints.count >= maxPoints) {
	        closestPoints.pop()
	      }
	      var pcount = closestPoints.count
	      cl_index[pcount] = idx
	      cl_data[pcount] = -d2
	      closestPoints.push()
	      if(closestPoints.count >= maxPoints) {
	        nearestD = -cl_data[0]
	      }
	    }
	
	    //Compute distance bounds for children
	    var k = bits.log2(idx+1)%d
	    var ds = 0
	    for(var i=0; i<d; ++i) {
	      var dd = data[i+1]
	      if(i !== k) {
	        ds += dd
	      }
	      dataVector[i] = dd
	    }
	    var qk = point[k]
	    var pk = pointData[pidx+k]
	    var dk = dataVector[k]
	    var lk = dk
	    var hk = dk
	    if(qk < pk) {
	      hk = Math.max(dk, Math.pow(pk - qk, 2))
	    } else {
	      lk = Math.max(dk, Math.pow(pk - qk, 2))
	    }
	    var d2l = lk + ds
	    var d2h = hk + ds
	
	    toVisit.pop()
	    if(d2l < nearestD) {
	      var left = 2 * idx + 1
	      if(left < n) {
	        var vcount = toVisit.count
	        index[vcount] = left
	        var vptr = vcount * (d+1)
	        data[vptr] = d2l
	        for(var i=1; i<=d; ++i) {
	          data[vptr+i] = dataVector[i-1]
	        }
	        data[vptr+k+1] = lk
	        toVisit.push()
	      }
	    }
	    if(d2h < nearestD) {
	      var right = 2 * (idx + 1)
	      if(right < n) {
	        var vcount = toVisit.count
	        index[vcount] = right
	        var vptr = vcount * (d+1)
	        data[vptr] = d2h
	        for(var i=1; i<=d; ++i) {
	          data[vptr+i] = dataVector[i-1]
	        }
	        data[vptr+k+1] = hk
	        toVisit.push()
	      }
	    }
	  }
	
	  pool.freeFloat64(dataVector)
	  toVisit.dispose()
	
	  //Sort result
	  var result = new Array(closestPoints.count)
	  var ids = this.ids
	  for(var i=closestPoints.count-1; i>=0; --i) {
	    result[i] = ids[cl_index[0]]
	    closestPoints.pop()
	  }
	  closestPoints.dispose()
	
	  return result
	}
	
	proto.dispose = function kdtDispose() {
	  pool.free(this.points.data)
	  pool.freeInt32(this.ids)
	  this.points = null
	  this.ids = null
	  this.length = 0
	}
	
	function createKDTree(points) {
	  var n, d, indexed
	  if(Array.isArray(points)) {
	    n = points.length
	    if(n === 0) {
	      return new KDTree(null, null, 0, 0)
	    }
	    d = points[0].length
	    indexed = ndarray(pool.mallocDouble(n*(d+1)), [n, d+1])
	    pack(points, indexed.hi(n, d))
	  } else {
	    n = points.shape[0]
	    d = points.shape[1]
	
	    //Round up data type size
	    var type = points.dtype
	    if(type === "int8" ||
	       type === "int16" ||
	       type === "int32" ) {
	      type = "int32"
	    } else if(type === "uint8" ||
	      type === "uint8_clamped" ||
	      type === "buffer" ||
	      type === "uint16" ||
	      type === "uint32") {
	      type = "uint32"
	    } else if(type === "float32") {
	      type = "float32"
	    } else {
	      type = "float64"
	    }
	    indexed = ndarray(pool.malloc(n*(d+1)), [n, d+1])
	    ops.assign(indexed.hi(n,d), points)
	  }
	  for(var i=0; i<n; ++i) {
	    indexed.set(i, d, i)
	  }
	
	  var pointArray = ndscratch.malloc([n, d], points.dtype)
	  var indexArray = pool.mallocInt32(n)
	  var pointer = 0
	  var pointData = pointArray.data
	  var arrayData = indexed.data
	  var l2_n = bits.log2(bits.nextPow2(n))
	
	  var sel_cmp = ndselect.compile(indexed.order, true, indexed.dtype)
	
	  //Walk tree in level order
	  var toVisit = [indexed]
	  while(pointer < n) {
	    var head = toVisit.shift()
	    var array = head
	    var nn = array.shape[0]|0
	    
	    //Find median
	    if(nn > 1) {
	      var k = bits.log2(pointer+1)%d
	      var median
	      var n_2 = inorderTree.root(nn)
	      median = sel_cmp(array, n_2, function(a,b) {
	        return a.get(k) - b.get(k)
	      })
	
	      //Copy into new array
	      var pptr = pointArray.index(pointer, 0)
	      var mptr = median.offset
	      for(var i=0; i<d; ++i) {
	        pointData[pptr++] = arrayData[mptr++]
	      }
	      indexArray[pointer] = arrayData[mptr]
	      pointer += 1
	
	      //Queue new items
	      toVisit.push(array.hi(n_2))
	      if(nn > 2) {
	        toVisit.push(array.lo(n_2+1))
	      }
	    } else {
	      //Copy into new array
	      var mptr = array.offset
	      var pptr = pointArray.index(pointer, 0)
	      for(var i=0; i<d; ++i) {
	        pointData[pptr+i] = arrayData[mptr++]
	      }
	      indexArray[pointer] = arrayData[mptr]
	      pointer += 1
	    }
	  }
	
	  //Release indexed
	  pool.free(indexed.data)
	
	  return new KDTree(pointArray, indexArray, n, d)
	}
	
	function deserializeKDTree(data) {
	  var points = data.p
	  var ids = data.i
	  if(points) {
	    var nd = points.length
	    var pointArray = pool.mallocFloat64(nd)
	    for(var i=0; i<nd; ++i) {
	      pointArray[i] = points[i]
	    }
	    var n = ids.length
	    var idArray = pool.mallocInt32(n)
	    for(var i=0; i<n; ++i) {
	      idArray[i] = ids[i]
	    }
	    var d = (nd/n)|0
	    return new KDTree(
	      ndarray(pointArray, [n,d]),
	      idArray,
	      n,
	      d)
	  } else {
	    return new KDTree(null, null, 0, data.d)
	  }
	}

/***/ },
/* 343 */
/***/ function(module, exports, __webpack_require__) {

	"use strict"
	
	module.exports = KDTHeap
	
	var pool = __webpack_require__(98)
	
	function heapParent(i) {
	  if(i & 1) {
	    return (i - 1) >> 1
	  }
	  return (i >> 1) - 1
	}
	
	function KDTHeap(n, d) {
	  this.count = 0
	  this.dataSize = d
	  this.index = pool.mallocInt32(n)
	  this.data = pool.mallocFloat64(n*d)
	}
	
	var proto = KDTHeap.prototype
	
	proto.heapSwap = function(_i,_j) {
	  var data = this.data
	  var index = this.index
	  var d = this.dataSize
	  var tmp = index[_i]
	  index[_i] = index[_j]
	  index[_j] = tmp
	  var aptr = d*_i
	  var bptr = d*_j
	  for(var _k=0; _k<d; ++_k) {
	    var t2 = data[aptr]
	    data[aptr] = data[bptr]
	    data[bptr] = t2
	    aptr += 1
	    bptr += 1
	  }
	}
	
	proto.heapUp = function(i) {
	  var d = this.dataSize
	  var index = this.index
	  var data = this.data
	  var w = data[d*i]
	  while(i>0) {
	    var parent = heapParent(i)
	    if(parent >= 0) {
	      var pw = data[d*parent]
	      if(w < pw) {
	        this.heapSwap(i, parent)
	        i = parent
	        continue
	      }
	    }
	    break
	  }
	}
	
	proto.heapDown = function(i) {
	  var d = this.dataSize
	  var index = this.index
	  var data = this.data
	  var count = this.count
	  var w = data[d*i]
	  while(true) {
	    var tw = w
	    var left  = 2*i + 1
	    var right = 2*(i + 1)
	    var next = i
	    if(left < count) {
	      var lw = data[d*left]
	      if(lw < tw) {
	        next = left
	        tw = lw
	      }
	    }
	    if(right < count) {
	      var rw = data[d*right]
	      if(rw < tw) {
	        next = right
	      }
	    }
	    if(next === i) {
	      break
	    }
	    this.heapSwap(i, next)
	    i = next      
	  }
	}
	
	//Clear item from top of heap
	proto.pop = function() {
	  this.count -= 1
	  this.heapSwap(0, this.count)
	  this.heapDown(0)
	}
	
	//Assume object already written to data
	proto.push = function() {
	  this.heapUp(this.count)
	  this.count += 1
	}
	
	proto.dispose = function() {
	  pool.freeInt32(this.index)
	  pool.freeFloat64(this.data)
	}

/***/ },
/* 344 */
/***/ function(module, exports, __webpack_require__) {

	"use strict"
	
	var bits = __webpack_require__(345)
	
	function rootInorder(n) {
	  var ptree = (bits.nextPow2(n+1)>>>1) - 1
	  var f     = n - ptree
	  if(bits.nextPow2(f)-1 >= ptree) {
	    return ptree
	  }
	  return (ptree>>>1)+f
	}
	exports.root = rootInorder
	
	function beginInorder(n) {
	  return 0
	}
	exports.begin = beginInorder
	
	function endInorder(n) {
	  return n-1
	}
	exports.end = endInorder
	
	
	//This is really horrible because n is not necessarily a power of 2
	// If it was, we could just do:
	//
	//    height = bits.countTrailingZeros(~x)
	//
	// Instead, we just binary search because doing the right thing here is way too complicated.
	function heightInorder(n, x) {
	  if(n <= 0) {
	    return 0
	  }
	  var r = rootInorder(n)
	  if(x > r) {
	    return heightInorder(n-r-1, x-r-1)
	  } else if(x === r) {
	    return bits.log2(n)
	  }
	  return heightInorder(r, x)
	}
	exports.height = heightInorder
	
	function prevInorder(n, x) {
	  return Math.max(x-1,0)
	}
	exports.prev = prevInorder
	
	function nextInorder(n, x) {
	  return Math.min(x+1,n-1)
	}
	exports.next = nextInorder
	
	
	//The version for n = (1<<k)-1:
	//
	//  parent = (x & ~(1<<(h+1))) + (1<<h)
	//
	function parentInorder(n, x) {
	  if(n <= 0) {
	    return -1
	  }
	  var r = rootInorder(n)
	  if(x > r) {
	    var q = parentInorder(n-r-1, x-r-1)
	    if(q < 0) {
	      return r
	    } else {
	      return q + r + 1
	    }
	  } else if(x === r) {
	    return -1
	  }
	  var q =  parentInorder(r, x)
	  if(q < 0) {
	    return r
	  }
	  return q
	}
	exports.parent = parentInorder
	
	
	//Again, we get screwed because n is not a power of two -1.  If it was, we could do:
	//
	//    left = x - (1 << (h-1) )
	//
	// Where h is the height of the node
	//
	function leftInorder(n, x) {
	  if(n <= 0) {
	    return 0
	  }
	  var r = rootInorder(n)
	  if(x > r) {
	    return leftInorder(n-r-1, x-r-1) + r + 1
	  } else if(x === r) {
	    return rootInorder(x)
	  }
	  return leftInorder(r, x)
	
	}
	exports.left = leftInorder
	
	//for power of two minus one:
	//
	//    right = x + (1<<(h-1))
	//
	function rightInorder(n, x) {
	  if(n <= 0) {
	    return 0
	  }
	  var r = rootInorder(n)
	  if(x > r) {
	    return rightInorder(n-r-1, x-r-1) + r + 1
	  } else if(x === r) {
	    return rootInorder(n-r-1) + r + 1
	  }
	  return rightInorder(r, x)
	}
	exports.right = rightInorder
	
	
	function leafInorder(n, x) {
	  return heightInorder(n, x) === 0
	}
	exports.leaf = leafInorder
	
	
	function loInorder(n, x) {
	  n |= 0
	  x |= 0
	  var l = 0
	  while(n > 1) {
	    var r = rootInorder(n)
	    if(x > r) {
	      l += r + 1
	      n -= r + 1
	      x -= r + 1
	    } else if(x === r) {
	      break
	    } else {
	      n = r
	    }
	  }
	  return l
	}
	exports.lo = loInorder
	
	function hiInorder(n, x) {
	  n |= 0
	  x |= 0
	  var l = 0
	  while(n > 1) {
	    var r = rootInorder(n)
	    if(x > r) {
	      l += r + 1
	      n -= r + 1
	      x -= r + 1
	    } else if(x === r) {
	      l += n-1
	      break
	    } else {
	      n = r
	    }
	  }
	  return l
	}
	exports.hi = hiInorder


/***/ },
/* 345 */
/***/ function(module, exports) {

	/**
	 * Bit twiddling hacks for JavaScript.
	 *
	 * Author: Mikola Lysenko
	 *
	 * Ported from Stanford bit twiddling hack library:
	 *    http://graphics.stanford.edu/~seander/bithacks.html
	 */
	
	"use strict"; "use restrict";
	
	//Number of bits in an integer
	var INT_BITS = 32;
	
	//Constants
	exports.INT_BITS  = INT_BITS;
	exports.INT_MAX   =  0x7fffffff;
	exports.INT_MIN   = -1<<(INT_BITS-1);
	
	//Returns -1, 0, +1 depending on sign of x
	exports.sign = function(v) {
	  return (v > 0) - (v < 0);
	}
	
	//Computes absolute value of integer
	exports.abs = function(v) {
	  var mask = v >> (INT_BITS-1);
	  return (v ^ mask) - mask;
	}
	
	//Computes minimum of integers x and y
	exports.min = function(x, y) {
	  return y ^ ((x ^ y) & -(x < y));
	}
	
	//Computes maximum of integers x and y
	exports.max = function(x, y) {
	  return x ^ ((x ^ y) & -(x < y));
	}
	
	//Checks if a number is a power of two
	exports.isPow2 = function(v) {
	  return !(v & (v-1)) && (!!v);
	}
	
	//Computes log base 2 of v
	exports.log2 = function(v) {
	  var r, shift;
	  r =     (v > 0xFFFF) << 4; v >>>= r;
	  shift = (v > 0xFF  ) << 3; v >>>= shift; r |= shift;
	  shift = (v > 0xF   ) << 2; v >>>= shift; r |= shift;
	  shift = (v > 0x3   ) << 1; v >>>= shift; r |= shift;
	  return r | (v >> 1);
	}
	
	//Computes log base 10 of v
	exports.log10 = function(v) {
	  return  (v >= 1000000000) ? 9 : (v >= 100000000) ? 8 : (v >= 10000000) ? 7 :
	          (v >= 1000000) ? 6 : (v >= 100000) ? 5 : (v >= 10000) ? 4 :
	          (v >= 1000) ? 3 : (v >= 100) ? 2 : (v >= 10) ? 1 : 0;
	}
	
	//Counts number of bits
	exports.popCount = function(v) {
	  v = v - ((v >>> 1) & 0x55555555);
	  v = (v & 0x33333333) + ((v >>> 2) & 0x33333333);
	  return ((v + (v >>> 4) & 0xF0F0F0F) * 0x1010101) >>> 24;
	}
	
	//Counts number of trailing zeros
	function countTrailingZeros(v) {
	  var c = 32;
	  v &= -v;
	  if (v) c--;
	  if (v & 0x0000FFFF) c -= 16;
	  if (v & 0x00FF00FF) c -= 8;
	  if (v & 0x0F0F0F0F) c -= 4;
	  if (v & 0x33333333) c -= 2;
	  if (v & 0x55555555) c -= 1;
	  return c;
	}
	exports.countTrailingZeros = countTrailingZeros;
	
	//Rounds to next power of 2
	exports.nextPow2 = function(v) {
	  v += v === 0;
	  --v;
	  v |= v >>> 1;
	  v |= v >>> 2;
	  v |= v >>> 4;
	  v |= v >>> 8;
	  v |= v >>> 16;
	  return v + 1;
	}
	
	//Rounds down to previous power of 2
	exports.prevPow2 = function(v) {
	  v |= v >>> 1;
	  v |= v >>> 2;
	  v |= v >>> 4;
	  v |= v >>> 8;
	  v |= v >>> 16;
	  return v - (v>>>1);
	}
	
	//Computes parity of word
	exports.parity = function(v) {
	  v ^= v >>> 16;
	  v ^= v >>> 8;
	  v ^= v >>> 4;
	  v &= 0xf;
	  return (0x6996 >>> v) & 1;
	}
	
	var REVERSE_TABLE = new Array(256);
	
	(function(tab) {
	  for(var i=0; i<256; ++i) {
	    var v = i, r = i, s = 7;
	    for (v >>>= 1; v; v >>>= 1) {
	      r <<= 1;
	      r |= v & 1;
	      --s;
	    }
	    tab[i] = (r << s) & 0xff;
	  }
	})(REVERSE_TABLE);
	
	//Reverse bits in a 32 bit word
	exports.reverse = function(v) {
	  return  (REVERSE_TABLE[ v         & 0xff] << 24) |
	          (REVERSE_TABLE[(v >>> 8)  & 0xff] << 16) |
	          (REVERSE_TABLE[(v >>> 16) & 0xff] << 8)  |
	           REVERSE_TABLE[(v >>> 24) & 0xff];
	}
	
	//Interleave bits of 2 coordinates with 16 bits.  Useful for fast quadtree codes
	exports.interleave2 = function(x, y) {
	  x &= 0xFFFF;
	  x = (x | (x << 8)) & 0x00FF00FF;
	  x = (x | (x << 4)) & 0x0F0F0F0F;
	  x = (x | (x << 2)) & 0x33333333;
	  x = (x | (x << 1)) & 0x55555555;
	
	  y &= 0xFFFF;
	  y = (y | (y << 8)) & 0x00FF00FF;
	  y = (y | (y << 4)) & 0x0F0F0F0F;
	  y = (y | (y << 2)) & 0x33333333;
	  y = (y | (y << 1)) & 0x55555555;
	
	  return x | (y << 1);
	}
	
	//Extracts the nth interleaved component
	exports.deinterleave2 = function(v, n) {
	  v = (v >>> n) & 0x55555555;
	  v = (v | (v >>> 1))  & 0x33333333;
	  v = (v | (v >>> 2))  & 0x0F0F0F0F;
	  v = (v | (v >>> 4))  & 0x00FF00FF;
	  v = (v | (v >>> 16)) & 0x000FFFF;
	  return (v << 16) >> 16;
	}
	
	
	//Interleave bits of 3 coordinates, each with 10 bits.  Useful for fast octree codes
	exports.interleave3 = function(x, y, z) {
	  x &= 0x3FF;
	  x  = (x | (x<<16)) & 4278190335;
	  x  = (x | (x<<8))  & 251719695;
	  x  = (x | (x<<4))  & 3272356035;
	  x  = (x | (x<<2))  & 1227133513;
	
	  y &= 0x3FF;
	  y  = (y | (y<<16)) & 4278190335;
	  y  = (y | (y<<8))  & 251719695;
	  y  = (y | (y<<4))  & 3272356035;
	  y  = (y | (y<<2))  & 1227133513;
	  x |= (y << 1);
	  
	  z &= 0x3FF;
	  z  = (z | (z<<16)) & 4278190335;
	  z  = (z | (z<<8))  & 251719695;
	  z  = (z | (z<<4))  & 3272356035;
	  z  = (z | (z<<2))  & 1227133513;
	  
	  return x | (z << 2);
	}
	
	//Extracts nth interleaved component of a 3-tuple
	exports.deinterleave3 = function(v, n) {
	  v = (v >>> n)       & 1227133513;
	  v = (v | (v>>>2))   & 3272356035;
	  v = (v | (v>>>4))   & 251719695;
	  v = (v | (v>>>8))   & 4278190335;
	  v = (v | (v>>>16))  & 0x3FF;
	  return (v<<22)>>22;
	}
	
	//Computes next combination in colexicographic order (this is mistakenly called nextPermutation on the bit twiddling hacks page)
	exports.nextCombination = function(v) {
	  var t = v | (v - 1);
	  return (t + 1) | (((~t & -~t) - 1) >>> (countTrailingZeros(v) + 1));
	}
	


/***/ },
/* 346 */
/***/ function(module, exports, __webpack_require__) {

	"use strict"
	
	var createThunk = __webpack_require__(348)
	
	function Procedure() {
	  this.argTypes = []
	  this.shimArgs = []
	  this.arrayArgs = []
	  this.arrayBlockIndices = []
	  this.scalarArgs = []
	  this.offsetArgs = []
	  this.offsetArgIndex = []
	  this.indexArgs = []
	  this.shapeArgs = []
	  this.funcName = ""
	  this.pre = null
	  this.body = null
	  this.post = null
	  this.debug = false
	}
	
	function compileCwise(user_args) {
	  //Create procedure
	  var proc = new Procedure()
	  
	  //Parse blocks
	  proc.pre    = user_args.pre
	  proc.body   = user_args.body
	  proc.post   = user_args.post
	
	  //Parse arguments
	  var proc_args = user_args.args.slice(0)
	  proc.argTypes = proc_args
	  for(var i=0; i<proc_args.length; ++i) {
	    var arg_type = proc_args[i]
	    if(arg_type === "array" || (typeof arg_type === "object" && arg_type.blockIndices)) {
	      proc.argTypes[i] = "array"
	      proc.arrayArgs.push(i)
	      proc.arrayBlockIndices.push(arg_type.blockIndices ? arg_type.blockIndices : 0)
	      proc.shimArgs.push("array" + i)
	      if(i < proc.pre.args.length && proc.pre.args[i].count>0) {
	        throw new Error("cwise: pre() block may not reference array args")
	      }
	      if(i < proc.post.args.length && proc.post.args[i].count>0) {
	        throw new Error("cwise: post() block may not reference array args")
	      }
	    } else if(arg_type === "scalar") {
	      proc.scalarArgs.push(i)
	      proc.shimArgs.push("scalar" + i)
	    } else if(arg_type === "index") {
	      proc.indexArgs.push(i)
	      if(i < proc.pre.args.length && proc.pre.args[i].count > 0) {
	        throw new Error("cwise: pre() block may not reference array index")
	      }
	      if(i < proc.body.args.length && proc.body.args[i].lvalue) {
	        throw new Error("cwise: body() block may not write to array index")
	      }
	      if(i < proc.post.args.length && proc.post.args[i].count > 0) {
	        throw new Error("cwise: post() block may not reference array index")
	      }
	    } else if(arg_type === "shape") {
	      proc.shapeArgs.push(i)
	      if(i < proc.pre.args.length && proc.pre.args[i].lvalue) {
	        throw new Error("cwise: pre() block may not write to array shape")
	      }
	      if(i < proc.body.args.length && proc.body.args[i].lvalue) {
	        throw new Error("cwise: body() block may not write to array shape")
	      }
	      if(i < proc.post.args.length && proc.post.args[i].lvalue) {
	        throw new Error("cwise: post() block may not write to array shape")
	      }
	    } else if(typeof arg_type === "object" && arg_type.offset) {
	      proc.argTypes[i] = "offset"
	      proc.offsetArgs.push({ array: arg_type.array, offset:arg_type.offset })
	      proc.offsetArgIndex.push(i)
	    } else {
	      throw new Error("cwise: Unknown argument type " + proc_args[i])
	    }
	  }
	  
	  //Make sure at least one array argument was specified
	  if(proc.arrayArgs.length <= 0) {
	    throw new Error("cwise: No array arguments specified")
	  }
	  
	  //Make sure arguments are correct
	  if(proc.pre.args.length > proc_args.length) {
	    throw new Error("cwise: Too many arguments in pre() block")
	  }
	  if(proc.body.args.length > proc_args.length) {
	    throw new Error("cwise: Too many arguments in body() block")
	  }
	  if(proc.post.args.length > proc_args.length) {
	    throw new Error("cwise: Too many arguments in post() block")
	  }
	
	  //Check debug flag
	  proc.debug = !!user_args.printCode || !!user_args.debug
	  
	  //Retrieve name
	  proc.funcName = user_args.funcName || "cwise"
	  
	  //Read in block size
	  proc.blockSize = user_args.blockSize || 64
	
	  return createThunk(proc)
	}
	
	module.exports = compileCwise


/***/ },
/* 347 */
/***/ function(module, exports, __webpack_require__) {

	"use strict"
	
	var uniq = __webpack_require__(349)
	
	// This function generates very simple loops analogous to how you typically traverse arrays (the outermost loop corresponds to the slowest changing index, the innermost loop to the fastest changing index)
	// TODO: If two arrays have the same strides (and offsets) there is potential for decreasing the number of "pointers" and related variables. The drawback is that the type signature would become more specific and that there would thus be less potential for caching, but it might still be worth it, especially when dealing with large numbers of arguments.
	function innerFill(order, proc, body) {
	  var dimension = order.length
	    , nargs = proc.arrayArgs.length
	    , has_index = proc.indexArgs.length>0
	    , code = []
	    , vars = []
	    , idx=0, pidx=0, i, j
	  for(i=0; i<dimension; ++i) { // Iteration variables
	    vars.push(["i",i,"=0"].join(""))
	  }
	  //Compute scan deltas
	  for(j=0; j<nargs; ++j) {
	    for(i=0; i<dimension; ++i) {
	      pidx = idx
	      idx = order[i]
	      if(i === 0) { // The innermost/fastest dimension's delta is simply its stride
	        vars.push(["d",j,"s",i,"=t",j,"p",idx].join(""))
	      } else { // For other dimensions the delta is basically the stride minus something which essentially "rewinds" the previous (more inner) dimension
	        vars.push(["d",j,"s",i,"=(t",j,"p",idx,"-s",pidx,"*t",j,"p",pidx,")"].join(""))
	      }
	    }
	  }
	  code.push("var " + vars.join(","))
	  //Scan loop
	  for(i=dimension-1; i>=0; --i) { // Start at largest stride and work your way inwards
	    idx = order[i]
	    code.push(["for(i",i,"=0;i",i,"<s",idx,";++i",i,"){"].join(""))
	  }
	  //Push body of inner loop
	  code.push(body)
	  //Advance scan pointers
	  for(i=0; i<dimension; ++i) {
	    pidx = idx
	    idx = order[i]
	    for(j=0; j<nargs; ++j) {
	      code.push(["p",j,"+=d",j,"s",i].join(""))
	    }
	    if(has_index) {
	      if(i > 0) {
	        code.push(["index[",pidx,"]-=s",pidx].join(""))
	      }
	      code.push(["++index[",idx,"]"].join(""))
	    }
	    code.push("}")
	  }
	  return code.join("\n")
	}
	
	// Generate "outer" loops that loop over blocks of data, applying "inner" loops to the blocks by manipulating the local variables in such a way that the inner loop only "sees" the current block.
	// TODO: If this is used, then the previous declaration (done by generateCwiseOp) of s* is essentially unnecessary.
	//       I believe the s* are not used elsewhere (in particular, I don't think they're used in the pre/post parts and "shape" is defined independently), so it would be possible to make defining the s* dependent on what loop method is being used.
	function outerFill(matched, order, proc, body) {
	  var dimension = order.length
	    , nargs = proc.arrayArgs.length
	    , blockSize = proc.blockSize
	    , has_index = proc.indexArgs.length > 0
	    , code = []
	  for(var i=0; i<nargs; ++i) {
	    code.push(["var offset",i,"=p",i].join(""))
	  }
	  //Generate loops for unmatched dimensions
	  // The order in which these dimensions are traversed is fairly arbitrary (from small stride to large stride, for the first argument)
	  // TODO: It would be nice if the order in which these loops are placed would also be somehow "optimal" (at the very least we should check that it really doesn't hurt us if they're not).
	  for(var i=matched; i<dimension; ++i) {
	    code.push(["for(var j"+i+"=SS[", order[i], "]|0;j", i, ">0;){"].join("")) // Iterate back to front
	    code.push(["if(j",i,"<",blockSize,"){"].join("")) // Either decrease j by blockSize (s = blockSize), or set it to zero (after setting s = j).
	    code.push(["s",order[i],"=j",i].join(""))
	    code.push(["j",i,"=0"].join(""))
	    code.push(["}else{s",order[i],"=",blockSize].join(""))
	    code.push(["j",i,"-=",blockSize,"}"].join(""))
	    if(has_index) {
	      code.push(["index[",order[i],"]=j",i].join(""))
	    }
	  }
	  for(var i=0; i<nargs; ++i) {
	    var indexStr = ["offset"+i]
	    for(var j=matched; j<dimension; ++j) {
	      indexStr.push(["j",j,"*t",i,"p",order[j]].join(""))
	    }
	    code.push(["p",i,"=(",indexStr.join("+"),")"].join(""))
	  }
	  code.push(innerFill(order, proc, body))
	  for(var i=matched; i<dimension; ++i) {
	    code.push("}")
	  }
	  return code.join("\n")
	}
	
	//Count the number of compatible inner orders
	// This is the length of the longest common prefix of the arrays in orders.
	// Each array in orders lists the dimensions of the correspond ndarray in order of increasing stride.
	// This is thus the maximum number of dimensions that can be efficiently traversed by simple nested loops for all arrays.
	function countMatches(orders) {
	  var matched = 0, dimension = orders[0].length
	  while(matched < dimension) {
	    for(var j=1; j<orders.length; ++j) {
	      if(orders[j][matched] !== orders[0][matched]) {
	        return matched
	      }
	    }
	    ++matched
	  }
	  return matched
	}
	
	//Processes a block according to the given data types
	// Replaces variable names by different ones, either "local" ones (that are then ferried in and out of the given array) or ones matching the arguments that the function performing the ultimate loop will accept.
	function processBlock(block, proc, dtypes) {
	  var code = block.body
	  var pre = []
	  var post = []
	  for(var i=0; i<block.args.length; ++i) {
	    var carg = block.args[i]
	    if(carg.count <= 0) {
	      continue
	    }
	    var re = new RegExp(carg.name, "g")
	    var ptrStr = ""
	    var arrNum = proc.arrayArgs.indexOf(i)
	    switch(proc.argTypes[i]) {
	      case "offset":
	        var offArgIndex = proc.offsetArgIndex.indexOf(i)
	        var offArg = proc.offsetArgs[offArgIndex]
	        arrNum = offArg.array
	        ptrStr = "+q" + offArgIndex // Adds offset to the "pointer" in the array
	      case "array":
	        ptrStr = "p" + arrNum + ptrStr
	        var localStr = "l" + i
	        var arrStr = "a" + arrNum
	        if (proc.arrayBlockIndices[arrNum] === 0) { // Argument to body is just a single value from this array
	          if(carg.count === 1) { // Argument/array used only once(?)
	            if(dtypes[arrNum] === "generic") {
	              if(carg.lvalue) {
	                pre.push(["var ", localStr, "=", arrStr, ".get(", ptrStr, ")"].join("")) // Is this necessary if the argument is ONLY used as an lvalue? (keep in mind that we can have a += something, so we would actually need to check carg.rvalue)
	                code = code.replace(re, localStr)
	                post.push([arrStr, ".set(", ptrStr, ",", localStr,")"].join(""))
	              } else {
	                code = code.replace(re, [arrStr, ".get(", ptrStr, ")"].join(""))
	              }
	            } else {
	              code = code.replace(re, [arrStr, "[", ptrStr, "]"].join(""))
	            }
	          } else if(dtypes[arrNum] === "generic") {
	            pre.push(["var ", localStr, "=", arrStr, ".get(", ptrStr, ")"].join("")) // TODO: Could we optimize by checking for carg.rvalue?
	            code = code.replace(re, localStr)
	            if(carg.lvalue) {
	              post.push([arrStr, ".set(", ptrStr, ",", localStr,")"].join(""))
	            }
	          } else {
	            pre.push(["var ", localStr, "=", arrStr, "[", ptrStr, "]"].join("")) // TODO: Could we optimize by checking for carg.rvalue?
	            code = code.replace(re, localStr)
	            if(carg.lvalue) {
	              post.push([arrStr, "[", ptrStr, "]=", localStr].join(""))
	            }
	          }
	        } else { // Argument to body is a "block"
	          var reStrArr = [carg.name], ptrStrArr = [ptrStr]
	          for(var j=0; j<Math.abs(proc.arrayBlockIndices[arrNum]); j++) {
	            reStrArr.push("\\s*\\[([^\\]]+)\\]")
	            ptrStrArr.push("$" + (j+1) + "*t" + arrNum + "b" + j) // Matched index times stride
	          }
	          re = new RegExp(reStrArr.join(""), "g")
	          ptrStr = ptrStrArr.join("+")
	          if(dtypes[arrNum] === "generic") {
	            /*if(carg.lvalue) {
	              pre.push(["var ", localStr, "=", arrStr, ".get(", ptrStr, ")"].join("")) // Is this necessary if the argument is ONLY used as an lvalue? (keep in mind that we can have a += something, so we would actually need to check carg.rvalue)
	              code = code.replace(re, localStr)
	              post.push([arrStr, ".set(", ptrStr, ",", localStr,")"].join(""))
	            } else {
	              code = code.replace(re, [arrStr, ".get(", ptrStr, ")"].join(""))
	            }*/
	            throw new Error("cwise: Generic arrays not supported in combination with blocks!")
	          } else {
	            // This does not produce any local variables, even if variables are used multiple times. It would be possible to do so, but it would complicate things quite a bit.
	            code = code.replace(re, [arrStr, "[", ptrStr, "]"].join(""))
	          }
	        }
	      break
	      case "scalar":
	        code = code.replace(re, "Y" + proc.scalarArgs.indexOf(i))
	      break
	      case "index":
	        code = code.replace(re, "index")
	      break
	      case "shape":
	        code = code.replace(re, "shape")
	      break
	    }
	  }
	  return [pre.join("\n"), code, post.join("\n")].join("\n").trim()
	}
	
	function typeSummary(dtypes) {
	  var summary = new Array(dtypes.length)
	  var allEqual = true
	  for(var i=0; i<dtypes.length; ++i) {
	    var t = dtypes[i]
	    var digits = t.match(/\d+/)
	    if(!digits) {
	      digits = ""
	    } else {
	      digits = digits[0]
	    }
	    if(t.charAt(0) === 0) {
	      summary[i] = "u" + t.charAt(1) + digits
	    } else {
	      summary[i] = t.charAt(0) + digits
	    }
	    if(i > 0) {
	      allEqual = allEqual && summary[i] === summary[i-1]
	    }
	  }
	  if(allEqual) {
	    return summary[0]
	  }
	  return summary.join("")
	}
	
	//Generates a cwise operator
	function generateCWiseOp(proc, typesig) {
	
	  //Compute dimension
	  // Arrays get put first in typesig, and there are two entries per array (dtype and order), so this gets the number of dimensions in the first array arg.
	  var dimension = (typesig[1].length - Math.abs(proc.arrayBlockIndices[0]))|0
	  var orders = new Array(proc.arrayArgs.length)
	  var dtypes = new Array(proc.arrayArgs.length)
	  for(var i=0; i<proc.arrayArgs.length; ++i) {
	    dtypes[i] = typesig[2*i]
	    orders[i] = typesig[2*i+1]
	  }
	  
	  //Determine where block and loop indices start and end
	  var blockBegin = [], blockEnd = [] // These indices are exposed as blocks
	  var loopBegin = [], loopEnd = [] // These indices are iterated over
	  var loopOrders = [] // orders restricted to the loop indices
	  for(var i=0; i<proc.arrayArgs.length; ++i) {
	    if (proc.arrayBlockIndices[i]<0) {
	      loopBegin.push(0)
	      loopEnd.push(dimension)
	      blockBegin.push(dimension)
	      blockEnd.push(dimension+proc.arrayBlockIndices[i])
	    } else {
	      loopBegin.push(proc.arrayBlockIndices[i]) // Non-negative
	      loopEnd.push(proc.arrayBlockIndices[i]+dimension)
	      blockBegin.push(0)
	      blockEnd.push(proc.arrayBlockIndices[i])
	    }
	    var newOrder = []
	    for(var j=0; j<orders[i].length; j++) {
	      if (loopBegin[i]<=orders[i][j] && orders[i][j]<loopEnd[i]) {
	        newOrder.push(orders[i][j]-loopBegin[i]) // If this is a loop index, put it in newOrder, subtracting loopBegin, to make sure that all loopOrders are using a common set of indices.
	      }
	    }
	    loopOrders.push(newOrder)
	  }
	
	  //First create arguments for procedure
	  var arglist = ["SS"] // SS is the overall shape over which we iterate
	  var code = ["'use strict'"]
	  var vars = []
	  
	  for(var j=0; j<dimension; ++j) {
	    vars.push(["s", j, "=SS[", j, "]"].join("")) // The limits for each dimension.
	  }
	  for(var i=0; i<proc.arrayArgs.length; ++i) {
	    arglist.push("a"+i) // Actual data array
	    arglist.push("t"+i) // Strides
	    arglist.push("p"+i) // Offset in the array at which the data starts (also used for iterating over the data)
	    
	    for(var j=0; j<dimension; ++j) { // Unpack the strides into vars for looping
	      vars.push(["t",i,"p",j,"=t",i,"[",loopBegin[i]+j,"]"].join(""))
	    }
	    
	    for(var j=0; j<Math.abs(proc.arrayBlockIndices[i]); ++j) { // Unpack the strides into vars for block iteration
	      vars.push(["t",i,"b",j,"=t",i,"[",blockBegin[i]+j,"]"].join(""))
	    }
	  }
	  for(var i=0; i<proc.scalarArgs.length; ++i) {
	    arglist.push("Y" + i)
	  }
	  if(proc.shapeArgs.length > 0) {
	    vars.push("shape=SS.slice(0)") // Makes the shape over which we iterate available to the user defined functions (so you can use width/height for example)
	  }
	  if(proc.indexArgs.length > 0) {
	    // Prepare an array to keep track of the (logical) indices, initialized to dimension zeroes.
	    var zeros = new Array(dimension)
	    for(var i=0; i<dimension; ++i) {
	      zeros[i] = "0"
	    }
	    vars.push(["index=[", zeros.join(","), "]"].join(""))
	  }
	  for(var i=0; i<proc.offsetArgs.length; ++i) { // Offset arguments used for stencil operations
	    var off_arg = proc.offsetArgs[i]
	    var init_string = []
	    for(var j=0; j<off_arg.offset.length; ++j) {
	      if(off_arg.offset[j] === 0) {
	        continue
	      } else if(off_arg.offset[j] === 1) {
	        init_string.push(["t", off_arg.array, "p", j].join(""))      
	      } else {
	        init_string.push([off_arg.offset[j], "*t", off_arg.array, "p", j].join(""))
	      }
	    }
	    if(init_string.length === 0) {
	      vars.push("q" + i + "=0")
	    } else {
	      vars.push(["q", i, "=", init_string.join("+")].join(""))
	    }
	  }
	
	  //Prepare this variables
	  var thisVars = uniq([].concat(proc.pre.thisVars)
	                      .concat(proc.body.thisVars)
	                      .concat(proc.post.thisVars))
	  vars = vars.concat(thisVars)
	  code.push("var " + vars.join(","))
	  for(var i=0; i<proc.arrayArgs.length; ++i) {
	    code.push("p"+i+"|=0")
	  }
	  
	  //Inline prelude
	  if(proc.pre.body.length > 3) {
	    code.push(processBlock(proc.pre, proc, dtypes))
	  }
	
	  //Process body
	  var body = processBlock(proc.body, proc, dtypes)
	  var matched = countMatches(loopOrders)
	  if(matched < dimension) {
	    code.push(outerFill(matched, loopOrders[0], proc, body)) // TODO: Rather than passing loopOrders[0], it might be interesting to look at passing an order that represents the majority of the arguments for example.
	  } else {
	    code.push(innerFill(loopOrders[0], proc, body))
	  }
	
	  //Inline epilog
	  if(proc.post.body.length > 3) {
	    code.push(processBlock(proc.post, proc, dtypes))
	  }
	  
	  if(proc.debug) {
	    console.log("-----Generated cwise routine for ", typesig, ":\n" + code.join("\n") + "\n----------")
	  }
	  
	  var loopName = [(proc.funcName||"unnamed"), "_cwise_loop_", orders[0].join("s"),"m",matched,typeSummary(dtypes)].join("")
	  var f = new Function(["function ",loopName,"(", arglist.join(","),"){", code.join("\n"),"} return ", loopName].join(""))
	  return f()
	}
	module.exports = generateCWiseOp


/***/ },
/* 348 */
/***/ function(module, exports, __webpack_require__) {

	"use strict"
	
	// The function below is called when constructing a cwise function object, and does the following:
	// A function object is constructed which accepts as argument a compilation function and returns another function.
	// It is this other function that is eventually returned by createThunk, and this function is the one that actually
	// checks whether a certain pattern of arguments has already been used before and compiles new loops as needed.
	// The compilation passed to the first function object is used for compiling new functions.
	// Once this function object is created, it is called with compile as argument, where the first argument of compile
	// is bound to "proc" (essentially containing a preprocessed version of the user arguments to cwise).
	// So createThunk roughly works like this:
	// function createThunk(proc) {
	//   var thunk = function(compileBound) {
	//     var CACHED = {}
	//     return function(arrays and scalars) {
	//       if (dtype and order of arrays in CACHED) {
	//         var func = CACHED[dtype and order of arrays]
	//       } else {
	//         var func = CACHED[dtype and order of arrays] = compileBound(dtype and order of arrays)
	//       }
	//       return func(arrays and scalars)
	//     }
	//   }
	//   return thunk(compile.bind1(proc))
	// }
	
	var compile = __webpack_require__(347)
	
	function createThunk(proc) {
	  var code = ["'use strict'", "var CACHED={}"]
	  var vars = []
	  var thunkName = proc.funcName + "_cwise_thunk"
	  
	  //Build thunk
	  code.push(["return function ", thunkName, "(", proc.shimArgs.join(","), "){"].join(""))
	  var typesig = []
	  var string_typesig = []
	  var proc_args = [["array",proc.arrayArgs[0],".shape.slice(", // Slice shape so that we only retain the shape over which we iterate (which gets passed to the cwise operator as SS).
	                    Math.max(0,proc.arrayBlockIndices[0]),proc.arrayBlockIndices[0]<0?(","+proc.arrayBlockIndices[0]+")"):")"].join("")]
	  var shapeLengthConditions = [], shapeConditions = []
	  // Process array arguments
	  for(var i=0; i<proc.arrayArgs.length; ++i) {
	    var j = proc.arrayArgs[i]
	    vars.push(["t", j, "=array", j, ".dtype,",
	               "r", j, "=array", j, ".order"].join(""))
	    typesig.push("t" + j)
	    typesig.push("r" + j)
	    string_typesig.push("t"+j)
	    string_typesig.push("r"+j+".join()")
	    proc_args.push("array" + j + ".data")
	    proc_args.push("array" + j + ".stride")
	    proc_args.push("array" + j + ".offset|0")
	    if (i>0) { // Gather conditions to check for shape equality (ignoring block indices)
	      shapeLengthConditions.push("array" + proc.arrayArgs[0] + ".shape.length===array" + j + ".shape.length+" + (Math.abs(proc.arrayBlockIndices[0])-Math.abs(proc.arrayBlockIndices[i])))
	      shapeConditions.push("array" + proc.arrayArgs[0] + ".shape[shapeIndex+" + Math.max(0,proc.arrayBlockIndices[0]) + "]===array" + j + ".shape[shapeIndex+" + Math.max(0,proc.arrayBlockIndices[i]) + "]")
	    }
	  }
	  // Check for shape equality
	  if (proc.arrayArgs.length > 1) {
	    code.push("if (!(" + shapeLengthConditions.join(" && ") + ")) throw new Error('cwise: Arrays do not all have the same dimensionality!')")
	    code.push("for(var shapeIndex=array" + proc.arrayArgs[0] + ".shape.length-" + Math.abs(proc.arrayBlockIndices[0]) + "; shapeIndex-->0;) {")
	    code.push("if (!(" + shapeConditions.join(" && ") + ")) throw new Error('cwise: Arrays do not all have the same shape!')")
	    code.push("}")
	  }
	  // Process scalar arguments
	  for(var i=0; i<proc.scalarArgs.length; ++i) {
	    proc_args.push("scalar" + proc.scalarArgs[i])
	  }
	  // Check for cached function (and if not present, generate it)
	  vars.push(["type=[", string_typesig.join(","), "].join()"].join(""))
	  vars.push("proc=CACHED[type]")
	  code.push("var " + vars.join(","))
	  
	  code.push(["if(!proc){",
	             "CACHED[type]=proc=compile([", typesig.join(","), "])}",
	             "return proc(", proc_args.join(","), ")}"].join(""))
	
	  if(proc.debug) {
	    console.log("-----Generated thunk:\n" + code.join("\n") + "\n----------")
	  }
	  
	  //Compile thunk
	  var thunk = new Function("compile", code.join("\n"))
	  return thunk(compile.bind(undefined, proc))
	}
	
	module.exports = createThunk


/***/ },
/* 349 */
/***/ function(module, exports) {

	"use strict"
	
	function unique_pred(list, compare) {
	  var ptr = 1
	    , len = list.length
	    , a=list[0], b=list[0]
	  for(var i=1; i<len; ++i) {
	    b = a
	    a = list[i]
	    if(compare(a, b)) {
	      if(i === ptr) {
	        ptr++
	        continue
	      }
	      list[ptr++] = a
	    }
	  }
	  list.length = ptr
	  return list
	}
	
	function unique_eq(list) {
	  var ptr = 1
	    , len = list.length
	    , a=list[0], b = list[0]
	  for(var i=1; i<len; ++i, b=a) {
	    b = a
	    a = list[i]
	    if(a !== b) {
	      if(i === ptr) {
	        ptr++
	        continue
	      }
	      list[ptr++] = a
	    }
	  }
	  list.length = ptr
	  return list
	}
	
	function unique(list, compare, sorted) {
	  if(list.length === 0) {
	    return list
	  }
	  if(compare) {
	    if(!sorted) {
	      list.sort(compare)
	    }
	    return unique_pred(list, compare)
	  }
	  if(!sorted) {
	    list.sort()
	  }
	  return unique_eq(list)
	}
	
	module.exports = unique


/***/ },
/* 350 */
/***/ function(module, exports, __webpack_require__) {

	"use strict"
	
	var ndarray = __webpack_require__(97)
	var do_convert = __webpack_require__(351)
	
	module.exports = function convert(arr, result) {
	  var shape = [], c = arr, sz = 1
	  while(c instanceof Array) {
	    shape.push(c.length)
	    sz *= c.length
	    c = c[0]
	  }
	  if(shape.length === 0) {
	    return ndarray()
	  }
	  if(!result) {
	    result = ndarray(new Float64Array(sz), shape)
	  }
	  do_convert(result, arr)
	  return result
	}


/***/ },
/* 351 */
/***/ function(module, exports, __webpack_require__) {

	module.exports=__webpack_require__(352)({"args":["array","scalar","index"],"pre":{"body":"{}","args":[],"thisVars":[],"localVars":[]},"body":{"body":"{\nvar _inline_1_v=_inline_1_arg1_,_inline_1_i\nfor(_inline_1_i=0;_inline_1_i<_inline_1_arg2_.length-1;++_inline_1_i) {\n_inline_1_v=_inline_1_v[_inline_1_arg2_[_inline_1_i]]\n}\n_inline_1_arg0_=_inline_1_v[_inline_1_arg2_[_inline_1_arg2_.length-1]]\n}","args":[{"name":"_inline_1_arg0_","lvalue":true,"rvalue":false,"count":1},{"name":"_inline_1_arg1_","lvalue":false,"rvalue":true,"count":1},{"name":"_inline_1_arg2_","lvalue":false,"rvalue":true,"count":4}],"thisVars":[],"localVars":["_inline_1_i","_inline_1_v"]},"post":{"body":"{}","args":[],"thisVars":[],"localVars":[]},"funcName":"convert","blockSize":64})


/***/ },
/* 352 */
/***/ function(module, exports, __webpack_require__) {

	"use strict"
	
	var createThunk = __webpack_require__(354)
	
	function Procedure() {
	  this.argTypes = []
	  this.shimArgs = []
	  this.arrayArgs = []
	  this.arrayBlockIndices = []
	  this.scalarArgs = []
	  this.offsetArgs = []
	  this.offsetArgIndex = []
	  this.indexArgs = []
	  this.shapeArgs = []
	  this.funcName = ""
	  this.pre = null
	  this.body = null
	  this.post = null
	  this.debug = false
	}
	
	function compileCwise(user_args) {
	  //Create procedure
	  var proc = new Procedure()
	  
	  //Parse blocks
	  proc.pre    = user_args.pre
	  proc.body   = user_args.body
	  proc.post   = user_args.post
	
	  //Parse arguments
	  var proc_args = user_args.args.slice(0)
	  proc.argTypes = proc_args
	  for(var i=0; i<proc_args.length; ++i) {
	    var arg_type = proc_args[i]
	    if(arg_type === "array" || (typeof arg_type === "object" && arg_type.blockIndices)) {
	      proc.argTypes[i] = "array"
	      proc.arrayArgs.push(i)
	      proc.arrayBlockIndices.push(arg_type.blockIndices ? arg_type.blockIndices : 0)
	      proc.shimArgs.push("array" + i)
	      if(i < proc.pre.args.length && proc.pre.args[i].count>0) {
	        throw new Error("cwise: pre() block may not reference array args")
	      }
	      if(i < proc.post.args.length && proc.post.args[i].count>0) {
	        throw new Error("cwise: post() block may not reference array args")
	      }
	    } else if(arg_type === "scalar") {
	      proc.scalarArgs.push(i)
	      proc.shimArgs.push("scalar" + i)
	    } else if(arg_type === "index") {
	      proc.indexArgs.push(i)
	      if(i < proc.pre.args.length && proc.pre.args[i].count > 0) {
	        throw new Error("cwise: pre() block may not reference array index")
	      }
	      if(i < proc.body.args.length && proc.body.args[i].lvalue) {
	        throw new Error("cwise: body() block may not write to array index")
	      }
	      if(i < proc.post.args.length && proc.post.args[i].count > 0) {
	        throw new Error("cwise: post() block may not reference array index")
	      }
	    } else if(arg_type === "shape") {
	      proc.shapeArgs.push(i)
	      if(i < proc.pre.args.length && proc.pre.args[i].lvalue) {
	        throw new Error("cwise: pre() block may not write to array shape")
	      }
	      if(i < proc.body.args.length && proc.body.args[i].lvalue) {
	        throw new Error("cwise: body() block may not write to array shape")
	      }
	      if(i < proc.post.args.length && proc.post.args[i].lvalue) {
	        throw new Error("cwise: post() block may not write to array shape")
	      }
	    } else if(typeof arg_type === "object" && arg_type.offset) {
	      proc.argTypes[i] = "offset"
	      proc.offsetArgs.push({ array: arg_type.array, offset:arg_type.offset })
	      proc.offsetArgIndex.push(i)
	    } else {
	      throw new Error("cwise: Unknown argument type " + proc_args[i])
	    }
	  }
	  
	  //Make sure at least one array argument was specified
	  if(proc.arrayArgs.length <= 0) {
	    throw new Error("cwise: No array arguments specified")
	  }
	  
	  //Make sure arguments are correct
	  if(proc.pre.args.length > proc_args.length) {
	    throw new Error("cwise: Too many arguments in pre() block")
	  }
	  if(proc.body.args.length > proc_args.length) {
	    throw new Error("cwise: Too many arguments in body() block")
	  }
	  if(proc.post.args.length > proc_args.length) {
	    throw new Error("cwise: Too many arguments in post() block")
	  }
	
	  //Check debug flag
	  proc.debug = !!user_args.printCode || !!user_args.debug
	  
	  //Retrieve name
	  proc.funcName = user_args.funcName || "cwise"
	  
	  //Read in block size
	  proc.blockSize = user_args.blockSize || 64
	
	  return createThunk(proc)
	}
	
	module.exports = compileCwise


/***/ },
/* 353 */
/***/ function(module, exports, __webpack_require__) {

	"use strict"
	
	var uniq = __webpack_require__(355)
	
	// This function generates very simple loops analogous to how you typically traverse arrays (the outermost loop corresponds to the slowest changing index, the innermost loop to the fastest changing index)
	// TODO: If two arrays have the same strides (and offsets) there is potential for decreasing the number of "pointers" and related variables. The drawback is that the type signature would become more specific and that there would thus be less potential for caching, but it might still be worth it, especially when dealing with large numbers of arguments.
	function innerFill(order, proc, body) {
	  var dimension = order.length
	    , nargs = proc.arrayArgs.length
	    , has_index = proc.indexArgs.length>0
	    , code = []
	    , vars = []
	    , idx=0, pidx=0, i, j
	  for(i=0; i<dimension; ++i) { // Iteration variables
	    vars.push(["i",i,"=0"].join(""))
	  }
	  //Compute scan deltas
	  for(j=0; j<nargs; ++j) {
	    for(i=0; i<dimension; ++i) {
	      pidx = idx
	      idx = order[i]
	      if(i === 0) { // The innermost/fastest dimension's delta is simply its stride
	        vars.push(["d",j,"s",i,"=t",j,"p",idx].join(""))
	      } else { // For other dimensions the delta is basically the stride minus something which essentially "rewinds" the previous (more inner) dimension
	        vars.push(["d",j,"s",i,"=(t",j,"p",idx,"-s",pidx,"*t",j,"p",pidx,")"].join(""))
	      }
	    }
	  }
	  code.push("var " + vars.join(","))
	  //Scan loop
	  for(i=dimension-1; i>=0; --i) { // Start at largest stride and work your way inwards
	    idx = order[i]
	    code.push(["for(i",i,"=0;i",i,"<s",idx,";++i",i,"){"].join(""))
	  }
	  //Push body of inner loop
	  code.push(body)
	  //Advance scan pointers
	  for(i=0; i<dimension; ++i) {
	    pidx = idx
	    idx = order[i]
	    for(j=0; j<nargs; ++j) {
	      code.push(["p",j,"+=d",j,"s",i].join(""))
	    }
	    if(has_index) {
	      if(i > 0) {
	        code.push(["index[",pidx,"]-=s",pidx].join(""))
	      }
	      code.push(["++index[",idx,"]"].join(""))
	    }
	    code.push("}")
	  }
	  return code.join("\n")
	}
	
	// Generate "outer" loops that loop over blocks of data, applying "inner" loops to the blocks by manipulating the local variables in such a way that the inner loop only "sees" the current block.
	// TODO: If this is used, then the previous declaration (done by generateCwiseOp) of s* is essentially unnecessary.
	//       I believe the s* are not used elsewhere (in particular, I don't think they're used in the pre/post parts and "shape" is defined independently), so it would be possible to make defining the s* dependent on what loop method is being used.
	function outerFill(matched, order, proc, body) {
	  var dimension = order.length
	    , nargs = proc.arrayArgs.length
	    , blockSize = proc.blockSize
	    , has_index = proc.indexArgs.length > 0
	    , code = []
	  for(var i=0; i<nargs; ++i) {
	    code.push(["var offset",i,"=p",i].join(""))
	  }
	  //Generate loops for unmatched dimensions
	  // The order in which these dimensions are traversed is fairly arbitrary (from small stride to large stride, for the first argument)
	  // TODO: It would be nice if the order in which these loops are placed would also be somehow "optimal" (at the very least we should check that it really doesn't hurt us if they're not).
	  for(var i=matched; i<dimension; ++i) {
	    code.push(["for(var j"+i+"=SS[", order[i], "]|0;j", i, ">0;){"].join("")) // Iterate back to front
	    code.push(["if(j",i,"<",blockSize,"){"].join("")) // Either decrease j by blockSize (s = blockSize), or set it to zero (after setting s = j).
	    code.push(["s",order[i],"=j",i].join(""))
	    code.push(["j",i,"=0"].join(""))
	    code.push(["}else{s",order[i],"=",blockSize].join(""))
	    code.push(["j",i,"-=",blockSize,"}"].join(""))
	    if(has_index) {
	      code.push(["index[",order[i],"]=j",i].join(""))
	    }
	  }
	  for(var i=0; i<nargs; ++i) {
	    var indexStr = ["offset"+i]
	    for(var j=matched; j<dimension; ++j) {
	      indexStr.push(["j",j,"*t",i,"p",order[j]].join(""))
	    }
	    code.push(["p",i,"=(",indexStr.join("+"),")"].join(""))
	  }
	  code.push(innerFill(order, proc, body))
	  for(var i=matched; i<dimension; ++i) {
	    code.push("}")
	  }
	  return code.join("\n")
	}
	
	//Count the number of compatible inner orders
	// This is the length of the longest common prefix of the arrays in orders.
	// Each array in orders lists the dimensions of the correspond ndarray in order of increasing stride.
	// This is thus the maximum number of dimensions that can be efficiently traversed by simple nested loops for all arrays.
	function countMatches(orders) {
	  var matched = 0, dimension = orders[0].length
	  while(matched < dimension) {
	    for(var j=1; j<orders.length; ++j) {
	      if(orders[j][matched] !== orders[0][matched]) {
	        return matched
	      }
	    }
	    ++matched
	  }
	  return matched
	}
	
	//Processes a block according to the given data types
	// Replaces variable names by different ones, either "local" ones (that are then ferried in and out of the given array) or ones matching the arguments that the function performing the ultimate loop will accept.
	function processBlock(block, proc, dtypes) {
	  var code = block.body
	  var pre = []
	  var post = []
	  for(var i=0; i<block.args.length; ++i) {
	    var carg = block.args[i]
	    if(carg.count <= 0) {
	      continue
	    }
	    var re = new RegExp(carg.name, "g")
	    var ptrStr = ""
	    var arrNum = proc.arrayArgs.indexOf(i)
	    switch(proc.argTypes[i]) {
	      case "offset":
	        var offArgIndex = proc.offsetArgIndex.indexOf(i)
	        var offArg = proc.offsetArgs[offArgIndex]
	        arrNum = offArg.array
	        ptrStr = "+q" + offArgIndex // Adds offset to the "pointer" in the array
	      case "array":
	        ptrStr = "p" + arrNum + ptrStr
	        var localStr = "l" + i
	        var arrStr = "a" + arrNum
	        if (proc.arrayBlockIndices[arrNum] === 0) { // Argument to body is just a single value from this array
	          if(carg.count === 1) { // Argument/array used only once(?)
	            if(dtypes[arrNum] === "generic") {
	              if(carg.lvalue) {
	                pre.push(["var ", localStr, "=", arrStr, ".get(", ptrStr, ")"].join("")) // Is this necessary if the argument is ONLY used as an lvalue? (keep in mind that we can have a += something, so we would actually need to check carg.rvalue)
	                code = code.replace(re, localStr)
	                post.push([arrStr, ".set(", ptrStr, ",", localStr,")"].join(""))
	              } else {
	                code = code.replace(re, [arrStr, ".get(", ptrStr, ")"].join(""))
	              }
	            } else {
	              code = code.replace(re, [arrStr, "[", ptrStr, "]"].join(""))
	            }
	          } else if(dtypes[arrNum] === "generic") {
	            pre.push(["var ", localStr, "=", arrStr, ".get(", ptrStr, ")"].join("")) // TODO: Could we optimize by checking for carg.rvalue?
	            code = code.replace(re, localStr)
	            if(carg.lvalue) {
	              post.push([arrStr, ".set(", ptrStr, ",", localStr,")"].join(""))
	            }
	          } else {
	            pre.push(["var ", localStr, "=", arrStr, "[", ptrStr, "]"].join("")) // TODO: Could we optimize by checking for carg.rvalue?
	            code = code.replace(re, localStr)
	            if(carg.lvalue) {
	              post.push([arrStr, "[", ptrStr, "]=", localStr].join(""))
	            }
	          }
	        } else { // Argument to body is a "block"
	          var reStrArr = [carg.name], ptrStrArr = [ptrStr]
	          for(var j=0; j<Math.abs(proc.arrayBlockIndices[arrNum]); j++) {
	            reStrArr.push("\\s*\\[([^\\]]+)\\]")
	            ptrStrArr.push("$" + (j+1) + "*t" + arrNum + "b" + j) // Matched index times stride
	          }
	          re = new RegExp(reStrArr.join(""), "g")
	          ptrStr = ptrStrArr.join("+")
	          if(dtypes[arrNum] === "generic") {
	            /*if(carg.lvalue) {
	              pre.push(["var ", localStr, "=", arrStr, ".get(", ptrStr, ")"].join("")) // Is this necessary if the argument is ONLY used as an lvalue? (keep in mind that we can have a += something, so we would actually need to check carg.rvalue)
	              code = code.replace(re, localStr)
	              post.push([arrStr, ".set(", ptrStr, ",", localStr,")"].join(""))
	            } else {
	              code = code.replace(re, [arrStr, ".get(", ptrStr, ")"].join(""))
	            }*/
	            throw new Error("cwise: Generic arrays not supported in combination with blocks!")
	          } else {
	            // This does not produce any local variables, even if variables are used multiple times. It would be possible to do so, but it would complicate things quite a bit.
	            code = code.replace(re, [arrStr, "[", ptrStr, "]"].join(""))
	          }
	        }
	      break
	      case "scalar":
	        code = code.replace(re, "Y" + proc.scalarArgs.indexOf(i))
	      break
	      case "index":
	        code = code.replace(re, "index")
	      break
	      case "shape":
	        code = code.replace(re, "shape")
	      break
	    }
	  }
	  return [pre.join("\n"), code, post.join("\n")].join("\n").trim()
	}
	
	function typeSummary(dtypes) {
	  var summary = new Array(dtypes.length)
	  var allEqual = true
	  for(var i=0; i<dtypes.length; ++i) {
	    var t = dtypes[i]
	    var digits = t.match(/\d+/)
	    if(!digits) {
	      digits = ""
	    } else {
	      digits = digits[0]
	    }
	    if(t.charAt(0) === 0) {
	      summary[i] = "u" + t.charAt(1) + digits
	    } else {
	      summary[i] = t.charAt(0) + digits
	    }
	    if(i > 0) {
	      allEqual = allEqual && summary[i] === summary[i-1]
	    }
	  }
	  if(allEqual) {
	    return summary[0]
	  }
	  return summary.join("")
	}
	
	//Generates a cwise operator
	function generateCWiseOp(proc, typesig) {
	
	  //Compute dimension
	  // Arrays get put first in typesig, and there are two entries per array (dtype and order), so this gets the number of dimensions in the first array arg.
	  var dimension = (typesig[1].length - Math.abs(proc.arrayBlockIndices[0]))|0
	  var orders = new Array(proc.arrayArgs.length)
	  var dtypes = new Array(proc.arrayArgs.length)
	  for(var i=0; i<proc.arrayArgs.length; ++i) {
	    dtypes[i] = typesig[2*i]
	    orders[i] = typesig[2*i+1]
	  }
	  
	  //Determine where block and loop indices start and end
	  var blockBegin = [], blockEnd = [] // These indices are exposed as blocks
	  var loopBegin = [], loopEnd = [] // These indices are iterated over
	  var loopOrders = [] // orders restricted to the loop indices
	  for(var i=0; i<proc.arrayArgs.length; ++i) {
	    if (proc.arrayBlockIndices[i]<0) {
	      loopBegin.push(0)
	      loopEnd.push(dimension)
	      blockBegin.push(dimension)
	      blockEnd.push(dimension+proc.arrayBlockIndices[i])
	    } else {
	      loopBegin.push(proc.arrayBlockIndices[i]) // Non-negative
	      loopEnd.push(proc.arrayBlockIndices[i]+dimension)
	      blockBegin.push(0)
	      blockEnd.push(proc.arrayBlockIndices[i])
	    }
	    var newOrder = []
	    for(var j=0; j<orders[i].length; j++) {
	      if (loopBegin[i]<=orders[i][j] && orders[i][j]<loopEnd[i]) {
	        newOrder.push(orders[i][j]-loopBegin[i]) // If this is a loop index, put it in newOrder, subtracting loopBegin, to make sure that all loopOrders are using a common set of indices.
	      }
	    }
	    loopOrders.push(newOrder)
	  }
	
	  //First create arguments for procedure
	  var arglist = ["SS"] // SS is the overall shape over which we iterate
	  var code = ["'use strict'"]
	  var vars = []
	  
	  for(var j=0; j<dimension; ++j) {
	    vars.push(["s", j, "=SS[", j, "]"].join("")) // The limits for each dimension.
	  }
	  for(var i=0; i<proc.arrayArgs.length; ++i) {
	    arglist.push("a"+i) // Actual data array
	    arglist.push("t"+i) // Strides
	    arglist.push("p"+i) // Offset in the array at which the data starts (also used for iterating over the data)
	    
	    for(var j=0; j<dimension; ++j) { // Unpack the strides into vars for looping
	      vars.push(["t",i,"p",j,"=t",i,"[",loopBegin[i]+j,"]"].join(""))
	    }
	    
	    for(var j=0; j<Math.abs(proc.arrayBlockIndices[i]); ++j) { // Unpack the strides into vars for block iteration
	      vars.push(["t",i,"b",j,"=t",i,"[",blockBegin[i]+j,"]"].join(""))
	    }
	  }
	  for(var i=0; i<proc.scalarArgs.length; ++i) {
	    arglist.push("Y" + i)
	  }
	  if(proc.shapeArgs.length > 0) {
	    vars.push("shape=SS.slice(0)") // Makes the shape over which we iterate available to the user defined functions (so you can use width/height for example)
	  }
	  if(proc.indexArgs.length > 0) {
	    // Prepare an array to keep track of the (logical) indices, initialized to dimension zeroes.
	    var zeros = new Array(dimension)
	    for(var i=0; i<dimension; ++i) {
	      zeros[i] = "0"
	    }
	    vars.push(["index=[", zeros.join(","), "]"].join(""))
	  }
	  for(var i=0; i<proc.offsetArgs.length; ++i) { // Offset arguments used for stencil operations
	    var off_arg = proc.offsetArgs[i]
	    var init_string = []
	    for(var j=0; j<off_arg.offset.length; ++j) {
	      if(off_arg.offset[j] === 0) {
	        continue
	      } else if(off_arg.offset[j] === 1) {
	        init_string.push(["t", off_arg.array, "p", j].join(""))      
	      } else {
	        init_string.push([off_arg.offset[j], "*t", off_arg.array, "p", j].join(""))
	      }
	    }
	    if(init_string.length === 0) {
	      vars.push("q" + i + "=0")
	    } else {
	      vars.push(["q", i, "=", init_string.join("+")].join(""))
	    }
	  }
	
	  //Prepare this variables
	  var thisVars = uniq([].concat(proc.pre.thisVars)
	                      .concat(proc.body.thisVars)
	                      .concat(proc.post.thisVars))
	  vars = vars.concat(thisVars)
	  code.push("var " + vars.join(","))
	  for(var i=0; i<proc.arrayArgs.length; ++i) {
	    code.push("p"+i+"|=0")
	  }
	  
	  //Inline prelude
	  if(proc.pre.body.length > 3) {
	    code.push(processBlock(proc.pre, proc, dtypes))
	  }
	
	  //Process body
	  var body = processBlock(proc.body, proc, dtypes)
	  var matched = countMatches(loopOrders)
	  if(matched < dimension) {
	    code.push(outerFill(matched, loopOrders[0], proc, body)) // TODO: Rather than passing loopOrders[0], it might be interesting to look at passing an order that represents the majority of the arguments for example.
	  } else {
	    code.push(innerFill(loopOrders[0], proc, body))
	  }
	
	  //Inline epilog
	  if(proc.post.body.length > 3) {
	    code.push(processBlock(proc.post, proc, dtypes))
	  }
	  
	  if(proc.debug) {
	    console.log("-----Generated cwise routine for ", typesig, ":\n" + code.join("\n") + "\n----------")
	  }
	  
	  var loopName = [(proc.funcName||"unnamed"), "_cwise_loop_", orders[0].join("s"),"m",matched,typeSummary(dtypes)].join("")
	  var f = new Function(["function ",loopName,"(", arglist.join(","),"){", code.join("\n"),"} return ", loopName].join(""))
	  return f()
	}
	module.exports = generateCWiseOp


/***/ },
/* 354 */
/***/ function(module, exports, __webpack_require__) {

	"use strict"
	
	// The function below is called when constructing a cwise function object, and does the following:
	// A function object is constructed which accepts as argument a compilation function and returns another function.
	// It is this other function that is eventually returned by createThunk, and this function is the one that actually
	// checks whether a certain pattern of arguments has already been used before and compiles new loops as needed.
	// The compilation passed to the first function object is used for compiling new functions.
	// Once this function object is created, it is called with compile as argument, where the first argument of compile
	// is bound to "proc" (essentially containing a preprocessed version of the user arguments to cwise).
	// So createThunk roughly works like this:
	// function createThunk(proc) {
	//   var thunk = function(compileBound) {
	//     var CACHED = {}
	//     return function(arrays and scalars) {
	//       if (dtype and order of arrays in CACHED) {
	//         var func = CACHED[dtype and order of arrays]
	//       } else {
	//         var func = CACHED[dtype and order of arrays] = compileBound(dtype and order of arrays)
	//       }
	//       return func(arrays and scalars)
	//     }
	//   }
	//   return thunk(compile.bind1(proc))
	// }
	
	var compile = __webpack_require__(353)
	
	function createThunk(proc) {
	  var code = ["'use strict'", "var CACHED={}"]
	  var vars = []
	  var thunkName = proc.funcName + "_cwise_thunk"
	  
	  //Build thunk
	  code.push(["return function ", thunkName, "(", proc.shimArgs.join(","), "){"].join(""))
	  var typesig = []
	  var string_typesig = []
	  var proc_args = [["array",proc.arrayArgs[0],".shape.slice(", // Slice shape so that we only retain the shape over which we iterate (which gets passed to the cwise operator as SS).
	                    Math.max(0,proc.arrayBlockIndices[0]),proc.arrayBlockIndices[0]<0?(","+proc.arrayBlockIndices[0]+")"):")"].join("")]
	  var shapeLengthConditions = [], shapeConditions = []
	  // Process array arguments
	  for(var i=0; i<proc.arrayArgs.length; ++i) {
	    var j = proc.arrayArgs[i]
	    vars.push(["t", j, "=array", j, ".dtype,",
	               "r", j, "=array", j, ".order"].join(""))
	    typesig.push("t" + j)
	    typesig.push("r" + j)
	    string_typesig.push("t"+j)
	    string_typesig.push("r"+j+".join()")
	    proc_args.push("array" + j + ".data")
	    proc_args.push("array" + j + ".stride")
	    proc_args.push("array" + j + ".offset|0")
	    if (i>0) { // Gather conditions to check for shape equality (ignoring block indices)
	      shapeLengthConditions.push("array" + proc.arrayArgs[0] + ".shape.length===array" + j + ".shape.length+" + (Math.abs(proc.arrayBlockIndices[0])-Math.abs(proc.arrayBlockIndices[i])))
	      shapeConditions.push("array" + proc.arrayArgs[0] + ".shape[shapeIndex+" + Math.max(0,proc.arrayBlockIndices[0]) + "]===array" + j + ".shape[shapeIndex+" + Math.max(0,proc.arrayBlockIndices[i]) + "]")
	    }
	  }
	  // Check for shape equality
	  if (proc.arrayArgs.length > 1) {
	    code.push("if (!(" + shapeLengthConditions.join(" && ") + ")) throw new Error('cwise: Arrays do not all have the same dimensionality!')")
	    code.push("for(var shapeIndex=array" + proc.arrayArgs[0] + ".shape.length-" + Math.abs(proc.arrayBlockIndices[0]) + "; shapeIndex-->0;) {")
	    code.push("if (!(" + shapeConditions.join(" && ") + ")) throw new Error('cwise: Arrays do not all have the same shape!')")
	    code.push("}")
	  }
	  // Process scalar arguments
	  for(var i=0; i<proc.scalarArgs.length; ++i) {
	    proc_args.push("scalar" + proc.scalarArgs[i])
	  }
	  // Check for cached function (and if not present, generate it)
	  vars.push(["type=[", string_typesig.join(","), "].join()"].join(""))
	  vars.push("proc=CACHED[type]")
	  code.push("var " + vars.join(","))
	  
	  code.push(["if(!proc){",
	             "CACHED[type]=proc=compile([", typesig.join(","), "])}",
	             "return proc(", proc_args.join(","), ")}"].join(""))
	
	  if(proc.debug) {
	    console.log("-----Generated thunk:\n" + code.join("\n") + "\n----------")
	  }
	  
	  //Compile thunk
	  var thunk = new Function("compile", code.join("\n"))
	  return thunk(compile.bind(undefined, proc))
	}
	
	module.exports = createThunk


/***/ },
/* 355 */
/***/ function(module, exports) {

	"use strict"
	
	function unique_pred(list, compare) {
	  var ptr = 1
	    , len = list.length
	    , a=list[0], b=list[0]
	  for(var i=1; i<len; ++i) {
	    b = a
	    a = list[i]
	    if(compare(a, b)) {
	      if(i === ptr) {
	        ptr++
	        continue
	      }
	      list[ptr++] = a
	    }
	  }
	  list.length = ptr
	  return list
	}
	
	function unique_eq(list) {
	  var ptr = 1
	    , len = list.length
	    , a=list[0], b = list[0]
	  for(var i=1; i<len; ++i, b=a) {
	    b = a
	    a = list[i]
	    if(a !== b) {
	      if(i === ptr) {
	        ptr++
	        continue
	      }
	      list[ptr++] = a
	    }
	  }
	  list.length = ptr
	  return list
	}
	
	function unique(list, compare, sorted) {
	  if(list.length === 0) {
	    return list
	  }
	  if(compare) {
	    if(!sorted) {
	      list.sort(compare)
	    }
	    return unique_pred(list, compare)
	  }
	  if(!sorted) {
	    list.sort()
	  }
	  return unique_eq(list)
	}
	
	module.exports = unique


/***/ },
/* 356 */
/***/ function(module, exports, __webpack_require__) {

	"use strict"
	
	var ndarray = __webpack_require__(97)
	var ops = __webpack_require__(143)
	var pool = __webpack_require__(98)
	
	function clone(array) {
	  var dtype = array.dtype
	  if(dtype === "generic" || dtype === "array") {
	    dtype = "double"
	  }
	  var data = pool.malloc(array.size, dtype)
	  var result = ndarray(data, array.shape)
	  ops.assign(result, array)
	  return result
	}
	exports.clone = clone
	
	function malloc(shape, dtype) {
	  if(!dtype) {
	    dtype = "double"
	  }
	  var sz = 1
	  var stride = new Array(shape.length)
	  for(var i=shape.length-1; i>=0; --i) {
	    stride[i] = sz
	    sz *= shape[i]
	  }
	  return ndarray(pool.malloc(sz, dtype), shape, stride, 0)
	}
	exports.malloc = malloc
	
	function free(array) {
	  if(array.dtype === "generic" || array.dtype === "array") {
	    return
	  }
	  pool.free(array.data)
	}
	exports.free = free
	
	function zeros(shape, dtype) {
	  if(!dtype) {
	    dtype = "double"
	  }
	
	  var sz = 1
	  var stride = new Array(shape.length)
	  for(var i=shape.length-1; i>=0; --i) {
	    stride[i] = sz
	    sz *= shape[i]
	  }
	  var buf = pool.malloc(sz, dtype)
	  for(var i=0; i<sz; ++i) {
	    buf[i] = 0
	  }
	  return ndarray(buf, shape, stride, 0)
	}
	exports.zeros = zeros
	
	function ones(shape, dtype) {
	  if(!dtype) {
	    dtype = "double"
	  }
	
	  var sz = 1
	  var stride = new Array(shape.length)
	  for(var i=shape.length-1; i>=0; --i) {
	    stride[i] = sz
	    sz *= shape[i]
	  }
	  var buf = pool.malloc(sz, dtype)
	  for(var i=0; i<sz; ++i) {
	    buf[i] = 1
	  }
	  return ndarray(buf, shape, stride, 0)
	}
	exports.ones = ones
	
	function eye(shape, dtype) {
	  var i, offset
	  if(!dtype) {
	    dtype = "double"
	  }
	
	  var sz = 1
	  var stride = new Array(shape.length)
	  for(i=shape.length-1; i>=0; --i) {
	    stride[i] = sz
	    sz *= shape[i]
	  }
	  var buf = pool.malloc(sz, dtype)
	  for(i=0; i<sz; ++i) {
	    buf[i] = 0
	  }
	  var mindim = Infinity
	  var offsum = 0
	  for( i=shape.length-1; i>=0; i--) {
	    offsum += stride[i]
	    mindim = Math.min(mindim,shape[i])
	  }
	  for(i=0,offset=0; i<mindim; i++,offset+=offsum) {
	    buf[offset] = 1
	  }
	  return ndarray(buf, shape, stride, 0)
	}
	exports.eye = eye


/***/ },
/* 357 */
/***/ function(module, exports) {

	"use strict"
	
	module.exports = ndSelect
	module.exports.compile = lookupCache
	
	//Macros
	var ARRAY = "a"
	var RANK = "K"
	var CMP = "C"
	var DATA = "d"
	var OFFSET = "o"
	var RND = "R"
	var TMP = "T"
	var LO = "L"
	var HI = "H"
	var PIVOT = "X"
	function SHAPE(i) {
	  return "s" + i
	}
	function STRIDE(i) {
	  return "t" + i
	}
	function STEP(i) {
	  return "u" + i
	}
	function STEP_CMP(i) {
	  return "v" + i
	}
	function INDEX(i) {
	  return "i" + i
	}
	function PICK(i) {
	  return "p" + i
	}
	function PTR(i) {
	  return "x" + i
	}
	
	//Create new order where index 0 is slowest index
	function permuteOrder(order) {
	  var norder = order.slice()
	  norder.splice(order.indexOf(0), 1)
	  norder.unshift(0)
	  return norder
	}
	
	//Generate quick select procedure
	function compileQuickSelect(order, useCompare, dtype) {
	  order = permuteOrder(order)
	
	  var dimension = order.length
	  var useGetter = (dtype === "generic")
	  var funcName = "ndSelect" + dtype + order.join("_") + "_" + (useCompare ? "cmp" : "lex")
	
	  var code = []
	
	  //Get arguments for code
	  var args = [ARRAY, RANK]
	  if(useCompare) {
	    args.push(CMP)
	  }
	
	  //Unpack ndarray variables
	  var vars = [
	    DATA + "=" + ARRAY + ".data",
	    OFFSET + "=" + ARRAY + ".offset|0",
	    RND + "=Math.random",
	    TMP]
	  for(var i=0; i<2; ++i) {
	    vars.push(PTR(i) + "=0")
	  }
	  for(var i=0; i<dimension; ++i) {
	    vars.push(
	      SHAPE(i) + "=" + ARRAY + ".shape[" + i + "]|0",
	      STRIDE(i) + "=" + ARRAY + ".stride[" + i + "]|0",
	      INDEX(i) + "=0")
	  }
	  for(var i=1; i<dimension; ++i) {
	    if(i > 1) {
	      vars.push(STEP_CMP(i) + "=(" + STRIDE(i) + "-" + SHAPE(i-1) + "*" + STRIDE(i-1) + ")|0",
	                STEP(order[i]) + "=(" + STRIDE(order[i]) + "-" + SHAPE(order[i-1]) + "*" + STRIDE(order[i-1]) + ")|0")
	    } else {
	      vars.push(STEP_CMP(i) + "=" + STRIDE(i),
	                STEP(order[i]) + "=" + STRIDE(order[i]))
	    }
	  }
	  if(useCompare) {
	    for(var i=0; i<2; ++i) {
	      vars.push(PICK(i) + "=" + ARRAY + ".pick(0)")
	    }
	  }
	  vars.push(
	    PIVOT + "=0",
	    LO + "=0",
	    HI + "=" + SHAPE(order[0]) + "-1")
	
	  function compare(out, i0, i1) {
	    if(useCompare) {
	      code.push(
	        PICK(0), ".offset=", OFFSET, "+", STRIDE(order[0]), "*(", i0, ");",
	        PICK(1), ".offset=", OFFSET, "+", STRIDE(order[0]), "*(", i1, ");",
	        out, "=", CMP, "(", PICK(0), ",", PICK(1), ");")
	    } else {
	      code.push(
	        PTR(0), "=", OFFSET, "+", STRIDE(0), "*(", i0, ");",
	        PTR(1), "=", OFFSET, "+", STRIDE(0), "*(", i1, ");")
	      if(dimension > 1) {
	        code.push("_cmp:")
	      }
	      for(var i=dimension-1; i>0; --i) {
	        code.push("for(", INDEX(i), "=0;", 
	          INDEX(i), "<", SHAPE(i), ";",
	          INDEX(i), "++){")
	      }
	      if(useGetter) {
	        code.push(out, "=", DATA, ".get(", PTR(0), ")-", 
	                            DATA, ".get(", PTR(1), ");")
	      } else {
	        code.push(out, "=", DATA, "[", PTR(0), "]-", 
	                            DATA, "[", PTR(1), "];")
	      }
	      if(dimension > 1) {
	        code.push("if(", out, ")break _cmp;")
	      }
	      for(var i=1; i<dimension; ++i) {
	        code.push(
	          PTR(0), "+=", STEP_CMP(i), ";",
	          PTR(1), "+=", STEP_CMP(i),
	          "}")
	      }
	    }
	  }
	
	  function swap(i0, i1) {
	    code.push(
	      PTR(0), "=", OFFSET, "+", STRIDE(order[0]), "*(", i0, ");",
	      PTR(1), "=", OFFSET, "+", STRIDE(order[0]), "*(", i1, ");")
	    for(var i=dimension-1; i>0; --i) {
	      code.push("for(", INDEX(order[i]), "=0;", 
	        INDEX(order[i]), "<", SHAPE(order[i]), ";",
	        INDEX(order[i]), "++){")
	    }
	    if(useGetter) {
	      code.push(TMP, "=", DATA, ".get(", PTR(0), ");", 
	                DATA, ".set(", PTR(0), ",", DATA, ".get(", PTR(1), "));",
	                DATA, ".set(", PTR(1), ",", TMP, ");")
	    } else {
	      code.push(TMP, "=", DATA, "[", PTR(0), "];", 
	                DATA, "[", PTR(0), "]=", DATA, "[", PTR(1), "];",
	                DATA, "[", PTR(1), "]=", TMP, ";")
	    }
	    for(var i=1; i<dimension; ++i) {
	      code.push(
	        PTR(0), "+=", STEP(order[i]), ";",
	        PTR(1), "+=", STEP(order[i]),
	        "}")
	    }
	  }
	
	  code.push(
	    "while(", LO, "<", HI, "){",
	      PIVOT, "=(", RND, "()*(", HI, "-", LO, "+1)+", LO, ")|0;")
	
	  //Partition array by pivot
	  swap(PIVOT, HI) // Store pivot temporarily at the end of the array
	
	  code.push(
	    PIVOT, "=", LO, ";", // PIVOT will now be used to keep track of the end of the interval of elements less than the pivot
	    "for(", INDEX(0), "=", LO, ";",
	      INDEX(0), "<", HI, ";",
	      INDEX(0), "++){") // Loop over other elements (unequal to the pivot), note that HI now points to the pivot
	  compare(TMP, INDEX(0), HI) // Lexicographical compare of element with pivot
	  code.push("if(", TMP, "<0){")
	  swap(PIVOT, INDEX(0)) // Swap current element with element at index PIVOT if it is less than the pivot
	  code.push(PIVOT, "++;")
	  code.push("}}")
	  swap(PIVOT, HI) // Store pivot right after all elements that are less than the pivot (implying that all elements >= the pivot are behind the pivot)
	
	  //Check pivot bounds
	  code.push(
	    "if(", PIVOT, "===", RANK, "){",
	      LO, "=", PIVOT, ";",
	      "break;",
	    "}else if(", RANK, "<", PIVOT, "){",
	      HI, "=", PIVOT, "-1;",
	    "}else{",
	      LO, "=", PIVOT, "+1;",
	    "}",
	  "}")
	
	  if(useCompare) {
	    code.push(PICK(0), ".offset=", OFFSET, "+", LO, "*", STRIDE(0), ";",
	      "return ", PICK(0), ";")
	  } else {
	    code.push("return ", ARRAY, ".pick(", LO, ");")
	  }
	
	  //Compile and link js together
	  var procCode = [
	    "'use strict';function ", funcName, "(", args, "){",
	      "var ", vars.join(), ";",
	      code.join(""),
	    "};return ", funcName
	  ].join("")
	
	  var proc = new Function(procCode)
	  return proc()
	}
	
	var CACHE = {}
	
	function lookupCache(order, useCompare, dtype) {
	  var typesig = order.join() + useCompare + dtype
	  var proc = CACHE[typesig]
	  if(proc) {
	    return proc
	  }
	  return CACHE[typesig] = compileQuickSelect(order, useCompare, dtype)
	}
	
	function ndSelect(array, k, compare) {
	  k |= 0
	  if((array.dimension === 0) || 
	    (array.shape[0] <= k) ||
	    (k < 0)) {
	    return null
	  }
	  var useCompare = !!compare
	  var proc = lookupCache(array.order, useCompare, array.dtype)
	  if(useCompare) {
	    return proc(array, k, compare)
	  } else {
	    return proc(array, k)
	  }
	}

/***/ },
/* 358 */
/***/ function(module, exports) {

	"use strict"
	
	function iota(n) {
	  var result = new Array(n)
	  for(var i=0; i<n; ++i) {
	    result[i] = i
	  }
	  return result
	}
	
	module.exports = iota

/***/ },
/* 359 */
/***/ function(module, exports) {

	/**
	 * Determine if an object is Buffer
	 *
	 * Author:   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
	 * License:  MIT
	 *
	 * `npm install is-buffer`
	 */
	
	module.exports = function (obj) {
	  return !!(obj != null &&
	    (obj._isBuffer || // For Safari 5-7 (missing Object.prototype.constructor)
	      (obj.constructor &&
	      typeof obj.constructor.isBuffer === 'function' &&
	      obj.constructor.isBuffer(obj))
	    ))
	}


/***/ },
/* 360 */
/***/ function(module, exports) {

	"use strict"
	
	function dupe_array(count, value, i) {
	  var c = count[i]|0
	  if(c <= 0) {
	    return []
	  }
	  var result = new Array(c), j
	  if(i === count.length-1) {
	    for(j=0; j<c; ++j) {
	      result[j] = value
	    }
	  } else {
	    for(j=0; j<c; ++j) {
	      result[j] = dupe_array(count, value, i+1)
	    }
	  }
	  return result
	}
	
	function dupe_number(count, value) {
	  var result, i
	  result = new Array(count)
	  for(i=0; i<count; ++i) {
	    result[i] = value
	  }
	  return result
	}
	
	function dupe(count, value) {
	  if(typeof value === "undefined") {
	    value = 0
	  }
	  switch(typeof count) {
	    case "number":
	      if(count > 0) {
	        return dupe_number(count|0, value)
	      }
	    break
	    case "object":
	      if(typeof (count.length) === "number") {
	        return dupe_array(count, value, 0)
	      }
	    break
	  }
	  return []
	}
	
	module.exports = dupe

/***/ },
/* 361 */
/***/ function(module, exports, __webpack_require__) {

	(function (global, factory) {
	   true ? factory(exports) :
	  typeof define === 'function' && define.amd ? define(['exports'], factory) :
	  (factory((global.topojson = {})));
	}(this, function (exports) { 'use strict';
	
	  function noop() {}
	
	  function absolute(transform) {
	    if (!transform) return noop;
	    var x0,
	        y0,
	        kx = transform.scale[0],
	        ky = transform.scale[1],
	        dx = transform.translate[0],
	        dy = transform.translate[1];
	    return function(point, i) {
	      if (!i) x0 = y0 = 0;
	      point[0] = (x0 += point[0]) * kx + dx;
	      point[1] = (y0 += point[1]) * ky + dy;
	    };
	  }
	
	  function relative(transform) {
	    if (!transform) return noop;
	    var x0,
	        y0,
	        kx = transform.scale[0],
	        ky = transform.scale[1],
	        dx = transform.translate[0],
	        dy = transform.translate[1];
	    return function(point, i) {
	      if (!i) x0 = y0 = 0;
	      var x1 = (point[0] - dx) / kx | 0,
	          y1 = (point[1] - dy) / ky | 0;
	      point[0] = x1 - x0;
	      point[1] = y1 - y0;
	      x0 = x1;
	      y0 = y1;
	    };
	  }
	
	  function reverse(array, n) {
	    var t, j = array.length, i = j - n;
	    while (i < --j) t = array[i], array[i++] = array[j], array[j] = t;
	  }
	
	  function bisect(a, x) {
	    var lo = 0, hi = a.length;
	    while (lo < hi) {
	      var mid = lo + hi >>> 1;
	      if (a[mid] < x) lo = mid + 1;
	      else hi = mid;
	    }
	    return lo;
	  }
	
	  function feature(topology, o) {
	    return o.type === "GeometryCollection" ? {
	      type: "FeatureCollection",
	      features: o.geometries.map(function(o) { return feature$1(topology, o); })
	    } : feature$1(topology, o);
	  }
	
	  function feature$1(topology, o) {
	    var f = {
	      type: "Feature",
	      id: o.id,
	      properties: o.properties || {},
	      geometry: object(topology, o)
	    };
	    if (o.id == null) delete f.id;
	    return f;
	  }
	
	  function object(topology, o) {
	    var absolute$$ = absolute(topology.transform),
	        arcs = topology.arcs;
	
	    function arc(i, points) {
	      if (points.length) points.pop();
	      for (var a = arcs[i < 0 ? ~i : i], k = 0, n = a.length, p; k < n; ++k) {
	        points.push(p = a[k].slice());
	        absolute$$(p, k);
	      }
	      if (i < 0) reverse(points, n);
	    }
	
	    function point(p) {
	      p = p.slice();
	      absolute$$(p, 0);
	      return p;
	    }
	
	    function line(arcs) {
	      var points = [];
	      for (var i = 0, n = arcs.length; i < n; ++i) arc(arcs[i], points);
	      if (points.length < 2) points.push(points[0].slice());
	      return points;
	    }
	
	    function ring(arcs) {
	      var points = line(arcs);
	      while (points.length < 4) points.push(points[0].slice());
	      return points;
	    }
	
	    function polygon(arcs) {
	      return arcs.map(ring);
	    }
	
	    function geometry(o) {
	      var t = o.type;
	      return t === "GeometryCollection" ? {type: t, geometries: o.geometries.map(geometry)}
	          : t in geometryType ? {type: t, coordinates: geometryType[t](o)}
	          : null;
	    }
	
	    var geometryType = {
	      Point: function(o) { return point(o.coordinates); },
	      MultiPoint: function(o) { return o.coordinates.map(point); },
	      LineString: function(o) { return line(o.arcs); },
	      MultiLineString: function(o) { return o.arcs.map(line); },
	      Polygon: function(o) { return polygon(o.arcs); },
	      MultiPolygon: function(o) { return o.arcs.map(polygon); }
	    };
	
	    return geometry(o);
	  }
	
	  function stitchArcs(topology, arcs) {
	    var stitchedArcs = {},
	        fragmentByStart = {},
	        fragmentByEnd = {},
	        fragments = [],
	        emptyIndex = -1;
	
	    // Stitch empty arcs first, since they may be subsumed by other arcs.
	    arcs.forEach(function(i, j) {
	      var arc = topology.arcs[i < 0 ? ~i : i], t;
	      if (arc.length < 3 && !arc[1][0] && !arc[1][1]) {
	        t = arcs[++emptyIndex], arcs[emptyIndex] = i, arcs[j] = t;
	      }
	    });
	
	    arcs.forEach(function(i) {
	      var e = ends(i),
	          start = e[0],
	          end = e[1],
	          f, g;
	
	      if (f = fragmentByEnd[start]) {
	        delete fragmentByEnd[f.end];
	        f.push(i);
	        f.end = end;
	        if (g = fragmentByStart[end]) {
	          delete fragmentByStart[g.start];
	          var fg = g === f ? f : f.concat(g);
	          fragmentByStart[fg.start = f.start] = fragmentByEnd[fg.end = g.end] = fg;
	        } else {
	          fragmentByStart[f.start] = fragmentByEnd[f.end] = f;
	        }
	      } else if (f = fragmentByStart[end]) {
	        delete fragmentByStart[f.start];
	        f.unshift(i);
	        f.start = start;
	        if (g = fragmentByEnd[start]) {
	          delete fragmentByEnd[g.end];
	          var gf = g === f ? f : g.concat(f);
	          fragmentByStart[gf.start = g.start] = fragmentByEnd[gf.end = f.end] = gf;
	        } else {
	          fragmentByStart[f.start] = fragmentByEnd[f.end] = f;
	        }
	      } else {
	        f = [i];
	        fragmentByStart[f.start = start] = fragmentByEnd[f.end = end] = f;
	      }
	    });
	
	    function ends(i) {
	      var arc = topology.arcs[i < 0 ? ~i : i], p0 = arc[0], p1;
	      if (topology.transform) p1 = [0, 0], arc.forEach(function(dp) { p1[0] += dp[0], p1[1] += dp[1]; });
	      else p1 = arc[arc.length - 1];
	      return i < 0 ? [p1, p0] : [p0, p1];
	    }
	
	    function flush(fragmentByEnd, fragmentByStart) {
	      for (var k in fragmentByEnd) {
	        var f = fragmentByEnd[k];
	        delete fragmentByStart[f.start];
	        delete f.start;
	        delete f.end;
	        f.forEach(function(i) { stitchedArcs[i < 0 ? ~i : i] = 1; });
	        fragments.push(f);
	      }
	    }
	
	    flush(fragmentByEnd, fragmentByStart);
	    flush(fragmentByStart, fragmentByEnd);
	    arcs.forEach(function(i) { if (!stitchedArcs[i < 0 ? ~i : i]) fragments.push([i]); });
	
	    return fragments;
	  }
	
	  function mesh(topology) {
	    return object(topology, meshArcs.apply(this, arguments));
	  }
	
	  function meshArcs(topology, o, filter) {
	    var arcs = [];
	
	    function arc(i) {
	      var j = i < 0 ? ~i : i;
	      (geomsByArc[j] || (geomsByArc[j] = [])).push({i: i, g: geom});
	    }
	
	    function line(arcs) {
	      arcs.forEach(arc);
	    }
	
	    function polygon(arcs) {
	      arcs.forEach(line);
	    }
	
	    function geometry(o) {
	      if (o.type === "GeometryCollection") o.geometries.forEach(geometry);
	      else if (o.type in geometryType) geom = o, geometryType[o.type](o.arcs);
	    }
	
	    if (arguments.length > 1) {
	      var geomsByArc = [],
	          geom;
	
	      var geometryType = {
	        LineString: line,
	        MultiLineString: polygon,
	        Polygon: polygon,
	        MultiPolygon: function(arcs) { arcs.forEach(polygon); }
	      };
	
	      geometry(o);
	
	      geomsByArc.forEach(arguments.length < 3
	          ? function(geoms) { arcs.push(geoms[0].i); }
	          : function(geoms) { if (filter(geoms[0].g, geoms[geoms.length - 1].g)) arcs.push(geoms[0].i); });
	    } else {
	      for (var i = 0, n = topology.arcs.length; i < n; ++i) arcs.push(i);
	    }
	
	    return {type: "MultiLineString", arcs: stitchArcs(topology, arcs)};
	  }
	
	  function triangle(triangle) {
	    var a = triangle[0], b = triangle[1], c = triangle[2];
	    return Math.abs((a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]));
	  }
	
	  function ring(ring) {
	    var i = -1,
	        n = ring.length,
	        a,
	        b = ring[n - 1],
	        area = 0;
	
	    while (++i < n) {
	      a = b;
	      b = ring[i];
	      area += a[0] * b[1] - a[1] * b[0];
	    }
	
	    return area / 2;
	  }
	
	  function merge(topology) {
	    return object(topology, mergeArcs.apply(this, arguments));
	  }
	
	  function mergeArcs(topology, objects) {
	    var polygonsByArc = {},
	        polygons = [],
	        components = [];
	
	    objects.forEach(function(o) {
	      if (o.type === "Polygon") register(o.arcs);
	      else if (o.type === "MultiPolygon") o.arcs.forEach(register);
	    });
	
	    function register(polygon) {
	      polygon.forEach(function(ring$$) {
	        ring$$.forEach(function(arc) {
	          (polygonsByArc[arc = arc < 0 ? ~arc : arc] || (polygonsByArc[arc] = [])).push(polygon);
	        });
	      });
	      polygons.push(polygon);
	    }
	
	    function exterior(ring$$) {
	      return ring(object(topology, {type: "Polygon", arcs: [ring$$]}).coordinates[0]) > 0; // TODO allow spherical?
	    }
	
	    polygons.forEach(function(polygon) {
	      if (!polygon._) {
	        var component = [],
	            neighbors = [polygon];
	        polygon._ = 1;
	        components.push(component);
	        while (polygon = neighbors.pop()) {
	          component.push(polygon);
	          polygon.forEach(function(ring$$) {
	            ring$$.forEach(function(arc) {
	              polygonsByArc[arc < 0 ? ~arc : arc].forEach(function(polygon) {
	                if (!polygon._) {
	                  polygon._ = 1;
	                  neighbors.push(polygon);
	                }
	              });
	            });
	          });
	        }
	      }
	    });
	
	    polygons.forEach(function(polygon) {
	      delete polygon._;
	    });
	
	    return {
	      type: "MultiPolygon",
	      arcs: components.map(function(polygons) {
	        var arcs = [], n;
	
	        // Extract the exterior (unique) arcs.
	        polygons.forEach(function(polygon) {
	          polygon.forEach(function(ring$$) {
	            ring$$.forEach(function(arc) {
	              if (polygonsByArc[arc < 0 ? ~arc : arc].length < 2) {
	                arcs.push(arc);
	              }
	            });
	          });
	        });
	
	        // Stitch the arcs into one or more rings.
	        arcs = stitchArcs(topology, arcs);
	
	        // If more than one ring is returned,
	        // at most one of these rings can be the exterior;
	        // this exterior ring has the same winding order
	        // as any exterior ring in the original polygons.
	        if ((n = arcs.length) > 1) {
	          var sgn = exterior(polygons[0][0]);
	          for (var i = 0, t; i < n; ++i) {
	            if (sgn === exterior(arcs[i])) {
	              t = arcs[0], arcs[0] = arcs[i], arcs[i] = t;
	              break;
	            }
	          }
	        }
	
	        return arcs;
	      })
	    };
	  }
	
	  function neighbors(objects) {
	    var indexesByArc = {}, // arc index -> array of object indexes
	        neighbors = objects.map(function() { return []; });
	
	    function line(arcs, i) {
	      arcs.forEach(function(a) {
	        if (a < 0) a = ~a;
	        var o = indexesByArc[a];
	        if (o) o.push(i);
	        else indexesByArc[a] = [i];
	      });
	    }
	
	    function polygon(arcs, i) {
	      arcs.forEach(function(arc) { line(arc, i); });
	    }
	
	    function geometry(o, i) {
	      if (o.type === "GeometryCollection") o.geometries.forEach(function(o) { geometry(o, i); });
	      else if (o.type in geometryType) geometryType[o.type](o.arcs, i);
	    }
	
	    var geometryType = {
	      LineString: line,
	      MultiLineString: polygon,
	      Polygon: polygon,
	      MultiPolygon: function(arcs, i) { arcs.forEach(function(arc) { polygon(arc, i); }); }
	    };
	
	    objects.forEach(geometry);
	
	    for (var i in indexesByArc) {
	      for (var indexes = indexesByArc[i], m = indexes.length, j = 0; j < m; ++j) {
	        for (var k = j + 1; k < m; ++k) {
	          var ij = indexes[j], ik = indexes[k], n;
	          if ((n = neighbors[ij])[i = bisect(n, ik)] !== ik) n.splice(i, 0, ik);
	          if ((n = neighbors[ik])[i = bisect(n, ij)] !== ij) n.splice(i, 0, ij);
	        }
	      }
	    }
	
	    return neighbors;
	  }
	
	  function compareArea(a, b) {
	    return a[1][2] - b[1][2];
	  }
	
	  function minAreaHeap() {
	    var heap = {},
	        array = [],
	        size = 0;
	
	    heap.push = function(object) {
	      up(array[object._ = size] = object, size++);
	      return size;
	    };
	
	    heap.pop = function() {
	      if (size <= 0) return;
	      var removed = array[0], object;
	      if (--size > 0) object = array[size], down(array[object._ = 0] = object, 0);
	      return removed;
	    };
	
	    heap.remove = function(removed) {
	      var i = removed._, object;
	      if (array[i] !== removed) return; // invalid request
	      if (i !== --size) object = array[size], (compareArea(object, removed) < 0 ? up : down)(array[object._ = i] = object, i);
	      return i;
	    };
	
	    function up(object, i) {
	      while (i > 0) {
	        var j = ((i + 1) >> 1) - 1,
	            parent = array[j];
	        if (compareArea(object, parent) >= 0) break;
	        array[parent._ = i] = parent;
	        array[object._ = i = j] = object;
	      }
	    }
	
	    function down(object, i) {
	      while (true) {
	        var r = (i + 1) << 1,
	            l = r - 1,
	            j = i,
	            child = array[j];
	        if (l < size && compareArea(array[l], child) < 0) child = array[j = l];
	        if (r < size && compareArea(array[r], child) < 0) child = array[j = r];
	        if (j === i) break;
	        array[child._ = i] = child;
	        array[object._ = i = j] = object;
	      }
	    }
	
	    return heap;
	  }
	
	  function presimplify(topology, triangleArea) {
	    var absolute$$ = absolute(topology.transform),
	        relative$$ = relative(topology.transform),
	        heap = minAreaHeap();
	
	    if (!triangleArea) triangleArea = triangle;
	
	    topology.arcs.forEach(function(arc) {
	      var triangles = [],
	          maxArea = 0,
	          triangle,
	          i,
	          n,
	          p;
	
	      // To store each point’s effective area, we create a new array rather than
	      // extending the passed-in point to workaround a Chrome/V8 bug (getting
	      // stuck in smi mode). For midpoints, the initial effective area of
	      // Infinity will be computed in the next step.
	      for (i = 0, n = arc.length; i < n; ++i) {
	        p = arc[i];
	        absolute$$(arc[i] = [p[0], p[1], Infinity], i);
	      }
	
	      for (i = 1, n = arc.length - 1; i < n; ++i) {
	        triangle = arc.slice(i - 1, i + 2);
	        triangle[1][2] = triangleArea(triangle);
	        triangles.push(triangle);
	        heap.push(triangle);
	      }
	
	      for (i = 0, n = triangles.length; i < n; ++i) {
	        triangle = triangles[i];
	        triangle.previous = triangles[i - 1];
	        triangle.next = triangles[i + 1];
	      }
	
	      while (triangle = heap.pop()) {
	        var previous = triangle.previous,
	            next = triangle.next;
	
	        // If the area of the current point is less than that of the previous point
	        // to be eliminated, use the latter's area instead. This ensures that the
	        // current point cannot be eliminated without eliminating previously-
	        // eliminated points.
	        if (triangle[1][2] < maxArea) triangle[1][2] = maxArea;
	        else maxArea = triangle[1][2];
	
	        if (previous) {
	          previous.next = next;
	          previous[2] = triangle[2];
	          update(previous);
	        }
	
	        if (next) {
	          next.previous = previous;
	          next[0] = triangle[0];
	          update(next);
	        }
	      }
	
	      arc.forEach(relative$$);
	    });
	
	    function update(triangle) {
	      heap.remove(triangle);
	      triangle[1][2] = triangleArea(triangle);
	      heap.push(triangle);
	    }
	
	    return topology;
	  }
	
	  var version = "1.6.24";
	
	  exports.version = version;
	  exports.mesh = mesh;
	  exports.meshArcs = meshArcs;
	  exports.merge = merge;
	  exports.mergeArcs = mergeArcs;
	  exports.feature = feature;
	  exports.neighbors = neighbors;
	  exports.presimplify = presimplify;
	
	}));

/***/ },
/* 362 */
/***/ function(module, exports, __webpack_require__) {

	var buckets = __webpack_require__(30),
	    fetchValue = __webpack_require__(3),
	    print      = __webpack_require__(2)
	//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	// Sets color range of data, if applicable
	//-------------------------------------------------------------------
	module.exports = function(vars) {
	
	  if ( vars.dev.value ) print.time("getting color data range")
	
	  var data_range = []
	  vars.data.pool.forEach(function(d){
	    var val = parseFloat(fetchValue(vars,d,vars.color.value))
	    if (typeof val == "number" && !isNaN(val) && data_range.indexOf(val) < 0) data_range.push(val)
	  })
	
	  if ( vars.dev.value ) print.timeEnd("getting color data range")
	
	  if (data_range.length > 1) {
	
	    var data_domain = null
	
	    if ( vars.dev.value ) print.time("calculating color scale")
	
	    data_range = d3.extent(data_range)
	
	    if (data_range[0] < 0 && data_range[1] > 0) {
	      var color_range = vars.color.range
	      if (color_range.length == 3) {
	        data_range.push(data_range[1])
	        data_range[1] = 0
	      }
	    }
	    else if (data_range[1] > 0 && data_range[0] >= 0) {
	      var color_range = vars.color.heatmap
	      data_range = buckets(data_range,color_range.length)
	    }
	    else {
	      var color_range = vars.color.range.slice(0)
	      if (data_range[0] < 0) {
	        color_range.pop()
	      }
	      else {
	        color_range.shift()
	      }
	    }
	
	    vars.color.valueScale = d3.scale.sqrt()
	      .domain(data_range)
	      .range(color_range)
	      .interpolate(d3.interpolateRgb)
	
	    if ( vars.dev.value ) print.timeEnd("calculating color scale")
	
	  }
	  else {
	    vars.color.valueScale = null
	  }
	
	}


/***/ },
/* 363 */
/***/ function(module, exports, __webpack_require__) {

	var fetchValue = __webpack_require__(3),
	    print       = __webpack_require__(2),
	    validObject = __webpack_require__(7)
	//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	// Restricts data based on Solo/Mute filters
	//------------------------------------------------------------------------------
	module.exports = function( vars , data ) {
	
	  if ( vars.dev.value ) print.time("filtering data")
	
	  var availableKeys = d3.keys(vars.data.keys || {})
	
	  if ( "attrs" in vars ) {
	    availableKeys = availableKeys.concat(d3.keys(vars.attrs.keys || {}))
	  }
	
	  data = data.filter(function(d){
	    var val = fetchValue(vars, d, vars.id.value);
	    return val !== null;
	  });
	
	  var typeReqs = vars.types[vars.type.value].requirements || [];
	
	  vars.data.filters.forEach( function( key ) {
	
	    if (availableKeys.indexOf(vars[key].value) >= 0 &&
	        typeReqs.indexOf(key) >= 0) {
	
	      data = data.filter( function( d ) {
	
	        var val = fetchValue(vars,d,vars[key].value);
	
	        if (key === "y" && vars.y2.value && val === null) {
	          val = fetchValue(vars,d,vars.y2.value);
	        }
	        else if (key === "x" && vars.x2.value && val === null) {
	          val = fetchValue(vars,d,vars.x2.value);
	        }
	
	        if ( key === "size" ) {
	          return typeof val === "number"
	        }
	        else {
	          return val !== null
	        }
	
	      })
	
	    }
	
	  });
	
	  // if "solo", only check against "solo" (disregard "mute")
	  var key = vars.data.solo.length ? "solo" : "mute";
	
	  if (vars.data[key].length) {
	
	    vars.data[key].forEach(function(v) {
	
	      function test_value(val) {
	
	        var arr = vars[v][key].value;
	
	        var match = false;
	        arr.forEach(function(f){
	          if (typeof f === "function") {
	            match = f(val);
	          }
	          else if (f === val) {
	            match = true;
	          }
	
	        })
	
	        return key === "solo" ? match : !match;
	
	      }
	
	      function filter_data(d, flat) {
	        if (!flat && vars[v].nesting) {
	          var nesting = vars[v].nesting;
	          if (validObject(nesting)) {
	            nesting = d3.values(nesting);
	          }
	          for (var n = 0; n < nesting.length; n++) {
	            var new_data = d.filter(function(dd){
	              return test_value(fetchValue(vars, dd, nesting[n]));
	            });
	            if (new_data.length) d = new_data;
	          }
	        }
	        else {
	          d = d.filter(function(dd){
	            return test_value(fetchValue(vars, dd, vars[v].value));
	          });
	        }
	        return d;
	      }
	
	      data = filter_data(data);
	
	      if ( v === "id" ) {
	
	        if ("nodes" in vars && vars.nodes.value) {
	          if ( vars.dev.value ) print.time("filtering nodes")
	          vars.nodes.restricted = filter_data(vars.nodes.value);
	          if ( vars.dev.value ) print.timeEnd("filtering nodes")
	        }
	
	        if ("edges" in vars && vars.edges.value) {
	          if ( vars.dev.value ) print.time("filtering edges")
	          vars.edges.restricted = vars.edges.value.filter(function(d){
	            var points = filter_data([d[vars.edges.source], d[vars.edges.target]]);
	            return points.length === 2;
	          })
	          if ( vars.dev.value ) print.timeEnd("filtering edges")
	        }
	
	      }
	
	    })
	
	  }
	  else if ("nodes" in vars) {
	    vars.nodes.restricted = undefined;
	    vars.edges.restricted = undefined;
	  }
	
	  if ( vars.dev.value ) print.timeEnd("filtering data")
	
	  return data
	
	}


/***/ },
/* 364 */
/***/ function(module, exports) {

	module.exports = {
	    "format": {
	        "decimal": ",",
	        "thousands": ".",
	        "grouping": [3],
	        "currency": ["", " €"],
	        "dateTime": "%A, %e de %B de %Y, %X",
	        "date": "%d/%m/%Y",
	        "time": "%H:%M:%S",
	        "periods": ["AM", "PM"],
	        "days": ["domingo", "lunes", "martes", "miércoles", "jueves", "viernes", "sábado"],
	        "shortDays": ["dom", "lun", "mar", "mié", "jue", "vie", "sáb"],
	        "months": ["enero", "febrero", "marzo", "abril", "mayo", "junio", "julio", "agosto", "septiembre", "octubre", "noviembre", "diciembre"],
	        "shortMonths": ["ene", "feb", "mar", "abr", "may", "jun", "jul", "ago", "sep", "oct", "nov", "dic"]
	    },
	    "dev": {
	        "accepted": "{0} no es un valor aceptado para {1}, por favor utilice uno de los siguientes: {2}.",
	        "deprecated": "el método {0} ha sido eliminado, por favor, actualiza tu código para utilizar {1}.",
	        "noChange": "{0} no se actualiza porque no cambió.",
	        "noContainer": "no se puede encontrar un contenedor en la página correspondiente a {0}.",
	        "of": "de",
	        "oldStyle": "propiedades de estilo para {0} ahora se han incorporado directamente en. {1} ().",
	        "sameEdge": "los vínculos no se pueden enlazar con si mismos. eliminando automáticamente el vínculo {0} que se autorreferencia.",
	        "set": "{0} se ha establecido.",
	        "setLong": "{0} ha sido establecido a {1}.",
	        "setContainer": "defina un div contenedor utilizando .container ()"
	    },
	    "error": {
	        "accepted": "{0} no es un {1} aceptado para visualizaciones de {2}, por favor utilice uno de los siguientes: {3}.",
	        "connections": "no hay conexiones disponibles para {0}.",
	        "data": "No hay datos disponibles",
	        "dataYear": "no hay datos disponibles para {0}.",
	        "lib": "{0} visualizaciones requieren cargar las siguientes librerías: {1}.",
	        "libs": "{0} visualizaciones requieren cargar las siguientes librerías: {1}.",
	        "method": "{0} visualizaciones requieren establecer el ​​método {1}.",
	        "methods": "{0} visualizaciones requieren establecer los siguientes métodos: {1}."
	    },
	    "lowercase": [
	        "una",
	        "y",
	        "en",
	        "pero",
	        "en",
	        "de",
	        "o",
	        "el",
	        "la",
	        "los",
	        "las",
	        "para",
	        "a",
	        "con"
	    ],
	    "method": {
	        "active": "segmentos activos",
	        "color": "color",
	        "depth": "profundidad",
	        "dev": "detallado",
	        "focus": "foco",
	        "icon": "ícono",
	        "id": "id",
	        "height": "alto",
	        "labels": "rótulo",
	        "legend": "leyenda",
	        "margin": "margen",
	        "messages": "mensajes de estado",
	        "mute": "ocultar",
	        "order": "orden",
	        "search": "búsqueda",
	        "shape": "forma",
	        "size": "tamaño",
	        "solo": "aislar",
	        "style": "estilo",
	        "temp": "segmentos temporales",
	        "text": "texto",
	        "time": "tiempo",
	        "timeline": "línea de tiempo",
	        "total": "segmentos totales",
	        "type": "tipo",
	        "width": "anchura",
	        "x": "eje x",
	        "y": "eje Y",
	        "zoom": "#ERROR!",
	        "mode": "modo"
	    },
	    "time": [
	        "fecha",
	        "día",
	        "mes",
	        "hora",
	        "año"
	    ],
	    "visualization": {
	        "bubbles": "Burbujas",
	        "chart": "Tabla",
	        "geo_map": "Mapa Geo",
	        "line": "Línea Solar",
	        "network": "Red",
	        "rings": "Anillos",
	        "scatter": "Gráfico De Dispersión",
	        "stacked": "Área Apilada",
	        "tree_map": "Mapa de Árbol",
	        "bar": "Gráfico De Barras",
	        "box": "Diagrama de Cajas",
	        "paths": "Caminos",
	        "pie": "Gráfico de Pastel",
	        "table": "Tabla"
	    },
	    "ui": {
	        "and": "y",
	        "back": "atrás",
	        "collapse": "click para cerrar",
	        "error": "error",
	        "expand": "haga clic para ampliar",
	        "loading": "Cargando ...",
	        "more": "{0} más",
	        "moreInfo": "clic para más información",
	        "noResults": "no se encontraron resultados para {0}.",
	        "primary": "relaciones principales",
	        "share": "porcentaje",
	        "total": "total",
	        "values": "valores",
	        "including": "Incluyendo",
	        "or": "o"
	    },
	    "message": {
	        "data": "analizando los datos",
	        "draw": "visualizando",
	        "initializing": "inicializando {0}",
	        "loading": "cargando datos",
	        "tooltipReset": "restableciendo las descripciones emergentes",
	        "ui": "actualizando la interfaz de usuario"
	    },
	    "uppercase": [
	        "CEO",
	        "CEOs",
	        "CFO",
	        "CFOs",
	        "CNC",
	        "COO",
	        "COOs",
	        "CPU",
	        "CPUs",
	        "PIB",
	        "HVAC",
	        "ID",
	        "TI",
	        "I&D",
	        "TV",
	        "UI"
	    ]
	}


/***/ },
/* 365 */
/***/ function(module, exports) {

	module.exports = {
	    "format": {
	        "decimal": ",",
	        "thousands": ".",
	        "grouping": [3],
	        "currency": ["", " €"],
	        "dateTime": "%A, le %e %B %Y, %X",
	        "date": "%d/%m/%Y",
	        "time": "%H:%M:%S",
	        "periods": ["AM", "PM"], // unused
	        "days": ["dimanche", "lundi", "mardi", "mercredi", "jeudi", "vendredi", "samedi"],
	        "shortDays": ["dim.", "lun.", "mar.", "mer.", "jeu.", "ven.", "sam."],
	        "months": ["janvier", "février", "mars", "avril", "mai", "juin", "juillet", "août", "septembre", "octobre", "novembre", "décembre"],
	        "shortMonths": ["janv.", "févr.", "mars", "avr.", "mai", "juin", "juil.", "août", "sept.", "oct.", "nov.", "déc."]
	    },
	    "dev": {
	        "accepted": "{0} n'est pas une option valide pour {1}, les valeurs possibles sont: {2}.",
	        "deprecated": "{0} a été éliminé de la version courante, mettez à jour votre code source avec {1}.",
	        "noChange": "{0} n'a pas été mis à jour car inchangé.",
	        "noContainer": "impossible de trouver un contenant correspondant à {0}.",
	        "of": "de",
	        "oldStyle": "les propriétés de {0} ont été imbriquées dans .{1}().",
	        "sameEdge": "un arc ne peut pas boucler sur lui même. L'auto-référence est automatiquement éliminée {0}.",
	        "set": "{0} a été mis à jour.",
	        "setLong": "{0} a été mis à jour à {1}.",
	        "setContainer": "merci de choisir un div qui utilise .container()"
	    },
	    "error": {
	        "accepted": "{0} n'est pas correct {1} pour {2} visualisations, merci d'utilisez une des options suivantes: {3}.",
	        "connections": "Pas de connections disponibles pour {0}.",
	        "data": "Pas de données disponibles",
	        "dataYear": "Pas de données disponibles pour {0}.",
	        "lib": "La visualisation de {0} nécessite le chargement de la librairie {1}.",
	        "libs": "La visualisation de {0} nécessite le chargement des librairies {1}.",
	        "method": "La visualisation du {0} exige la définition de {1}.",
	        "methods": "La visualisation du {0} exige les définitions de {1}."
	    },
	    "lowercase": [
	        "un",
	        "une",
	        "de",
	        "des",
	        "et",
	        "mais",
	        "les",
	        "ou",
	        "pour",
	        "avec",
	        "comme",
	        "par",
	        "vers",
	        "si",
	        "dans",
	        "près",
	        "ni",
	        "dessus",
	        "que",
	        "le",
	        "la",
	        "via",
	        "sinon",
	        "alors"
	    ],
	    "method": {
	        "active": "segments actifs",
	        "color": "couleur",
	        "depth": "profondeur",
	        "dev": "verbeux",
	        "focus": "focus",
	        "icon": "ícone",
	        "id": "id",
	        "height": "hauteur",
	        "labels": "labels",
	        "legend": "légende",
	        "margin": "marge",
	        "messages": "messages",
	        "mute": "cacher",
	        "order": "ordre",
	        "search": "recherche",
	        "shape": "format",
	        "size": "taille",
	        "solo": "isoler",
	        "style": "style",
	        "temp": "segments temporaires",
	        "text": "texte",
	        "time": "temps",
	        "timeline": "ligne temporelle",
	        "total": "segments totaux",
	        "type": "type",
	        "width": "largeur",
	        "x": "axe x",
	        "y": "axe y",
	        "zoom": "zoom",
	        "mode": "mode"
	    },
	    "time": [
	        "année",
	        "date",
	        "jour",
	        "heure",
	        "mois"
	    ],
	    "visualization": {
	        "bubbles": "Bulles",
	        "chart": "Graphique",
	        "geo_map": "Carte",
	        "line": "Courbes",
	        "network": "Réseau",
	        "rings": "Anneaux",
	        "scatter": "Nuage de points",
	        "stacked": "Aires empilées",
	        "tree_map": "Arbre",
	        "bar": "Diagramme en barres",
	        "box": "Boîtes à Moustaches",
	        "paths": "Chemins",
	        "pie": "Camembert",
	        "table": "Table"
	    },
	    "ui": {
	        "and": "et",
	        "back": "retour",
	        "collapse": "clic pour réduire",
	        "error": "erreur",
	        "expand": "clic pour agrandir",
	        "loading": "chargement ...",
	        "more": "plus {0}",
	        "moreInfo": "clic pour plus d'information",
	        "noResults": "pas de résultat correspondant à {0}.",
	        "primary": "connections primaires",
	        "share": "part",
	        "total": "total",
	        "values": "valeurs",
	        "including": "incluant",
	        "or": "ou"
	    },
	    "message": {
	        "data": "analyse des données",
	        "draw": "tracé en cours",
	        "initializing": "Initialisation {0}",
	        "loading": "chargement",
	        "tooltipReset": "réinitialisation des bulles",
	        "ui": "rafraichissement de l'interface"
	    },
	    "uppercase": [
	        "CEO",
	        "CEOs",
	        "CFO",
	        "CFOs",
	        "CNC",
	        "COO",
	        "COOs",
	        "CPU",
	        "CPUs",
	        "PIB",
	        "HVAC",
	        "ID",
	        "IT",
	        "TV",
	        "UI"
	    ]
	}


/***/ },
/* 366 */
/***/ function(module, exports) {

	module.exports = {
	    "format": {
	        "decimal": ".",
	        "thousands": ",",
	        "grouping": [3],
	        "currency": ["₩", ""],
	        "dateTime": "%Y/%m/%d %a %X",
	        "date": "%Y/%m/%d",
	        "time": "%H:%M:%S",
	        "periods": ["오전", "오후"],
	        "days": ["일요일", "월요일", "화요일", "수요일", "목요일", "금요일", "토요일"],
	        "shortDays": ["일", "월", "화", "수", "목", "금", "토"],
	        "months": ["1월", "2월", "3월", "4월", "5월", "6월", "7월", "8월", "9월", "10월", "11월", "12월"],
	        "shortMonths": ["1월", "2월", "3월", "4월", "5월", "6월", "7월", "8월", "9월", "10월", "11월", "12월"]
	    },
	    "dev": {
	        "accepted": "{0} {1}, 다음 중 하나를 사용하십시오에 대한 허용 값이 아닙니다 : {2}.",
	        "deprecated": "{0} 메소드가 제거 된, 사용하는 코드를 업데이트하십시오 {1}.",
	        "noChange": "{0}이 변경되지 않았기 때문에 업데이트되지 않았습니다.",
	        "noContainer": "페이지 매칭 {0}에 컨테이너를 찾을 수 없다.",
	        "of": "의",
	        "oldStyle": "{0} 지금에 직접 내장 된위한 스타일의 호텔 .{1}().",
	        "sameEdge": "가장자리는 자신에 링크 할 수 없습니다. 자동으로 자체 참조 가장자리 {0}을 제거하는 단계를 포함한다.",
	        "set": "{0} 설정되어 있습니다.",
	        "setLong": "{0} {1}로 설정되어 있습니다.",
	        "setContainer": ".container() 사용하여 컨테이너 사업부를 정의하십시오"
	    },
	    "error": {
	        "accepted": "{0} 아니다 허용 {1} {2} 시각화는 다음 중 하나를 사용하시기 바랍니다 : {3}.",
	        "connections": "{0}에 대한 연결이 없음.",
	        "data": "자료 없음",
	        "dataYear": "{0}에 대한 자료가 없음.",
	        "lib": "{0} 시각화는 {1} 라이브러리를로드 할 필요합니다.",
	        "libs": "{0} 시각화는 다음과 같은 라이브러리를로드 할 필요 : {1}.",
	        "method": "{0} 시각화를 위해 {1} 메서드를 설정해야 한다.",
	        "methods": "{0} 시각화를 위해 다음과 같은 메서드를 설정해야한다: {1}."
	    },
	    "lowercase": [],
	    "method": {
	        "active": "활성 세그먼트",
	        "color": "색",
	        "depth": "깊이",
	        "dev": "풀어서",
	        "focus": "초점",
	        "icon": "상",
	        "id": "신분증",
	        "height": "높이",
	        "labels": "라벨",
	        "legend": "범례",
	        "margin": "여유",
	        "messages": "상태 메시지",
	        "order": "주문",
	        "search": "수색",
	        "shape": "모양",
	        "size": "크기",
	        "style": "스타일",
	        "temp": "임시 세그먼트",
	        "text": "본문",
	        "time": "시각",
	        "timeline": "타임 라인",
	        "total": "총 세그먼트",
	        "type": "유형",
	        "width": "폭",
	        "x": "X 축",
	        "y": "Y 축",
	        "zoom": "줌",
	        "mode": "모드",
	        "mute": "숨김",
	        "solo": "독주"
	    },
	    "time": [
	        "날짜",
	        "요일",
	        "월",
	        "시간",
	        "년"
	    ],
	    "visualization": {
	        "bubbles": "버블 차트",
	        "chart": "차트",
	        "geo_map": "지도형",
	        "line": "선형 그래프",
	        "network": "네트워크 그래프",
	        "rings": "반지",
	        "scatter": "산포도",
	        "stacked": "스택 영역",
	        "tree_map": "트리 맵",
	        "bar": "막대 차트",
	        "box": "박스 플롯",
	        "paths": "경로",
	        "pie": "파이 차트",
	        "table": "표"
	    },
	    "ui": {
	        "and": "과",
	        "back": "뒤로",
	        "collapse": "축소하려면 클릭",
	        "error": "오류",
	        "expand": "확장하려면 클릭",
	        "loading": "로드 중 ...",
	        "more": "{0} 이상",
	        "moreInfo": "추가 정보를 위해 클릭하십시오",
	        "noResults": "일치하는 결과값이 없음 {0}.",
	        "primary": "기본 연결",
	        "share": "비중",
	        "total": "합계",
	        "values": "값",
	        "including": "...을 포함하여",
	        "or": "또는"
	    },
	    "message": {
	        "data": "데이터 분석 중",
	        "draw": "데이터 시각화 중",
	        "initializing": "초기화 {0}",
	        "loading": "데이터 로딩 중",
	        "tooltipReset": "툴팁을 재설정",
	        "ui": "UI 업데이트 중"
	    },
	    "uppercase": [
	        "CEO",
	        "최고 경영자",
	        "최고 재무 책임자 (CFO)",
	        "CFO는",
	        "CNC",
	        "COO",
	        "구구",
	        "CPU",
	        "CPU를",
	        "국내 총생산 (GDP)",
	        "HVAC",
	        "ID",
	        "IT",
	        "R & D",
	        "TV",
	        "UI"
	    ]
	}


/***/ },
/* 367 */
/***/ function(module, exports) {

	module.exports = {
	    "format": {
	        "decimal": ",",
	        "thousands": ".",
	        "grouping": [3],
	        "currency": ["", " ден."],
	        "dateTime": "%A, %e %B %Y г. %X",
	        "date": "%d.%m.%Y",
	        "time": "%H:%M:%S",
	        "periods": ["AM", "PM"],
	        "days": ["недела", "понеделник", "вторник", "среда", "четврток", "петок", "сабота"],
	        "shortDays": ["нед", "пон", "вто", "сре", "чет", "пет", "саб"],
	        "months": ["јануари", "февруари", "март", "април", "мај", "јуни", "јули", "август", "септември", "октомври", "ноември", "декември"],
	        "shortMonths": ["јан", "фев", "мар", "апр", "мај", "јун", "јул", "авг", "сеп", "окт", "ное", "дек"]
	    },
	    "dev": {
	        "accepted": "{0} не е прифатенa вредноста за {1}, ве молиме користете еднa од следниве вредности: {2}.",
	        "deprecated": "{0} метод е отстранета, ве молиме обновете го вашиот код за да се користи {1}.",
	        "noChange": "{0} не е ажурирана, бидејќи немаше промени.",
	        "noContainer": "не можe да се најде контејнер на страницата кој се совпаѓа со {0}.",
	        "of": "на",
	        "oldStyle": "својствата за стилот за {0} сега се вградени директно во. {1} ().",
	        "sameEdge": "рабовите не може да имаат алка самите кон себе. автоматски ги отстранувам рабовите кои се само-референцираат {0}.",
	        "set": "{0} е наместен.",
	        "setLong": "{0} е поставен на {1}.",
	        "setContainer": "Ве молиме дефинирајте контејнер div користејќи .container()"
	    },
	    "error": {
	        "accepted": "{0} не е прифатлива за {1} {2} визуелизација, ве молиме користете една од следниве: {3}.",
	        "connections": "не е достапна за врски {0}.",
	        "data": "нема податоци",
	        "dataYear": "Нема достапни податоци за {0}.",
	        "lib": "{0} визуализации бараат вчитување на библиотеката {1} .",
	        "libs": "{0} визуализации бараат вчитување следниве библиотеки: {1}.",
	        "method": "{0} визуализации бара поставување на {1} методот.",
	        "methods": "{0} визуализации бараат поставување на следниве методи: {1}."
	    },
	    "lowercase": [
	        "a",
	        "и",
	        "во",
	        "но",
	        "на",
	        "или",
	        "да",
	        "се",
	        "со"
	    ],
	    "method": {
	        "active": "активни сегменти",
	        "color": "боја",
	        "depth": "длабочина",
	        "dev": "опширно",
	        "focus": "фокус",
	        "icon": "икона",
	        "id": "id",
	        "height": "висина",
	        "labels": "етикети",
	        "legend": "легенда",
	        "margin": "маргина",
	        "messages": "пораки за статусот",
	        "mute": "скрие",
	        "order": "цел",
	        "search": "барај",
	        "shape": "форма",
	        "size": "големина",
	        "solo": "изолирање",
	        "style": "стил",
	        "temp": "привремени сегменти",
	        "text": "текст",
	        "time": "време",
	        "timeline": "времеплов",
	        "total": "Вкупно сегменти",
	        "type": "тип",
	        "width": "ширина",
	        "x": "x оската",
	        "y": "оската y",
	        "zoom": "зум",
	        "mode": "режим"
	    },
	    "time": [
	        "датум",
	        "ден",
	        "месец",
	        "време",
	        "година"
	    ],
	    "visualization": {
	        "bubbles": "Меурчиња",
	        "chart": "Шема",
	        "geo_map": "Гео мапа",
	        "line": "Линиски график",
	        "network": "Мрежа",
	        "rings": "Прстени",
	        "scatter": "Распрскан график",
	        "stacked": "Наредена површина",
	        "tree_map": "Мапа во вид на дрво",
	        "bar": "Бар табела",
	        "box": "Кутија Парцел",
	        "paths": "Патеки",
	        "pie": "Пита графикон",
	        "table": "Табела"
	    },
	    "ui": {
	        "and": "и",
	        "back": "назад",
	        "collapse": "кликни за да се собере",
	        "error": "грешка",
	        "expand": "кликни за да се прошири",
	        "loading": "Се вчитува ...",
	        "more": "{0} повеќе",
	        "moreInfo": "кликнете за повеќе информации",
	        "noResults": "Не се пронајдени појавување на {0}.",
	        "primary": "основно врски",
	        "share": "удел",
	        "total": "Вкупниот",
	        "values": "вредности",
	        "including": "Вклучувајќи",
	        "or": "или"
	    },
	    "message": {
	        "data": "анализа на податоци",
	        "draw": "цртање на визуелизација",
	        "initializing": "иницијализација {0}",
	        "loading": "податоци за вчитување",
	        "tooltipReset": "ресетирање на објаснувањата",
	        "ui": "ажурирање на кориничкиот интерфејс"
	    },
	    "uppercase": [
	        "CEO",
	        "CEOs",
	        "CFO",
	        "CFOs",
	        "CNC",
	        "COO",
	        "COOs",
	        "CPU",
	        "CPUs",
	        "GDP",
	        "HVAC",
	        "ID",
	        "IT",
	        "R&D",
	        "TV",
	        "UI"
	    ]
	}


/***/ },
/* 368 */
/***/ function(module, exports) {

	module.exports = {
	    "format": {
	        "decimal": ",",
	        "thousands": ".",
	        "grouping": [3],
	        "currency": ["R$", ""],
	        "dateTime": "%A, %e de %B de %Y. %X",
	        "date": "%d/%m/%Y",
	        "time": "%H:%M:%S",
	        "periods": ["AM", "PM"],
	        "days": ["Domingo", "Segunda", "Terça", "Quarta", "Quinta", "Sexta", "Sábado"],
	        "shortDays": ["Dom", "Seg", "Ter", "Qua", "Qui", "Sex", "Sáb"],
	        "months": ["Janeiro", "Fevereiro", "Março", "Abril", "Maio", "Junho", "Julho", "Agosto", "Setembro", "Outubro", "Novembro", "Dezembro"],
	        "shortMonths": ["Jan", "Fev", "Mar", "Abr", "Mai", "Jun", "Jul", "Ago", "Set", "Out", "Nov", "Dez"]
	    },
	    "dev": {
	        "accepted": "{0} não é um valor válido para {1}, por favor use um dos seguintes procedimentos: {2}.",
	        "deprecated": "{0} método foi removido, por favor atualize seu código para utilizar {1}.",
	        "noChange": "{0} não foi atualizado porque ele não mudou.",
	        "noContainer": "Não foi possível encontrar um local na página correspondente a {0}.",
	        "of": "de",
	        "oldStyle": "propriedades de estilo para {0} já foi incorporado diretamente no. {1} ().",
	        "sameEdge": "bordas não podem vincular a si mesmos. removendo automaticamente borda de auto-referência {0}.",
	        "set": "{0} foi definido.",
	        "setLong": "{0} foi definida para {1}.",
	        "setContainer": "por favor, defina um div utilizando .container()"
	    },
	    "error": {
	        "accepted": "{0} não é um {1} reconhecido para visualizações {2}, favor usar um dos seguintes procedimentos: {3}.",
	        "connections": "Não há conexões disponíveis para {0}.",
	        "data": "Não há dados disponíveis",
	        "dataYear": "Não há dados disponíveis para {0}.",
	        "lib": "A visualização {0} necessita que seja carregado a biblioteca {1}.",
	        "libs": "A visualização {0} necessita que seja carregado as bibliotecas {1}.",
	        "method": "A visualização {0} exige a definição do método {1}.",
	        "methods": "A visualização {0} exige a definição dos métodos {1}."
	    },
	    "lowercase": [
	        "um",
	        "uma",
	        "e",
	        "como",
	        "em",
	        "no",
	        "na",
	        "mas",
	        "por",
	        "para",
	        "pelo",
	        "pela",
	        "de",
	        "do",
	        "da",
	        "se",
	        "perto",
	        "nem",
	        "ou",
	        "que",
	        "o",
	        "a",
	        "com",
	        "v"
	    ],
	    "method": {
	        "active": "segmentos activos",
	        "color": "cor",
	        "depth": "profundidade",
	        "dev": "verboso",
	        "focus": "foco",
	        "icon": "ícone",
	        "id": "identificador",
	        "height": "altura",
	        "labels": "etiquetas",
	        "legend": "legenda",
	        "margin": "margem",
	        "messages": "mensagens de status",
	        "mute": "ocultar",
	        "order": "ordenar",
	        "search": "pesquisar",
	        "shape": "forma",
	        "size": "tamanho",
	        "solo": "isolar",
	        "style": "estilo",
	        "temp": "segmentos temporários",
	        "text": "texto",
	        "time": "tempo",
	        "timeline": "linha do tempo",
	        "total": "segmentos no total",
	        "type": "tipo",
	        "width": "largura",
	        "x": "eixo x",
	        "y": "eixo y",
	        "zoom": "zoom",
	        "mode": "modo"
	    },
	    "time": [
	        "data",
	        "dia",
	        "mês",
	        "hora",
	        "ano"
	    ],
	    "visualization": {
	        "bubbles": "Bolhas",
	        "chart": "Gráfico",
	        "geo_map": "Mapa",
	        "line": "Gráfico de Linha",
	        "network": "Rede",
	        "rings": "Anéis",
	        "scatter": "Dispersão",
	        "stacked": "Evolução",
	        "tree_map": "Tree Map",
	        "bar": "Gráfico de Barras",
	        "box": "Box Plot",
	        "paths": "Caminhos",
	        "pie": "Pie Chart",
	        "table": "Tabela"
	    },
	    "ui": {
	        "and": "e",
	        "back": "voltar",
	        "collapse": "Clique para fechar",
	        "error": "erro",
	        "expand": "clique para expandir",
	        "loading": "carregando ...",
	        "more": "mais {0}",
	        "moreInfo": "Clique para mais informações",
	        "noResults": "nenhum resultado para {0}.",
	        "primary": "conexões primárias",
	        "share": "participação",
	        "total": "total",
	        "values": "valores",
	        "including": "Incluindo",
	        "or": "ou"
	    },
	    "message": {
	        "data": "analisando dados",
	        "draw": "desenhando visualização",
	        "initializing": "inicializando {0}",
	        "loading": "carregando dados",
	        "tooltipReset": "redefinindo as dicas",
	        "ui": "atualizando interface"
	    },
	    "uppercase": [
	        "CEO",
	        "CEOs",
	        "CFO",
	        "CFOs",
	        "CNC",
	        "COO",
	        "COOs",
	        "CPU",
	        "CPUs",
	        "PIB",
	        "HVAC",
	        "ID",
	        "TI",
	        "P&D",
	        "TV",
	        "IU"
	    ]
	}


/***/ },
/* 369 */
/***/ function(module, exports) {

	module.exports = {
	    "format": {
	        "decimal": ",",
	        "thousands": ".",
	        "grouping": [3],
	        "currency": ["€", ""],
	        "dateTime": "%A, %e de %B de %Y. %X",
	        "date": "%d/%m/%Y",
	        "time": "%H:%M:%S",
	        "periods": ["AM", "PM"],
	        "days": ["Domingo", "Segunda", "Terça", "Quarta", "Quinta", "Sexta", "Sábado"],
	        "shortDays": ["Dom", "Seg", "Ter", "Qua", "Qui", "Sex", "Sáb"],
	        "months": ["Janeiro", "Fevereiro", "Março", "Abril", "Maio", "Junho", "Julho", "Agosto", "Setembro", "Outubro", "Novembro", "Dezembro"],
	        "shortMonths": ["Jan", "Fev", "Mar", "Abr", "Mai", "Jun", "Jul", "Ago", "Set", "Out", "Nov", "Dez"]
	    },
	    "dev": {
	        "accepted": "{0} não é um valor válido para {1}, por favor escolha uma das seguintes opções: {2}.",
	        "deprecated": "o método {0} foi removido, por favor atualize o seu código para usar {1}.",
	        "noChange": "{0} não foi atualizado porque não houve modificações.",
	        "noContainer": "Não foi possível encontrar um elemento na página correspondente a {0}.",
	        "of": "de",
	        "oldStyle": "as propriedades de {0} já foram incluídas em .{1}().",
	        "sameEdge": "bordas não podem vincular a si mesmos. removendo automaticamente borda de auto-referência {0}.",
	        "set": "{0} foi definido.",
	        "setLong": "{0} foi alterado para {1}.",
	        "setContainer": "por favor indique um elemento div através do método .container()"
	    },
	    "error": {
	        "accepted": "{0} não é uma {1} válida para a visualização {2}, por favor escolha uma das seguintes: {3}.",
	        "connections": "não existem ligações disponíveis para {0}.",
	        "data": "não existem dados disponíveis",
	        "dataYear": "não existem dados disponíveis para {0}.",
	        "lib": "a visualização {0} necessita que a biblioteca {1} seja carregada.",
	        "libs": "a visualização {0} necessita que as seguintes bibliotecas sejam carregadas: {1}.",
	        "method": "A visualização {0} exige a definição do método {1}.",
	        "methods": "A visualização {0} exige a definição dos seguintes métodos {1}."
	    },
	    "lowercase": [
	        "um",
	        "uma",
	        "e",
	        "como",
	        "em",
	        "no",
	        "na",
	        "mas",
	        "por",
	        "para",
	        "pelo",
	        "pela",
	        "de",
	        "do",
	        "da",
	        "se",
	        "perto",
	        "nem",
	        "ou",
	        "que",
	        "o",
	        "a",
	        "com",
	        "v"
	    ],
	    "method": {
	        "active": "segmentos activos",
	        "color": "cor",
	        "depth": "profundidade",
	        "dev": "verboso",
	        "focus": "foco",
	        "icon": "ícone",
	        "id": "identificador",
	        "height": "altura",
	        "labels": "etiquetas",
	        "legend": "legenda",
	        "margin": "margem",
	        "messages": "estado",
	        "order": "ordenar",
	        "search": "pesquisar",
	        "shape": "forma",
	        "size": "tamanho",
	        "style": "estilo",
	        "temp": "segmentos temporários",
	        "text": "texto",
	        "time": "tempo",
	        "timeline": "linha temporal",
	        "total": "segmentos no total",
	        "type": "tipo",
	        "width": "largura",
	        "x": "eixo dos xx",
	        "y": "eixo dos yy",
	        "zoom": "zoom",
	        "mode": "#ERROR!",
	        "mute": "ocultar",
	        "solo": "isolar"
	    },
	    "time": [
	        "data",
	        "dia",
	        "mês",
	        "hora",
	        "ano"
	    ],
	    "visualization": {
	        "bubbles": "Bolhas",
	        "chart": "Diagrama",
	        "geo_map": "Mapa",
	        "line": "Gráfico de Linha",
	        "network": "Grafo",
	        "rings": "Anéis",
	        "scatter": "Gráfico de Dispersão",
	        "stacked": "Gráfico de Área",
	        "tree_map": "Tree Map",
	        "bar": "Gráfico de Barras",
	        "box": "Diagrama de Caixa e Bigodes",
	        "paths": "Caminhos",
	        "pie": "Gráfico de Setores",
	        "table": "Tabela"
	    },
	    "ui": {
	        "and": "e",
	        "back": "voltar",
	        "collapse": "Clique para colapsar",
	        "error": "erro",
	        "expand": "clique para expandir",
	        "loading": "a carregar ...",
	        "more": "mais {0}",
	        "moreInfo": "Clique para mais informações",
	        "noResults": "nenhum resultado para {0}.",
	        "primary": "ligações principais",
	        "share": "proporção",
	        "total": "total",
	        "values": "valores",
	        "including": "Incluindo",
	        "or": "ou"
	    },
	    "message": {
	        "data": "a analisar os dados",
	        "draw": "a desenhar a visualização",
	        "initializing": "a inicializar {0}",
	        "loading": "a carregar os dados",
	        "tooltipReset": "a actualizar as caixas de informação",
	        "ui": "a actualizar o interface"
	    },
	    "uppercase": [
	        "CEO",
	        "CEOs",
	        "CFO",
	        "CFOs",
	        "CNC",
	        "COO",
	        "COOs",
	        "CPU",
	        "CPUs",
	        "PIB",
	        "HVAC",
	        "ID",
	        "TI",
	        "I&D",
	        "TV",
	        "IU"
	    ]
	}


/***/ },
/* 370 */
/***/ function(module, exports) {

	module.exports = {
	    "format": {
	        "decimal": ",",
	        "thousands": "\xa0",
	        "grouping": [3],
	        "currency": ["", " руб."],
	        "dateTime": "%A, %e %B %Y г. %X",
	        "date": "%d.%m.%Y",
	        "time": "%H:%M:%S",
	        "periods": ["AM", "PM"],
	        "days": ["воскресенье", "понедельник", "вторник", "среда", "четверг", "пятница", "суббота"],
	        "shortDays": ["вс", "пн", "вт", "ср", "чт", "пт", "сб"],
	        "months": ["января", "февраля", "марта", "апреля", "мая", "июня", "июля", "августа", "сентября", "октября", "ноября", "декабря"],
	        "shortMonths": ["янв", "фев", "мар", "апр", "май", "июн", "июл", "авг", "сен", "окт", "ноя", "дек"]
	    },
	    "dev": {
	        "accepted": "{0} не принимаются значение {1}, пожалуйста, используйте один из следующих: {2}.",
	        "deprecated": "Метод {0} был удален, пожалуйста, обновите ваш код, чтобы использовать {1}.",
	        "noChange": "{0} не обновлен, поскольку он не изменится.",
	        "noContainer": "не могу найти контейнер на странице соответствия {0}.",
	        "of": "из",
	        "oldStyle": "свойства стиля для {0} уже в настоящее время были встроен непосредственно в. {1} ().",
	        "sameEdge": "Края не может связать себя. автоматически удаляя автореферентных ребро {0}.",
	        "set": "{0} был установлен.",
	        "setLong": "{0} установлено значение {1}.",
	        "setContainer": "пожалуйста, определить контейнер DIV с помощью .container ()"
	    },
	    "error": {
	        "accepted": "{0} не принимаются {1} для {2} визуализации, пожалуйста, используйте один из следующих: {3}.",
	        "connections": "нет соединения, доступные для {0}.",
	        "data": "данные недоступны",
	        "dataYear": "нет данных {0}.",
	        "lib": "{0} визуализации требуют загрузки {1} библиотеку.",
	        "libs": "{0} визуализации требуют загрузки следующих библиотек: {1}.",
	        "method": "{0} визуализации требуют установки {1} метода.",
	        "methods": "{0} визуализации требуют установки следующих методов: {1}."
	    },
	    "lowercase": [
	        "и",
	        "как",
	        "в",
	        "но",
	        "для",
	        "из",
	        "если в",
	        "в",
	        "недалеко",
	        "ни",
	        "на",
	        "на",
	        "или",
	        "в",
	        "что",
	        "к",
	        "с",
	        "с помощью",
	        "против",
	        "против"
	    ],
	    "method": {
	        "active": "активные сегменты",
	        "color": "цвет",
	        "depth": "глубина",
	        "dev": "многословный",
	        "focus": "фокус",
	        "icon": "значок",
	        "id": "ID",
	        "height": "высота",
	        "labels": "надписи",
	        "legend": "легенда",
	        "margin": "поле",
	        "messages": "Сообщения о состоянии",
	        "mute": "скрывать",
	        "order": "порядок",
	        "search": "поиск",
	        "shape": "форма",
	        "size": "размер",
	        "solo": "изолировать",
	        "style": "стиль",
	        "temp": "временные сегменты",
	        "text": "текст",
	        "time": "время",
	        "timeline": "график",
	        "total": "всего сегментов",
	        "type": "тип",
	        "width": "ширина",
	        "x": "ось х",
	        "y": "Ось Y",
	        "zoom": "масштаб",
	        "mode": "режим"
	    },
	    "time": [
	        "дата",
	        "день",
	        "месяц",
	        "время",
	        "год"
	    ],
	    "visualization": {
	        "bubbles": "Пузыри",
	        "chart": "График",
	        "geo_map": "Гео Карта",
	        "line": "Линия земля",
	        "network": "Сеть",
	        "rings": "Кольца",
	        "scatter": "Разброс земля",
	        "stacked": "С накоплением Площадь",
	        "tree_map": "Дерево Карта",
	        "bar": "Гистограмма",
	        "box": "Коробка земля",
	        "paths": "Пути",
	        "pie": "Круговая диаграмма",
	        "table": "Стол"
	    },
	    "ui": {
	        "and": "и",
	        "back": "назад",
	        "collapse": "Щелкните, чтобы свернуть",
	        "error": "ошибка",
	        "expand": "щелкните, чтобы развернуть",
	        "loading": "загрузка ...",
	        "more": "{0} более",
	        "moreInfo": "нажмите для получения более подробной информации",
	        "noResults": "нет результатов, соответствующих {0}.",
	        "primary": "первичные соединения",
	        "share": "доля",
	        "total": "общее",
	        "values": "значения",
	        "including": "включая",
	        "or": "или"
	    },
	    "message": {
	        "data": "Анализируя данные",
	        "draw": "рисунок визуализация",
	        "initializing": "инициализации {0}",
	        "loading": "загрузка данных",
	        "tooltipReset": "сброс подсказки",
	        "ui": "обновление пользовательского интерфейса"
	    },
	    "uppercase": [
	        "ID"
	    ]
	}


/***/ },
/* 371 */
/***/ function(module, exports) {

	module.exports = {
	    "format": {
	        "decimal": ".",
	        "thousands": ",",
	        "grouping": [3],
	        "currency": ["¥", ""],
	        "dateTime": "%A %B %e %Y %X",
	        "date": "%Y/%-m/%-d",
	        "time": "%H:%M:%S",
	        "periods": ["上午", "下午"],
	        "days": ["星期日", "星期一", "星期二", "星期三", "星期四", "星期五", "星期六"],
	        "shortDays": ["星期日", "星期一", "星期二", "星期三", "星期四", "星期五", "星期六"],
	        "months": ["一月", "二月", "三月", "四月", "五月", "六月", "七月", "八月", "九月", "十月", "十一月", "十二月"],
	        "shortMonths": ["一月", "二月", "三月", "四月", "五月", "六月", "七月", "八月", "九月", "十月", "十一月", "十二月"]
	    },
	    "dev": {
	        "accepted": "{0}不是{1}的可接受值, 请用下列之一的值:{2}",
	        "deprecated": "{0}的方法已被移除, 请更新您的代码去使用{1}",
	        "noChange": "{0}没有更新, 因为它并没有改变。",
	        "noContainer": "无法在该页找到容器去匹配{0}",
	        "of": "的",
	        "oldStyle": "样式属性{0}现在已经直接嵌入到。{1}（）。",
	        "sameEdge": "边缘不能链接到自己。自动去除自我参照边缘{0}。",
	        "set": "{0}已经被设置。",
	        "setLong": "{0}被设置为{1}。",
	        "setContainer": "请使用()容器来定义div容器"
	    },
	    "error": {
	        "accepted": "{0}对于{2}的可视化效果并不是一个可接受的{1}, 请使用如下的一个：{3}.",
	        "connections": "没有对{0}可用的连接。",
	        "data": "无可用数据",
	        "dataYear": "没有数据对{0}可用。",
	        "lib": "{0}的可视化要求装载{1}库。",
	        "libs": "{0}的可视化需要加载以下库：{1}。",
	        "method": "{0}的可视化要求设置{1}方法。",
	        "methods": "{0}的可视化要求设置以下方法：{1}。"
	    },
	    "lowercase": [
	        "一个",
	        "和",
	        "在",
	        "但是",
	        "在...里",
	        "的",
	        "或者",
	        "这",
	        "向",
	        "与...一起"
	    ],
	    "method": {
	        "active": "活跃段",
	        "color": "颜色",
	        "depth": "深度",
	        "dev": "详细",
	        "focus": "焦点",
	        "icon": "图标",
	        "id": "身份认证",
	        "height": "高度",
	        "labels": "标签",
	        "legend": "图例注释",
	        "margin": "外边距",
	        "messages": "状态消息",
	        "mute": "隐藏",
	        "order": "规则",
	        "search": "搜索",
	        "shape": "形状",
	        "size": "大小",
	        "solo": "隔离",
	        "style": "样式",
	        "temp": "暂时性区段",
	        "text": "文本",
	        "time": "时间",
	        "timeline": "时间轴",
	        "total": "总段",
	        "type": "类型",
	        "width": "宽度",
	        "x": "X轴",
	        "y": "Y轴",
	        "zoom": "缩放",
	        "mode": "模式"
	    },
	    "time": [
	        "日",
	        "星期",
	        "月",
	        "时间",
	        "年"
	    ],
	    "visualization": {
	        "bubbles": "气泡",
	        "chart": "图表",
	        "geo_map": "地理地图",
	        "line": "线图",
	        "network": "网络",
	        "rings": "特性",
	        "scatter": "散点图",
	        "stacked": "堆积面积图",
	        "tree_map": "树图",
	        "bar": "条图",
	        "box": "箱线图",
	        "paths": "路径",
	        "pie": "饼图",
	        "table": "表"
	    },
	    "ui": {
	        "and": "和",
	        "back": "后面",
	        "collapse": "点击合并",
	        "error": "错误",
	        "expand": "单击以展开",
	        "loading": "载入中...",
	        "more": "{0}更多",
	        "moreInfo": "点击了解更多信息",
	        "noResults": "没有结果匹配{0}。",
	        "primary": "主要连接",
	        "share": "共享",
	        "total": "总",
	        "values": "值",
	        "including": "包括",
	        "or": "或"
	    },
	    "message": {
	        "data": "分析数据",
	        "draw": "绘制可视化",
	        "initializing": "初始化{0}",
	        "loading": "加载数据",
	        "tooltipReset": "重置工具提示",
	        "ui": "更新UI"
	    },
	    "uppercase": [
	        "CEO",
	        "CEOs",
	        "CFO",
	        "CFOs",
	        "CNC",
	        "COO",
	        "COOs",
	        "CPU",
	        "CPUs",
	        "GDP",
	        "HVAC",
	        "ID",
	        "电视",
	        "用户界面",
	        "研发"
	    ]
	}


/***/ },
/* 372 */
/***/ function(module, exports, __webpack_require__) {

	var print = __webpack_require__(2),
	    stringFormat = __webpack_require__(14)
	
	//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	// Cleans edges list and populates nodes list if needed
	//-------------------------------------------------------------------
	module.exports = function( vars ) {
	
	  if ( vars.dev.value ) {
	    var timerString = "analyzing edges list"
	    print.time( timerString )
	  }
	
	  var appReqs     = vars.types[vars.type.value].requirements
	  if (!(appReqs instanceof Array)) appReqs = [appReqs]
	  var createNodes = appReqs.indexOf("nodes") >= 0 && !vars.nodes.value
	
	  if ( createNodes ) {
	    vars.nodes.value = []
	    var placed = []
	    vars.nodes.changed = true
	  }
	
	  vars.edges.value.forEach(function(e){
	
	    ["source", "target"].forEach(function(dir){
	
	      var dirType = typeof e[vars.edges[dir]];
	
	      if (dirType !== "object") {
	        if (dirType === "number" && !createNodes && vars.data.keys[vars.id.value] !== "number") {
	          e[vars.edges[dir]] = vars.nodes.value[e[vars.edges[dir]]];
	        }
	        else {
	          if (createNodes && placed.indexOf(e[vars.edges[dir]]) >= 0) {
	            e[vars.edges[dir]] = vars.nodes.value.filter(function(n){
	              return n[vars.id.value] === e[vars.edges[dir]];
	            })[0];
	          }
	          else {
	            var obj = {};
	            obj[vars.id.value] = e[vars.edges[dir]];
	            e[vars.edges[dir]] = obj;
	          }
	        }
	      }
	
	      var newNode = e[vars.edges[dir]];
	      if (createNodes) {
	        if (placed.indexOf(newNode[vars.id.value]) < 0) {
	          placed.push(newNode[vars.id.value]);
	          vars.nodes.value.push(newNode);
	        }
	      }
	    });
	
	    if (!("keys" in vars.data)) {
	      vars.data.keys = {};
	    }
	
	    if (!(vars.id.value in vars.data.keys)) {
	      vars.data.keys[vars.id.value] = typeof e[vars.edges.source][vars.id.value];
	    }
	
	  });
	
	  vars.edges.value = vars.edges.value.filter(function(e){
	
	    var source = e[vars.edges.source][vars.id.value]
	      , target = e[vars.edges.target][vars.id.value]
	
	    if ( source === target ) {
	      var str = vars.format.locale.value.dev.sameEdge
	      print.warning(stringFormat(str,"\""+source+"\"") , "edges" )
	      return false
	    }
	    else {
	      return true
	    }
	
	  })
	
	  vars.edges.linked = true
	
	  if ( vars.dev.value ) print.timeEnd( timerString )
	
	}


/***/ },
/* 373 */
/***/ function(module, exports, __webpack_require__) {

	var hideElement = __webpack_require__(145);
	
	// Parses an HTML element for data
	module.exports = function( vars ) {
	
	  var attributes = [ vars.color.value
	                   , vars.icon.value
	                   , vars.keywords.value
	                   , vars.alt.value
	                   , "style" ]
	
	  if (!vars.text.value) {
	    vars.self.text("text")
	  }
	
	  attributes = attributes.concat(vars.id.nesting)
	
	  function get_attributes( obj , elem ) {
	    [].forEach.call(elem.attributes, function(attr) {
	        if (/^data-/.test(attr.name)) {
	            var camelCaseName = attr.name.substr(5).replace(/-(.)/g, function ($0, $1) {
	                return $1.toUpperCase();
	            });
	            obj[camelCaseName] = attr.value;
	        }
	    })
	
	    attributes.forEach(function(a){
	
	      if ( elem.getAttribute(a) !== null ) {
	        obj[a] = elem.getAttribute(a)
	      }
	
	    })
	
	  }
	
	  vars.self.data({"element": vars.data.value})
	
	  var elementTag  = vars.data.element.value.node().tagName.toLowerCase()
	    , elementType = vars.data.element.value.attr("type")
	    , elementData = []
	
	  if ( elementTag === "select" ) {
	
	    var elementID = vars.data.element.value.node().id
	    if ( elementID ) {
	      vars.self.container({"id": elementID})
	    }
	
	    vars.data.element.value.selectAll("option")
	      .each(function( o , i ){
	
	        var data_obj = {}
	
	        data_obj.text = d3.select(this).text();
	
	        get_attributes(data_obj,this)
	
	        elementData.push(data_obj)
	
	        if (this.selected) {
	          for (var i = vars.id.nesting.length-1; i >= 0; i--) {
	            var level = vars.id.nesting[i]
	            if (level in data_obj) {
	              vars.self.focus(data_obj[level])
	              break
	            }
	          }
	        }
	
	      })
	
	  }
	  else if ( elementTag === "input" && elementType === "radio" ) {
	
	    var elementName = vars.data.element.value.node().getAttribute("name")
	    if ( elementName ) {
	      vars.self.container({"id": elementName})
	    }
	
	    vars.data.element.value
	      .each(function( o , i ){
	
	        var data_obj = {}
	
	        get_attributes(data_obj,this)
	
	        var id = data_obj[vars.id.value] || this.id || false
	
	        if ( id && isNaN(parseFloat(id)) ) {
	
	          var label = d3.select("label[for="+id+"]")
	
	          if ( !label.empty() ) {
	            data_obj.text = label.html()
	            label.call(hideElement)
	          }
	
	        }
	
	        elementData.push(data_obj)
	
	        if (this.checked) {
	          vars.self.focus(data_obj[vars.id.value])
	        }
	
	      })
	
	  }
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // Get focus from data, if it hasn't been found or set.
	  //----------------------------------------------------------------------------
	  if ( !vars.focus.value.length && elementData.length ) {
	
	    vars.data.element.value.node().selectedIndex = 0
	    vars.self.focus(elementData[0][vars.id.value])
	
	  }
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // If a <legend> element exists, use it as the title.
	  //----------------------------------------------------------------------------
	  var elementLegend = d3.select("legend[for="+vars.container.id+"]")
	  if ( !elementLegend.empty() ) {
	
	    vars.self.title(elementLegend.html())
	    elementLegend.call(hideElement)
	
	  }
	
	  var containerTag = vars.container.value
	                   ? vars.container.value.node().tagName.toLowerCase() : false
	
	  if ( vars.container.value === false || containerTag === "body" ) {
	    vars.container.value = d3.select(vars.data.element.value.node().parentNode)
	  }
	
	  vars.data.element.value.call(hideElement)
	
	  return elementData
	
	};


/***/ },
/* 374 */
/***/ function(module, exports, __webpack_require__) {

	var print = __webpack_require__(2);
	
	// Calculates node positions, if needed for network.
	module.exports = function(vars) {
	
	  if (vars.type.value === "network") {
	
	    if (vars.dev.value) {
	      var timerString = "analyzing node positions";
	      print.time(timerString);
	    }
	
	    var set = vars.nodes.value.filter(function(n){
	      return typeof n.x === "number" && typeof n.y === "number";
	    }).length;
	
	    if (set === vars.nodes.value.length) {
	      vars.nodes.positions = true;
	    }
	    else {
	
	      var force = d3.layout.force()
	        .size([vars.width.viz, vars.height.viz])
	        .nodes(vars.nodes.value)
	        .links(vars.edges.value);
	
	      var strength = vars.edges.strength.value;
	      if (strength) {
	        if (typeof strength === "string") {
	          force.linkStrength(function(e){
	            return e[strength];
	          });
	        }
	        else {
	          force.linkStrength(strength);
	        }
	      }
	
	      var iterations = 50,
	          threshold = 0.01;
	
	      force.start(); // Defaults to alpha = 0.1
	      for (var i = iterations; i > 0; --i) {
	        force.tick();
	        if(force.alpha() < threshold) {
	          break;
	        }
	      }
	      force.stop();
	
	      vars.nodes.positions = true;
	
	    }
	
	    if (vars.dev.value) print.timeEnd(timerString);
	
	  }
	
	}


/***/ },
/* 375 */
/***/ function(module, exports, __webpack_require__) {

	var d3selection = __webpack_require__(31),
	    process = __webpack_require__(45);
	
	module.exports = {
	  "accepted" : [ false , Array , Function , String ],
	  "delimiter" : {
	    "accepted" : [ String ],
	    "value"    : "|"
	  },
	  "element": {
	    "process": function(value, vars) {
	
	      var element = false;
	
	      if ( d3selection(value) ) {
	        element = value;
	      }
	      else if (typeof value === "string" && !d3.select(value).empty()) {
	        element = d3.select(value);
	      }
	
	      if (element) {
	        vars.self.container(d3.select(element.node().parentNode));
	      }
	
	      return element;
	
	    },
	    "value": false
	  },
	  "filetype" : {
	    "accepted" : [false, "json", "xml", "html", "csv", "dsv", "tsv", "txt"],
	    "value"    : false
	  },
	  "filters"  : [],
	  "large": 400,
	  "mute"     : [],
	  "process"  : function(value, vars) {
	
	    if ( vars.container.id === "default" && value.length ) {
	      vars.self.container({"id": "default"+value.length});
	    }
	
	    return process(value, vars, this);
	  },
	  "solo"     : [],
	  "sort": {
	    "accepted": [Boolean],
	    "value":    false
	  },
	  "value"    : false
	};


/***/ },
/* 376 */
/***/ function(module, exports, __webpack_require__) {

	var d3selection  = __webpack_require__(31),
	    hideElement  = __webpack_require__(145),
	    parseElement = __webpack_require__(373),
	    print        = __webpack_require__(2),
	    stringFormat = __webpack_require__(14)
	
	module.exports = {
	  "accepted" : [ undefined , Function ],
	  "first"    : true,
	  "frozen"   : false,
	  "process"  : function (value, vars) {
	
	    if ( this.initialized === false ) {
	      this.initialized = true
	      return value
	    }
	
	    if (vars.data.value && (!(vars.data.value instanceof Array) || d3selection(vars.data.value))) {
	      vars.data.value = parseElement( vars )
	    }
	    else if (vars.data.element.value) {
	      vars.data.element.value.call(hideElement);
	    }
	
	    if ( value === undefined && typeof this.value === "function" ) {
	      value = this.value
	    }
	
	    if ( vars.container.value === false ) {
	
	      var str = vars.format.locale.value.dev.setContainer
	      print.warning( str , "container" )
	
	    }
	    else if ( vars.container.value.empty() ) {
	
	      var str = vars.format.locale.value.dev.noContainer
	      print.warning( stringFormat(str,"\""+vars.container.value+"\"") , "container" )
	
	    }
	    else {
	
	      if (vars.dev.value) print.time("total draw time");
	
	      vars.container.value.call(vars.self);
	
	    }
	
	    if ( typeof value === "function" && vars.history.chain.length ) {
	
	      var changesObject = {}
	      changes.forEach(function(c){
	        var method = c.method
	        delete c.method
	        changesObject[method] = c
	      })
	
	      value(changesObject)
	
	      vars.history.chain = []
	
	    }
	
	    return value
	
	  },
	  "update"   : true,
	  "value"    : undefined
	}


/***/ },
/* 377 */
/***/ function(module, exports) {

	//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	// Determines form type based on data length.
	//------------------------------------------------------------------------------
	module.exports = function( vars ) {
	
	  var dataLength = vars.data.value.length
	
	  if ( dataLength === 1 ) {
	    vars.self.type("button").draw()
	  }
	  else if ( dataLength < 5 ) {
	    vars.self.type("toggle").draw()
	  }
	  else {
	    vars.self.type("drop").draw()
	  }
	
	}


/***/ },
/* 378 */
/***/ function(module, exports, __webpack_require__) {

	var prefix = __webpack_require__(39),
	    rtl = __webpack_require__(40)
	
	module.exports = function ( elem , vars ) {
	
	  var reversed = (vars.font.align.value === "right" && !rtl)
	                 || (rtl && vars.font.align.value === "right")
	
	  elem
	    .each(function(d,i){
	
	      var children = ["label"]
	
	      if ( d[vars.icon.value] && vars.data.viz.length <= vars.data.large ) {
	        children.push("icon")
	      }
	
	      var iconGraphic = vars.icon.button.value
	      if ( d[vars.id.value] === vars.focus.value && vars.icon.select.value ) {
	        iconGraphic = vars.icon.select.value
	        children.push("selected")
	      }
	      else if ( iconGraphic && d.d3plus.icon !== false ) {
	        children.push("selected")
	      }
	
	      var buffer = 0
	
	      var items = d3.select(this).selectAll("div.d3plus_button_element")
	        .data(children,function(c){
	          return c
	        })
	
	      items.enter().append("div")
	        .style("display",function(c){
	          return c === "label" ? "block" : "absolute"
	        })
	
	      items.order()
	        .attr("class",function(c){
	          var extra = ""
	          if ( c === "selected" && iconGraphic.indexOf("fa-") === 0 ) {
	            extra = " fa "+iconGraphic
	          }
	          return "d3plus_button_element d3plus_button_" + c + extra
	        })
	        .html(function(c){
	          if ( c === "label" ) {
	            var k = vars.text.value && vars.text.value in d && !(d[vars.text.value] instanceof Array)
	                  ? vars.text.value : vars.id.value
	            return vars.format.value(d[k])
	          }
	          return c === "selected" && iconGraphic.indexOf("fa-") < 0
	                 ? iconGraphic : ""
	        })
	        .style("background-image",function(c){
	          if (c === "icon") {
	            return "url('"+d[vars.icon.value]+"')"
	          }
	          return "none"
	        })
	        .style("background-color",function(c){
	          if (c === "icon" && d.style === "knockout") {
	            return d[vars.color.value] || vars.ui.color.primary.value
	          }
	          return "transparent"
	        })
	        .style("background-size","100%")
	        .style("text-align",function(c){
	          return c === "label" ? vars.font.align.value : "center"
	        })
	        .style("position",function(c){
	          return c == "label" ? "static" : "absolute"
	        })
	        .style("width",function(c){
	
	          if ( c === "label" ) {
	            return "auto"
	          }
	
	          if (vars.height.value) {
	            buffer = (vars.height.value-(vars.ui.padding.top + vars.ui.padding.bottom)-(vars.ui.border*2));
	          }
	          else {
	            buffer = vars.font.size+vars.ui.border;
	          }
	          return buffer+"px"
	        })
	        .style("height",function(c){
	          if ( c === "icon" ) {
	            return buffer+"px"
	          }
	          return "auto"
	        })
	        .style("margin-top",function(c){
	          if ( c === "label" ) {
	            return "0px"
	          }
	          if (this.offsetHeight || this.getBoundingClientRect().height) {
	            var h = this.offsetHeight || this.getBoundingClientRect().height
	          }
	          else if ( c === "selected" ) {
	            var h = vars.font.size
	          }
	          else {
	            var h = buffer
	          }
	          return -h/2+"px"
	        })
	        .style("top",function(c){
	          return c === "label" ? "auto" : "50%"
	        })
	        .style("left",function(c){
	          if ((c === "icon" && !reversed) || (c === "selected" && reversed)) {
	            return vars.ui.padding.left+"px"
	          }
	          return "auto"
	        })
	        .style("right",function(c){
	          if ((c === "icon" && reversed) || (c === "selected" && !reversed)) {
	            return vars.ui.padding.right+"px"
	          }
	          return "auto"
	        })
	        .style(prefix()+"transition",function(c){
	          return c === "selected" ? (vars.draw.timing/1000)+"s" : "none"
	        })
	        .style(prefix()+"transform",function(c){
	          var degree = c === "selected" ? vars.icon.select.rotate : "none"
	          return typeof degree === "string" ? degree : "rotate("+degree+"deg)"
	        })
	        .style("opacity",function(c){
	          return c === "selected" ? vars.icon.select.opacity : 1
	        })
	
	      items.exit().remove()
	
	      var text = d3.select(this).selectAll(".d3plus_button_label")
	
	      if (buffer > 0) {
	
	        var p = vars.ui.padding;
	
	        if (children.length === 3) {
	          p = p.top+"px "+(p.right*2+buffer)+"px "+p.bottom+"px "+(p.left*2+buffer)+"px";
	        }
	        else if ((children.indexOf("icon") >= 0 && !rtl) || (children.indexOf("selected") >= 0 && rtl)) {
	          p = p.top+"px "+p.right+"px "+p.bottom+"px "+(p.left*2+buffer)+"px";
	        }
	        else {
	          p = p.top+"px "+(p.right*2+buffer)+"px "+p.bottom+"px "+p.left+"px";
	        }
	
	        text.style("padding", p)
	
	      }
	      else {
	        text.style("padding",vars.ui.padding.css)
	      }
	
	      if (typeof vars.width.value === "number") {
	        var width = vars.width.value
	        width -= parseFloat(text.style("padding-left"),10)
	        width -= parseFloat(text.style("padding-right"),10)
	        width -= vars.ui.border*2
	        width += "px"
	      }
	      else {
	        var width = "auto"
	      }
	
	      text.style("width",width)
	
	    })
	
	}


/***/ },
/* 379 */
/***/ function(module, exports) {

	//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	//
	//------------------------------------------------------------------------------
	module.exports = function ( elem , vars ) {
	
	  elem
	    .style("position","relative")
	    .style("margin",vars.ui.margin.css)
	    .style("display",vars.ui.display.value)
	    .style("border-style","solid")
	    .style("border-width",vars.ui.border+"px")
	    .style("font-family",vars.font.family.value)
	    .style("font-size",vars.font.size+"px")
	    .style("font-weight",vars.font.weight)
	    .style("letter-spacing",vars.font.spacing+"px")
	
	}


/***/ },
/* 380 */
/***/ function(module, exports) {

	//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	// Checks to see if a given variable is allowed to be selected.
	//------------------------------------------------------------------------------
	module.exports = function ( vars , value , active ) {
	
	  var ret = []
	    , active = active || vars.active.value
	
	  if ( active instanceof Array ) {
	
	    for (var i = 0; i < active.length; i++) {
	      ret.push(this(vars,value,active[i]))
	    }
	
	  }
	  else {
	
	    var t = typeof active
	
	    if (t === "number") {
	      ret.push(vars.depth.value === active)
	    }
	    else if (t === "function") {
	      ret.push(active(value))
	    }
	    else {
	      ret.push(value === active)
	    }
	
	  }
	
	  return ret.indexOf(true) >= 0
	
	}


/***/ },
/* 381 */
/***/ function(module, exports, __webpack_require__) {

	var print = __webpack_require__(2)
	//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	// Toggles the state of the dropdown menu.
	//------------------------------------------------------------------------------
	module.exports = function ( vars ) {
	
	  if ( vars.dev.value ) print.time("rotating arrow")
	
	  var offset = vars.icon.drop.value === "&#x276f;" ? 90 : 0
	
	  if (vars.open.value != vars.open.flipped.value) {
	    var rotate = 180 + offset
	  }
	  else {
	    var rotate = offset
	  }
	
	  vars.container.button
	    .icon({
	      "select": {
	        "opacity": vars.open.value ? 0.5 : 1,
	        "rotate": rotate
	      }
	    })
	    .draw()
	
	  if ( vars.dev.value ) print.timeEnd("rotating arrow")
	
	}


/***/ },
/* 382 */
/***/ function(module, exports, __webpack_require__) {

	var copy = __webpack_require__(11),
	    events = __webpack_require__(9),
	    form   = __webpack_require__(48),
	    print  = __webpack_require__(2)
	
	//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	// Creates and styles the main drop button.
	//------------------------------------------------------------------------------
	module.exports = function ( vars ) {
	
	  if ( !("button" in vars.container) ) {
	
	    if ( vars.dev.value ) print.time("creating main button")
	
	    vars.container.button = form()
	      .container(vars.container.ui)
	      .type("button")
	      .ui({
	        "margin": 0
	      })
	
	    if ( vars.dev.value ) print.timeEnd("creating main button")
	
	  }
	
	  if ( vars.focus.changed || vars.data.changed || vars.depth.changed ) {
	
	    var depth = vars.depth.value
	
	    var buttonData = copy(vars.data.value.filter(function(d){
	      var match = false
	      for ( var i = 0 ; i < vars.id.nesting.length ; i++ ) {
	        var level = vars.id.nesting[i]
	        match = level in d && d[level] === vars.focus.value
	        if (match) {
	          depth = i
	          break
	        }
	      }
	      return match
	    })[0])
	
	    if ( !buttonData ) {
	      buttonData = vars.container.button.data()[0] || vars.data.viz[0]
	    }
	
	    vars.container.button
	      .data([buttonData])
	      .id( vars.id.nesting )
	      .depth(depth)
	
	  }
	
	  var hover = vars.hover.value === true ? vars.focus.value : false;
	
	  vars.container.button
	    .draw({
	      "update": vars.draw.update
	    })
	    .focus("")
	    .font( vars.font )
	    .format(vars.format)
	    .hover(hover)
	    .icon({
	      "button": vars.icon.drop.value,
	      "select": vars.icon.drop.value,
	      "value": vars.icon.value
	    })
	    .text( vars.text.value )
	    .timing({
	      "ui": vars.draw.timing
	    })
	    .ui({
	      "border": vars.ui.border,
	      "color": vars.ui.color,
	      "padding": vars.ui.padding.css
	    })
	    .width(vars.width.value)
	    .draw()
	
	  var button = vars.container.button.container(Object).ui
	
	  vars.margin.top += button.node().offsetHeight || button.node().getBoundingClientRect().height
	
	  button.on(events.click,function(){
	    vars.self.open(!vars.open.value).draw()
	  })
	
	}


/***/ },
/* 383 */
/***/ function(module, exports) {

	//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	// Calculates the height and orientation of the dropdown list, based on
	// available screen space.
	//------------------------------------------------------------------------------
	module.exports = function ( vars ) {
	
	  var height = vars.height.secondary,
	      button = vars.container.button.container().node().getBoundingClientRect(),
	      available = window.innerHeight - button.bottom - vars.ui.border * 2 -
	                  vars.ui.margin.top - vars.ui.margin.bottom -
	                  vars.ui.padding.top - vars.ui.padding.bottom;
	
	  if (available < button.height * 3) {
	    available = button.top-10;
	    vars.self.open({"flipped": true});
	  }
	  // else {
	  //   vars.self.open({"flipped": false});
	  // }
	
	  if (typeof height !== "number") {
	    height = available;
	  }
	
	  if (height > vars.height.max) {
	    height = vars.height.max;
	  }
	
	  vars.self.height({"secondary": height});
	
	};


/***/ },
/* 384 */
/***/ function(module, exports, __webpack_require__) {

	var print = __webpack_require__(2)
	//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	// Creates and populates the dropdown list of items.
	//------------------------------------------------------------------------------
	module.exports = function ( vars ) {
	
	  if ( vars.dev.value ) print.time("populating list")
	
	  vars.container.list = vars.container.selector.selectAll("div.d3plus_drop_list")
	    .data(["list"])
	
	  vars.container.list.enter().append("div")
	    .attr("class","d3plus_drop_list")
	    .attr("id","d3plus_drop_list_"+vars.container.id)
	    .style("overflow-y","auto")
	    .style("overflow-x","hidden")
	
	  if ( vars.dev.value ) print.timeEnd("populating list")
	
	}


/***/ },
/* 385 */
/***/ function(module, exports, __webpack_require__) {

	var print = __webpack_require__(2)
	//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	// Calculates scroll position of list.
	//------------------------------------------------------------------------------
	module.exports = function ( vars ) {
	
	  if (vars.open.value) {
	
	    if ( vars.dev.value ) print.time("calculating height")
	
	    var hidden = false
	    if (vars.container.selector.style("display") == "none") {
	      var hidden = true
	    }
	
	    if (hidden) vars.container.selector.style("display","block")
	
	    var old_height = vars.container.selector.style("height"),
	        old_scroll = vars.container.selector.property("scrollTop"),
	        list_height = vars.container.list.style("max-height"),
	        list_scroll = vars.container.list.property("scrollTop")
	
	    vars.container.selector.style("height","auto")
	    vars.container.list.style("max-height","200000px")
	
	    vars.container.listHeight = parseFloat(vars.container.selector.style("height"),10)
	
	    vars.container.list
	      .style("max-height",list_height)
	      .property("scrollTop",list_scroll)
	
	    vars.container.selector
	      .style("height",old_height)
	      .property("scrollTop",old_scroll)
	
	    var scrolling = false
	    if (vars.container.listHeight > vars.height.secondary) {
	      vars.container.listHeight = vars.height.secondary
	      scrolling = true
	    }
	
	    if (hidden) vars.container.selector.style("display","none")
	
	    if ( vars.dev.value ) print.timeEnd("calculating height")
	
	    if (scrolling) {
	
	      if ( vars.dev.value ) print.time("calculating scroll position")
	
	      var options = vars.container.list.select("div").selectAll("div.d3plus_node")
	      var option = options[0][0]
	      var matchID = typeof vars.hover.value !== "boolean" ? vars.hover.value : vars.focus.value;
	      options.each(function(d,i){
	        if (d[vars.id.value] === matchID) {
	          option = this
	        }
	      })
	
	      var hidden = false
	      if (vars.container.selector.style("display") === "none") {
	        hidden = true
	        vars.container.selector.style("display","block")
	      }
	
	      var button_top = option.offsetTop,
	          button_height = option.offsetHeight || option.getBoundingClientRect().height,
	          list_top = vars.container.list.property("scrollTop")
	
	      if (hidden) vars.container.selector.style("display","none")
	
	      if ( hidden || vars.data.changed || vars.depth.changed ) {
	
	        vars.container.listScroll = button_top
	
	      }
	      else {
	
	        vars.container.listScroll = list_top;
	
	        if (button_top < list_top) {
	          vars.container.listScroll = button_top
	        }
	        else if (button_top+button_height > list_top+vars.height.secondary-vars.search.height) {
	          vars.container.listScroll = button_top - (vars.height.secondary-button_height-vars.search.height)
	        }
	
	      }
	
	      if ( vars.dev.value ) print.timeEnd("calculating scroll position")
	
	    }
	    else {
	      vars.container.listScroll = 0
	    }
	
	  }
	  else {
	    vars.container.listScroll = vars.container.list.property("scrollTop")
	    vars.container.listHeight = 0
	  }
	
	}


/***/ },
/* 386 */
/***/ function(module, exports, __webpack_require__) {

	var prefix = __webpack_require__(39),
	    print = __webpack_require__(2)
	//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	// Creates and styles the search box, if enabled.
	//------------------------------------------------------------------------------
	module.exports = function ( vars ) {
	
	  if ( vars.dev.value ) print.time("creating search")
	
	  var data = __webpack_require__(146)
	    , items = __webpack_require__(132)
	    , update = __webpack_require__(147)
	
	  vars.container.search = vars.container.selector.selectAll("div.d3plus_drop_search")
	    .data(vars.search.enabled ? ["search"] : [])
	
	  function searchStyle(elem) {
	
	    elem
	      .style("padding",vars.ui.padding.css)
	      .style("display","block")
	      .style("background-color",d3.rgb(vars.ui.color.primary.value).darker(0.15).toString())
	
	  }
	
	  function inputStyle(elem) {
	
	    var width = vars.width.secondary - vars.ui.padding.left*2 - vars.ui.padding.right*2 + vars.ui.border*2
	
	    elem
	      .style("padding",vars.ui.padding.left/2+vars.ui.padding.right/2+"px")
	      .style("width",width+"px")
	      .style("border-width","0px")
	      .style("font-family",vars.font.secondary.family.value)
	      .style("font-size",vars.font.secondary.size+"px")
	      .style("font-weight",vars.font.secondary.weight)
	      .style("text-align",vars.font.secondary.align)
	      .style("outline","none")
	      .style(prefix()+"border-radius","0")
	      .attr("placeholder",vars.format.value(vars.format.locale.value.method.search))
	
	  }
	
	  if (vars.draw.timing) {
	
	    vars.container.search.transition().duration(vars.draw.timing)
	      .call(searchStyle)
	
	    vars.container.search.select("input").transition().duration(vars.draw.timing)
	      .call(inputStyle)
	
	  }
	  else {
	
	    vars.container.search
	      .call(searchStyle)
	
	    vars.container.search.select("input")
	      .call(inputStyle)
	
	  }
	
	  vars.container.search.enter()
	    .insert("div","#d3plus_drop_list_"+vars.container.id)
	      .attr("class","d3plus_drop_search")
	      .attr("id","d3plus_drop_search_"+vars.container.id)
	      .call(searchStyle)
	      .append("input")
	        .attr("id","d3plus_drop_input_"+vars.container.id)
	        .style("-webkit-appearance","none")
	        .call(inputStyle)
	
	  vars.container.search.select("input").on("keyup."+vars.container.id,function(d){
	    var term = this.value;
	    if (vars.search.term !== term) {
	      vars.search.term = term;
	      data(vars);
	      items(vars);
	      update(vars);
	    }
	  });
	
	  vars.container.search.exit().remove()
	
	  var oldDisplay = vars.container.selector.style("display")
	  vars.container.selector.style("display", "block")
	  vars.search.height = vars.search.enabled ? vars.container.search.node().offsetHeight ||
	                       vars.container.search.node().getBoundingClientRect().height : 0;
	  vars.container.selector.style("display", oldDisplay)
	
	  if ( vars.search.enabled ) {
	    vars.margin.title += vars.search.height
	  }
	
	  if ( vars.dev.value ) print.timeEnd("creating search")
	
	}


/***/ },
/* 387 */
/***/ function(module, exports) {

	//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	// Creates and styles the div that holds the search box and item list.
	//------------------------------------------------------------------------------
	module.exports = function ( vars ) {
	
	  vars.container.selector = vars.container.ui
	    .selectAll("div.d3plus_drop_selector")
	    .data(["selector"])
	
	  vars.container.selector.enter().append("div")
	    .attr("class","d3plus_drop_selector")
	    .style("position","absolute")
	    .style("top","0px")
	    .style("z-index","-1")
	    .style("overflow","hidden")
	
	    vars.container.selector
	      .style("padding",vars.ui.border+"px")
	
	}


/***/ },
/* 388 */
/***/ function(module, exports, __webpack_require__) {

	var events = __webpack_require__(9),
	    lighter   = __webpack_require__(52),
	    print     = __webpack_require__(2),
	    textColor = __webpack_require__(25)
	
	//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	// Creates and styles the title and back button.
	//------------------------------------------------------------------------------
	module.exports = function ( vars ) {
	
	  if ( vars.open.value ) {
	
	    if ( vars.dev.value ) print.time("creating title and back button")
	
	    var self    = this
	      , enabled = vars.id.solo.value.length === 1 && vars.depth.value > 0
	      , title   = enabled
	      , focus   = vars.container.button.data(Object).viz[0]
	
	    title = true
	    for (var i = 0; i < vars.id.nesting.length; i++) {
	      var level = vars.id.nesting[i]
	      if ( level in focus && focus[level] === vars.focus.value ) {
	        title = false
	        break;
	      }
	    }
	
	    vars.container.title = vars.container.selector.selectAll("div.d3plus_drop_title")
	      .data(enabled ? ["title"] : [])
	
	    function boxStyle(elem) {
	
	      elem
	        .style("padding",vars.ui.padding.css)
	        .style("display","block")
	        .style("background-color",vars.ui.color.secondary.value)
	        .style("font-family",vars.font.secondary.family.value)
	        .style("font-size",vars.font.secondary.size+"px")
	        .style("font-weight",vars.font.secondary.weight)
	        .style("text-align",vars.font.secondary.align)
	        .style("color",textColor(vars.ui.color.secondary.value))
	
	    }
	
	    function backStyle(elem) {
	
	      if ( !elem.empty() ) {
	
	        var className = vars.icon.back.value.indexOf("fa-") === 0 ? " fa "+vars.icon.back.value : ""
	        className = "d3plus_drop_back" + className
	
	        var text = vars.icon.back.value.indexOf("fa-") === 0 ? "" : vars.icon.back.value
	
	        elem
	          .style("position","absolute")
	          .attr("class",className)
	          .style("top",vars.ui.padding.top+(vars.font.secondary.size/2)/2.5+"px")
	          .html(text)
	
	      }
	
	    }
	
	    function titleStyle(elem) {
	
	      var text = title ? vars.focus.value : vars.format.locale.value.ui.back
	
	      elem
	        .text(vars.format.value(text))
	        .style("padding","0px "+(vars.ui.padding.left+vars.ui.padding.right)+"px")
	
	    }
	
	    if (vars.draw.timing) {
	
	      vars.container.title.transition().duration(vars.draw.timing)
	        .call(boxStyle)
	
	      vars.container.title.select("div.d3plus_drop_title_text")
	        .transition().duration(vars.draw.timing)
	        .call(titleStyle)
	
	    }
	    else {
	
	      vars.container.title
	        .call(boxStyle)
	
	      vars.container.title.select("div.d3plus_drop_title_text")
	        .call(titleStyle)
	
	    }
	
	    vars.container.title.select("span.d3plus_drop_back")
	      .call(backStyle)
	
	    var enter = vars.container.title.enter()
	      .insert("div","#d3plus_drop_list_"+vars.container.id)
	        .attr("class","d3plus_drop_title")
	        .attr("id","d3plus_drop_title_"+vars.container.id)
	        .call(boxStyle)
	
	    enter.append("span")
	      .attr("id","d3plus_drop_back_"+vars.container.id)
	      .attr("class","d3plus_drop_back")
	      .call(backStyle)
	
	    enter.append("div")
	      .attr("id","d3plus_drop_title_text_"+vars.container.id)
	      .attr("class","d3plus_drop_title_text")
	      .call(titleStyle)
	
	    vars.container.title
	      .on(events.over,function(d,i){
	
	        var color = lighter(vars.ui.color.secondary.value)
	
	        d3.select(this).style("cursor","pointer")
	          .transition().duration(vars.timing.mouseevents)
	          .style("background-color",color)
	          .style("color",textColor(color))
	
	      })
	      .on(events.out,function(d){
	
	        var color = vars.ui.color.secondary.value
	
	        d3.select(this).style("cursor","auto")
	          .transition().duration(vars.timing.mouseevents)
	          .style("background-color",color)
	          .style("color",textColor(color))
	
	      })
	      .on(events.click,function(d){
	        vars.history.back()
	      })
	
	    vars.container.title.exit().remove()
	
	    if ( enabled ) {
	      vars.margin.title += vars.container.title.node().offsetHeight || vars.container.title.node().getBoundingClientRect().height
	    }
	
	    if ( vars.dev.value ) print.timeEnd("creating title and back button")
	
	  }
	
	}


/***/ },
/* 389 */
/***/ function(module, exports, __webpack_require__) {

	var copy = __webpack_require__(11),
	    fontTester  = __webpack_require__(84),
	    form        = __webpack_require__(48),
	    print       = __webpack_require__(2),
	    validObject = __webpack_require__(7)
	//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	// If no widths are defined, then this calculates the width needed to fit the
	// longest entry in the list.
	//------------------------------------------------------------------------------
	module.exports = function ( vars ) {
	
	  var data = [], buffer = 0
	  for ( var level in vars.data.nested.all ) {
	    var newData = vars.data.nested.all[level]
	      , key     = validObject(vars.text.nesting) && level in vars.text.nesting
	                ? vars.text.nesting[level][0] : level
	
	    if ( [vars.id.value,vars.text.value].indexOf(key) < 0 ) {
	      newData = copy(newData)
	      newData.forEach(function(d){
	        d[vars.text.value || vars.id.value] = d[key]
	      })
	    }
	    data = data.concat( newData )
	  }
	
	  function getWidth( type ) {
	
	    var key  = type === "primary" ? "value" : type
	      , icon = key === "value" ? vars.icon.drop.value
	             : vars.icon.select.value || vars.icon.drop.value
	      , text = key === "value" ? vars.text.value
	             : vars.text.secondary.value || vars.text.value
	      , font = key === "value" ? vars.font : vars.font.secondary
	
	    if ( vars.dev.value ) print.time("calculating "+type+" width")
	
	    var button = form()
	      .container( fontTester() )
	      .data({
	        "large": 9999,
	        "value": data
	      })
	      .draw({ "update": false })
	      .font( font )
	      .format(vars.format)
	      .icon({ "button": icon, "value": vars.icon.value })
	      .id(vars.id.value)
	      .timing({
	        "ui": 0
	      })
	      .text( text || vars.id.value )
	      .type( "button" )
	      .ui({
	        "border": type === "primary" ? vars.ui.border : 0,
	        "display": "inline-block",
	        "margin": 0,
	        "padding": vars.ui.padding.css
	      })
	      .width(false)
	      .draw()
	
	    var w = []
	    button.selectAll("div.d3plus_node").each(function(o){
	      w.push(this.offsetWidth + 1)
	    }).remove()
	
	    var dropWidth = {}
	    dropWidth[key] = d3.max(w)
	
	    vars.self.width( dropWidth )
	
	    if ( vars.dev.value ) print.timeEnd("calculating "+type+" width")
	
	  }
	
	  if ( typeof vars.width.value !== "number" ) {
	
	    getWidth( "primary" )
	
	  }
	
	  if ( typeof vars.width.secondary !== "number" ) {
	
	    if ( !vars.text.secondary.value || vars.text.value === vars.text.secondary.value ) {
	      vars.self.width({"secondary": vars.width.value})
	    }
	    else {
	      getWidth( "secondary" )
	    }
	
	  }
	
	}


/***/ },
/* 390 */
/***/ function(module, exports, __webpack_require__) {

	var child = __webpack_require__(93)
	
	//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	// Recursive function that applies a click event to all parent windows that
	// will close the dropdown if it is open.
	//------------------------------------------------------------------------------
	var windowEvents = function ( vars , elem ) {
	
	  if ( elem === undefined ) {
	    var elem = window
	  }
	
	  d3.select(elem).on("click."+vars.container.id,function(){
	
	    var element = d3.event.target || d3.event.toElement
	      , parent  = element.parentNode
	
	    if ( parent && ["d3plus_node","d3plus_drop_title"].indexOf(parent.className) >= 0 ) {
	      element = parent.parentNode
	    }
	
	    if (element && parent && !child(vars.container.ui, element) && (vars.open.value || vars.hover.value)) {
	      vars.self.open(false).hover(false).draw()
	    }
	
	  })
	
	  try {
	    var same_origin = window.parent.location.host === window.location.host;
	  }
	  catch (e) {
	    var same_origin = false
	  }
	
	  if (same_origin) {
	    if (elem.self !== window.top) {
	      windowEvents( vars , elem.parent )
	    }
	  }
	
	}
	
	module.exports = windowEvents


/***/ },
/* 391 */
/***/ function(module, exports, __webpack_require__) {

	var form = __webpack_require__(48)
	
	//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	// Creates a set of Toggle Buttons
	//------------------------------------------------------------------------------
	module.exports = function( vars ) {
	
	  if ( !("buttons" in vars.container) ) {
	
	    vars.container.buttons = form()
	      .container(vars.container.ui)
	      .type("button")
	
	  }
	
	  var dataLength  = vars.data.viz.length
	    , buttonWidth = vars.width.value
	                  ? vars.width.value/dataLength
	                  : false
	
	  var toggles = vars.container.ui.selectAll("div.d3plus_toggle")
	    .data(vars.data.viz,function(d){
	      return d[vars.id.value];
	    })
	
	  toggles.exit().remove();
	
	  toggles.enter().append("div")
	    .attr("class","d3plus_toggle")
	    .style("display","inline-block")
	    .style("vertical-align","top")
	
	  toggles.order()
	    .each(function(d){
	
	      if (!("form" in d.d3plus)) {
	        d.d3plus.form = form().container(d3.select(this))
	      }
	
	      var id = vars.id.nesting.length > vars.depth.value ? vars.id.nesting[vars.depth.value+1] : vars.id.value
	
	      if (d[id] instanceof Array) {
	        d.d3plus.form
	          .container({"id": vars.container.id+"_"+d[vars.id.value]})
	          .data(d[id])
	          .id(vars.id.nesting.slice(1))
	          .type("drop")
	      }
	      else {
	        d.d3plus.form
	          .data([d])
	          .id(vars.id.value)
	          .type("button")
	      }
	
	      d.d3plus.form
	        .color(vars.color)
	        .focus(vars.focus.value,function(value){
	
	          if (value !== vars.focus.value) {
	            vars.self.focus(value).draw()
	          }
	
	        })
	        .hover(vars.hover.value)
	        .icon({
	          "select": false,
	          "value": vars.icon.value
	        })
	        .font(vars.font)
	        .format(vars.format)
	        .order(vars.order)
	        .text(vars.text.value)
	        .ui({
	          "border": vars.ui.border,
	          "color": vars.ui.color,
	          "display": "inline-block",
	          "margin": 0,
	          "padding": vars.ui.padding.css
	        })
	        .width(buttonWidth)
	        .draw()
	
	    })
	
	  if (vars.data.element.value) {
	    vars.data.element.value
	      .on("focus."+vars.container.id, function(){
	        vars.self.focus(this.value).hover(this.value).draw();
	      })
	      .on("blur."+vars.container.id, function(){
	        vars.self.hover(false).draw();
	      })
	  }
	
	}


/***/ },
/* 392 */
/***/ function(module, exports, __webpack_require__) {

	var dataFormat    = __webpack_require__(144),
	    dataColor     = __webpack_require__(362),
	    dataKeys      = __webpack_require__(123),
	    dataLoad      = __webpack_require__(124),
	    drawDrawer    = __webpack_require__(412),
	    drawLegend    = __webpack_require__(413),
	    drawTimeline  = __webpack_require__(267),
	    errorCheck    = __webpack_require__(393),
	    fetchData     = __webpack_require__(99),
	    finish        = __webpack_require__(394),
	    focusTooltip  = __webpack_require__(259),
	    history       = __webpack_require__(266),
	    parseEdges    = __webpack_require__(372),
	    parseNodes    = __webpack_require__(374),
	    print         = __webpack_require__(2),
	    removeTooltip = __webpack_require__(26),
	    runType       = __webpack_require__(265),
	    shapes        = __webpack_require__(401),
	    stringFormat  = __webpack_require__(14),
	    svgSetup      = __webpack_require__(409),
	    svgUpdate     = __webpack_require__(410),
	    titles        = __webpack_require__(414),
	    validObject   = __webpack_require__(7)
	//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	// Calculate steps needed to redraw the visualization
	//------------------------------------------------------------------------------
	module.exports = function(vars) {
	
	  var steps       = []
	    , appType     = vars.type.value
	    , locale      = vars.format.locale.value
	    , uiMessage   = locale.message.ui
	    , drawMessage = locale.message.draw
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // Check to see if any data needs to be loaded with JSON
	  //----------------------------------------------------------------------------
	  var urlLoads = [ "data" , "attrs" , "coords" , "nodes" , "edges" ]
	  urlLoads.forEach(function(u){
	
	    if (!vars.error.value && !vars[u].loaded && vars[u].url) {
	
	      steps.push({
	        "function": function( vars , next ){
	          dataLoad( vars , u , next )
	        },
	        "message": locale.message.loading,
	        "wait": true
	      })
	
	    }
	
	  })
	
	  if (vars.draw.update) {
	
	    var appName     = locale.visualization[appType] || appType
	      , appSetup    = vars.types[appType].setup || false
	      , appReqs     = vars.types[appType].requirements || []
	      , appMessage  = stringFormat(locale.message.initializing,appName)
	      , dataMessage = locale.message.data
	
	    if (!(appReqs instanceof Array)) appReqs = [appReqs]
	    appName = appName.toLowerCase()
	
	    //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	    // If it has one, run the current app's setup function.
	    //--------------------------------------------------------------------------
	    if (!vars.error.value && typeof appSetup === "function") {
	
	      steps.push({
	        "function": function( vars ) {
	
	          if ( vars.dev.value ) {
	            var timerString = "running " + appName + " setup"
	            print.time( timerString )
	          }
	
	          appSetup( vars )
	
	          if ( vars.dev.value ) print.timeEnd( timerString )
	
	        },
	        "message": appMessage
	      })
	
	    }
	
	    //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	    // Create SVG group elements if the container is new or has changed
	    //--------------------------------------------------------------------------
	    if (vars.container.changed) {
	
	      steps.push({ "function" : svgSetup , "message" : appMessage })
	
	    }
	
	    //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	    // Create group for current app, if it doesn't exist.
	    //--------------------------------------------------------------------------
	    if (!(appType in vars.g.apps)) {
	
	      steps.push({
	        "function": function( vars ) {
	
	          if ( vars.dev.value ) {
	            var timerString = "creating " + appName + " group"
	            print.time( timerString )
	          }
	
	          vars.g.apps[appType] = vars.g.app.append("g")
	            .attr("id", appType)
	            .attr("opacity", 0);
	
	          if ( vars.dev.value ) print.timeEnd( timerString )
	
	        },
	        "message": appMessage
	      })
	
	    }
	
	    //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	    // If new data is detected, analyze and reset it.
	    //--------------------------------------------------------------------------
	    if (vars.data.changed) {
	
	      steps.push({
	        "function": function(vars) {
	          vars.data.cache = {}
	          delete vars.nodes.restricted
	          delete vars.edges.restricted
	          dataKeys(vars, "data")
	        },
	        "message": dataMessage
	      })
	
	    }
	
	    //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	    // If new attributes are detected, analyze them.
	    //--------------------------------------------------------------------------
	    if (vars.attrs.changed) {
	
	      steps.push({
	        "function": function( vars ) {
	          dataKeys(vars, "attrs")
	        },
	        "message": dataMessage
	      })
	
	    }
	
	    //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	    // Determine color type
	    //--------------------------------------------------------------------------
	    steps.push({
	      "function": function(vars) {
	
	          if (!vars.color.type || vars.color.changed || vars.data.changed ||
	              vars.attrs.changed || vars.id.changed || vars.depth.changed ||
	              (vars.time.fixed.value &&
	                (vars.time.solo.changed || vars.time.mute.changed))) {
	
	            vars.color.valueScale = false;
	
	            if ( vars.dev.value ) {
	              var timerString = "checking color type";
	              print.time(timerString);
	            }
	
	            vars.color.type = false;
	
	            if (vars.color.value) {
	
	              var colorKey = vars.color.value;
	
	              if ( validObject(colorKey) ) {
	                if (colorKey[vars.id.value]) {
	                  colorKey = colorKey[vars.id.value];
	                }
	                else {
	                  colorKey = colorKey[d3.keys(colorKey)[0]];
	                }
	              }
	
	              if (vars.data.keys && colorKey in vars.data.keys) {
	                vars.color.type = vars.data.keys[colorKey];
	              }
	              else if (vars.attrs.keys && colorKey in vars.attrs.keys) {
	                vars.color.type = vars.attrs.keys[colorKey];
	              }
	
	            }
	            else if (vars.data.keys) {
	              vars.color.type = vars.data.keys[vars.id.value];
	            }
	
	            if (vars.dev.value) print.timeEnd(timerString);
	
	          }
	
	      },
	      "message": dataMessage
	    })
	
	    //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	    // Format nodes/edges if needed
	    //--------------------------------------------------------------------------
	    if ( appReqs.indexOf("edges") >= 0 && vars.edges.value
	    && ( !vars.edges.linked || vars.edges.changed ) ) {
	      steps.push({ "function" : parseEdges, "message" : dataMessage })
	    }
	
	    if ( appReqs.indexOf("nodes") >= 0 && vars.edges.value
	    && ( !vars.nodes.positions || vars.nodes.changed || vars.type.changed ) ) {
	      steps.push({ "function" : parseNodes , "message" : dataMessage })
	    }
	
	    //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	    // Groups data by time and nesting.
	    //--------------------------------------------------------------------------
	    if (vars.data.changed || vars.time.changed || vars.time.format.changed || vars.id.changed || (vars.x.scale.changed && [vars.x.scale.value, vars.x.scale.previous].indexOf("discrete") >= 0) || (vars.y.scale.changed && [vars.y.scale.value, vars.y.scale.previous].indexOf("discrete") >= 0)) {
	      steps.push({ "function" : dataFormat , "message" : dataMessage })
	    }
	
	    //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	    // Fetches data for app and "pool"
	    //--------------------------------------------------------------------------
	    if (!vars.error.value) {
	      steps.push({
	        "function": function(vars) {
	
	          var year = !vars.time.fixed.value ? ["all"] : null
	          if (vars.dev.value) {
	            var timerString = year ? "fetching pool data" : "fetching data"
	            print.time( timerString )
	          }
	          vars.data.pool = fetchData( vars , year )
	          if (vars.dev.value) print.timeEnd( timerString )
	          if ( !year ) {
	            vars.data.viz = vars.data.pool
	          }
	          else {
	            if ( vars.dev.value ) print.time("fetching data for current year")
	            vars.data.viz = fetchData( vars )
	            if ( vars.dev.value ) print.timeEnd("fetching data for current year")
	          }
	
	          vars.draw.timing = vars.data.viz.length < vars.data.large ?
	                             vars.timing.transitions : 0;
	
	        },
	        "message": dataMessage
	      })
	    }
	
	    //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	    // Calculate color scale if type is number
	    //--------------------------------------------------------------------------
	    if (!vars.error.value) {
	      steps.push({
	        "check": function(vars) {
	
	          return vars.color.value && vars.color.type === "number" &&
	                 vars.color.valueScale === false
	
	        },
	        "function": dataColor,
	        "message": dataMessage
	      })
	
	    }
	  }
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // Remove any lingering tooltips.
	  //----------------------------------------------------------------------------
	  steps.push({
	    "function": function(vars) {
	      if ( vars.dev.value ) {
	        var str = vars.format.locale.value.message.tooltipReset
	        print.time(str)
	      }
	      if ( vars.type.previous && appType !== vars.type.previous ) {
	        removeTooltip(vars.type.previous)
	      }
	      removeTooltip(appType)
	      if ( vars.dev.value ) print.timeEnd(str)
	    },
	    "message": uiMessage
	  })
	
	  if (!vars.error.value) {
	    steps.push({"function": errorCheck, "message": uiMessage})
	  }
	
	  steps.push({
	    "function": function(vars) {
	
	      vars.margin.process()
	      titles(vars)
	
	      if (!vars.error.value) {
	        if (vars.draw.update) {
	
	          drawDrawer(vars)
	          drawTimeline(vars)
	          drawLegend(vars)
	
	        }
	        else {
	
	          if ( vars.dev.value ) print.time("calculating margins")
	
	          var drawer = vars.container.value.select("div#d3plus_drawer").node().offsetHeight
	                    || vars.container.value.select("div#d3plus_drawer").node().getBoundingClientRect().height
	
	          var timeline = vars.g.timeline.node().getBBox()
	          timeline = vars.timeline.value ? timeline.height+vars.ui.padding : 0
	
	          var legend = vars.g.legend.node().getBBox()
	          legend = vars.legend.value ? legend.height+vars.ui.padding : 0
	
	          vars.margin.bottom += drawer+timeline+legend
	
	          if ( vars.dev.value ) print.timeEnd("calculating margins")
	
	        }
	      }
	
	      history(vars)
	      vars.height.viz -= (vars.margin.top+vars.margin.bottom)
	      vars.width.viz -= (vars.margin.left+vars.margin.right)
	
	    },
	    "message": uiMessage
	  })
	
	  if (!vars.error.value) {
	    steps.push({
	      "function": focusTooltip,
	      "message": uiMessage
	    })
	  }
	
	  steps.push({
	    "function": svgUpdate,
	    "message": drawMessage
	  })
	
	  if (!vars.error.value && vars.draw.update) {
	    steps.push({
	      "function" : [ runType, shapes ],
	      "message"  : drawMessage
	    })
	  }
	
	  steps.push({
	    "function" : finish,
	    "message" : drawMessage
	  })
	
	  return steps
	
	}


/***/ },
/* 393 */
/***/ function(module, exports, __webpack_require__) {

	var fetchText    = __webpack_require__(17),
	    print        = __webpack_require__(2),
	    rejected     = __webpack_require__(128),
	    stringFormat = __webpack_require__(14),
	    stringList   = __webpack_require__(46)
	
	//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	// Miscellaneous Error Checks
	//------------------------------------------------------------------------------
	module.exports = function(vars) {
	
	  if ( vars.dev.value ) print.time("checking for errors")
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // Check to see if we have all required variables set
	  //----------------------------------------------------------------------------
	  var reqs = ["id"]
	    , app_reqs = vars.types[vars.type.value].requirements
	  if (app_reqs) {
	    if (!(app_reqs instanceof Array)) reqs.push(app_reqs)
	    else reqs = reqs.concat(vars.types[vars.type.value].requirements)
	  }
	
	  var missing = []
	  reqs.forEach(function(r){
	    if (typeof r === "string") {
	      if (!vars[r].value) missing.push("\""+r+"\"")
	    }
	    else if (typeof r === "function") {
	      var reqReturn = r(vars)
	      if (!reqReturn.status && reqReturn.text) {
	        missing.push("\""+reqReturn.text+"\"")
	      }
	    }
	  })
	
	  if ( missing.length > 1 ) {
	    var str = vars.format.locale.value.error.methods
	      , app = vars.format.locale.value.visualization[vars.type.value] || vars.type.value
	      , and = vars.format.locale.value.ui.and
	    missing = stringList(missing,and)
	    vars.error.internal = stringFormat(str,app,missing)
	  }
	  else if ( missing.length === 1 ) {
	    var str = vars.format.locale.value.error.method
	      , app = vars.format.locale.value.visualization[vars.type.value] || vars.type.value
	    vars.error.internal = stringFormat(str,app,missing[0])
	  }
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // Check to see if we have focus connections, if needed
	  //----------------------------------------------------------------------------
	  if (!vars.error.internal && reqs.indexOf("edges") >= 0 && reqs.indexOf("focus") >= 0) {
	    var connections = vars.edges.connections(vars.focus.value[0],vars.id.value)
	    if (connections.length == 0) {
	      var name = fetchText(vars,vars.focus.value[0],vars.depth.value)
	        , str = vars.format.locale.value.error.connections
	      vars.error.internal = stringFormat(str,"\""+name+"\"")
	    }
	  }
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // Check to see if we have all required libraries
	  //----------------------------------------------------------------------------
	  var reqs = ["d3"]
	  if (vars.types[vars.type.value].libs) {
	    reqs = reqs.concat(vars.types[vars.type.value].libs)
	  }
	  var missing = []
	  reqs.forEach(function(r){
	    if (!window[r]) missing.push("\""+r+"\"")
	  })
	
	  if ( missing.length > 1 ) {
	    var str = vars.format.locale.value.error.libs
	      , app = vars.format.locale.value.visualization[vars.type.value]
	      , and = vars.format.locale.value.ui.and
	    missing = stringList(missing,and)
	    vars.error.internal = stringFormat(str,app,missing)
	  }
	  else if ( missing.length === 1 ) {
	    var str = vars.format.locale.value.error.lib
	      , app = vars.format.locale.value.visualization[vars.type.value]
	    vars.error.internal = stringFormat(str,app,missing[0])
	  }
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // Check to see if the requested app supports the set shape
	  //----------------------------------------------------------------------------
	  var shapes = vars.shape.accepted(vars);
	  if (!(shapes instanceof Array)) shapes = [shapes]
	  var shape = vars.shape.value;
	
	  if (!shape || rejected(vars, shapes, shape, "shape")) {
	    vars.self.shape(shapes[0]);
	  }
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // Check to see if the requested app supports the set "mode"
	  //----------------------------------------------------------------------------
	  if ("modes" in vars.types[vars.type.value]) {
	
	    var modes = vars.types[vars.type.value].modes
	    if (!(modes instanceof Array)) modes = [modes]
	    var mode = vars.type.mode.value
	
	    if (!mode || rejected(vars, modes, mode, "mode")) {
	      vars.self.type({"mode": modes[0]})
	    }
	
	  }
	
	  if ( vars.dev.value ) print.timeEnd("checking for errors")
	
	}


/***/ },
/* 394 */
/***/ function(module, exports, __webpack_require__) {

	var edges = __webpack_require__(402),
	    paths       = __webpack_require__(406),
	    flash       = __webpack_require__(149),
	    focusViz    = __webpack_require__(395),
	    methodReset = __webpack_require__(129),
	    print       = __webpack_require__(2),
	    shapeLabels = __webpack_require__(404),
	    titleCase   = __webpack_require__(69)
	
	var bounds = __webpack_require__(268)
	var labels = __webpack_require__(94)
	var mouse  = __webpack_require__(269)
	
	//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	// Finalize Visualization
	//------------------------------------------------------------------------------
	module.exports = function(vars) {
	
	  // Highlight focus nodes/edges
	  if (vars.draw.first) {
	    setTimeout(function(){
	      focusViz(vars);
	    }, vars.draw.timing);
	  }
	  else {
	    focusViz(vars);
	  }
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // Zoom to fit bounds, if applicable
	  //----------------------------------------------------------------------------
	  if (!vars.error.value) {
	
	    var zoom = vars.zoom.viewport || vars.zoom.bounds
	    if (vars.types[vars.type.value].zoom && vars.zoom.value && zoom) {
	
	      if ( vars.dev.value ) print.time("calculating zoom")
	
	      if (vars.draw.first || vars.zoom.reset) {
	        bounds(vars, zoom, 0);
	      }
	      else if (vars.type.changed || vars.focus.changed || vars.height.changed || vars.width.changed || vars.nodes.changed || vars.legend.changed || vars.timeline.changed || vars.ui.changed) {
	        bounds(vars, zoom);
	      }
	
	      if ( vars.dev.value ) print.timeEnd("calculating zoom")
	
	    }
	    else {
	      vars.zoom.bounds = [[0,0],[vars.width.viz,vars.height.viz]]
	      vars.zoom.scale = 1
	      bounds(vars)
	    }
	
	  }
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // Resize/Reposition Overlay Rect for Mouse events
	  //----------------------------------------------------------------------------
	  var w = vars.zoom.size ? vars.zoom.size.width : vars.width.viz,
	      h = vars.zoom.size ? vars.zoom.size.height : vars.height.viz,
	      x = vars.zoom.bounds ? vars.zoom.bounds[0][0] : 0,
	      y = vars.zoom.bounds ? vars.zoom.bounds[0][1] : 0
	
	  vars.g.overlay
	    .attr("width",w)
	    .attr("height",h)
	    .attr("x",x)
	    .attr("y",y)
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // Create labels
	  //----------------------------------------------------------------------------
	  if (!vars.error.value) {
	    if (vars.draw.update) {
	      if (vars.edges.path) {
	        paths(vars);
	      }
	      else {
	        edges(vars);
	      }
	      // if (vars.draw.timing || (!vars.types[vars.type.value].zoom && !vars.draw.timing)) {
	      shapeLabels(vars, "data");
	      if (vars.edges.label && !vars.edges.path) {
	        setTimeout(function(){
	          shapeLabels(vars, "edges");
	        }, vars.draw.timing + 200);
	      }
	      // }
	    }
	    else if ((vars.labels.value || vars.labels.changed) && vars.types[vars.type.value].zoom && vars.zoom.value && vars.draw.timing) {
	      setTimeout(function(){
	        labels(vars)
	      },vars.draw.timing)
	    }
	  }
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // Check for Errors
	  //----------------------------------------------------------------------------
	  if (!vars.error.value) {
	    var reqs = vars.types[vars.type.value].requirements || []
	    if (!(reqs instanceof Array)) reqs = [reqs]
	    var data_req = reqs.indexOf("data") >= 0
	    if (!vars.error.internal) {
	      if ((!vars.data.viz || !vars.returned.nodes.length) && data_req) {
	        vars.error.internal = vars.format.locale.value.error.data
	      }
	    }
	  }
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // Hide the previous app, if applicable
	  //----------------------------------------------------------------------------
	  var prev = vars.type.previous
	  if (prev && vars.type.value != prev && vars.g.apps[prev]) {
	    if ( vars.dev.value ) print.time("hiding \"" + prev + "\"")
	    if (vars.draw.timing) {
	      vars.g.apps[prev].transition().duration(vars.draw.timing)
	        .attr("opacity",0)
	    }
	    else {
	      vars.g.apps[prev].attr("opacity",0)
	    }
	    if ( vars.dev.value ) print.timeEnd()
	  }
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // Show the current app, data, and edges groups
	  //----------------------------------------------------------------------------
	  if (!vars.error.value) {
	    var new_opacity = (data_req && vars.data.viz.length === 0) ||
	                       vars.error.internal || vars.error.value ? 0 : vars.focus.value.length &&
	                       vars.types[vars.type.value].zoom && vars.zoom.value ?
	                       1 - vars.tooltip.curtain.opacity : 1;
	
	    var timing = vars.draw.timing;
	
	    vars.group.transition().duration(timing)
	      .attr("opacity",new_opacity);
	
	    vars.g.data.transition().duration(timing)
	      .attr("opacity",new_opacity);
	
	    vars.g.edges.transition().duration(timing)
	      .attr("opacity",new_opacity);
	
	  }
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // Display and reset internal_error, if applicable
	  //----------------------------------------------------------------------------
	  if (vars.error.value) {
	    flash(vars, vars.error.value);
	  }
	  else if (vars.error.internal) {
	    vars.error.internal = titleCase(vars.error.internal);
	    print.warning(vars.error.internal);
	    flash(vars, vars.error.internal);
	    vars.error.internal = null;
	  }
	  else {
	    flash(vars);
	  }
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // Unfreeze controls and apply zoom behavior, if applicable
	  //----------------------------------------------------------------------------
	  setTimeout(function(){
	
	    methodReset( vars )
	
	    if (vars.types[vars.type.value].zoom && vars.zoom.value) {
	      vars.g.zoom
	        .datum(vars)
	        .call(vars.zoom.behavior.on("zoom",mouse))
	      if (!vars.zoom.scroll.value) {
	        vars.g.zoom
	          .on("mousewheel.zoom",null)
	          .on("MozMousePixelScroll.zoom",null)
	          .on("wheel.zoom",null)
	      }
	      if (!vars.zoom.click.value) {
	        vars.g.zoom.on("dblclick.zoom",null)
	      }
	      if (!vars.zoom.pan.value) {
	        vars.g.zoom
	          .on("mousedown.zoom",null)
	          .on("mousemove.zoom",null)
	      }
	    }
	    else {
	      vars.g.zoom
	        .call(vars.zoom.behavior.on("zoom",null))
	        .on("dblclick.zoom",null)
	        .on("mousedown.zoom",null)
	        .on("mousemove.zoom",null)
	        .on("mousewheel.zoom",null)
	        .on("MozMousePixelScroll.zoom",null)
	        .on("touchstart.zoom",null)
	        .on("wheel.zoom",null)
	    }
	
	  },vars.draw.timing)
	
	}


/***/ },
/* 395 */
/***/ function(module, exports, __webpack_require__) {

	var events = __webpack_require__(9),
	    ie           = __webpack_require__(32),
	    fetchValue   = __webpack_require__(3),
	    print        = __webpack_require__(2),
	    uniqueValues = __webpack_require__(8)
	
	//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	// Creates focus elements, if available
	//------------------------------------------------------------------------------
	module.exports = function(vars) {
	
	  vars.g.edge_focus
	    .selectAll("g")
	    .remove()
	
	  vars.g.data_focus
	    .selectAll("g")
	    .remove()
	
	  if (vars.focus.value.length && vars.types[vars.type.value].zoom && vars.zoom.value) {
	
	    if ( vars.dev.value ) print.time("drawing focus elements")
	
	    var edges = vars.g.edges.selectAll("g")
	
	    if (edges.size() > 0) {
	
	      edges.each(function(l){
	
	          var source = l[vars.edges.source][vars.id.value],
	              target = l[vars.edges.target][vars.id.value]
	
	          if (source == vars.focus.value[0] || target == vars.focus.value[0]) {
	            var elem = vars.g.edge_focus.node().appendChild(this.cloneNode(true))
	            d3.select(elem).datum(l).attr("opacity",1)
	              .selectAll("line, path").datum(l)
	          }
	
	        })
	
	
	      var marker = vars.edges.arrows.value
	
	      vars.g.edge_focus.selectAll("line, path")
	        .attr("vector-effect","non-scaling-stroke")
	        .style("stroke",vars.color.focus)
	        .style("stroke-width",function(){
	          if (ie && vars.types[vars.type.value].zoom) return 0;
	          return vars.edges.size.value ? d3.select(this).style("stroke-width")
	               : vars.data.stroke.width*2
	        })
	        .attr("marker-start",function(e){
	
	          var direction = vars.edges.arrows.direction.value
	
	          if ("bucket" in e.d3plus) {
	            var d = "_"+e.d3plus.bucket
	          }
	          else {
	            var d = ""
	          }
	
	          return direction == "source" && marker
	               ? "url(#d3plus_edge_marker_focus"+d+")" : "none"
	
	        })
	        .attr("marker-end",function(e){
	
	          var direction = vars.edges.arrows.direction.value
	
	          if ("bucket" in e.d3plus) {
	            var d = "_"+e.d3plus.bucket
	          }
	          else {
	            var d = ""
	          }
	
	          return direction == "target" && marker
	               ? "url(#d3plus_edge_marker_focus"+d+")" : "none"
	
	        })
	
	      vars.g.edge_focus.selectAll("text")
	        .style("fill",vars.color.focus)
	
	    }
	
	    var focii = uniqueValues(vars.edges.connections(vars.focus.value[0],vars.id.value,true),vars.id.value, fetchValue, vars)
	    focii.push(vars.focus.value[0])
	
	    var x_bounds = [], y_bounds = [], x_buffer = [0], y_buffer = [0]
	
	    var groups = vars.g.data.selectAll("g")
	      .each(function(d){
	        if (focii.indexOf(d[vars.id.value]) >= 0) {
	          var elem = vars.g.data_focus.node().appendChild(this.cloneNode(true))
	          var elem = d3.select(elem).datum(d).attr("opacity",1)
	
	          if (vars.shape.value == "coordinates") {
	
	            vars.zoom.viewport = vars.path.bounds(vars.zoom.coords[d.d3plus.id])
	
	          }
	          else if ("d3plus" in d) {
	            if ("x" in d.d3plus) {
	              x_bounds.push(d.d3plus.x)
	            }
	            if ("y" in d.d3plus) {
	              y_bounds.push(d.d3plus.y)
	            }
	            if ("r" in d.d3plus) {
	              x_buffer.push(d.d3plus.r)
	              y_buffer.push(d.d3plus.r)
	            }
	            else {
	              if ("width" in d.d3plus) {
	                x_buffer.push(d.d3plus.width/2)
	              }
	              if ("height" in d.d3plus) {
	                y_buffer.push(d.d3plus.height/2)
	              }
	            }
	          }
	
	          for (e in events) {
	            var evt = d3.select(this).on(events[e])
	            if (evt) {
	              elem.on(events[e],evt)
	            }
	          }
	
	        }
	      })
	
	    if (x_bounds.length && y_bounds.length) {
	
	      var xcoords = d3.extent(x_bounds),
	          ycoords = d3.extent(y_bounds),
	          xmax = d3.max(x_buffer),
	          ymax = d3.max(y_buffer)
	
	      vars.zoom.viewport = [
	        [xcoords[0]-xmax,ycoords[0]-ymax],
	        [xcoords[1]+xmax,ycoords[1]+ymax]
	      ]
	
	    }
	
	    vars.g.data_focus.selectAll("path")
	      .style("stroke-width", ie && vars.types[vars.type.value].zoom ?
	                             0 : vars.data.stroke.width * 2);
	
	    if ( vars.dev.value ) print.timeEnd("drawing focus elements")
	
	  }
	  else {
	    vars.zoom.viewport = false
	  }
	
	}


/***/ },
/* 396 */
/***/ function(module, exports, __webpack_require__) {

	var fetchText = __webpack_require__(17),
	    fontSizes   = __webpack_require__(36),
	    largestRect = __webpack_require__(55),
	    shapeStyle  = __webpack_require__(16);
	//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	// Draws "square" and "circle" shapes using svg:rect
	//------------------------------------------------------------------------------
	module.exports = function(vars, selection, enter, exit) {
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // D3 area definition
	  //----------------------------------------------------------------------------
	  var area = d3.svg.area()
	    .x(function(d) { return d.d3plus.x; })
	    .y0(function(d) { return d.d3plus.y0; })
	    .y1(function(d) { return d.d3plus.y; })
	    .interpolate(vars.shape.interpolate.value);
	
	  var startArea = d3.svg.area()
	    .x(function(d) { return d.d3plus.x; })
	    .y0(function(d) { return d.d3plus.y0; })
	    .y1(function(d) { return d.d3plus.y0; })
	    .interpolate(vars.shape.interpolate.value);
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // "paths" Enter
	  //----------------------------------------------------------------------------
	  enter.append("path").attr("class","d3plus_data")
	    .attr("d",function(d){ return startArea(d.values); })
	    .call(shapeStyle,vars);
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // "paths" Update
	  //----------------------------------------------------------------------------
	
	  var style = {
	    "font-weight": vars.labels.font.weight,
	    "font-family": vars.labels.font.family.value
	  };
	
	  selection.selectAll("path.d3plus_data")
	    .data(function(d) {
	
	      if (vars.labels.value && d.values.length > 1) {
	
	        var max = d3.max(d.values, function(v){
	          return v.d3plus.y0 - v.d3plus.y;
	        }), lr = false;
	
	        if (max > vars.labels.font.size) {
	
	          var tops = [], bottoms = [], names = fetchText(vars, d);
	
	          d.values.forEach(function(v){
	            tops.push([v.d3plus.x,v.d3plus.y]);
	            bottoms.push([v.d3plus.x,v.d3plus.y0]);
	          });
	          tops = tops.concat(bottoms.reverse());
	
	          var ratio = null;
	          if (names.length) {
	            var size = fontSizes(names[0],style);
	            ratio = size[0].width/size[0].height;
	          }
	
	          lr = largestRect(tops,{
	            "angle": d3.range(-70, 71, 1),
	            "aspectRatio": ratio,
	            "tolerance": 0
	          });
	
	        }
	
	        if (lr && lr[0]) {
	
	          var label = {
	            "w": ~~(lr[0].width),
	            "h": ~~(lr[0].height),
	            "x": ~~(lr[0].cx),
	            "y": ~~(lr[0].cy),
	            "angle": lr[0].angle*-1,
	            "padding": 2,
	            "names": names
	          }
	
	          if (lr[0].angle !== 0) {
	            label.translate = {
	              "x":label.x,
	              "y":label.y
	            }
	          }
	          else {
	            label.translate = false
	          }
	
	          if (label.w >= 10 && label.h >= 10) {
	            d.d3plus_label = label
	          }
	
	        }
	
	      }
	
	      return [d];
	    })
	
	  if (vars.draw.timing) {
	    selection.selectAll("path.d3plus_data")
	      .transition().duration(vars.draw.timing)
	        .attr("d",function(d){ return area(d.values) })
	        .call(shapeStyle,vars)
	  }
	  else {
	    selection.selectAll("path.d3plus_data")
	      .attr("d",function(d){ return area(d.values) })
	      .call(shapeStyle,vars)
	  }
	
	}


/***/ },
/* 397 */
/***/ function(module, exports, __webpack_require__) {

	var fetchText = __webpack_require__(17),
	    largestRect = __webpack_require__(55),
	    shapeStyle  = __webpack_require__(16)
	//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	// Draws "square" and "circle" shapes using svg:rect
	//------------------------------------------------------------------------------
	module.exports = function(vars,selection,enter,exit) {
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // Initialize check scale on enter and exit.
	  //----------------------------------------------------------------------------
	  function init(paths){
	    paths.attr("transform", "scale(1)")
	  }
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // Change scale of check on update.
	  //---------------------------------------------------------------------------
	  function update(paths){
	    paths.attr("transform", function(d){
	      var smaller_dim = Math.min(d.d3plus.width, d.d3plus.height);
	      var scale = Math.floor(smaller_dim / 16);
	      return "scale("+scale+")";
	    })
	  }
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // "paths" Enter
	  //----------------------------------------------------------------------------
	  enter.append("path").attr("class","d3plus_data")
	    .attr("d", "M5-6.844L3.594-5.407L-2,0.188l-1.594-1.594L-5-2.844L-7.844,0l1.438,1.406l3,3L-2,5.843l1.406-1.438l7-7L7.844-4L5-6.844z")
	    .call(init)
	    .call(shapeStyle,vars)
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // "paths" Update
	  //----------------------------------------------------------------------------
	  selection.selectAll("path.d3plus_data")
	    .data(function(d) {
	      return [d];
	    })
	
	  if (vars.draw.timing) {
	    selection.selectAll("path.d3plus_data")
	      .transition().duration(vars.draw.timing)
	        .call(update)
	        .call(shapeStyle,vars)
	  }
	  else {
	    selection.selectAll("path.d3plus_data")
	      .call(update)
	      .call(shapeStyle,vars)
	  }
	
	}


/***/ },
/* 398 */
/***/ function(module, exports, __webpack_require__) {

	var shapeStyle  = __webpack_require__(16)
	//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	// Draws "square" and "circle" shapes using svg:rect
	//------------------------------------------------------------------------------
	module.exports = function(vars,selection,enter,exit) {
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // Initialize check scale on enter and exit.
	  //----------------------------------------------------------------------------
	  function init(paths){
	    paths.attr("d", d3.svg.symbol().type("cross").size(10))
	  }
	  
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // Change scale of check on update.
	  //---------------------------------------------------------------------------
	  function update(paths){
	    paths.attr("d", d3.svg.symbol().type("cross").size(function(d){
	      var smaller_dim = Math.min(d.d3plus.width, d.d3plus.height);
	      return d3.scale.pow().exponent(2)(smaller_dim/2);
	    }))
	  }
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // "paths" Enter
	  //----------------------------------------------------------------------------
	  enter.append("path").attr("class","d3plus_data")
	    .call(init)
	    .call(shapeStyle,vars)
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // "paths" Update
	  //----------------------------------------------------------------------------
	  selection.selectAll("path.d3plus_data")
	    .data(function(d) {
	      return [d];
	    })
	
	  if (vars.draw.timing) {
	    selection.selectAll("path.d3plus_data")
	      .transition().duration(vars.draw.timing)
	        .call(update)
	        .call(shapeStyle,vars)
	  }
	  else {
	    selection.selectAll("path.d3plus_data")
	      .call(update)
	      .call(shapeStyle,vars)
	  }
	
	}


/***/ },
/* 399 */
/***/ function(module, exports, __webpack_require__) {

	var shapeStyle  = __webpack_require__(16)
	//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	// Draws "square" and "circle" shapes using svg:rect
	//------------------------------------------------------------------------------
	module.exports = function(vars,selection,enter,exit) {
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // Initialize check scale on enter and exit.
	  //----------------------------------------------------------------------------
	  function init(paths){
	    paths.attr("d", d3.svg.symbol().type("diamond").size(10))
	  }
	  
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // Change scale of check on update.
	  //---------------------------------------------------------------------------
	  function update(paths){
	    paths.attr("d", d3.svg.symbol().type("diamond").size(function(d){
	      var smaller_dim = Math.min(d.d3plus.width, d.d3plus.height);
	      return d3.scale.pow().exponent(2)(smaller_dim/2);
	    }))
	  }
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // "paths" Enter
	  //----------------------------------------------------------------------------
	  enter.append("path").attr("class","d3plus_data")
	    .call(init)
	    .call(shapeStyle,vars)
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // "paths" Update
	  //----------------------------------------------------------------------------
	  selection.selectAll("path.d3plus_data")
	    .data(function(d) {
	      return [d];
	    })
	
	  if (vars.draw.timing) {
	    selection.selectAll("path.d3plus_data")
	      .transition().duration(vars.draw.timing)
	        .call(update)
	        .call(shapeStyle,vars)
	  }
	  else {
	    selection.selectAll("path.d3plus_data")
	      .call(update)
	      .call(shapeStyle,vars)
	  }
	
	}


/***/ },
/* 400 */
/***/ function(module, exports, __webpack_require__) {

	var shapeStyle = __webpack_require__(16)
	//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	// Draws "donut" shapes using svg:path with arcs
	//------------------------------------------------------------------------------
	module.exports = function(vars,selection,enter,exit) {
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // In order to correctly animate each donut's size and arcs, we need to store
	  // it's previous values in a lookup object that does not get destroyed when
	  // redrawing the visualization.
	  //----------------------------------------------------------------------------
	  if (!vars.arcs) {
	    vars.arcs = {
	      "donut": {},
	      "active": {},
	      "temp": {}
	    }
	  }
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // This is the main arc function that determines what values to use for each
	  // arc angle and radius.
	  //----------------------------------------------------------------------------
	  var arc = d3.svg.arc()
	    .startAngle(0)
	    .endAngle(function(d){
	      var a = vars.arcs[d.d3plus.shape][d.d3plus.id].a;
	      return a > Math.PI*2 ? Math.PI*2 : a;
	    })
	    .innerRadius(function(d){
	      if (d.d3plus.static) return 0;
	      var r = vars.arcs[d.d3plus.shape][d.d3plus.id].r;
	      return r * vars.data.donut.size;
	    })
	    .outerRadius(function(d){
	      return vars.arcs[d.d3plus.shape][d.d3plus.id].r;
	    })
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // This is the main "arcTween" function where all of the animation happens
	  // for each arc.
	  //----------------------------------------------------------------------------
	  function size(path,mod,rad,ang) {
	    if (!mod) var mod = 0
	    if (typeof rad != "number") var rad = undefined
	    if (typeof ang != "number") var ang = undefined
	    path.attrTween("d", function(d){
	      if (rad == undefined) var r = d.d3plus.r ? d.d3plus.r : d3.max([d.d3plus.width,d.d3plus.height])
	      else var r = rad
	      if (ang == undefined) var a = d.d3plus.segments[d.d3plus.shape]
	      else var a = ang
	      if (!vars.arcs[d.d3plus.shape][d.d3plus.id]) {
	        vars.arcs[d.d3plus.shape][d.d3plus.id] = {"r": 0}
	        vars.arcs[d.d3plus.shape][d.d3plus.id].a = Math.PI * 2
	      }
	      var radius = d3.interpolate(vars.arcs[d.d3plus.shape][d.d3plus.id].r,r+mod),
	          angle = d3.interpolate(vars.arcs[d.d3plus.shape][d.d3plus.id].a,a)
	      return function(t) {
	        vars.arcs[d.d3plus.shape][d.d3plus.id].r = radius(t)
	        vars.arcs[d.d3plus.shape][d.d3plus.id].a = angle(t)
	        return arc(d)
	      }
	    })
	  }
	
	  function data(d) {
	
	    if (d.d3plus.label) {
	      d.d3plus_label = d.d3plus.label;
	    }
	    else {
	      delete d.d3plus_label;
	    }
	
	    return [d];
	  }
	
	  if (vars.draw.timing) {
	
	    //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	    // "paths" Exit
	    //----------------------------------------------------------------------------
	    exit.selectAll("path.d3plus_data").transition().duration(vars.draw.timing)
	      .call(size,0,0)
	      .each("end",function(d){
	        delete vars.arcs[d.d3plus.shape][d.d3plus.id];
	      });
	
	    //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	    // "paths" Update
	    //----------------------------------------------------------------------------
	    selection.selectAll("path.d3plus_data")
	      .data(data)
	      .transition().duration(vars.draw.timing)
	        .call(size)
	        .call(shapeStyle,vars);
	
	    //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	    // "paths" Enter
	    //----------------------------------------------------------------------------
	    enter.append("path")
	      .attr("class","d3plus_data")
	      .transition().duration(0)
	        .call(size,0,0)
	        .call(shapeStyle,vars)
	        .transition().duration(vars.draw.timing)
	          .call(size)
	          .call(shapeStyle,vars);
	
	  }
	  else {
	
	    //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	    // "paths" Exit
	    //----------------------------------------------------------------------------
	    exit.selectAll("path.d3plus_data")
	      .each(function(d){
	        delete vars.arcs[d.d3plus.shape][d.d3plus.id];
	      });
	
	    //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	    // "paths" Enter
	    //----------------------------------------------------------------------------
	    enter.append("path")
	      .attr("class","d3plus_data");
	
	    //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	    // "paths" Update
	    //----------------------------------------------------------------------------
	    selection.selectAll("path.d3plus_data")
	      .data(data)
	      .call(size)
	      .call(shapeStyle,vars);
	  }
	
	};


/***/ },
/* 401 */
/***/ function(module, exports, __webpack_require__) {

	var child         = __webpack_require__(93),
	    closest       = __webpack_require__(47),
	    createTooltip = __webpack_require__(100),
	    events        = __webpack_require__(9),
	    fetchValue    = __webpack_require__(3),
	    fetchColor    = __webpack_require__(20),
	    fetchText     = __webpack_require__(17),
	    legible       = __webpack_require__(28),
	    print         = __webpack_require__(2),
	    removeTooltip = __webpack_require__(26),
	    segments      = __webpack_require__(56),
	    shapeFill     = __webpack_require__(403),
	    stringStrip   = __webpack_require__(33),
	    touch         = __webpack_require__(51),
	    touchEvent    = __webpack_require__(138),
	    uniqueValues  = __webpack_require__(8),
	    validObject   = __webpack_require__(7),
	    zoomDirection = __webpack_require__(137);
	
	var drawShape = {
	  "arc":           __webpack_require__(260),
	  "area":          __webpack_require__(396),
	  "check":         __webpack_require__(397),
	  "coordinates":   __webpack_require__(261),
	  "cross":         __webpack_require__(398),
	  "diamond":       __webpack_require__(399),
	  "donut":         __webpack_require__(400),
	  "line":          __webpack_require__(405),
	  "radial":        __webpack_require__(262),
	  "rect":          __webpack_require__(263),
	  "triangle_down": __webpack_require__(407),
	  "triangle_up":   __webpack_require__(408),
	  "whisker":       __webpack_require__(264)
	};
	
	//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	// Draws the appropriate shape based on the data
	//------------------------------------------------------------------------------
	module.exports = function(vars) {
	
	  var data = vars.returned.nodes || [],
	      edges = vars.returned.edges || [];
	
	  vars.draw.timing = data.length < vars.data.large &&
	                     edges.length < vars.edges.large ?
	                     vars.timing.transitions : 0;
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // Match vars.shape types to their respective d3plus.shape functions. For
	  // example, both "square", and "circle" shapes use "rect" as their drawing
	  // class.
	  //----------------------------------------------------------------------------
	  var shapeLookup = {
	    "arc":           "arc",
	    "area":          "area",
	    "check":         "check",
	    "circle":        "rect",
	    "coordinates":   "coordinates",
	    "cross":         "cross",
	    "donut":         "donut",
	    "diamond":       "diamond",
	    "line":          "line",
	    "plus":          "cross",
	    "radial":        "radial",
	    "rect":          "rect",
	    "square":        "rect",
	    "triangle_down": "triangle_down",
	    "triangle":      "triangle_up",
	    "triangle_up":   "triangle_up",
	    "whisker":       "whisker"
	  };
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // Split the data by each shape type in the data.
	  //----------------------------------------------------------------------------
	  var shapes = {};
	  data.forEach(function(d){
	    var s = d.d3plus && d.d3plus.shape ? d.d3plus.shape : vars.shape.value;
	    if (s in shapeLookup) {
	      if (d.d3plus) d.d3plus.shape = s
	      s = shapeLookup[s]
	      if (!shapes[s]) shapes[s] = []
	      shapes[s].push(d)
	    }
	  })
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // Resets the "id" of each data point to use with matching.
	  //----------------------------------------------------------------------------
	  function id(d) {
	
	    if (!d.d3plus.id) {
	      d.d3plus.id = "";
	      for (var i = 0; i <= vars.depth.value; i++) {
	        d.d3plus.id += fetchValue(vars,d,vars.id.nesting[i])+"_"
	      }
	
	      d.d3plus.id += shape;
	
	      ["x", "y", "x2", "y2"].forEach(function(axis){
	        if (vars[axis].scale.value == "discrete") {
	          var val = fetchValue(vars, d, vars[axis].value)
	          if (val.constructor === Date) val = val.getTime()
	          d.d3plus.id += "_"+val
	        }
	      })
	
	      if (d.d3plus.suffix) {
	        d.d3plus.id += "_" + d.d3plus.suffix;
	      }
	
	      d.d3plus.id = stringStrip(d.d3plus.id)
	    }
	
	    return d
	  }
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // Transforms the positions and scale of each group.
	  //----------------------------------------------------------------------------
	  function transform(g,grow) {
	
	    var scales = vars.types[vars.type.value].scale,
	        scale = 1;
	    if (scales) {
	      if (validObject[scales] && vars.shape.value in scales) {
	        scale = scales[vars.shape.value];
	      }
	      else if (typeof scales == "function") {
	        scale = scales(vars, vars.shape.value);
	      }
	      else if (typeof scales == "number") {
	        scale = scales;
	      }
	    }
	
	    scale = grow ? scale : 1;
	    g.attr("transform", function(d){
	
	      if (["line", "area", "coordinates"].indexOf(shape) < 0) {
	          var x = d.d3plus.x || 0, y = d.d3plus.y || 0;
	          return "translate("+x+","+y+")scale("+scale+")";
	      }
	      else {
	        return "scale("+scale+")";
	      }
	
	    });
	
	  }
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // Sets the class name for a group
	  //----------------------------------------------------------------------------
	  function className(g) {
	    g.attr("class", function(d){
	      var c = vars.class.value ? " " + fetchValue(vars, d, vars.class.value) : "";
	      return "d3plus_" + shape + c;
	    });
	  }
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // Remove old groups
	  //----------------------------------------------------------------------------
	  for (var s in shapeLookup) {
	    if (!(shapeLookup[s] in shapes) || d3.keys(shapes).length === 0) {
	      var oldShapes = vars.g.data.selectAll("g.d3plus_"+shapeLookup[s]);
	      if (vars.draw.timing) {
	        oldShapes
	          .transition().duration(vars.draw.timing)
	          .attr("opacity",0)
	          .remove();
	      }
	      else {
	        oldShapes
	          .remove();
	      }
	    }
	  }
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // Initialize arrays for labels and sizes
	  //----------------------------------------------------------------------------
	  var labels = [], shares = [];
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // Create groups by shape, apply data, and call specific shape drawing class.
	  //----------------------------------------------------------------------------
	  for (var shape in shapes) {
	
	    //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	    // Bind Data to Groups
	    //--------------------------------------------------------------------------
	    var selection = vars.g.data.selectAll("g.d3plus_"+shape)
	      .data(shapes[shape],function(d){
	
	        if (!d.d3plus) d.d3plus = {}
	
	        if ( shape === "coordinates" ) {
	          d.d3plus.id = d.id
	          return d.id
	        }
	
	        if ( !d.d3plus.id ) {
	
	          if (d.values) {
	
	            d.values.forEach(function(v){
	              v = id(v)
	              v.d3plus.shape = "circle"
	            })
	            d.d3plus.id = d.key
	
	          }
	          else {
	
	            d = id(d)
	
	            if (!d.d3plus.segments) {
	
	              d.d3plus.segments = {"donut": Math.PI*2}
	              var active = segments(vars, d, "active"),
	                  temp   = segments(vars, d, "temp"),
	                  total  = segments(vars, d, "total");
	
	              if (total) {
	                if (active) {
	                  d.d3plus.segments.active = (active/total) * (Math.PI * 2)
	                }
	                else {
	                  d.d3plus.segments.active = 0
	                }
	                if (temp) {
	                  d.d3plus.segments.temp = ((temp/total) * (Math.PI * 2)) + d.d3plus.segments.active
	                }
	                else {
	                  d.d3plus.segments.temp = 0
	                }
	              }
	
	            }
	
	          }
	
	        }
	
	        return d.d3plus ? d.d3plus.id : false;
	
	      })
	
	    //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	    // Groups Exit
	    //--------------------------------------------------------------------------
	    if (vars.draw.timing) {
	      var exit = selection.exit()
	        .transition().duration(vars.draw.timing)
	        .attr("opacity",0)
	        .remove()
	    }
	    else {
	      var exit = selection.exit()
	        .remove()
	    }
	
	    //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	    // Existing Groups Update
	    //--------------------------------------------------------------------------
	    if (vars.draw.timing) {
	      selection
	        .transition().duration(vars.draw.timing)
	        .call(transform)
	        .call(className);
	    }
	    else {
	      selection.call(transform).call(className);
	    }
	
	    //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	    // Groups Enter
	    //--------------------------------------------------------------------------
	    var opacity = vars.draw.timing ? 0 : 1
	    var enter = selection.enter().append("g")
	      .attr("opacity",opacity)
	      .call(transform)
	      .call(className);
	
	    if (vars.draw.timing) {
	      enter.transition().duration(vars.draw.timing)
	        .attr("opacity",1)
	    }
	
	    //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	    // All Groups Sort Order
	    //--------------------------------------------------------------------------
	    selection.order()
	
	    //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	    // Draw appropriate graphics inside of each group
	    //--------------------------------------------------------------------------
	    if ( vars.dev.value ) print.time("drawing \"" + shape + "\" shapes")
	    drawShape[shape]( vars , selection , enter , exit , transform )
	    if ( vars.dev.value ) print.timeEnd("drawing \"" + shape + "\" shapes")
	
	    //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	    // Check for active and temp fills for rects and donuts
	    //--------------------------------------------------------------------------
	    if (["rect","donut"].indexOf(shape) >= 0 && vars.types[vars.type.value].fill) {
	      if ( vars.dev.value ) print.time("filling \"" + shape + "\" shapes")
	      shapeFill( vars , selection , enter , exit , transform )
	      if ( vars.dev.value ) print.timeEnd("filling \"" + shape + "\" shapes")
	    }
	
	  }
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // Function to Update Edges
	  //----------------------------------------------------------------------------
	  function edge_update(d) {
	
	    if (d && vars.g.edges.selectAll("g").size() > 0) {
	
	      vars.g.edge_hover
	        .selectAll("*")
	        .remove()
	
	      vars.g.edges.selectAll("g")
	        .each(function(l){
	
	          var id = d[vars.id.value],
	              source = l[vars.edges.source][vars.id.value],
	              target = l[vars.edges.target][vars.id.value];
	
	          if (source == id || source == "left_" + id || source == "right_" + id ||
	              target == id || target == "left_" + id || target == "right_" + id) {
	            var elem = vars.g.edge_hover.node().appendChild(this.cloneNode(true))
	            d3.select(elem).datum(l).attr("opacity",1)
	              .selectAll("line, path").datum(l)
	          }
	
	        })
	
	
	      var marker = vars.edges.arrows.value
	
	      vars.g.edge_hover
	        .attr("opacity",0)
	        .selectAll("line, path")
	          .style("stroke",vars.color.primary)
	          .style("stroke-width",function(d){
	            if (vars.edges.path && d.dy) {
	              return Math.max(1, d.dy);
	            }
	            return vars.edges.size.value ? d3.select(this).style("stroke-width")
	                 : vars.data.stroke.width*2
	          })
	          .attr("marker-start",function(e){
	
	            var direction = vars.edges.arrows.direction.value
	
	            if ("bucket" in e.d3plus) {
	              var d = "_"+e.d3plus.bucket
	            }
	            else {
	              var d = ""
	            }
	
	            return direction == "source" && marker
	                 ? "url(#d3plus_edge_marker_highlight"+d+")" : "none"
	
	          })
	          .attr("marker-end",function(e){
	
	            var direction = vars.edges.arrows.direction.value
	
	            if ("bucket" in e.d3plus) {
	              var d = "_"+e.d3plus.bucket
	            }
	            else {
	              var d = ""
	            }
	
	            return direction == "target" && marker
	                 ? "url(#d3plus_edge_marker_highlight"+d+")" : "none"
	
	          })
	
	
	      vars.g.edge_hover.selectAll("text")
	        .style("fill",vars.color.primary)
	
	      if (vars.draw.timing) {
	
	        vars.g.edge_hover
	          .transition().duration(vars.timing.mouseevents)
	          .attr("opacity",1)
	
	        vars.g.edges
	          .transition().duration(vars.timing.mouseevents)
	          .attr("opacity",0.5)
	
	      }
	      else {
	
	        vars.g.edge_hover
	          .attr("opacity",1)
	
	      }
	
	    }
	    else {
	
	      if (vars.draw.timing) {
	
	        vars.g.edge_hover
	          .transition().duration(vars.timing.mouseevents)
	          .attr("opacity",0)
	          .transition()
	          .selectAll("*")
	          .remove()
	
	        vars.g.edges
	          .transition().duration(vars.timing.mouseevents)
	          .attr("opacity",1)
	
	      }
	      else {
	
	        vars.g.edge_hover
	          .selectAll("*")
	          .remove()
	
	      }
	
	    }
	
	  }
	
	  edge_update()
	
	  if (vars.tooltip.value) {
	
	    vars.g.data.selectAll("g")
	      .on(events.over,function(d){
	
	        if (touch) touchEvent(vars, d3.event);
	
	        if (!d3.event.buttons && vars.mouse.value && vars.mouse.over.value && !vars.draw.frozen && (!d.d3plus || !d.d3plus.static)) {
	
	          if (typeof vars.mouse.over.value === "function") {
	            vars.mouse.over.value(d, vars.self);
	          }
	          else {
	
	            var zoomDir = zoomDirection(d.d3plus_data || d, vars)
	            var pointer = typeof vars.mouse.viz === "function" ||
	                          typeof vars.mouse.viz[events.click] === "function" ||
	                          (vars.zoom.value && (vars.types[vars.type.value].zoom ||
	                                              (d.d3plus.threshold && d.d3plus.merged) ||
	                                              zoomDir === 1 ||
	                                              (zoomDir === -1 && vars.history.states.length && !vars.tooltip.value.long)));
	
	            d3.select(this)
	              .style("cursor", pointer ? "pointer" : "auto")
	              .transition().duration(vars.timing.mouseevents)
	              .call(transform,true)
	
	            d3.select(this).selectAll(".d3plus_data")
	              .transition().duration(vars.timing.mouseevents)
	              .attr("opacity",1)
	
	            vars.covered = false
	
	            if (d.values && vars.axes.discrete) {
	
	              var index = vars.axes.discrete === "x" ? 0 : 1
	                , mouse = d3.mouse(vars.container.value.node())[index]
	                , positions = uniqueValues(d.values,function(x){return x.d3plus[vars.axes.discrete]})
	                , match = closest(positions,mouse)
	
	              d.d3plus_data = d.values[positions.indexOf(match)]
	              d.d3plus = d.values[positions.indexOf(match)].d3plus
	
	            }
	
	            var tooltip_data = d.d3plus_data ? d.d3plus_data : d
	
	            createTooltip({
	              "vars": vars,
	              "data": tooltip_data
	            })
	
	            if (typeof vars.mouse.viz == "function") {
	              vars.mouse.viz(d.d3plus_data || d, vars)
	            }
	            else if (vars.mouse.viz[events.over]) {
	              vars.mouse.viz[events.over](d.d3plus_data || d, vars)
	            }
	
	            edge_update(d)
	
	          }
	
	        }
	        else {
	          removeTooltip(vars.type.value);
	        }
	
	      })
	      .on(events.move,function(d){
	
	        if (touch) touchEvent(vars, d3.event);
	
	        if (!d3.event.buttons && vars.mouse.value && vars.mouse.move.value && !vars.draw.frozen && (!d.d3plus || !d.d3plus.static)) {
	
	          if (typeof vars.mouse.move.value === "function") {
	            vars.mouse.move.value(d, vars.self);
	          }
	          else {
	
	            var zoomDir = zoomDirection(d.d3plus_data || d, vars)
	            var pointer = typeof vars.mouse.viz === "function" ||
	                          typeof vars.mouse.viz[events.click] === "function" ||
	                          (vars.zoom.value && (vars.types[vars.type.value].zoom ||
	                                              (d.d3plus.threshold && d.d3plus.merged) ||
	                                              zoomDir === 1 ||
	                                              (zoomDir === -1 && vars.history.states.length && !vars.tooltip.value.long)));
	
	
	            d3.select(this).style("cursor", pointer ? "pointer" : "auto");
	
	            // vars.covered = false
	            var tooltipType = vars.types[vars.type.value].tooltip || "follow"
	
	            if (d.values && vars.axes.discrete) {
	
	              var index = vars.axes.discrete === "x" ? 0 : 1
	                , mouse = d3.mouse(vars.container.value.node())[index]
	                , positions = uniqueValues(d.values,function(x){return x.d3plus[vars.axes.discrete]})
	                , match = closest(positions,mouse)
	
	              d.d3plus_data = d.values[positions.indexOf(match)]
	              d.d3plus = d.values[positions.indexOf(match)].d3plus
	
	            }
	
	            var tooltip_data = d.d3plus_data ? d.d3plus_data : d
	            createTooltip({
	              "vars": vars,
	              "data": tooltip_data
	            })
	
	            if (typeof vars.mouse.viz == "function") {
	              vars.mouse.viz(d.d3plus_data || d, vars)
	            }
	            else if (vars.mouse.viz[events.move]) {
	              vars.mouse.viz[events.move](d.d3plus_data || d, vars)
	            }
	
	          }
	
	        }
	        else {
	          removeTooltip(vars.type.value);
	        }
	
	      })
	      .on(events.out,function(d){
	
	        if (touch) touchEvent(vars, d3.event);
	
	        if (!d3.event.buttons && vars.mouse.value && vars.mouse.out.value) {
	
	          if (typeof vars.mouse.out.value === "function") {
	            vars.mouse.out.value(d, vars.self);
	          }
	          else {
	
	            var childElement = child(this,d3.event.toElement)
	
	            if (!childElement && !vars.draw.frozen && (!d.d3plus || !d.d3plus.static)) {
	
	              d3.select(this)
	                .transition().duration(vars.timing.mouseevents)
	                .call(transform)
	
	              d3.select(this).selectAll(".d3plus_data")
	                .transition().duration(vars.timing.mouseevents)
	                .attr("opacity",vars.data.opacity)
	
	              if (!vars.covered) {
	                removeTooltip(vars.type.value)
	              }
	
	              if (typeof vars.mouse.viz == "function") {
	                vars.mouse.viz(d.d3plus_data || d, vars)
	              }
	              else if (vars.mouse.viz[events.out]) {
	                vars.mouse.viz[events.out](d.d3plus_data || d, vars)
	              }
	
	              edge_update()
	
	            }
	
	          }
	
	        }
	        else {
	          removeTooltip(vars.type.value);
	        }
	
	      })
	
	  }
	  else {
	
	    var mouseEvent = function() {
	      touchEvent(vars, d3.event)
	    }
	
	    vars.g.data.selectAll("g")
	      .on(events.over, mouseEvent)
	      .on(events.move, mouseEvent)
	      .on(events.out , mouseEvent)
	
	  }
	
	  d3.select(window).on("scroll.d3plus", function(){
	    removeTooltip(vars.type.value);
	  });
	
	  vars.g.data.selectAll("g")
	    .on(events.click,function(d){
	
	      if (!(vars.mouse.viz && vars.mouse.viz.click === false) && vars.mouse.value && vars.mouse.click.value && !d3.event.defaultPrevented && !vars.draw.frozen && (!d.d3plus || !d.d3plus.static)) {
	
	        if (typeof vars.mouse.click.value === "function") {
	          vars.mouse.click.value(d, vars.self);
	        }
	        else {
	
	          if (d.values && vars.axes.discrete) {
	
	            var index = vars.axes.discrete === "x" ? 0 : 1
	              , mouse = d3.mouse(vars.container.value.node())[index]
	              , positions = uniqueValues(d.values,function(x){return x.d3plus[vars.axes.discrete]})
	              , match = closest(positions,mouse)
	
	            d.d3plus_data = d.values[positions.indexOf(match)]
	            d.d3plus = d.values[positions.indexOf(match)].d3plus
	
	          }
	
	          if (typeof vars.mouse.viz == "function") {
	            vars.mouse.viz(d.d3plus_data || d, vars)
	          }
	          else if (vars.mouse.viz[events.out]) {
	            vars.mouse.viz[events.out](d.d3plus_data || d, vars)
	          }
	          else if (vars.mouse.viz[events.click]) {
	            vars.mouse.viz[events.click](d.d3plus_data || d, vars)
	          }
	
	          var depth_delta = zoomDirection(d.d3plus_data || d, vars)
	            , previous = vars.id.solo.value
	            , title = fetchText(vars,d)[0]
	            , color = legible(fetchColor(vars,d))
	            , prev_sub = vars.title.sub.value || false
	            , prev_color = vars.title.sub.font.color
	            , prev_total = vars.title.total.font.color
	
	          if (d.d3plus.threshold && d.d3plus.merged && vars.zoom.value) {
	
	            vars.history.states.push(function(){
	
	              vars.self
	                .id({"solo": previous})
	                .title({
	                  "sub": {
	                    "font": {
	                      "color": prev_color
	                    },
	                    "value": prev_sub
	                  },
	                  "total": {
	                    "font": {
	                      "color": prev_total
	                    }
	                  }
	                })
	                .draw()
	
	            })
	
	            vars.self
	              .id({"solo": previous.concat(uniqueValues(d.d3plus.merged, vars.id.value, fetchValue, vars))})
	              .title({
	                "sub": {
	                  "font": {
	                    "color": color
	                  },
	                  "value": title
	                },
	                "total": {
	                  "font": {
	                    "color": color
	                  }
	                }
	              })
	              .draw()
	
	          }
	          else if (depth_delta === 1 && vars.zoom.value) {
	
	            var id = fetchValue(vars, d.d3plus_data || d, vars.id.value)
	
	            vars.history.states.push(function(){
	
	              vars.self
	                .depth(vars.depth.value-1)
	                .id({"solo": previous})
	                .title({
	                  "sub": {
	                    "font": {
	                      "color": prev_color
	                    },
	                    "value": prev_sub
	                  },
	                  "total": {
	                    "font": {
	                      "color": prev_total
	                    }
	                  }
	                })
	                .draw()
	
	            })
	
	            vars.self
	              .depth(vars.depth.value+1)
	              .id({"solo": previous.concat(id)})
	              .title({
	                "sub": {
	                  "font": {
	                    "color": color
	                  },
	                  "value": title
	                },
	                "total": {
	                  "font": {
	                    "color": color
	                  }
	                }
	              })
	              .draw()
	
	          }
	          else if (depth_delta === -1 && vars.zoom.value &&
	                   vars.history.states.length && !vars.tooltip.value.long) {
	
	            vars.history.back()
	
	          }
	          else if (vars.types[vars.type.value].zoom && vars.zoom.value) {
	
	            edge_update()
	
	            d3.select(this)
	              .transition().duration(vars.timing.mouseevents)
	              .call(transform)
	
	            d3.select(this).selectAll(".d3plus_data")
	              .transition().duration(vars.timing.mouseevents)
	              .attr("opacity",vars.data.opacity)
	
	            removeTooltip(vars.type.value)
	            vars.draw.update = false
	
	            if (!d || d[vars.id.value] == vars.focus.value[0]) {
	              vars.self.focus(false).draw()
	            }
	            else {
	              vars.self.focus(d[vars.id.value]).draw()
	            }
	
	          }
	          else if (vars.types[vars.type.value].requirements.indexOf("focus") < 0) {
	
	            edge_update()
	
	            var tooltip_data = d.d3plus_data ? d.d3plus_data : d
	
	            createTooltip({
	              "vars": vars,
	              "data": tooltip_data
	            })
	
	          }
	
	        }
	
	      }
	
	    })
	
	}


/***/ },
/* 402 */
/***/ function(module, exports, __webpack_require__) {

	var buckets = __webpack_require__(30),
	    offset  = __webpack_require__(67);
	
	module.exports = function(vars) {
	
	  var edges = vars.returned.edges || [],
	      scale = vars.zoom.behavior.scaleExtent()[0];
	
	  if (typeof vars.edges.size.value === "string") {
	
	    var strokeDomain = d3.extent(edges, function(e){
	                         return e[vars.edges.size.value];
	                       }),
	        maxSize = d3.min(vars.returned.nodes || [], function(n){
	                        return n.d3plus.r;
	                      }) * (vars.edges.size.scale * 2);
	
	    vars.edges.scale = d3.scale.sqrt()
	      .domain(strokeDomain)
	      .range([vars.edges.size.min,maxSize*scale]);
	
	  }
	  else {
	
	    var defaultWidth = typeof vars.edges.size.value == "number" ?
	                       vars.edges.size.value : vars.edges.size.min;
	
	    vars.edges.scale = function(){
	      return defaultWidth;
	    };
	
	  }
	
	  var o = vars.edges.opacity.value;
	  var o_type = typeof o;
	
	  if (vars.edges.opacity.changed && o_type === "string") {
	    vars.edges.opacity.scale.value
	      .domain(d3.extent(edges, function(d){
	        return d[o];
	      }))
	      .range([vars.edges.opacity.min.value,1]);
	  }
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // Initialization of Lines
	  //----------------------------------------------------------------------------
	  function init(l) {
	
	    l
	      .attr("opacity", 0)
	      .style("stroke-width",0)
	      .style("stroke",vars.background.value)
	      .style("fill","none");
	  }
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // Styling of Lines
	  //----------------------------------------------------------------------------
	  function style(edges) {
	
	    var marker = vars.edges.arrows.value;
	
	    edges
	      .attr("opacity", function(d){
	        return o_type === "number" ? o :
	               o_type === "function" ? o(d, vars) :
	               vars.edges.opacity.scale.value(d[o]);
	      })
	      .style("stroke-width",function(e){
	        return vars.edges.scale(e[vars.edges.size.value]);
	      })
	      .style("stroke",vars.edges.color)
	      .attr("marker-start",function(e){
	
	        var direction = vars.edges.arrows.direction.value;
	
	        if ("bucket" in e.d3plus) {
	          var d = "_"+e.d3plus.bucket;
	        }
	        else {
	          var d = "";
	        }
	
	        return direction == "source" && marker
	             ? "url(#d3plus_edge_marker_default"+d+")" : "none"
	
	      })
	      .attr("marker-end",function(e){
	
	        var direction = vars.edges.arrows.direction.value
	
	        if ("bucket" in e.d3plus) {
	          var d = "_"+e.d3plus.bucket
	        }
	        else {
	          var d = ""
	        }
	
	        return direction == "target" && marker
	             ? "url(#d3plus_edge_marker_default"+d+")" : "none"
	
	      })
	      .attr("vector-effect","non-scaling-stroke")
	      .attr("pointer-events","none")
	  }
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // Positioning of Lines
	  //----------------------------------------------------------------------------
	  function line(l) {
	    l
	      .attr("x1",function(d){
	        return d[vars.edges.source].d3plus.edges[d[vars.edges.target][vars.id.value]].x;
	      })
	      .attr("y1",function(d){
	        return d[vars.edges.source].d3plus.edges[d[vars.edges.target][vars.id.value]].y;
	      })
	      .attr("x2",function(d){
	        return d[vars.edges.target].d3plus.edges[d[vars.edges.source][vars.id.value]].x;
	      })
	      .attr("y2",function(d){
	        return d[vars.edges.target].d3plus.edges[d[vars.edges.source][vars.id.value]].y;
	      });
	  }
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // Positioning of Splines
	  //----------------------------------------------------------------------------
	  var curve = d3.svg.line().interpolate(vars.edges.interpolate.value);
	
	  function spline(l) {
	    l
	      .attr("d", function(d) {
	
	        return curve(d.d3plus.spline);
	
	      });
	  }
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // Calculates and Draws Label for edge
	  //----------------------------------------------------------------------------
	  function label(d) {
	
	    delete d.d3plus_label
	
	    if (vars.g.edges.selectAll("line, path").size() < vars.edges.large && vars.edges.label && d[vars.edges.label]) {
	
	      if ("spline" in d.d3plus) {
	
	        var length = this.getTotalLength(),
	            center = this.getPointAtLength(length/2),
	            prev = this.getPointAtLength((length/2)-(length*.1)),
	            next = this.getPointAtLength((length/2)+(length*.1)),
	            radians = Math.atan2(next.y-prev.y,next.x-prev.x),
	            angle = radians*(180/Math.PI),
	            bounding = this.parentNode.getBBox(),
	            width = length*.8,
	            x = center.x,
	            y = center.y
	
	      }
	      else {
	
	        var bounds = this.getBBox(),
	            source = d[vars.edges.source],
	            target = d[vars.edges.target],
	            start = {"x": source.d3plus.edges[target[vars.id.value]].x, "y": source.d3plus.edges[target[vars.id.value]].y},
	            end = {"x": target.d3plus.edges[source[vars.id.value]].x, "y": target.d3plus.edges[source[vars.id.value]].y},
	            xdiff = end.x-start.x,
	            ydiff = end.y-start.y,
	            center = {"x": end.x-(xdiff)/2, "y": end.y-(ydiff)/2},
	            radians = Math.atan2(ydiff,xdiff),
	            angle = radians*(180/Math.PI),
	            length = Math.sqrt((xdiff*xdiff)+(ydiff*ydiff)),
	            width = length,
	            x = center.x,
	            y = center.y
	
	      }
	
	      width += vars.labels.padding*2
	
	      var m = 0
	      if (vars.edges.arrows.value) {
	        m = typeof vars.edges.arrows.value === "number"
	          ? vars.edges.arrows.value : 8
	        m = m/vars.zoom.behavior.scaleExtent()[1]
	        width -= m*2
	      }
	
	      if (angle < -90 || angle > 90) {
	        angle -= 180
	      }
	
	      if (width*vars.zoom.behavior.scaleExtent()[0] > 20) {
	
	        d.d3plus_label = {
	          "x": x,
	          "y": y,
	          "translate": {"x": x, "y": y},
	          "w": width,
	          "h": 15+vars.labels.padding*2,
	          "angle": angle,
	          "anchor": "middle",
	          "valign": "center",
	          "color": vars.edges.color,
	          "resize": false,
	          "names": [vars.format.value(d[vars.edges.label])],
	          "background": 1
	        }
	
	      }
	
	    }
	
	  }
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // Enter/update/exit the Arrow Marker
	  //----------------------------------------------------------------------------
	  var markerData = vars.edges.arrows.value ? typeof vars.edges.size.value == "string"
	                  ? [ "default_0", "default_1", "default_2",
	                      "highlight_0", "highlight_1", "highlight_2",
	                      "focus_0", "focus_1", "focus_2" ]
	                  : [ "default", "highlight", "focus" ] : []
	
	  if (typeof vars.edges.size.value == "string") {
	    var b = buckets(vars.edges.scale.range(),4)
	      , markerSize = []
	    for (var i = 0; i < 3; i++) {
	      markerSize.push(b[i+1]+(b[1]-b[0])*(i+2)*2)
	    }
	  }
	  else {
	    var m = typeof vars.edges.arrows.value === "number"
	          ? vars.edges.arrows.value : 8
	
	    var markerSize = typeof vars.edges.size.value === "number"
	                    ? vars.edges.size.value/m : m
	  }
	
	  var marker = vars.defs.selectAll(".d3plus_edge_marker")
	    .data(markerData, String)
	
	  var marker_style = function(path) {
	    path
	      .attr("d",function(id){
	
	        var depth = id.split("_")
	
	        if (depth.length == 2 && vars.edges.scale) {
	          depth = parseInt(depth[1])
	          var m = markerSize[depth]
	        }
	        else {
	          var m = markerSize
	        }
	
	        if (vars.edges.arrows.direction.value == "target") {
	          return "M 0,-"+m/2+" L "+m*.85+",0 L 0,"+m/2+" L 0,-"+m/2
	        }
	        else {
	          return "M 0,-"+m/2+" L -"+m*.85+",0 L 0,"+m/2+" L 0,-"+m/2
	        }
	      })
	      .attr("fill",function(d){
	
	        var type = d.split("_")[0]
	
	        if (type == "default") {
	          return vars.edges.color
	        }
	        else if (type == "focus") {
	          return vars.color.focus
	        }
	        else {
	          return vars.color.primary
	        }
	      })
	      .attr("transform","scale("+1/scale+")")
	  }
	
	  if (vars.draw.timing) {
	    marker.exit().transition().duration(vars.draw.timing)
	      .attr("opacity",0)
	      .remove()
	
	    marker.select("path").transition().duration(vars.draw.timing)
	      .attr("opacity",1)
	      .call(marker_style)
	  }
	  else {
	    marker.exit().remove()
	
	    marker.select("path")
	      .attr("opacity",1)
	      .call(marker_style)
	  }
	
	  var opacity = vars.draw.timing ? 0 : 1
	  var enter = marker.enter().append("marker")
	    .attr("id",function(d){
	      return "d3plus_edge_marker_"+d
	    })
	    .attr("class","d3plus_edge_marker")
	    .attr("orient","auto")
	    .attr("markerUnits","userSpaceOnUse")
	    .style("overflow","visible")
	    .append("path")
	    .attr("opacity",opacity)
	    .attr("vector-effect","non-scaling-stroke")
	    .call(marker_style)
	
	  if (vars.draw.timing) {
	    enter.transition().duration(vars.draw.timing)
	      .attr("opacity",1)
	  }
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // Bind "edges" data to lines in the "edges" group
	  //----------------------------------------------------------------------------
	  var strokeBuckets = typeof vars.edges.size.value == "string"
	                    ? buckets(vars.edges.scale.domain(),4)
	                    : null
	    , direction = vars.edges.arrows.direction.value
	
	  var line_data = edges.filter(function(l){
	
	    if (!l.d3plus) l.d3plus = {}
	
	    l.d3plus.id = "edge_"+l[vars.edges.source][vars.id.value]+"_"+l[vars.edges.target][vars.id.value]
	
	    if ( l.d3plus.spline !== true ) {
	
	      if (strokeBuckets) {
	        var size = l[vars.edges.size.value]
	        l.d3plus.bucket = size < strokeBuckets[1] ? 0
	                        : size < strokeBuckets[2] ? 1 : 2
	        var marker = markerSize[l.d3plus.bucket]*.85/scale
	      }
	      else {
	        delete l.d3plus.bucket
	        var marker = markerSize*.85/scale
	      }
	
	      var source = l[vars.edges.source]
	        , target = l[vars.edges.target]
	
	      if (!source.d3plus || !target.d3plus) return false
	
	      var sourceAngle = Math.atan2( source.d3plus.y - target.d3plus.y
	                                  , source.d3plus.x - target.d3plus.x )
	        , targetAngle = Math.atan2( target.d3plus.y - source.d3plus.y
	                                  , target.d3plus.x - source.d3plus.x )
	        , sourceRadius = direction == "source" && vars.edges.arrows.value
	                       ? source.d3plus.r + marker
	                       : source.d3plus.r
	        , targetRadius = direction == "target" && vars.edges.arrows.value
	                       ? target.d3plus.r + marker
	                       : target.d3plus.r
	        , sourceOffset = offset( sourceAngle
	                                           , sourceRadius
	                                           , vars.shape.value )
	        , targetOffset = offset( targetAngle
	                                           , targetRadius
	                                           , vars.shape.value )
	
	      if (!("edges" in source.d3plus)) source.d3plus.edges = {}
	      source.d3plus.edges[target[vars.id.value]] = {
	          "x": source.d3plus.x - sourceOffset.x,
	          "y": source.d3plus.y - sourceOffset.y
	      }
	
	      if (!("edges" in target.d3plus)) target.d3plus.edges = {}
	      target.d3plus.edges[source[vars.id.value]] = {
	          "x": target.d3plus.x - targetOffset.x,
	          "y": target.d3plus.y - targetOffset.y
	      }
	
	      return true
	    }
	
	    return false
	
	  })
	
	  var lines = vars.g.edges.selectAll("g.d3plus_edge_line")
	    .data(line_data,function(d){
	
	      return d.d3plus.id
	
	    })
	
	  var spline_data = edges.filter(function(l){
	
	    if (l.d3plus.spline) {
	
	      if (strokeBuckets) {
	        var size = l[vars.edges.size.value]
	        l.d3plus.bucket = size < strokeBuckets[1] ? 0
	                        : size < strokeBuckets[2] ? 1 : 2
	        var marker = markerSize[l.d3plus.bucket]*.85/scale
	      }
	      else {
	        delete l.d3plus.bucket
	        var marker = markerSize*.85/scale
	      }
	
	      var source = l[vars.edges.source]
	        , target = l[vars.edges.target]
	        , sourceEdge = source.d3plus.edges ? source.d3plus.edges[target[vars.id.value]] || {} : {}
	        , targetEdge = target.d3plus.edges ? target.d3plus.edges[source[vars.id.value]] || {} : {}
	        , sourceMod = vars.edges.arrows.value && direction == "source" ? marker : 0
	        , targetMod = vars.edges.arrows.value && direction == "target" ? marker : 0
	        , angleTweak = 0.1
	        , sourceTweak = source.d3plus.x > target.d3plus.x ? 1-angleTweak : 1+angleTweak
	        , targetTweak = source.d3plus.x > target.d3plus.x ? 1+angleTweak : 1-angleTweak
	        , sourceAngle = typeof sourceEdge.angle === "number" ? sourceEdge.angle
	                      : Math.atan2( source.d3plus.y - target.d3plus.y
	                                  , source.d3plus.x - target.d3plus.x ) * sourceTweak
	        , sourceOffset = offset(sourceAngle, source.d3plus.r + sourceMod, vars.shape.value )
	        , targetAngle = typeof targetEdge.angle === "number" ? targetEdge.angle
	                      : Math.atan2( target.d3plus.y - source.d3plus.y
	                                  , target.d3plus.x - source.d3plus.x ) * targetTweak
	        , targetOffset = offset(targetAngle, target.d3plus.r + targetMod, vars.shape.value )
	        , start = [source.d3plus.x-sourceOffset.x, source.d3plus.y-sourceOffset.y]
	        , startOffset = sourceEdge.offset ? offset(sourceAngle,sourceEdge.offset) : false
	        , startPoint = startOffset ? [start[0]-startOffset.x,start[1]-startOffset.y] : start
	        , end = [target.d3plus.x-targetOffset.x, target.d3plus.y-targetOffset.y]
	        , endOffset = targetEdge.offset ? offset(targetAngle,targetEdge.offset) : false
	        , endPoint = endOffset ? [end[0]-endOffset.x,end[1]-endOffset.y] : end
	        , xd = endPoint[0] - startPoint[0]
	        , yd = endPoint[1] - startPoint[1]
	        , sourceDistance = typeof sourceEdge.radius === "number" ? sourceEdge.radius : Math.sqrt(xd*xd+yd*yd)/4
	        , targetDistance = typeof targetEdge.radius === "number" ? targetEdge.radius : Math.sqrt(xd*xd+yd*yd)/4
	        , startAnchor = offset(sourceAngle,sourceDistance-source.d3plus.r-sourceMod*2)
	        , endAnchor = offset(targetAngle,targetDistance-target.d3plus.r-targetMod*2)
	
	      l.d3plus.spline = [ start, end ]
	      var testAngle = Math.abs(Math.atan2( source.d3plus.y - target.d3plus.y
	                                         , source.d3plus.x - target.d3plus.x )).toFixed(5)
	        , testStart = Math.abs(sourceAngle).toFixed(5)
	        , testEnd   = Math.abs(targetAngle - Math.PI).toFixed(5)
	
	      if (testStart !== testEnd || [testStart,testEnd].indexOf(testAngle) < 0) {
	
	        l.d3plus.spline.splice(1,0,[startPoint[0]-startAnchor.x,startPoint[1]-startAnchor.y],
	                                   [endPoint[0]-endAnchor.x,endPoint[1]-endAnchor.y])
	
	        if (startOffset) l.d3plus.spline.splice(1,0,startPoint)
	        if (endOffset) l.d3plus.spline.splice(l.d3plus.spline.length-1,0,endPoint)
	
	      }
	
	      return true
	
	    }
	
	    return false
	
	  })
	
	  var splines = vars.g.edges.selectAll("g.d3plus_edge_path")
	    .data(spline_data,function(d){
	
	      return d.d3plus.id
	
	    })
	
	  if (vars.draw.timing) {
	
	    lines.exit().transition().duration(vars.draw.timing)
	      .attr("opacity",0)
	      .remove()
	
	    splines.exit().transition().duration(vars.draw.timing)
	      .attr("opacity",0)
	      .remove()
	
	    lines.selectAll("text.d3plus_label, rect.d3plus_label_bg")
	      .transition().duration(vars.draw.timing/2)
	      .attr("opacity",0)
	      .remove()
	
	    splines.selectAll("text.d3plus_label, rect.d3plus_label_bg")
	      .transition().duration(vars.draw.timing/2)
	      .attr("opacity",0)
	      .remove()
	
	    lines.selectAll("line")
	      .data(function(d){ return [d] })
	      .transition().duration(vars.draw.timing)
	        .call(line)
	        .call(style)
	        .each("end",label)
	
	    splines.selectAll("path")
	      .data(function(d){ return [d] })
	      .transition().duration(vars.draw.timing)
	        .call(spline)
	        .call(style)
	        .each("end",label)
	
	    lines.enter().append("g")
	      .attr("class","d3plus_edge_line")
	      .append("line")
	      .call(line)
	      .call(init)
	      .transition().duration(vars.draw.timing)
	        .call(style)
	        .each("end",label)
	
	    splines.enter().append("g")
	      .attr("class","d3plus_edge_path")
	      .append("path")
	      .call(spline)
	      .call(init)
	      .transition().duration(vars.draw.timing)
	        .call(style)
	        .each("end",label)
	
	  }
	  else {
	
	    lines.exit().remove()
	
	    splines.exit().remove()
	
	    lines.selectAll("text.d3plus_label, rect.d3plus_label_bg")
	      .remove()
	
	    splines.selectAll("text.d3plus_label, rect.d3plus_label_bg")
	      .remove()
	
	    lines.selectAll("line")
	      .data(function(d){ return [d] })
	      .call(line)
	      .call(style)
	      .call(label)
	
	    splines.selectAll("path")
	      .data(function(d){ return [d] })
	      .call(spline)
	      .call(style)
	      .call(label)
	
	    lines.enter().append("g")
	      .attr("class","d3plus_edge_line")
	      .append("line")
	      .call(line)
	      .call(init)
	      .call(style)
	      .call(label)
	
	    splines.enter().append("g")
	      .attr("class","d3plus_edge_path")
	      .append("path")
	      .call(spline)
	      .call(init)
	      .call(style)
	      .call(label)
	
	  }
	
	}


/***/ },
/* 403 */
/***/ function(module, exports, __webpack_require__) {

	var copy       = __webpack_require__(11),
	    fetchColor = __webpack_require__(20),
	    fetchValue = __webpack_require__(3),
	    segments   = __webpack_require__(56),
	    shapeStyle = __webpack_require__(16);
	//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	// Draws "square" and "circle" shapes using svg:rect
	//------------------------------------------------------------------------------
	module.exports = function(vars,selection,enter,exit) {
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // The position and size of each rectangle on enter and exit.
	  //----------------------------------------------------------------------------
	  function init(nodes) {
	
	    nodes
	      .attr("x",0)
	      .attr("y",0)
	      .attr("width",0)
	      .attr("height",0);
	
	  }
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // The position and size of each rectangle on update.
	  //----------------------------------------------------------------------------
	  function update(nodes,mod) {
	    if (!mod) mod = 0;
	    nodes
	      .attr("x",function(d){
	        var w = d.d3plus.r ? d.d3plus.r*2 : d.d3plus.width;
	        return (-w/2)-(mod/2);
	      })
	      .attr("y",function(d){
	        var h = d.d3plus.r ? d.d3plus.r*2 : d.d3plus.height;
	        return (-h/2)-(mod/2);
	      })
	      .attr("width",function(d){
	        var w = d.d3plus.r ? d.d3plus.r*2 : d.d3plus.width;
	        return w+mod;
	      })
	      .attr("height",function(d){
	        var h = d.d3plus.r ? d.d3plus.r*2 : d.d3plus.height;
	        return h+mod;
	      })
	      .attr("rx",function(d){
	        var w = d.d3plus.r ? d.d3plus.r*2 : d.d3plus.width;
	        var rounded = ["circle","donut"].indexOf(vars.shape.value) >= 0;
	        return rounded ? (w+mod)/2 : 0;
	      })
	      .attr("ry",function(d){
	        var h = d.d3plus.r ? d.d3plus.r*2 : d.d3plus.height;
	        var rounded = ["circle","donut"].indexOf(vars.shape.value) >= 0;
	        return rounded ? (h+mod)/2 : 0;
	      })
	      .attr("shape-rendering",function(d){
	        if (["square"].indexOf(vars.shape.value) >= 0) {
	          return vars.shape.rendering.value;
	        }
	        else {
	          return "auto";
	        }
	      });
	  }
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // In order to correctly animate each donut's size and arcs, we need to store
	  // it's previous values in a lookup object that does not get destroyed when
	  // redrawing the visualization.
	  //----------------------------------------------------------------------------
	  if (!vars.arcs) {
	    vars.arcs = {
	      "donut": {},
	      "active": {},
	      "temp": {}
	    };
	  }
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // This is the main arc function that determines what values to use for each
	  // arc angle and radius.
	  //----------------------------------------------------------------------------
	  var arc = d3.svg.arc()
	    .startAngle(0)
	    .endAngle(function(d){
	      var a = vars.arcs[d.d3plus.shape][d.d3plus.id].a;
	      return a > Math.PI*2 ? Math.PI*2 : a;
	    })
	    .innerRadius(function(d){
	      if (!d.d3plus.static && vars.shape.value === "donut") {
	        var r = vars.arcs[d.d3plus.shape][d.d3plus.id].r;
	        return r * vars.data.donut.size;
	      }
	      else {
	        return 0;
	      }
	    })
	    .outerRadius(function(d){
	      var r = vars.arcs[d.d3plus.shape][d.d3plus.id].r;
	      return vars.shape.value === "donut" ? r : r*2;
	    });
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // This is the main "arcTween" function where all of the animation happens
	  // for each arc.
	  //----------------------------------------------------------------------------
	  function size(path,mod,rad,ang) {
	    if (!mod) mod = 0;
	    if (typeof rad != "number") rad = undefined;
	    if (typeof ang != "number") ang = undefined;
	    path.attrTween("d", function(d){
	      if (rad === undefined) var r = d.d3plus.r ? d.d3plus.r : d3.max([d.d3plus.width,d.d3plus.height]);
	      else var r = rad;
	      if (ang === undefined) var a = d.d3plus.segments[d.d3plus.shape];
	      else var a = ang;
	      if (!vars.arcs[d.d3plus.shape][d.d3plus.id]) {
	        vars.arcs[d.d3plus.shape][d.d3plus.id] = {"r": 0};
	        vars.arcs[d.d3plus.shape][d.d3plus.id].a = d.d3plus.shape === "donut" ? Math.PI * 2 : 0;
	      }
	      var radius = d3.interpolate(vars.arcs[d.d3plus.shape][d.d3plus.id].r,r+mod),
	          angle = d3.interpolate(vars.arcs[d.d3plus.shape][d.d3plus.id].a,a);
	
	      return function(t) {
	        vars.arcs[d.d3plus.shape][d.d3plus.id].r = radius(t);
	        vars.arcs[d.d3plus.shape][d.d3plus.id].a = angle(t);
	        return arc(d);
	      };
	    });
	  }
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // Check each data point for active and temp data
	  //----------------------------------------------------------------------------
	  selection.each(function(d){
	
	    var active = segments(vars, d, "active"),
	        temp  = segments(vars, d, "temp"),
	        total = segments(vars, d, "total"),
	        group = d3.select(this),
	        color = fetchColor(vars,d);
	
	    var fill_data = [], hatch_data = [];
	
	    if (total && vars.types[vars.type.value].fill) {
	
	      if (temp) {
	        var c = copy(d);
	        c.d3plus.shape = "temp";
	        fill_data.push(c);
	        hatch_data = ["temp"];
	      }
	
	      if (active && (active < total || temp)) {
	        var c = copy(d);
	        c.d3plus.shape = "active";
	        fill_data.push(c);
	      }
	
	    }
	
	    function hatch_lines(l) {
	      l
	        .attr("stroke",color)
	        .attr("stroke-width",1)
	        .attr("shape-rendering",vars.shape.rendering.value);
	    }
	
	    var pattern = vars.defs.selectAll("pattern#d3plus_hatch_"+d.d3plus.id)
	      .data(hatch_data);
	
	    if (vars.draw.timing) {
	
	      pattern.selectAll("rect")
	        .transition().duration(vars.draw.timing)
	        .style("fill",color);
	
	      pattern.selectAll("line")
	        .transition().duration(vars.draw.timing)
	        .style("stroke",color);
	
	    }
	    else {
	
	      pattern.selectAll("rect").style("fill",color);
	
	      pattern.selectAll("line").style("stroke",color);
	
	    }
	
	    var pattern_enter = pattern.enter().append("pattern")
	      .attr("id","d3plus_hatch_"+d.d3plus.id)
	      .attr("patternUnits","userSpaceOnUse")
	      .attr("x","0")
	      .attr("y","0")
	      .attr("width","10")
	      .attr("height","10")
	      .append("g");
	
	    pattern_enter.append("rect")
	      .attr("x","0")
	      .attr("y","0")
	      .attr("width","10")
	      .attr("height","10")
	      .attr("fill",color)
	      .attr("fill-opacity",0.25);
	
	    pattern_enter.append("line")
	      .attr("x1","0")
	      .attr("x2","10")
	      .attr("y1","0")
	      .attr("y2","10")
	      .call(hatch_lines);
	
	    pattern_enter.append("line")
	      .attr("x1","-1")
	      .attr("x2","1")
	      .attr("y1","9")
	      .attr("y2","11")
	      .call(hatch_lines);
	
	    pattern_enter.append("line")
	      .attr("x1","9")
	      .attr("x2","11")
	      .attr("y1","-1")
	      .attr("y2","1")
	      .call(hatch_lines);
	
	    var clip_data = fill_data.length ? [d] : [];
	
	    var clip = group.selectAll("#d3plus_clip_"+d.d3plus.id)
	      .data(clip_data);
	
	    clip.enter().insert("clipPath",".d3plus_mouse")
	      .attr("id","d3plus_clip_"+d.d3plus.id)
	      .append("rect")
	      .attr("class","d3plus_clipping")
	      .call(init);
	
	    if (vars.draw.timing) {
	
	      clip.selectAll("rect").transition().duration(vars.draw.timing)
	        .call(update);
	
	      clip.exit().transition().delay(vars.draw.timing)
	        .remove();
	
	    }
	    else {
	
	      clip.selectAll("rect").call(update);
	
	      clip.exit().remove();
	
	    }
	
	    var fills = group.selectAll("path.d3plus_fill")
	      .data(fill_data);
	
	    fills.transition().duration(vars.draw.timing)
	      .call(shapeStyle,vars)
	      .call(size);
	
	    fills.enter().insert("path","rect.d3plus_mouse")
	      .attr("class","d3plus_fill")
	      .attr("clip-path","url(#d3plus_clip_"+d.d3plus.id+")")
	      .transition().duration(0)
	        .call(shapeStyle,vars)
	        .call(size,0,undefined,0)
	        .transition().duration(vars.draw.timing)
	          .call(size)
	          .call(shapeStyle,vars);
	
	    fills.exit().transition().duration(vars.draw.timing)
	      .call(size,0,undefined,0)
	      .remove();
	
	  });
	
	};


/***/ },
/* 404 */
/***/ function(module, exports, __webpack_require__) {

	var copy       = __webpack_require__(11),
	    fetchText  = __webpack_require__(17),
	    fetchValue = __webpack_require__(3),
	    mix        = __webpack_require__(66),
	    print      = __webpack_require__(2),
	    rtl        = __webpack_require__(40),
	    segments   = __webpack_require__(56),
	    shapeColor = __webpack_require__(136),
	    stringList = __webpack_require__(46),
	    textColor  = __webpack_require__(25),
	    textWrap   = __webpack_require__(41);
	
	//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	// Draws "labels" using svg:text and d3plus.textwrap
	//------------------------------------------------------------------------------
	module.exports = function( vars , group ) {
	
	  var scale = vars.types[vars.type.value].zoom ? vars.zoom.behavior.scaleExtent() : [1,1],
	              selection = vars.g[ group ].selectAll("g");
	
	  var opacity = function(elem) {
	
	    elem
	      .attr("opacity",function(d){
	        // if (vars.draw.timing) return 1;
	        var size = parseFloat(d3.select(this).attr("font-size"),10);
	        d.visible = size * (vars.zoom.scale/scale[1]) >= 2;
	        return d.visible ? 1 : 0;
	      });
	
	  };
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // Label Exiting
	  //----------------------------------------------------------------------------
	  var remove = function(text) {
	
	    if (vars.draw.timing) {
	      text
	        .transition().duration(vars.draw.timing)
	        .attr("opacity",0)
	        .remove();
	    }
	    else {
	      text.remove();
	    }
	
	  };
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // Label Styling
	  //----------------------------------------------------------------------------
	  var style = function(text) {
	
	    var salign = vars.labels.valign.value === "bottom" ? "top" : "bottom";
	
	    text
	      .attr("font-weight",vars.labels.font.weight)
	      .attr("font-family",vars.labels.font.family.value)
	      .attr("stroke", "none")
	      .attr("pointer-events",function(t){
	        return t.mouse ? "auto": "none";
	      })
	      .attr("fill", function(t){
	
	        if ( t.color ) return t.color;
	
	        var color = shapeColor(t.parent,vars),
	            legible = textColor(color),
	            opacity = t.text ? 0.15 : 1;
	
	        return mix( color , legible , 0.2 , opacity );
	
	      })
	      .each(function(t){
	
	        if (t.resize instanceof Array) {
	          var min = t.resize[0], max = t.resize[1];
	        }
	
	        var size = t.resize, resize = true;
	
	        if (t.text) {
	
	          if ( !(size instanceof Array) ) {
	            size = [9, 50];
	            resize = t.resize;
	          }
	
	          var y = t.y - t.h*scale[1]/2 + t.padding/2;
	          if (salign === "bottom") y += (t.h * scale[1])/2;
	
	          textWrap()
	            .align("center")
	            .container(d3.select(this))
	            .height((t.h * scale[1])/2)
	            .padding(t.padding/2)
	            .resize(resize)
	            .size(size)
	            .text(vars.format.value(t.text*100,{"key": "share", "vars": vars}))
	            .width(t.w * scale[1])
	            .valign(salign)
	            .x(t.x - t.w*scale[1]/2 + t.padding/2)
	            .y(y)
	            .draw();
	
	        }
	        else {
	
	          if ( !(t.resize instanceof Array) ) {
	            size = [7, 40*(scale[1]/scale[0])];
	            resize = t.resize;
	          }
	
	          var yOffset = vars.labels.valign.value === "bottom" ? t.share : 0;
	
	          textWrap()
	            .align(t.anchor || vars.labels.align.value)
	            .container( d3.select(this) )
	            .height(t.h * scale[1] - t.share)
	            .padding(t.padding/2)
	            .resize( resize )
	            .size( size )
	            .shape(t.shape || "square")
	            .text( t.names )
	            .valign(vars.labels.valign.value)
	            .width(t.w * scale[1])
	            .x(t.x - t.w*scale[1]/2 + t.padding/2)
	            .y(t.y - t.h*scale[1]/2 + t.padding/2 + yOffset)
	            .draw();
	
	        }
	
	      })
	      .attr("transform",function(t){
	        var translate = d3.select(this).attr("transform") || "";
	        var a = t.angle || 0,
	            x = t.translate && t.translate.x ? t.translate.x : 0,
	            y = t.translate && t.translate.y ? t.translate.y : 0;
	
	        if (translate.length) {
	          translate = translate.split(")").slice(-3).join(")");
	        }
	        return "rotate("+a+","+x+","+y+")scale("+1/scale[1]+")translate("+(t.x*scale[1]-t.x)+","+(t.y*scale[1]-t.y)+")" + translate;
	
	      });
	
	  };
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // Loop through each selection and analyze the labels
	  //----------------------------------------------------------------------------
	  if (group === "edges" || vars.labels.value) {
	
	    if ( vars.dev.value ) {
	      var timerString = "drawing " + group + " labels";
	      print.time( timerString );
	    }
	
	    selection.each(function(d){
	
	      var disabled = d.d3plus && "label" in d.d3plus && !d.d3plus.label,
	          label = d.d3plus_label || null,
	          share = d.d3plus_share,
	          names = d.d3plus.text ? d.d3plus.text :
	                  label && label.names ? label.names :
	                  vars.labels.text.value ?
	                  fetchValue(vars, d, vars.labels.text.value) :
	                  fetchText(vars,d),
	          group = label && "group" in label ? label.group : d3.select(this),
	          share_size = 0,
	          fill = vars.types[vars.type.value].fill;
	
	      if (!(names instanceof Array)) names = [names];
	
	      if (label) {
	
	        if (["line","area"].indexOf(vars.shape.value) >= 0) {
	          var background = true;
	        }
	        else if (d && "d3plus" in d) {
	          var active = segments(vars, d, "active"),
	              temp   = segments(vars, d, "temp"),
	              total  = segments(vars, d, "total"),
	              background = (!temp && !active) || (active >= total) || (!active && temp >= total);
	        }
	
	      }
	
	      if (!disabled && ((label && label.force) || background || !fill)) {
	
	        if (share && d.d3plus.share && share.w-vars.labels.padding*2 >= 10 && share.h-vars.labels.padding*2 >= 10 && vars.labels.valign.value != "middle") {
	
	          share.resize = vars.labels.resize.value === false ? false :
	            share && "resize" in share ? share.resize : true;
	
	          share.padding = vars.labels.padding;
	
	          share.text = d.d3plus.share;
	          share.parent = d;
	
	          var text = group.selectAll("text#d3plus_share_"+d.d3plus.id)
	            .data([share],function(t){
	              return t.w+""+t.h+""+t.text;
	            });
	
	          if (vars.draw.timing && vars.zoom.scale === 1) {
	
	            text
	              .transition().duration(vars.draw.timing/2)
	              .call(style);
	
	            text.enter().append("text")
	              .attr("id","d3plus_share_"+d.d3plus.id)
	              .attr("class","d3plus_share")
	              .attr("opacity",0)
	              .call(style)
	              .transition().duration(vars.draw.timing/2)
	              .delay(vars.draw.timing/2)
	              .attr("opacity",1);
	
	          }
	          else {
	
	            text
	              .attr("opacity",1)
	              .call(style);
	
	            text.enter().append("text")
	              .attr("id","d3plus_share_"+d.d3plus.id)
	              .attr("class","d3plus_share")
	              .attr("opacity",1)
	              .call(style);
	
	          }
	
	          share_size = text.node().getBBox().height + vars.labels.padding;
	
	          text.exit().call(remove);
	
	        }
	        else {
	          group.selectAll("text.d3plus_share")
	            .call(remove);
	        }
	
	        if (label) {
	
	          label.resize = vars.labels.resize.value === false ? false :
	            label && "resize" in label ? label.resize : true;
	
	          label.padding = typeof label.padding === "number" ? label.padding : vars.labels.padding;
	
	        }
	
	        if (label && label.w*scale[1]-label.padding >= 20 && label.h*scale[1]-label.padding >= 10 && names.length) {
	
	          var and = vars.format.locale.value.ui.and,
	              more = vars.format.locale.value.ui.more;
	
	          for (var i = 0; i < names.length; i++) {
	            if (names[i] instanceof Array) {
	              names[i] = stringList(names[i],and,3,more);
	            }
	          }
	
	          label.names = names;
	
	          label.share = share_size;
	          label.parent = d;
	
	          var text = group.selectAll("text#d3plus_label_"+d.d3plus.id)
	            .data([label],function(t){
	              if (!t) return false;
	              return t.w+"_"+t.h+"_"+t.x+"_"+t.y+"_"+t.names.join("_");
	            }), fontSize = label.resize ? undefined :
	                           (vars.labels.font.size * scale[0]) + "px";
	
	          if (vars.draw.timing && vars.zoom.scale === 1) {
	
	            text
	              .transition().duration(vars.draw.timing/2)
	              .call(style)
	              .call(opacity);
	
	            text.enter().append("text")
	              .attr("font-size",fontSize)
	              .attr("id","d3plus_label_"+d.d3plus.id)
	              .attr("class","d3plus_label")
	              .attr("opacity",0)
	              .call(style)
	              .transition().duration(vars.draw.timing/2)
	                .delay(vars.draw.timing/2)
	                .call(opacity);
	
	          }
	          else {
	
	            text
	              .attr("opacity",1)
	              .call(style)
	              .call(opacity);
	
	            text.enter().append("text")
	              .attr("font-size",fontSize)
	              .attr("id","d3plus_label_"+d.d3plus.id)
	              .attr("class","d3plus_label")
	              .call(style)
	              .call(opacity);
	
	          }
	
	          text.exit().call(remove);
	
	          if (text.size() === 0 || text.selectAll("tspan").size() === 0) {
	            delete d.d3plus_label;
	            d3.select(this).selectAll("text#d3plus_label_"+d.d3plus.id+", rect#d3plus_label_bg_"+d.d3plus.id)
	              .call(remove);
	            vars.g.labels.selectAll("text#d3plus_label_"+d.d3plus.id+", rect#d3plus_label_bg_"+d.d3plus.id)
	              .call(remove);
	          }
	          else {
	
	            if (label.background) {
	
	              var background_data = ["background"];
	
	              var box = text.node().getBBox();
	              var bounds = {
	                "height": box.height,
	                "width": box.width,
	                "x": box.x,
	                "y": box.y
	              };
	              bounds.width += vars.labels.padding*scale[0];
	              bounds.height += vars.labels.padding*scale[0];
	              bounds.x -= (vars.labels.padding*scale[0])/2;
	              bounds.y -= (vars.labels.padding*scale[0])/2;
	              var y = text.attr("transform").match(/translate\(([^a-z]+)\)/gi)[0];
	              y = y.replace(/([^a-z])\s([^a-z])/gi, "$1,$2");
	              y = y.split(",");
	              if (y.length > 1) {
	                y = y[y.length - 1];
	                y = y.substring(0, y.length - 1);
	                bounds.y += y;
	              }
	
	            }
	            else {
	              var background_data = [],
	                  bounds = {};
	            }
	
	            var bg = group.selectAll("rect#d3plus_label_bg_"+d.d3plus.id)
	                       .data(background_data),
	                bg_opacity = typeof label.background === "number" ?
	                             label.background :
	                             typeof label.background === "string" ? 1 : 0.6;
	
	            function bg_style(elem) {
	
	              var color = typeof label.background === "string" ? label.background : vars.background.value === "none"
	                        ? "#ffffff" : vars.background.value
	                , fill = typeof label.background === "string"
	                       ? label.background : color
	                , transform = text.attr("transform").split(")");
	              transform.pop();
	              transform.pop();
	              transform.push("");
	              transform = transform.join(")");
	
	              elem
	                .attr("fill",fill)
	                .attr(bounds)
	                .attr("transform",transform);
	
	            }
	
	            if (vars.draw.timing) {
	
	              bg.exit().transition().duration(vars.draw.timing)
	                .attr("opacity",0)
	                .remove();
	
	              bg.transition().duration(vars.draw.timing)
	                .attr("opacity",bg_opacity)
	                .call(bg_style);
	
	              bg.enter().insert("rect",".d3plus_label")
	                .attr("id","d3plus_label_bg_"+d.d3plus.id)
	                .attr("class","d3plus_label_bg")
	                .attr("opacity",0)
	                .call(bg_style)
	                .transition().duration(vars.draw.timing)
	                  .attr("opacity",bg_opacity);
	
	            }
	            else {
	
	              bg.exit().remove();
	
	              bg.enter().insert("rect",".d3plus_label")
	                .attr("id","d3plus_label_bg_"+d.d3plus.id)
	                .attr("class","d3plus_label_bg");
	
	              bg.attr("opacity",bg_opacity)
	                .call(bg_style);
	
	            }
	
	          }
	
	        }
	        else {
	          delete d.d3plus_label;
	          d3.select(this).selectAll("text#d3plus_label_"+d.d3plus.id+", rect#d3plus_label_bg_"+d.d3plus.id)
	            .call(remove);
	          vars.g.labels.selectAll("text#d3plus_label_"+d.d3plus.id+", rect#d3plus_label_bg_"+d.d3plus.id)
	            .call(remove);
	        }
	
	      }
	      else {
	        delete d.d3plus_label;
	        d3.select(this).selectAll("text#d3plus_label_"+d.d3plus.id+", rect#d3plus_label_bg_"+d.d3plus.id)
	          .call(remove);
	        vars.g.labels.selectAll("text#d3plus_label_"+d.d3plus.id+", rect#d3plus_label_bg_"+d.d3plus.id)
	          .call(remove);
	      }
	    });
	
	    if ( vars.dev.value ) print.timeEnd( timerString );
	
	  }
	  else {
	
	    if ( vars.dev.value ) {
	      var timerString = "removing " + group + " labels";
	      print.time( timerString );
	    }
	
	    selection.selectAll("text.d3plus_label, rect.d3plus_label_bg")
	      .call(remove);
	
	    vars.g.labels.selectAll("text.d3plus_label, rect.d3plus_label_bg")
	      .call(remove);
	
	    if ( vars.dev.value ) print.timeEnd( timerString );
	
	  }
	}


/***/ },
/* 405 */
/***/ function(module, exports, __webpack_require__) {

	var copy       = __webpack_require__(11),
	    closest    = __webpack_require__(47),
	    events     = __webpack_require__(9),
	    shapeStyle = __webpack_require__(16),
	    fetchValue = __webpack_require__(3);
	
	//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	// Draws "line" shapes using svg:line
	//------------------------------------------------------------------------------
	module.exports = function(vars,selection,enter,exit) {
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // The D3 line function that determines what variables to use for x and y
	  // positioning, as well as line interpolation defined by the user.
	  //----------------------------------------------------------------------------
	  var line = d3.svg.line()
	    .x(function(d){ return d.d3plus.x; })
	    .y(function(d){ return d.d3plus.y; })
	    .interpolate(vars.shape.interpolate.value);
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // Divide each line into it's segments. We do this so that there can be gaps
	  // in the line and mouseover.
	  //
	  // Then, create new data group from values to become small nodes at each
	  // point on the line.
	  //----------------------------------------------------------------------------
	
	  var stroke = vars.size.value || vars.data.stroke.width * 2,
	      discrete = vars[vars.axes.discrete],
	      hitarea = function(l){
	        var s = stroke;
	        if (s.constructor !== Number) {
	          var v = fetchValue(vars, l, stroke);
	          if (v && v.length) s = d3.max(v);
	          else s = vars.data.stroke.width;
	        }
	        return s < 15 ? 15 : s;
	      };
	
	  var ticks = discrete.ticks.values.map(function(d){
	    if (d.constructor === Date) return d.getTime();
	    else return d;
	  });
	
	  selection.each(function(d){
	
	    var lastIndex = false,
	        segments = [],
	        nodes = [],
	        temp = copy(d),
	        group = d3.select(this);
	
	    temp.values = [];
	    temp.segment_key = temp.key;
	    d.values.forEach(function(v,i,arr){
	
	      var k = fetchValue(vars, v, discrete.value);
	
	      if (k.constructor === Date) k = k.getTime();
	
	      var index = ticks.indexOf(closest(ticks,k));
	
	      if (lastIndex === false || lastIndex === index - 1) {
	        temp.values.push(v);
	        temp.segment_key += "_" + index;
	      }
	      else {
	        if (temp.values.length > 1) {
	          segments.push(temp);
	        }
	        else {
	          nodes.push(temp.values[0]);
	        }
	        temp = copy(d);
	        temp.values = [v];
	      }
	
	      if ( i === arr.length - 1 ) {
	        if (temp.values.length > 1) {
	          segments.push(temp);
	        }
	        else {
	          nodes.push(temp.values[0]);
	        }
	      }
	
	      lastIndex = index;
	
	    });
	
	    //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	    // Bind segment data to "paths"
	    //--------------------------------------------------------------------------
	    var paths = group.selectAll("path.d3plus_line")
	      .data(segments, function(d){
	        if (!d.d3plus) d.d3plus = {};
	        d.d3plus.shape = "line";
	        return d.segment_key;
	      });
	
	    //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	    // Bind node data to "rects"
	    //--------------------------------------------------------------------------
	    var rects = group.selectAll("rect.d3plus_anchor")
	      .data(nodes, function(d){
	        if (!d.d3plus) d.d3plus = {};
	        d.d3plus.r = vars.data.stroke.width * 2;
	        return d.d3plus.id;
	      });
	
	    //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	    // "paths" and "rects" Enter/Update
	    //--------------------------------------------------------------------------
	    if (vars.draw.timing) {
	
	      paths.exit().transition().duration(vars.draw.timing)
	        .attr("opacity", 0)
	        .remove();
	
	      paths.transition().duration(vars.draw.timing)
	        .attr("d",function(d){ return line(d.values); })
	        .call(shapeStyle,vars);
	
	      paths.enter().append("path")
	        .attr("class","d3plus_line")
	        .style("stroke-linecap","round")
	        .attr("d", function(d){ return line(d.values); })
	        .call(shapeStyle,vars)
	        .attr("opacity", 0)
	        .transition().duration(vars.draw.timing)
	          .attr("opacity", 1);
	
	      rects.enter().append("rect")
	        .attr("class","d3plus_anchor")
	        .attr("id",function(d){ return d.d3plus.id; })
	        .call(init)
	        .call(shapeStyle,vars);
	
	      rects.transition().duration(vars.draw.timing)
	        .call(update)
	        .call(shapeStyle,vars);
	
	      rects.exit().transition().duration(vars.draw.timing)
	        .call(init)
	        .remove();
	
	    }
	    else {
	
	      paths.exit().remove();
	
	      paths.enter().append("path")
	        .attr("class","d3plus_line")
	        .style("stroke-linecap","round");
	
	      paths
	        .attr("d",function(d){ return line(d.values); })
	        .call(shapeStyle,vars);
	
	      rects.enter().append("rect")
	        .attr("class","d3plus_anchor")
	        .attr("id",function(d){
	          return d.d3plus.id;
	        });
	
	      rects.exit().remove();
	
	      rects.call(update)
	        .call(shapeStyle,vars);
	
	    }
	
	    //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	    // Create mouse event lines
	    //--------------------------------------------------------------------------
	    var mouse = group.selectAll("path.d3plus_mouse")
	      .data(segments, function(d){
	        return d.segment_key;
	      });
	
	    //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	    // Mouse "paths" Enter
	    //--------------------------------------------------------------------------
	    mouse.enter().append("path")
	      .attr("class","d3plus_mouse")
	      .attr("d", function(l){ return line(l.values); })
	      .style("stroke","black")
	      .style("stroke-width",hitarea)
	      .style("fill","none")
	      .style("stroke-linecap","round")
	      .attr("opacity",0);
	
	    //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	    // Mouse "paths" Update
	    //--------------------------------------------------------------------------
	    mouse
	      .on(events.over,function(m){
	        if (!vars.draw.frozen) mouseStyle(vars, this, stroke, 2);
	      })
	      .on(events.out,function(d){
	        if (!vars.draw.frozen) mouseStyle(vars, this, stroke, 0);
	      });
	
	    if (vars.draw.timing) {
	
	      mouse.transition().duration(vars.draw.timing)
	        .attr("d",function(l){ return line(l.values); })
	        .style("stroke-width",hitarea);
	
	    }
	    else {
	
	      mouse.attr("d",function(l){ return line(l.values); })
	        .style("stroke-width",hitarea);
	
	    }
	
	    //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	    // Mouse "paths" Exit
	    //--------------------------------------------------------------------------
	    mouse.exit().remove();
	
	  });
	
	};
	
	//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	// The position and size of each anchor point on enter and exit.
	//----------------------------------------------------------------------------
	function init(n) {
	
	  n
	    .attr("x",function(d){
	      return d.d3plus.x;
	    })
	    .attr("y",function(d){
	      return d.d3plus.y;
	    })
	    .attr("width",0)
	    .attr("height",0);
	
	}
	
	//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	// The position and size of each anchor point on update.
	//----------------------------------------------------------------------------
	function update(n,mod) {
	
	  if (mod === undefined) mod = 0;
	
	  n
	    .attr("x",function(d){
	      var w = d.d3plus.r ? d.d3plus.r*2 : d.d3plus.width;
	      return d.d3plus.x - ((w/2)+(mod/2));
	    })
	    .attr("y",function(d){
	      var h = d.d3plus.r ? d.d3plus.r*2 : d.d3plus.height;
	      return d.d3plus.y - ((h/2)+(mod/2));
	    })
	    .attr("width",function(d){
	      var w = d.d3plus.r ? d.d3plus.r*2 : d.d3plus.width;
	      return w+mod;
	    })
	    .attr("height",function(d){
	      var h = d.d3plus.r ? d.d3plus.r*2 : d.d3plus.height;
	      return h+mod;
	    })
	    .attr("rx",function(d){
	      var w = d.d3plus.r ? d.d3plus.r*2 : d.d3plus.width;
	      return (w+mod)/2;
	    })
	    .attr("ry",function(d){
	      var h = d.d3plus.r ? d.d3plus.r*2 : d.d3plus.height;
	      return (h+mod)/2;
	    });
	
	}
	
	function mouseStyle(vars, elem, stroke, mod) {
	
	  var timing = vars.draw.timing ? vars.timing.mouseevents : 0;
	  if (mod === undefined) mod = 0;
	
	  if (timing) {
	
	    d3.select(elem.parentNode).selectAll("path.d3plus_line")
	    .transition().duration(timing)
	    .style("stroke-width",function(l){
	      var s = stroke;
	      if (s.constructor !== Number) {
	        var v = fetchValue(vars, l, stroke);
	        if (v && v.length) s = d3.max(v);
	        else s = vars.data.stroke.width;
	      }
	      return s + mod;
	    });
	
	    d3.select(elem.parentNode).selectAll("rect")
	    .transition().duration(timing)
	    .style("stroke-width",function(l){
	      var s = stroke;
	      if (s.constructor !== Number) {
	        var v = fetchValue(vars, l, stroke);
	        if (v && v.length) s = d3.max(v);
	        else s = vars.data.stroke.width;
	      }
	      return s;
	    })
	    .call(update, mod);
	
	  }
	  else {
	
	    d3.select(elem.parentNode).selectAll("path.d3plus_line")
	    .style("stroke-width",function(l){
	      var s = stroke;
	      if (s.constructor !== Number) {
	        var v = fetchValue(vars, l, stroke);
	        if (v && v.length) s = d3.max(v);
	        else s = vars.data.stroke.width;
	      }
	      return s + mod;
	    });
	
	    d3.select(elem.parentNode).selectAll("rect")
	    .style("stroke-width",function(l){
	      var s = stroke;
	      if (s.constructor !== Number) {
	        var v = fetchValue(vars, l, stroke);
	        if (v && v.length) s = d3.max(v);
	        else s = vars.data.stroke.width;
	      }
	      return s;
	    })
	    .call(update, mod);
	  }
	
	}


/***/ },
/* 406 */
/***/ function(module, exports) {

	module.exports = function(vars) {
	
	  var edges = vars.returned.edges || [];
	
	  var paths = vars.g.edges.selectAll("g.d3plus_edge_path")
	    .data(edges, function(d){
	      d.d3plus.id = "path_" + d[vars.edges.source][vars.id.value] + "_" + d[vars.edges.target][vars.id.value];
	      return d.d3plus.id;
	    });
	
	  function pathStyles(p) {
	    p
	      .attr("d", vars.edges.path)
	      .style("stroke-width", function(d) {
	        return Math.max(1, d.dy);
	      })
	      .style("stroke", "#ddd")
	      .style("fill", "none")
	      .attr("transform", function(d){
	        return "translate(" + d.d3plus.x + "," + d.d3plus.y + ")";
	      });
	  }
	
	  if (vars.draw.timing) {
	
	    paths.exit().transition().duration(vars.draw.timing)
	      .attr("opacity",0)
	      .remove();
	
	    paths.selectAll("text.d3plus_label, rect.d3plus_label_bg")
	      .transition().duration(vars.draw.timing/2)
	      .attr("opacity",0)
	      .remove();
	
	    paths.selectAll("path")
	      .data(function(d){ return [d] })
	      .transition().duration(vars.draw.timing)
	        .call(pathStyles);
	
	    paths.enter().append("g")
	      .attr("class","d3plus_edge_path")
	      .append("path")
	      .style("stroke-width", 0)
	      .transition().duration(vars.draw.timing)
	        .call(pathStyles);
	
	  }
	  else {
	
	    paths.exit().remove();
	
	    paths.selectAll("text.d3plus_label, rect.d3plus_label_bg")
	      .remove();
	
	    paths.selectAll("path")
	      .data(function(d){ return [d] })
	      .call(pathStyles);
	
	    paths.enter().append("g")
	      .attr("class","d3plus_edge_path")
	      .append("path")
	      .call(pathStyles);
	
	  }
	
	}


/***/ },
/* 407 */
/***/ function(module, exports, __webpack_require__) {

	var shapeStyle  = __webpack_require__(16)
	//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	// Draws "square" and "circle" shapes using svg:rect
	//------------------------------------------------------------------------------
	module.exports = function(vars,selection,enter,exit) {
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // Initialize check scale on enter and exit.
	  //----------------------------------------------------------------------------
	  function init(paths){
	    paths.attr("d", d3.svg.symbol().type("triangle-down").size(10))
	  }
	  
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // Change scale of check on update.
	  //---------------------------------------------------------------------------
	  function update(paths){
	    paths.attr("d", d3.svg.symbol().type("triangle-down").size(function(d){
	      var smaller_dim = Math.min(d.d3plus.width, d.d3plus.height);
	      return d3.scale.pow().exponent(2)(smaller_dim/2);
	    }))
	  }
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // "paths" Enter
	  //----------------------------------------------------------------------------
	  enter.append("path").attr("class","d3plus_data")
	    .call(init)
	    .call(shapeStyle,vars)
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // "paths" Update
	  //----------------------------------------------------------------------------
	  selection.selectAll("path.d3plus_data")
	    .data(function(d) {
	      return [d];
	    })
	
	  if (vars.draw.timing) {
	    selection.selectAll("path.d3plus_data")
	      .transition().duration(vars.draw.timing)
	        .call(update)
	        .call(shapeStyle,vars)
	  }
	  else {
	    selection.selectAll("path.d3plus_data")
	      .call(update)
	      .call(shapeStyle,vars)
	  }
	
	}


/***/ },
/* 408 */
/***/ function(module, exports, __webpack_require__) {

	var shapeStyle  = __webpack_require__(16)
	//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	// Draws "square" and "circle" shapes using svg:rect
	//------------------------------------------------------------------------------
	module.exports = function(vars,selection,enter,exit) {
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // Initialize check scale on enter and exit.
	  //----------------------------------------------------------------------------
	  function init(paths){
	    paths.attr("d", d3.svg.symbol().type("triangle-up").size(10))
	  }
	  
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // Change scale of check on update.
	  //---------------------------------------------------------------------------
	  function update(paths){
	    paths.attr("d", d3.svg.symbol().type("triangle-up").size(function(d){
	      var smaller_dim = Math.min(d.d3plus.width, d.d3plus.height);
	      return d3.scale.pow().exponent(2)(smaller_dim/2);
	    }))
	  }
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // "paths" Enter
	  //----------------------------------------------------------------------------
	  enter.append("path").attr("class","d3plus_data")
	    .call(init)
	    .call(shapeStyle,vars)
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // "paths" Update
	  //----------------------------------------------------------------------------
	  selection.selectAll("path.d3plus_data")
	    .data(function(d) {
	      return [d];
	    })
	
	  if (vars.draw.timing) {
	    selection.selectAll("path.d3plus_data")
	      .transition().duration(vars.draw.timing)
	        .call(update)
	        .call(shapeStyle,vars)
	  }
	  else {
	    selection.selectAll("path.d3plus_data")
	      .call(update)
	      .call(shapeStyle,vars)
	  }
	
	}


/***/ },
/* 409 */
/***/ function(module, exports, __webpack_require__) {

	var events = __webpack_require__(9),
	    prefix     = __webpack_require__(39),
	    print      = __webpack_require__(2),
	    touch      = __webpack_require__(51),
	    touchEvent = __webpack_require__(138);
	
	// Enter SVG Elements
	module.exports = function(vars) {
	
	  if ( vars.dev.value ) print.time("creating SVG elements");
	
	  // Enter SVG
	  vars.svg = vars.container.value.selectAll("svg#d3plus").data([0]);
	  vars.svg.enter().insert("svg","#d3plus_message")
	    .attr("id","d3plus")
	    .attr("width",vars.width.value)
	    .attr("height",vars.height.value)
	    .attr("xmlns","http://www.w3.org/2000/svg")
	    .attr("xmlns:xlink","http://www.w3.org/1999/xlink");
	
	  // Enter BG Rectangle
	  vars.g.bg = vars.svg.selectAll("rect#bg").data(["bg"]);
	  vars.g.bg.enter().append("rect")
	    .attr("id","bg")
	    .attr("fill",vars.background.value)
	    .attr("stroke", "none")
	    .attr("width",vars.width.value)
	    .attr("height",vars.height.value);
	
	  // Enter Timeline Group
	  vars.g.timeline = vars.svg.selectAll("g#timeline").data(["timeline"]);
	  vars.g.timeline.enter().append("g")
	    .attr("id","timeline")
	    .attr("transform","translate(0,"+vars.height.value+")");
	
	  // Enter Key Group
	  vars.g.legend = vars.svg.selectAll("g#key").data(["key"]);
	  vars.g.legend.enter().append("g")
	    .attr("id","key")
	    .attr("transform","translate(0,"+vars.height.value+")");
	
	  // Enter Footer Group
	  vars.g.footer = vars.svg.selectAll("g#footer").data(["footer"]);
	  vars.g.footer.enter().append("g")
	    .attr("id","footer")
	    .attr("transform","translate(0,"+vars.height.value+")");
	
	  // Enter App Clipping Mask
	  var clipID = "clipping_" + vars.container.id;
	  vars.g.clipping = vars.svg.selectAll("#clipping").data(["clipping"]);
	  vars.g.clipping.enter().append("clipPath")
	    .attr("id", clipID)
	    .append("rect")
	      .attr("width",vars.width.viz)
	      .attr("height",vars.height.viz);
	
	  // Enter Container Group
	  vars.g.container = vars.svg.selectAll("g#container").data(["container"]);
	  vars.g.container.enter().append("g")
	    .attr("id","container")
	    .attr("clip-path","url(#" + clipID + ")")
	    .attr("transform","translate("+vars.margin.left+","+vars.margin.top+")");
	
	  // Enter Zoom Group
	  vars.g.zoom = vars.g.container.selectAll("g#zoom").data(["zoom"]);
	  vars.g.zoom.enter().append("g")
	    .attr("id","zoom");
	
	  // Enter App Background Group
	  vars.g.viz = vars.g.zoom.selectAll("g#d3plus_viz").data(["d3plus_viz"]);
	  vars.g.viz.enter().append("g")
	    .attr("id","d3plus_viz");
	
	  // Enter App Overlay Rect
	  vars.g.overlay = vars.g.viz.selectAll("rect#d3plus_overlay").data([{"id":"d3plus_overlay"}]);
	  vars.g.overlay.enter().append("rect")
	    .attr("id","d3plus_overlay")
	    .attr("width",vars.width.value)
	    .attr("height",vars.height.value)
	    .attr("opacity",0);
	
	  vars.g.overlay
	    .on(events.move,function(d){
	
	      if (touch) touchEvent(vars, d3.event);
	
	      if (vars.types[vars.type.value].zoom && vars.zoom.pan.value &&
	        vars.zoom.behavior.scaleExtent()[0] < vars.zoom.scale) {
	        d3.select(this).style("cursor",prefix()+"grab");
	      }
	      else {
	        d3.select(this).style("cursor","auto");
	      }
	
	    })
	    .on(events.up,function(d){
	
	      if (touch) touchEvent(vars, d3.event);
	
	      if (vars.types[vars.type.value].zoom && vars.zoom.pan.value &&
	        vars.zoom.behavior.scaleExtent()[0] < vars.zoom.scale) {
	        d3.select(this).style("cursor",prefix()+"grab");
	      }
	      else {
	        d3.select(this).style("cursor","auto");
	      }
	
	    })
	    .on(events.down,function(d){
	
	      if (touch) touchEvent(vars, d3.event);
	
	      if (vars.types[vars.type.value].zoom && vars.zoom.pan.value &&
	        vars.zoom.behavior.scaleExtent()[0] < vars.zoom.scale) {
	        d3.select(this).style("cursor",prefix()+"grabbing");
	      }
	      else {
	        d3.select(this).style("cursor","auto");
	      }
	
	    });
	
	  // Enter App Background Group
	  vars.g.app = vars.g.viz.selectAll("g#app").data(["app"]);
	  vars.g.app.enter().append("g")
	    .attr("id","app");
	
	  // Enter Edges Group
	  vars.g.edges = vars.g.viz.selectAll("g#edges").data(["edges"]);
	  vars.g.edges.enter().append("g")
	    .attr("id","edges")
	    .attr("opacity",0);
	
	  // Enter Edge Focus Group
	  vars.g.edge_focus = vars.g.viz.selectAll("g#focus").data(["focus"]);
	  vars.g.edge_focus.enter().append("g")
	    .attr("id","focus");
	
	  // Enter Edge Hover Group
	  vars.g.edge_hover = vars.g.viz.selectAll("g#edge_hover").data(["edge_hover"]);
	  vars.g.edge_hover.enter().append("g")
	    .attr("id","edge_hover")
	    .attr("opacity",0);
	
	  // Enter App Data Group
	  vars.g.data = vars.g.viz.selectAll("g#data").data(["data"]);
	  vars.g.data.enter().append("g")
	    .attr("id","data")
	    .attr("opacity",0);
	
	  // Enter Data Focus Group
	  vars.g.data_focus = vars.g.viz.selectAll("g#data_focus").data(["data_focus"]);
	  vars.g.data_focus.enter().append("g")
	    .attr("id","data_focus");
	
	  // Enter Top Label Group
	  vars.g.labels = vars.g.viz.selectAll("g#d3plus_labels").data(["d3plus_labels"]);
	  vars.g.labels.enter().append("g")
	    .attr("id","d3plus_labels");
	
	  vars.defs = vars.svg.selectAll("defs").data(["defs"]);
	  vars.defs.enter().append("defs");
	
	  if ( vars.dev.value ) print.timeEnd("creating SVG elements");
	
	};


/***/ },
/* 410 */
/***/ function(module, exports, __webpack_require__) {

	var print = __webpack_require__(2)
	//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	// Updating Elements
	//------------------------------------------------------------------------------
	module.exports = function(vars) {
	
	  if ( vars.dev.value ) print.time("updating SVG elements")
	
	  if ( vars.draw.timing ) {
	
	    // Update Parent Element
	    vars.container.value.transition().duration(vars.draw.timing)
	      .style("width",vars.width.value+"px")
	      .style("height",vars.height.value+"px")
	
	    // Update SVG
	    vars.svg.transition().duration(vars.draw.timing)
	        .attr("width",vars.width.value)
	        .attr("height",vars.height.value)
	
	    // Update Background Rectangle
	    vars.g.bg.transition().duration(vars.draw.timing)
	        .attr("width",vars.width.value)
	        .attr("height",vars.height.value)
	        .attr("fill",vars.background.value);
	
	    // Update App Clipping Rectangle
	    vars.g.clipping.select("rect").transition().duration(vars.draw.timing)
	      .attr("width",vars.width.viz)
	      .attr("height",vars.height.viz)
	
	    // Update Container Groups
	    vars.g.container.transition().duration(vars.draw.timing)
	      .attr("transform","translate("+vars.margin.left+","+vars.margin.top+")")
	
	  }
	  else {
	
	    // Update Parent Element
	    vars.container.value
	      .style("width",vars.width.value+"px")
	      .style("height",vars.height.value+"px")
	
	    // Update SVG
	    vars.svg
	      .attr("width",vars.width.value)
	      .attr("height",vars.height.value)
	
	    // Update Background Rectangle
	    vars.g.bg
	      .attr("width",vars.width.value)
	      .attr("height",vars.height.value)
	      .attr("fill",vars.background.value);
	
	    // Update App Clipping Rectangle
	    vars.g.clipping.select("rect")
	      .attr("width",vars.width.viz)
	      .attr("height",vars.height.viz)
	
	    // Update Container Groups
	    vars.g.container
	      .attr("transform","translate("+vars.margin.left+","+vars.margin.top+")")
	
	  }
	
	  if ( vars.dev.value ) print.timeEnd("updating SVG elements")
	
	}


/***/ },
/* 411 */
/***/ function(module, exports, __webpack_require__) {

	var copy = __webpack_require__(11),
	    fetchValue   = __webpack_require__(3),
	    fetchColor   = __webpack_require__(20),
	    fetchText    = __webpack_require__(17),
	    legible      = __webpack_require__(28),
	    mergeObject  = __webpack_require__(29),
	    prefix       = __webpack_require__(39),
	    stringFormat = __webpack_require__(14),
	    validObject  = __webpack_require__(7);
	//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	// Creates a data object for the Tooltip
	//------------------------------------------------------------------------------
	module.exports = function(vars, id, length, extras, children, depth) {
	
	  if (vars.small) {
	    return []
	  }
	
	  if (!length) var length = "long"
	  if (length == "long") {
	    var other_length = "short"
	  }
	  else {
	    var other_length = "long"
	  }
	
	  var extra_data = {}
	  if (extras && typeof extras == "string") extras = [extras]
	  else if (extras && typeof extras == "object") {
	    extra_data = mergeObject(extra_data,extras)
	    var extras = []
	    for ( var k in extra_data ) {
	      extras.push(k)
	    }
	  }
	  else if (!extras) var extras = []
	
	  var tooltip_highlights = []
	
	  if (vars.tooltip.value instanceof Array) {
	    var a = vars.tooltip.value
	  }
	  else if (typeof vars.tooltip.value == "string") {
	    var a = [vars.tooltip.value]
	  }
	  else {
	
	    if (vars.tooltip.value[vars.id.nesting[depth]]) {
	      var a = vars.tooltip.value[vars.id.nesting[depth]]
	    }
	    else {
	      var a = vars.tooltip.value
	    }
	
	    if (!(a instanceof Array)) {
	
	      if (a[length]) {
	        a = a[length]
	      }
	      else if (a[other_length]) {
	        a = []
	      }
	      else {
	        a = mergeObject({"":[]},a)
	      }
	
	    }
	
	    if (typeof a == "string") {
	      a = [a]
	    }
	    else if (!(a instanceof Array)) {
	      a = mergeObject({"":[]},a)
	    }
	
	  }
	
	  function format_key(key,group) {
	
	    if (vars.attrs.value[group]) var id_var = group
	    else var id_var = null
	
	    if (group) group = vars.format.value(group)
	
	    var value = extra_data[key] || fetchValue(vars,id,key,id_var)
	
	    if (validObject(value)) {
	      tooltip_data.push({
	        "name": vars.format.value(key),
	        "value": vars.format.value(value.value, {"key": value.key, "vars": vars}),
	        "group": group
	      })
	    }
	    else if (value != null && value != "undefined" && !(value instanceof Array) && ((typeof value === "string" && value.indexOf("d3plus_other") < 0) || !(typeof value === "string"))) {
	      var name = vars.format.locale.value.ui[key]
	               ? vars.format.value(vars.format.locale.value.ui[key])
	               : vars.format.value(key),
	          h = tooltip_highlights.indexOf(key) >= 0
	
	      if ( value instanceof Array ) {
	        value.forEach(function(v){
	          v = vars.format.value(v, {"key": key, "vars": vars, "data": id})
	        })
	      }
	      else {
	        value = vars.format.value(value, {"key": key, "vars": vars, "data": id})
	      }
	
	      var obj = {"name": name, "value": value, "highlight": h, "group": group}
	
	      if ( vars.descs.value ) {
	
	        if ( typeof vars.descs.value === "function" ) {
	          var descReturn = vars.descs.value( key )
	          if ( typeof descReturn === "string" ) {
	            obj.desc = descReturn
	          }
	        }
	        else if ( key in vars.descs.value ) {
	          obj.desc = vars.descs.value[key]
	        }
	
	      }
	
	      tooltip_data.push(obj)
	
	    }
	
	  }
	
	  var tooltip_data = []
	  if (a.constructor === Array) a = {"": a};
	
	  if (vars.id.nesting.length && depth < vars.id.nesting.length-1) {
	    var a = copy(a)
	    vars.id.nesting.forEach(function(n,i){
	      if (i > depth && a[n]) delete a[n]
	    })
	  }
	
	  for (var group in a) {
	    if (a[group].constructor !== Array) a[group] = [a[group]]
	    for (var i = extras.length; i > 0; i--) {
	      if (a[group].indexOf(extras[i-1]) >= 0) {
	        extras.splice(i-1, 1);
	      }
	    }
	  }
	
	  if (vars.tooltip.value.long && typeof vars.tooltip.value.long == "object") {
	    var placed = []
	
	    for (var group in vars.tooltip.value.long) {
	
	      for (var i = extras.length; i > 0; i--) {
	        var e = extras[i-1];
	        if (vars.tooltip.value.long[group].indexOf(e) >= 0) {
	          if (!a[group]) a[group] = [];
	          a[group].push(e);
	          extras.splice(i-1, 1);
	        }
	      }
	
	    }
	
	  }
	
	  if (extras.length) {
	    if (!a[""]) a[""] = []
	    a[""] = a[""].concat(extras);
	  }
	
	  for (var group in a) {
	    a[group].forEach(function(t){
	      format_key(t, group);
	    });
	  }
	
	  if ( children ) {
	
	    var title  = vars.format.locale.value.ui.including
	      , colors = children.d3plus_colors
	
	    children.values.forEach(function(child) {
	      var name = d3.keys(child)[0];
	      tooltip_data.push({
	        "group": vars.format.value(title),
	        "highlight": colors && colors[name] ? colors[name] : false,
	        "name": name,
	        "value": child[name]
	      })
	    });
	
	    if (children.d3plusMore) {
	
	      tooltip_data.push({
	        "group": vars.format.value(title),
	        "highlight": true,
	        "name": stringFormat(vars.format.locale.value.ui.more, children.d3plusMore),
	        "value": ""
	      })
	
	    }
	
	  }
	
	  if ( vars.tooltip.connections.value && length === "long" ) {
	
	    var connections = vars.edges.connections( id[vars.id.value] , vars.id.value , true )
	
	    if ( connections.length ) {
	      connections.forEach(function(conn){
	
	        var c = vars.data.viz.filter(function(d){
	          return d[vars.id.value] === conn[vars.id.value]
	        })
	
	        var c = c.length ? c[0] : conn
	
	        var name = fetchText(vars,c)[0],
	            color = fetchColor(vars,c),
	            size = vars.tooltip.font.size,
	            radius = vars.shape.value == "square" ? 0 : size
	            styles = [
	              "background-color: "+color,
	              "border-color: "+legible(color),
	              "border-style: solid",
	              "border-width: "+vars.data.stroke.width+"px",
	              "display: inline-block",
	              "height: "+size+"px",
	              "left: 0px",
	              "position: absolute",
	              "width: "+size+"px",
	              "top: 0px",
	              prefix()+"border-radius: "+radius+"px",
	            ]
	            node = "<div style='"+styles.join("; ")+";'></div>"
	
	        var nodeClick = function() {
	          vars.self.focus([c[vars.id.value]]).draw()
	        }
	
	        tooltip_data.push({
	          "group": vars.format.value(vars.format.locale.value.ui.primary),
	          "highlight": false,
	          "link": nodeClick,
	          "name": "<div id='d3plustooltipfocuslink_"+c[vars.id.value]+"' class='d3plus_tooltip_focus_link' style='position:relative;padding-left:"+size*1.5+"px;'>"+node+name+"</div>"
	        })
	
	      })
	    }
	
	  }
	
	  return tooltip_data
	
	}


/***/ },
/* 412 */
/***/ function(module, exports, __webpack_require__) {

	var copy        = __webpack_require__(11),
	    form        = __webpack_require__(48),
	    print       = __webpack_require__(2),
	    validObject = __webpack_require__(7);
	
	//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	// Draws a UI drawer, if defined.
	//------------------------------------------------------------------------------
	module.exports = function( vars ) {
	
	  var enabled = vars.ui.value && vars.ui.value.length,
	      position = vars.ui.position.value;
	
	  if ( vars.dev.value && enabled ) print.time("drawing custom UI elements");
	
	  var drawer = vars.container.value.selectAll("div#d3plus_drawer")
	    .data(["d3plus_drawer"]);
	
	  drawer.enter().append("div")
	    .attr("id","d3plus_drawer");
	
	  var positionStyles = {};
	  vars.ui.position.accepted.forEach(function(p){
	    positionStyles[p] = p == position ? vars.margin.bottom+"px" : "auto";
	  });
	
	  drawer
	    .style("text-align",vars.ui.align.value)
	    .style("position","absolute")
	    .style("width",vars.width.value-(vars.ui.padding*2)+"px")
	    .style("height","auto")
	    .style(positionStyles);
	
	  var ui = drawer.selectAll("div.d3plus_drawer_ui")
	    .data(enabled ? vars.ui.value : [], function(d){
	      return d.method || false;
	    });
	
	  ui.exit().remove();
	
	  ui.enter().append("div")
	    .attr("class","d3plus_drawer_ui")
	    .style("display","inline-block");
	
	  ui.style("padding",vars.ui.padding+"px")
	    .each(function(d){
	
	      if (!d.form) {
	
	        d.form = form()
	          .container(d3.select(this))
	          .data({"sort": false})
	          .id("id")
	          .text("text");
	
	      }
	
	      var focus, callback;
	
	      if (typeof d.method === "string" && d.method in vars) {
	        focus = vars[d.method].value;
	        callback = function(value) {
	          if ( value !== vars[d.method].value ) {
	            vars.self[d.method](value).draw();
	          }
	        };
	      }
	      else {
	        focus = d.value[0];
	        if (validObject(focus)) focus = focus[d3.keys(focus)[0]];
	        if (typeof d.method === "function") {
	          callback = function(value) {
	            d.method(value, vars.self);
	          };
	        }
	      }
	
	      var data = [], title;
	
	      if (d.label) {
	        title = d.label;
	      }
	      else if (typeof d.method === "string" && d.method in vars) {
	        title = vars.format.locale.value.method[d.method] || d.method;
	      }
	
	      d.value.forEach(function(o){
	
	        var obj = {};
	
	        if (validObject(o)) {
	          obj.id   = o[d3.keys(o)[0]];
	          obj.text = vars.format.value(d3.keys(o)[0]);
	        }
	        else {
	          obj.id   = o;
	          obj.text = vars.format.value(o);
	        }
	
	        data.push(obj);
	
	      });
	
	      var font = copy(vars.ui.font);
	      font.align = copy(vars.font.align);
	      font.secondary = copy(font);
	
	      d.form
	        .data(data)
	        .font(font)
	        .focus(d.value.length > 1 ? focus : false)
	        .focus({"callback": callback})
	        .format(vars.format.locale.language)
	        .format({
	          "number": vars.format.number.value,
	          "text": vars.format.text.value
	        })
	        .title(vars.format.value(title))
	        .type(d.type || "auto")
	        .ui({
	          "align": vars.ui.align.value,
	          "border": vars.ui.border,
	          "color": {
	            "primary": vars.ui.color.primary.value,
	            "secondary": vars.ui.color.secondary.value
	          },
	          "padding": vars.ui.padding,
	          "margin": 0
	        })
	        .width(d.width || false)
	        .draw();
	
	    });
	
	  var drawerHeight = drawer.node().offsetHeight || drawer.node().getBoundingClientRect().height;
	
	  if ( drawerHeight ) {
	    vars.margin[position] += drawerHeight;
	  }
	
	  if ( vars.dev.value && enabled ) print.timeEnd("drawing custom UI elements");
	
	};


/***/ },
/* 413 */
/***/ function(module, exports, __webpack_require__) {

	var arraySort = __webpack_require__(19),
	    buckets       = __webpack_require__(30),
	    copy          = __webpack_require__(11),
	    createTooltip = __webpack_require__(100),
	    dataNest      = __webpack_require__(59),
	    dataURL       = __webpack_require__(135),
	    events        = __webpack_require__(9),
	    fetchValue    = __webpack_require__(3),
	    fetchColor    = __webpack_require__(20),
	    fetchText     = __webpack_require__(17),
	    print         = __webpack_require__(2),
	    removeTooltip = __webpack_require__(26),
	    textColor     = __webpack_require__(25),
	    uniqueValues  = __webpack_require__(8),
	    scroll        = __webpack_require__(58),
	    stringStrip   = __webpack_require__(33),
	    textWrap      = __webpack_require__(41),
	    touch         = __webpack_require__(51),
	    validObject   = __webpack_require__(7);
	//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	// Creates color key
	//------------------------------------------------------------------------------
	module.exports = function(vars) {
	
	  var key_display = true,
	      square_size = 0;
	
	  if (!vars.error.internal && vars.color.value && !vars.small && vars.legend.value) {
	
	    if (!vars.color.valueScale) {
	
	      if ( vars.dev.value ) print.time("grouping data by colors");
	
	      var data;
	      if ( vars.nodes.value && vars.types[vars.type.value].requirements.indexOf("nodes") >= 0 ) {
	        data = copy(vars.nodes.restriced || vars.nodes.value);
	        if ( vars.data.viz.length ) {
	          for (var i = 0 ; i < data.length ; i++) {
	            var appData = vars.data.viz.filter(function(a){
	              return a[vars.id.value] === data[i][vars.id.value];
	            });
	            if (appData.length) {
	              data[i] = appData[0];
	            }
	          }
	        }
	      }
	      else {
	        data = vars.data.viz;
	      }
	
	      if (data.length && "key" in data[0] && "values" in data[0]) {
	        data = d3.merge(data.map(function(d){
	          return d.values;
	        }));
	      }
	
	      var colorFunction = function(d){
	            return fetchColor(vars, d, colorDepth);
	          },
	          colorDepth = 0,
	          colorKey = vars.id.value;
	
	      var colorIndex = vars.id.nesting.indexOf(vars.color.value);
	      if (colorIndex >= 0) {
	        colorDepth = colorIndex;
	        colorKey = vars.id.nesting[colorIndex];
	      }
	      else {
	
	        for (var n = 0; n <= vars.depth.value; n++) {
	
	          colorDepth = n;
	          colorKey   = vars.id.nesting[n];
	
	          var uniqueIDs = uniqueValues(data , function(d){
	                return fetchValue(vars, d, colorKey);
	              }),
	              uniqueColors = uniqueValues(data, colorFunction);
	
	          if (uniqueIDs.length >= uniqueColors.length && uniqueColors.length > 1) {
	            break;
	          }
	
	        }
	
	      }
	
	      var legendNesting = [vars.color.value];
	      // if (vars.icon.value && vars.legend.icons.value) legendNesting.push(vars.icon.value);
	      var colors = dataNest(vars, data, legendNesting, false);
	
	      if ( vars.dev.value ) print.timeEnd("grouping data by color")
	
	      var available_width = vars.width.value;
	
	      square_size = vars.legend.size;
	
	      var key_width = square_size*colors.length+vars.ui.padding*(colors.length+1)
	
	      if (square_size instanceof Array) {
	
	        if ( vars.dev.value ) print.time("calculating legend size")
	
	        for (var i = square_size[1]; i >= square_size[0]; i--) {
	          key_width = i*colors.length+vars.ui.padding*(colors.length+1)
	          if (available_width >= key_width) {
	            square_size = i;
	            break;
	          }
	        }
	
	        if ( vars.dev.value ) print.timeEnd("calculating legend size");
	
	      }
	      else if (typeof square_size != "number" && square_size !== false) {
	        square_size = 30;
	      }
	
	      if (available_width < key_width || colors.length == 1) {
	        key_display = false;
	      }
	      else {
	
	        key_width -= vars.ui.padding*2;
	
	        if ( vars.dev.value ) print.time("sorting legend");
	
	        var order = vars[vars.legend.order.value].value;
	
	        var sort_color = vars.color.value;
	        if (!order) {
	          order = vars[vars.color.value].value;
	        }
	        else if (vars.legend.order.value !== "color") {
	          sort_color = [];
	        }
	
	        arraySort(colors, order, vars.legend.order.sort.value, sort_color, vars, colorDepth);
	
	        if ( vars.dev.value ) print.timeEnd("sorting legend");
	
	        if ( vars.dev.value ) print.time("drawing legend");
	
	        var start_x;
	
	        if (vars.legend.align == "start") {
	          start_x = vars.ui.padding;
	        }
	        else if (vars.legend.align == "end") {
	          start_x = available_width - vars.ui.padding - key_width;
	        }
	        else {
	          start_x = available_width/2 - key_width/2;
	        }
	
	        vars.g.legend.selectAll("g.d3plus_scale")
	          .transition().duration(vars.draw.timing)
	          .attr("opacity",0)
	          .remove();
	
	        function position(group) {
	
	          group
	            .attr("transform",function(g,i){
	              var x = start_x + (i*(vars.ui.padding+square_size))
	              return "translate("+x+","+vars.ui.padding+")"
	            })
	
	        }
	
	        function style(rect) {
	
	          rect
	            .attr("width", square_size)
	            .attr("height", square_size)
	            .attr("fill",function(g){
	
	              d3.select(this.parentNode).select("text").remove();
	
	              var icon = uniqueValues(g, vars.icon.value, fetchValue, vars, colorKey),
	                  color = fetchColor(vars, g, colorKey);
	
	              if (vars.legend.icons.value && icon.length === 1 &&
	                  typeof icon[0] === "string") {
	                icon = icon[0];
	                var short_url = stringStrip(icon+"_"+color),
	                    iconStyle = vars.icon.style.value,
	                    icon_style,
	                    pattern = vars.defs.selectAll("pattern#"+short_url)
	                      .data([short_url]);
	
	                if (typeof iconStyle === "string") {
	                  icon_style = vars.icon.style.value;
	                }
	                else if (validObject(iconStyle) && iconStyle[colorKey]) {
	                  icon_style = iconStyle[colorKey];
	                }
	                else {
	                  icon_style = "default";
	                }
	
	                color = icon_style == "knockout" ? color : "none";
	
	                pattern.select("rect").transition().duration(vars.draw.timing)
	                  .attr("fill",color)
	                  .attr("width",square_size)
	                  .attr("height",square_size);
	
	                pattern.select("image").transition().duration(vars.draw.timing)
	                  .attr("width",square_size)
	                  .attr("height",square_size);
	
	                var pattern_enter = pattern.enter().append("pattern")
	                  .attr("id",short_url)
	                  .attr("width",square_size)
	                  .attr("height",square_size);
	
	                pattern_enter.append("rect")
	                  .attr("fill",color)
	                  .attr("width",square_size)
	                  .attr("height",square_size);
	
	                pattern_enter.append("image")
	                  .attr("xlink:href",icon)
	                  .attr("width",square_size)
	                  .attr("height",square_size)
	                  .each(function(d){
	
	                    if (icon.indexOf("/") === 0 || icon.indexOf(window.location.hostname) >= 0) {
	                      dataURL(icon,function(base64){
	                        pattern.select("image").attr("xlink:href",base64);
	                      });
	                    }
	                    else {
	                      pattern.select("image").attr("xlink:href",icon);
	                    }
	
	                  });
	
	                return "url(#"+short_url+")";
	              }
	              else {
	
	                if (vars.legend.labels.value) {
	
	                  var names;
	                  if (vars.legend.text.value) {
	                    names = [fetchValue(vars, g, vars.legend.text.value, colorDepth)];
	                  }
	                  else {
	                    names = fetchText(vars, g, colorDepth);
	                  }
	
	                  if (names.length === 1 && !(names[0] instanceof Array) && names[0].length) {
	
	                    var text = d3.select(this.parentNode).append("text"),
	                        size = vars.legend.font.size;
	
	                    if (!(size instanceof Array)) {
	                      size = [size]
	                    }
	
	                    text
	                      .attr("font-size", size[size.length-1]+"px")
	                      .attr("font-weight", vars.legend.font.weight)
	                      .attr("font-family", vars.legend.font.family.value)
	                      .attr("stroke", "none")
	                      .attr("fill", textColor(color))
	                      .attr("x", 0)
	                      .attr("y", 0)
	                      .each(function(t){
	
	                        textWrap()
	                          .align("middle")
	                          .container( d3.select(this) )
	                          .height(square_size)
	                          .padding(vars.ui.padding)
	                          .resize(size.length > 1)
	                          .size(size)
	                          .text( names[0] )
	                          .width(square_size)
	                          .valign("middle")
	                          .draw();
	
	                      })
	
	                    if (text.select("tspan").empty()) {
	                      text.remove();
	                    }
	
	                  }
	
	                }
	
	                return color;
	              }
	
	            });
	
	        }
	
	        var colorInt = {};
	        var keys = vars.g.legend.selectAll("g.d3plus_color")
	          .data(colors,function(d){
	            var c = fetchColor(vars, d, colorKey);
	            if (!(c in colorInt)) colorInt[c] = -1;
	            colorInt[c]++;
	            return colorInt[c]+"_"+c;
	          });
	
	        keys.enter().append("g")
	          .attr("class","d3plus_color")
	          .attr("opacity",0)
	          .call(position)
	          .append("rect")
	            .attr("class","d3plus_color")
	            .call(style);
	
	        keys.order()
	          .transition().duration(vars.draw.timing)
	          .call(position)
	          .attr("opacity", 1)
	          .selectAll("rect.d3plus_color")
	            .call(style);
	
	        keys.exit()
	          .transition().duration(vars.draw.timing)
	          .attr("opacity",0)
	          .remove();
	
	        if (vars.legend.tooltip.value) {
	
	          keys
	            .on(events.over,function(d,i){
	
	              d3.select(this).style("cursor","pointer");
	
	              var bounds = this.getBoundingClientRect(),
	                  x = bounds.left + square_size/2 + scroll.x(),
	                  y = bounds.top + square_size/2 + scroll.y() + 5;
	
	              var id = fetchValue(vars, d, colorKey),
	                  idIndex = vars.id.nesting.indexOf(colorKey),
	                  title = idIndex >= 0 ? fetchText(vars,d,idIndex)[0] :
	                          vars.format.value(fetchValue(vars,d,vars.color.value,colorKey), {"key": vars.color.value, "vars": vars, "data": d});
	
	              var html, js;
	              if (vars.legend.filters.value && !(id instanceof Array)) {
	                html = "<div style='text-align:center;'>";
	                var loc = vars.format.locale.value;
	                html += "<div class='mute'>"+vars.format.value(loc.method.mute)+"</div>";
	                html += "<div class='solo'>"+vars.format.value(loc.method.solo)+"</div>";
	                html += "</div>"
	                js = function(tooltip) {
	                  var style = {
	                    "border": "1px solid #ccc",
	                    "display": "inline-block",
	                    "margin": "1px 2px",
	                    "padding": "3px 5px"
	                  }
	                  tooltip.select(".mute")
	                    .style(style)
	                    .on(events.over, function(){
	                      d3.select(this).style("cursor", "pointer");
	                    })
	                    .on(events.click, function(){
	                      var mute = vars.id.mute.value;
	                      vars.history.states.push(function(){
	                        vars.self.id({"mute": mute}).draw();
	                      })
	                      vars.self.id({"mute": id}).draw();
	                    });
	                  tooltip.select(".solo")
	                    .style(style)
	                    .on(events.over, function(){
	                      d3.select(this).style("cursor", "pointer");
	                    })
	                    .on(events.click, function(){
	                      var solo = vars.id.solo.value;
	                      vars.history.states.push(function(){
	                        vars.self.id({"solo": solo}).draw();
	                      })
	                      vars.self.id({"solo": id}).draw();
	                    });
	                }
	              }
	
	              createTooltip({
	                "data": d,
	                "html": html,
	                "js": js,
	                "depth": colorDepth,
	                "footer": false,
	                "vars": vars,
	                "x": x,
	                "y": y,
	                "mouseevents": this,
	                "title": title,
	                "offset": square_size*0.4
	              });
	
	            })
	            .on(events.out,function(d){
	              removeTooltip(vars.type.value);
	            });
	
	        }
	
	        if ( vars.dev.value ) print.timeEnd("drawing legend");
	
	      }
	
	    }
	    else if (vars.color.valueScale) {
	
	      if ( vars.dev.value ) print.time("drawing color scale");
	
	      vars.g.legend.selectAll("g.d3plus_color")
	        .transition().duration(vars.draw.timing)
	        .attr("opacity",0)
	        .remove();
	
	      var values = vars.color.valueScale.domain(),
	          colors = vars.color.valueScale.range();
	
	      if (values.length <= 2) {
	        values = buckets(values,6);
	      }
	
	      var scale = vars.g.legend.selectAll("g.d3plus_scale")
	        .data(["scale"]);
	
	      scale.enter().append("g")
	        .attr("class","d3plus_scale")
	        .attr("opacity",0);
	
	      var heatmap = scale.selectAll("#d3plus_legend_heatmap")
	        .data(["heatmap"]);
	
	      heatmap.enter().append("linearGradient")
	        .attr("id", "d3plus_legend_heatmap")
	        .attr("x1", "0%")
	        .attr("y1", "0%")
	        .attr("x2", "100%")
	        .attr("y2", "0%")
	        .attr("spreadMethod", "pad");
	
	      var stops = heatmap.selectAll("stop")
	        .data(d3.range(0,colors.length));
	
	      stops.enter().append("stop")
	        .attr("stop-opacity",1);
	
	      stops
	        .attr("offset",function(i){
	          return Math.round((i/(colors.length-1))*100)+"%";
	        })
	        .attr("stop-color",function(i){
	          return colors[i];
	        });
	
	      stops.exit().remove();
	
	      var gradient = scale.selectAll("rect#gradient")
	        .data(["gradient"]);
	
	      gradient.enter().append("rect")
	        .attr("id","gradient")
	        .attr("x",function(d){
	          if (vars.legend.align == "middle") {
	            return vars.width.value/2;
	          }
	          else if (vars.legend.align == "end") {
	            return vars.width.value;
	          }
	          else {
	            return 0;
	          }
	        })
	        .attr("y",vars.ui.padding)
	        .attr("width", 0)
	        .attr("height", vars.legend.gradient.height)
	        .attr("stroke",vars.legend.font.color)
	        .attr("stroke-width",1)
	        .style("fill", "url(#d3plus_legend_heatmap)");
	
	      var text = scale.selectAll("text.d3plus_tick")
	        .data(d3.range(0,values.length));
	
	      text.enter().append("text")
	        .attr("class","d3plus_tick")
	        .attr("stroke", "none")
	        .attr("x",function(d){
	          if (vars.legend.align == "middle") {
	            return vars.width.value/2;
	          }
	          else if (vars.legend.align == "end") {
	            return vars.width.value;
	          }
	          else {
	            return 0;
	          }
	        })
	        .attr("y",function(d){
	          return this.getBBox().height+vars.legend.gradient.height+vars.ui.padding*2;
	        });
	
	      var label_width = 0;
	
	      text
	        .order()
	        .attr("font-weight",vars.legend.font.weight)
	        .attr("font-family",vars.legend.font.family.value)
	        .attr("font-size",vars.legend.font.size+"px")
	        .style("text-anchor",vars.legend.font.align)
	        .attr("fill",vars.legend.font.color)
	        .text(function(d){
	          return vars.format.value(values[d], {"key": vars.color.value, "vars": vars});
	        })
	        .attr("y",function(d){
	          return this.getBBox().height+vars.legend.gradient.height+vars.ui.padding*2;
	        })
	        .each(function(d){
	          var w = this.offsetWidth;
	          if (w > label_width) label_width = w;
	        });
	
	      label_width += vars.labels.padding*2;
	
	      var key_width = label_width * (values.length-1);
	
	      if (key_width+label_width < vars.width.value) {
	
	        if (key_width+label_width < vars.width.value/2) {
	          key_width = vars.width.value/2;
	          label_width = key_width/values.length;
	          key_width -= label_width;
	        }
	
	        var start_x;
	        if (vars.legend.align == "start") {
	          start_x = vars.ui.padding;
	        }
	        else if (vars.legend.align == "end") {
	          start_x = vars.width.value - vars.ui.padding - key_width;
	        }
	        else {
	          start_x = vars.width.value/2 - key_width/2;
	        }
	
	        text.transition().duration(vars.draw.timing)
	          .attr("x",function(d){
	            return start_x + (label_width*d);
	          });
	
	        text.exit().transition().duration(vars.draw.timing)
	          .attr("opacity",0)
	          .remove();
	
	        var ticks = scale.selectAll("rect.d3plus_tick")
	          .data(d3.range(0,values.length));
	
	        ticks.enter().append("rect")
	          .attr("class","d3plus_tick")
	          .attr("x",function(d){
	            if (vars.legend.align == "middle") {
	              return vars.width.value/2;
	            }
	            else if (vars.legend.align == "end") {
	              return vars.width.value;
	            }
	            else {
	              return 0;
	            }
	          })
	          .attr("y",vars.ui.padding)
	          .attr("width",0)
	          .attr("height",vars.ui.padding+vars.legend.gradient.height)
	          .attr("fill",vars.legend.font.color);
	
	        ticks.transition().duration(vars.draw.timing)
	          .attr("x",function(d){
	            var mod = d === 0 ? 1 : 0;
	            return start_x + (label_width*d) - mod;
	          })
	          .attr("y",vars.ui.padding)
	          .attr("width",1)
	          .attr("height",vars.ui.padding+vars.legend.gradient.height)
	          .attr("fill",vars.legend.font.color);
	
	        ticks.exit().transition().duration(vars.draw.timing)
	          .attr("width",0)
	          .remove();
	
	        gradient.transition().duration(vars.draw.timing)
	          .attr("x",function(d){
	            if (vars.legend.align == "middle") {
	              return vars.width.value/2 - key_width/2;
	            }
	            else if (vars.legend.align == "end") {
	              return vars.width.value - key_width - vars.ui.padding;
	            }
	            else {
	              return vars.ui.padding;
	            }
	          })
	          .attr("y",vars.ui.padding)
	          .attr("width", key_width)
	          .attr("height", vars.legend.gradient.height);
	
	        scale.transition().duration(vars.draw.timing)
	          .attr("opacity",1);
	
	        if ( vars.dev.value ) print.timeEnd("drawing color scale");
	
	      }
	      else {
	        key_display = false;
	      }
	
	    }
	    else {
	      key_display = false;
	    }
	
	  }
	  else {
	    key_display = false;
	  }
	  if (vars.legend.value && key && key_display) {
	
	    if ( vars.dev.value ) print.time("positioning legend");
	
	    if (square_size) {
	      var key_height = square_size+vars.ui.padding;
	    }
	    else {
	      var key_box = vars.g.legend.node().getBBox(),
	          key_height = key_box.height+key_box.y;
	    }
	
	    if (vars.margin.bottom === 0) {
	      vars.margin.bottom += vars.ui.padding;
	    }
	    vars.margin.bottom += key_height;
	
	    vars.g.legend.transition().duration(vars.draw.timing)
	      .attr("transform","translate(0,"+(vars.height.value-vars.margin.bottom)+")")
	
	    if ( vars.dev.value ) print.timeEnd("positioning legend")
	
	  }
	  else {
	
	    if ( vars.dev.value ) print.time("hiding legend")
	
	    vars.g.legend.transition().duration(vars.draw.timing)
	      .attr("transform","translate(0,"+vars.height.value+")")
	
	    if ( vars.dev.value ) print.timeEnd("hiding legend")
	
	  }
	
	}


/***/ },
/* 414 */
/***/ function(module, exports, __webpack_require__) {

	var events = __webpack_require__(9),
	    fetchValue = __webpack_require__(3),
	    print      = __webpack_require__(2),
	    rtl        = __webpack_require__(40),
	    textWrap   = __webpack_require__(41)
	//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	// Draws appropriate titles
	//------------------------------------------------------------------------------
	module.exports = function(vars) {
	
	  var total_key = vars.size.value ? vars.size.value
	    : vars.color.type === "number" ? vars.color.value : false
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // If there is no data or the title bar is not needed,
	  // set the total value to 'null'
	  //----------------------------------------------------------------------------
	  if (!vars.data.viz || !vars.title.total.value || vars.small) {
	    var total = false
	  }
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // Otherwise, let's calculate it!
	  //----------------------------------------------------------------------------
	  else if (total_key) {
	
	    if ( vars.dev.value ) {
	      print.time("calculating total value")
	    }
	
	    var total_data = vars.data.pool;
	    if (vars.focus.value.length) {
	      total_data = vars.data.viz.filter(function(d){
	        return d[vars.id.value] == vars.focus.value[0];
	      });
	    }
	
	    var agg = vars.aggs.value[total_key] || "sum";
	    var total;
	    if (agg.constructor === Function) {
	      total = agg(total_data);
	    }
	    else {
	
	      total_data = total_data.reduce(function(arr, d){
	        var vals = fetchValue(vars, d, total_key);
	        if (vals instanceof Array) arr = arr.concat(vals);
	        else arr.push(vals);
	        return arr;
	      }, []);
	
	      total = d3[agg](total_data);
	    }
	
	    if (total === 0 || total === null || total === undefined) {
	      total = false
	    }
	
	    if (typeof total === "number") {
	
	      var pct = ""
	
	      if (vars.data.mute.length || vars.data.solo.length || vars.focus.value.length) {
	
	        var overall_total = d3.sum(vars.data.value, function(d){
	          if (vars.time.solo.value.length > 0) {
	            var match = vars.time.solo.value.indexOf(fetchValue(vars,d,vars.time.value)) >= 0
	          }
	          else if (vars.time.mute.value.length > 0) {
	            var match = vars.time.solo.value.indexOf(fetchValue(vars,d,vars.time.value)) < 0
	          }
	          else {
	            var match = true
	          }
	          if (match) {
	            return fetchValue(vars,d,total_key)
	          }
	        })
	
	        if (overall_total > total) {
	
	          var pct = (total/overall_total)*100,
	              ot = vars.format.value(overall_total, {"key": vars.size.value, "vars": vars});
	
	          pct = " ("+vars.format.value(pct,{"key": "share", "vars": vars})+" of "+ot+")";
	
	        }
	      }
	
	      total = vars.format.value(total, {"key": vars.size.value, "vars": vars})
	      var obj = vars.title.total.value
	        , prefix = obj.prefix || vars.format.value(vars.format.locale.value.ui.total)+": "
	      total = prefix + total
	      obj.suffix ? total = total + obj.suffix : null
	      total += pct
	
	    }
	
	    if ( vars.dev.value ) {
	      print.timeEnd("calculating total value")
	    }
	
	  }
	  else {
	    var total = false
	  }
	
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // Initialize titles and detect footer
	  //----------------------------------------------------------------------------
	  var title_data = []
	
	  if (vars.footer.value) {
	    title_data.push({
	      "link": vars.footer.link,
	      "style": vars.footer,
	      "type": "footer",
	      "value": vars.footer.value
	    })
	  }
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // If not in "small" mode, detect titles available
	  //----------------------------------------------------------------------------
	  if (!vars.small) {
	
	    if (vars.title.value) {
	      var title = vars.title.value;
	      if (typeof title === "function") title = title(vars.self);
	      title_data.push({
	        "link": vars.title.link,
	        "style": vars.title,
	        "type": "title",
	        "value": title
	      })
	    }
	    if (vars.title.sub.value) {
	      var title = vars.title.sub.value;
	      if (typeof title === "function") title = title(vars.self);
	      title_data.push({
	        "link": vars.title.sub.link,
	        "style": vars.title.sub,
	        "type": "sub",
	        "value": title
	      })
	    }
	    if (vars.title.total.value && total) {
	      title_data.push({
	        "link": vars.title.total.link,
	        "style": vars.title.total,
	        "type": "total",
	        "value": total
	      })
	    }
	
	  }
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // Enter Titles
	  //----------------------------------------------------------------------------
	  function style(title) {
	
	    title
	      .attr("font-size",function(t){
	        return t.style.font.size
	      })
	      .attr("fill",function(t){
	        return t.link ? vars.links.font.color : t.style.font.color
	      })
	      .attr("font-family",function(t){
	        return t.link ? vars.links.font.family.value : t.style.font.family.value
	      })
	      .attr("font-weight",function(t){
	        return t.link ? vars.links.font.weight : t.style.font.weight
	      })
	      .style("text-decoration",function(t){
	        return t.link ? vars.links.font.decoration.value : t.style.font.decoration.value
	      })
	      .style("text-transform",function(t){
	        return t.link ? vars.links.font.transform.value : t.style.font.transform.value
	      })
	
	  }
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // Enter Titles
	  //----------------------------------------------------------------------------
	  if ( vars.dev.value ) print.time("drawing titles")
	  var titles = vars.svg.selectAll("g.d3plus_title")
	    .data(title_data,function(t){
	      return t.type
	    })
	
	  var titleWidth = vars.title.width || vars.width.value-vars.margin.left-vars.margin.right;
	
	  titles.enter().append("g")
	    .attr("class", function(t){
	      return "d3plus_title " + t.type;
	    })
	    .attr("opacity",0)
	    .append("text")
	      .attr("stroke", "none")
	      .call(style)
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // Wrap text and calculate positions, then transition style and opacity
	  //----------------------------------------------------------------------------
	  function getAlign(d) {
	    var align = d.style.font.align;
	    if (align == "center") {
	      return "middle";
	    }
	    else if ((align == "left" && !rtl) || (align == "right" && rtl)) {
	      return "start";
	    }
	    else if ((align == "left" && rtl) || (align == "right" && !rtl)) {
	      return "end";
	    }
	    return align;
	  }
	  titles
	    .each(function(d){
	
	      var container = d3.select(this).select("text").call(style);
	
	      var align = getAlign(d);
	
	      textWrap()
	        .align(align)
	        .container(container)
	        .height(vars.height.value / 8)
	        .size(false)
	        .text(d.value)
	        .width(titleWidth)
	        .draw()
	
	      d.y = vars.margin[d.style.position]
	      vars.margin[d.style.position] += this.getBBox().height + d.style.padding*2
	
	    })
	    .on(events.over,function(t){
	      if (t.link) {
	        d3.select(this)
	          .transition().duration(vars.timing.mouseevents)
	          .style("cursor","pointer")
	          .select("text")
	            .attr("fill",vars.links.hover.color)
	            .attr("font-family",vars.links.hover.family.value)
	            .attr("font-weight",vars.links.hover.weight)
	            .style("text-decoration",vars.links.hover.decoration.value)
	            .style("text-transform",vars.links.hover.transform.value)
	      }
	    })
	    .on(events.out,function(t){
	      if (t.link) {
	        d3.select(this)
	          .transition().duration(vars.timing.mouseevents)
	          .style("cursor","auto")
	          .select("text")
	            .call(style)
	      }
	    })
	    .on(events.click,function(t){
	      if (t.link) {
	        var target = t.link.charAt(0) != "/" ? "_blank" : "_self"
	        window.open(t.link,target)
	      }
	    })
	    .attr("opacity",1)
	    .attr("transform",function(t){
	      var pos = t.style.position,
	          y = pos == "top" ? 0+t.y : vars.height.value-t.y
	      if (pos == "bottom") {
	        y -= this.getBBox().height+t.style.padding
	      }
	      else {
	        y += t.style.padding
	      }
	      var align = getAlign(t);
	      if (align === "start") {
	        var x = vars.margin.left + vars.title.padding;
	      }
	      else {
	        var w = d3.select(this).select("text").node().getBBox().width;
	        if (align === "middle") {
	          x = vars.width.value/2 - titleWidth/2;
	        }
	        else {
	          x = vars.width.value - titleWidth - vars.margin.right - vars.title.padding;
	        }
	      }
	      return "translate("+x+","+y+")";
	    })
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // Exit unused titles
	  //----------------------------------------------------------------------------
	  titles.exit().transition().duration(vars.draw.timing)
	    .attr("opacity",0)
	    .remove()
	
	  if ( vars.margin.top > 0 ) {
	    vars.margin.top += vars.title.padding
	  }
	
	  if ( vars.margin.bottom > 0 ) {
	    vars.margin.bottom += vars.title.padding
	  }
	
	  var min = vars.title.height
	  if (min && vars.margin[vars.title.position] < min) {
	    vars.margin[vars.title.position] = min
	  }
	
	  if ( vars.dev.value ) print.timeEnd("drawing titles")
	
	}


/***/ },
/* 415 */
/***/ function(module, exports) {

	module.exports = {
	  "accepted": [Array, Function, String],
	  "index": {
	    "accepted": [Boolean],
	    "value": true
	  },
	  "process": function(value, vars) {
	    if (typeof value === "string") value = [value]
	    return value
	  },
	  "value": false
	}


/***/ },
/* 416 */
/***/ function(module, exports, __webpack_require__) {

	var print        = __webpack_require__(2),
	    stringFormat = __webpack_require__(14)
	
	module.exports = {
	  "accepted" : [ undefined , Function ],
	  "first"    : true,
	  "frozen"   : false,
	  "process"  : function (value, vars) {
	
	    if ( this.initialized === false ) {
	      this.initialized = true
	      return value
	    }
	
	    if ( value === undefined && typeof this.value === "function" ) {
	      value = this.value
	    }
	
	    if ( vars.container.value === false ) {
	
	      var str = vars.format.locale.value.dev.setContainer
	      print.warning( str , "container" )
	
	    }
	    else if ( vars.container.value.empty() ) {
	
	      var str = vars.format.locale.value.dev.noContainer
	      print.warning( stringFormat(str,"\""+vars.container.value+"\"") , "container" )
	
	    }
	    else {
	
	      if ( vars.dev.value ) print.time("total draw time");
	
	      vars.container.value.call(vars.self);
	
	    }
	
	    if ( typeof value === "function" && vars.history.chain.length ) {
	
	      var changesObject = {}
	      changes.forEach(function(c){
	        var method = c.method
	        delete c.method
	        changesObject[method] = c
	      })
	
	      value(changesObject)
	
	      vars.history.chain = []
	
	    }
	
	    return value
	
	  },
	  "update"   : true,
	  "value"    : undefined
	}


/***/ },
/* 417 */
/***/ function(module, exports, __webpack_require__) {

	var process = __webpack_require__(45);
	
	module.exports = {
	  "accepted": [false, Array, Function, String],
	  "arrows":   {
	    "accepted":  [ Boolean , Number ],
	    "direction": {
	      "accepted": [ "source" , "target" ],
	      "value":    "target"
	    },
	    "value": false
	  },
	  "color":       "#d0d0d0",
	  "connections": function(focus,id,objects) {
	
	    var self = this
	
	    if (!self.value) {
	      return []
	    }
	
	    if (!id) var id = "id"
	
	    var edges = self.restricted || self.value,
	        targets = []
	
	    if (!focus) {
	      return edges
	    }
	
	    var connections = edges.filter(function(edge){
	
	      var match = false
	
	      if (edge[self.source][id] == focus) {
	        match = true
	        if (objects) {
	          targets.push(edge[self.target])
	        }
	      }
	      else if (edge[self.target][id] == focus) {
	        match = true
	        if (objects) {
	          targets.push(edge[self.source])
	        }
	      }
	
	      return match
	
	    })
	
	    return objects ? targets : connections
	
	  },
	  "delimiter": {
	    "accepted": [ String ],
	    "value":    "|"
	  },
	  "filetype": {
	    "accepted": [false, "json", "xml","html", "csv", "dsv", "tsv", "txt"],
	    "value":    false
	  },
	  "interpolate": {
	    "accepted": ["basis", "cardinal", "linear", "monotone", "step"],
	    "value":    "basis"
	  },
	  "label": false,
	  "large": 100,
	  "limit": {
	    "accepted": [false, Function, Number],
	    "value":    false
	  },
	  "opacity": {
	    "accepted": [Function, Number, String],
	    "min": {
	      "accepted": [Number],
	      "value": 0.25
	    },
	    "scale": {
	      "accepted": [Function],
	      "value": d3.scale.linear()
	    },
	    "value": 1
	  },
	  "process":  process,
	  "size": {
	    "accepted": [false, Number, String],
	    "min": 1,
	    "scale": 0.5,
	    "value": false
	  },
	  "source":   "source",
	  "strength": {
	    "accepted": [false, Function, Number, String],
	    "value":    false
	  },
	  "target": "target",
	  "value":  false
	};


/***/ },
/* 418 */
/***/ function(module, exports) {

	module.exports = {
	  "accepted"   : [ Boolean ],
	  "behavior"   : d3.behavior.zoom().scaleExtent([ 1 , 1 ]).duration(0),
	  "click"      : {
	    "accepted" : [ Boolean ],
	    "value"    : true
	  },
	  "pan"        : {
	    "accepted" : [ Boolean ],
	    "value"    : true
	  },
	  "scroll"     : {
	    "accepted"   : [ Boolean ],
	    "deprecates" : "scroll_zoom",
	    "value"      : true
	  },
	  "value"      : true
	}


/***/ },
/* 419 */
/***/ function(module, exports, __webpack_require__) {

	var smallestGap = __webpack_require__(91),
	    fetchValue = __webpack_require__(3);
	//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	// Network
	//------------------------------------------------------------------------------
	var network = function(vars) {
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // Use filtered lists if they are available
	  //----------------------------------------------------------------------------
	  var nodes = vars.nodes.restricted || vars.nodes.value,
	      edges = vars.edges.restricted || vars.edges.value;
	
	  var x_range = d3.extent(nodes,function(n){return n.x}),
	      y_range = d3.extent(nodes,function(n){return n.y})
	
	  var val_range = [ 1 , 1 ]
	  if (typeof vars.size.value === "number"){
	    val_range = [vars.size.value, vars.size.value]
	  }
	  else if (vars.size.value){
	    val_range = d3.extent(nodes, function(d){
	      var val = fetchValue( vars , d , vars.size.value )
	      return val === 0 ? null : val
	    })
	  }
	  if (typeof val_range[0] == "undefined") val_range = [1,1]
	
	  if (typeof vars.size.value === "number"){
	    var max_size = vars.size.value;
	    var min_size = vars.size.value;
	  }
	  else {
	
	    var max_size = smallestGap(nodes, {"accessor": function(n){
	      return [n.x, n.y];
	    }});
	
	    var limit = max_size/2;
	
	    var overlap = vars.size.value ? vars.nodes.overlap : 0.4
	    max_size = max_size * overlap;
	
	    if (vars.edges.arrows.value) {
	      max_size = max_size * 0.5;
	    }
	
	    if (val_range[0] === val_range[1]) {
	      var min_size = limit;
	      max_size = limit;
	    }
	    else {
	
	      var width = (x_range[1]+max_size*1.1)-(x_range[0]-max_size*1.1),
	          height = (y_range[1]+max_size*1.1)-(y_range[0]-max_size*1.1),
	          aspect = width/height,
	          app = vars.width.viz/vars.height.viz;
	
	      if ( app > aspect ) {
	        var scale = vars.height.viz/height;
	      }
	      else {
	        var scale = vars.width.viz/width;
	      }
	      var min_size = max_size * 0.25;
	      if ( min_size * scale < 2 ) {
	        min_size = 2/scale;
	      }
	
	    }
	  }
	
	  // Create size scale
	  var radius = vars.size.scale.value
	    .domain(val_range)
	    .range([min_size, max_size])
	
	  vars.zoom.bounds = [ [ x_range[0]-max_size*1.1 , y_range[0]-max_size*1.1 ]
	                     , [ x_range[1]+max_size*1.1 , y_range[1]+max_size*1.1 ] ]
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // Match nodes to data
	  //----------------------------------------------------------------------------
	  var data = [], lookup = {}
	  nodes.forEach(function(n){
	
	    var d = vars.data.viz.filter(function(a){
	      return a[vars.id.value] == n[vars.id.value]
	    })[0]
	
	    var obj = d || {}
	
	    obj[vars.id.value] = n[vars.id.value]
	
	    obj.d3plus = {}
	    obj.d3plus.x = n.x
	    obj.d3plus.y = n.y
	    var val = fetchValue(vars,obj,vars.size.value)
	    obj.d3plus.r = val ? radius(val) : radius.range()[0]
	    lookup[obj[vars.id.value]] = {
	      "x": obj.d3plus.x,
	      "y": obj.d3plus.y,
	      "r": obj.d3plus.r
	    }
	
	    data.push(obj)
	  })
	
	  data.sort(function(a,b){
	    return b.d3plus.r - a.d3plus.r
	  })
	
	  edges.forEach(function(l,i){
	
	    if (l.d3plus) {
	      delete l.d3plus.spline
	    }
	
	    l[vars.edges.source].d3plus = {}
	    var source = lookup[l[vars.edges.source][vars.id.value]]
	    l[vars.edges.source].d3plus.r = source.r
	    l[vars.edges.source].d3plus.x = source.x
	    l[vars.edges.source].d3plus.y = source.y
	
	    l[vars.edges.target].d3plus = {}
	    var target = lookup[l[vars.edges.target][vars.id.value]]
	    l[vars.edges.target].d3plus.r = target.r
	    l[vars.edges.target].d3plus.x = target.x
	    l[vars.edges.target].d3plus.y = target.y
	
	  })
	
	  return {"nodes": data, "edges": edges}
	
	}
	
	//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	// Visualization Settings and Helper Functions
	//------------------------------------------------------------------------------
	network.nesting      = false
	network.requirements = ["nodes","edges"]
	network.scale        = 1.05
	network.shapes       = [ "circle" , "square" , "donut" ]
	network.tooltip      = "static"
	network.zoom         = true
	
	module.exports = network


/***/ },
/* 420 */
/***/ function(module, exports, __webpack_require__) {

	var arraySort     = __webpack_require__(19),
	    events        = __webpack_require__(9),
	    fetchValue    = __webpack_require__(3),
	    fetchColor    = __webpack_require__(20),
	    legible       = __webpack_require__(28),
	    removeTooltip = __webpack_require__(26),
	    smallestGap   = __webpack_require__(91),
	    textColor     = __webpack_require__(25),
	    uniqueValues  = __webpack_require__(8)
	
	var rings = function(vars) {
	
	  var radius = d3.min([vars.height.viz,vars.width.viz])/2
	    , ring_width = vars.small || !vars.labels.value
	                 ? (radius-vars.labels.padding*2)/2 : radius/3
	    , primaryRing = vars.small || !vars.labels.value
	                  ? ring_width*1.4 : ring_width
	    , secondaryRing = ring_width*2
	    , edges = []
	    , nodes = []
	
	  var center = vars.data.viz.filter(function(d){
	    return d[vars.id.value] === vars.focus.value[0]
	  })[0]
	
	  if ( !center ) {
	    center = { "d3plus" : {} }
	    center[vars.id.value] = vars.focus.value[0]
	  }
	
	  center.d3plus.x = vars.width.viz/2
	  center.d3plus.y = vars.height.viz/2
	  center.d3plus.r = primaryRing*.65
	
	  var primaries = [], claimed = [vars.focus.value[0]]
	  vars.edges.connections(vars.focus.value[0],vars.id.value).forEach(function(edge){
	
	    var c = edge[vars.edges.source][vars.id.value] == vars.focus.value[0] ? edge[vars.edges.target] : edge[vars.edges.source]
	    var n = vars.data.viz.filter(function(d){
	      return d[vars.id.value] === c[vars.id.value]
	    })[0]
	
	    if ( !n ) {
	      n = { "d3plus" : {} }
	      n[vars.id.value] = c[vars.id.value]
	    }
	
	    n.d3plus.edges = vars.edges.connections(n[vars.id.value],vars.id.value).filter(function(c){
	      return c[vars.edges.source][vars.id.value] != vars.focus.value[0] && c[vars.edges.target][vars.id.value] != vars.focus.value[0]
	    })
	    n.d3plus.edge = edge
	    claimed.push(n[vars.id.value])
	    primaries.push(n)
	
	  })
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // Sort primary nodes by children (smallest to largest) and then by sort
	  // order.
	  //--------------------------------------------------------------------------
	  var sort = vars.order.value || vars.color.value
	          || vars.size.value || vars.id.value
	
	  primaries.sort(function(a,b){
	
	    var lengthdiff = a.d3plus.edges.length - b.d3plus.edges.length
	
	    if ( lengthdiff ) {
	
	      return lengthdiff
	
	    }
	    else {
	
	      return arraySort( [a,b] , sort , vars.order.sort.value
	                              , vars.color.value || [] , vars)
	
	    }
	
	  })
	
	  if (typeof vars.edges.limit.value == "number") {
	    primaries = primaries.slice(0,vars.edges.limit.value)
	  }
	  else if (typeof vars.edges.limit.value == "function") {
	    primaries = vars.edges.limit.value(primaries)
	  }
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // Check for similar children and give preference to nodes with less
	  // overall children.
	  //----------------------------------------------------------------------------
	  var secondaries = [], total = 0
	  primaries.forEach(function(p){
	
	    var primaryId = p[vars.id.value]
	
	    p.d3plus.edges = p.d3plus.edges.filter(function(c){
	
	      var source = c[vars.edges.source][vars.id.value]
	        , target = c[vars.edges.target][vars.id.value]
	      return (claimed.indexOf(source) < 0 && target == primaryId)
	          || (claimed.indexOf(target) < 0 && source == primaryId)
	
	    })
	
	    total += p.d3plus.edges.length || 1
	
	    p.d3plus.edges.forEach(function(c){
	
	      var source = c[vars.edges.source]
	        , target = c[vars.edges.target]
	      var claim = target[vars.id.value] == primaryId ? source : target
	      claimed.push(claim[vars.id.value])
	
	    })
	  })
	
	  arraySort( primaries , sort , vars.order.sort.value
	                   , vars.color.value || [] , vars)
	
	  var offset = 0,
	      radian = Math.PI*2,
	      start = 0
	
	  primaries.forEach(function(p,i){
	
	    var children = p.d3plus.edges.length || 1,
	        space = (radian/total)*children
	
	    if (i == 0) {
	      start = angle
	      offset -= space/2
	    }
	
	    var angle = offset+(space/2)
	    angle -= radian/4
	
	    p.d3plus.radians = angle
	    p.d3plus.x = vars.width.viz/2 + (primaryRing * Math.cos(angle))
	    p.d3plus.y = vars.height.viz/2 + (primaryRing * Math.sin(angle))
	
	    offset += space
	    p.d3plus.edges.sort(function(a,b){
	
	      var a = a[vars.edges.source][vars.id.value] == p[vars.id.value]
	            ? a[vars.edges.target] : a[vars.edges.source]
	        , b = b[vars.edges.source][vars.id.value] == p[vars.id.value]
	            ? b[vars.edges.target] : b[vars.edges.source]
	
	      return arraySort( [a,b] , sort , vars.order.sort.value
	                              , vars.color.value || [] , vars)
	
	    })
	
	    p.d3plus.edges.forEach(function(edge,i){
	
	      var c = edge[vars.edges.source][vars.id.value] == p[vars.id.value]
	          ? edge[vars.edges.target] : edge[vars.edges.source]
	        , s = radian/total
	
	      var d = vars.data.viz.filter(function(a){
	        return a[vars.id.value] === c[vars.id.value]
	      })[0]
	
	      if ( !d ) {
	        d = { "d3plus" : {} }
	        d[vars.id.value] = c[vars.id.value]
	      }
	
	      a = (angle-(s*children/2)+(s/2))+((s)*i)
	      d.d3plus.radians = a
	      d.d3plus.x = vars.width.viz/2 + ((secondaryRing) * Math.cos(a))
	      d.d3plus.y = vars.height.viz/2 + ((secondaryRing) * Math.sin(a))
	      secondaries.push(d)
	    })
	
	  })
	
	  var primaryDistance = smallestGap(primaries,{"accessor": function(n){
	        return [n.d3plus.x, n.d3plus.y]
	      }})
	    , secondaryDistance = smallestGap(secondaries,{"accessor": function(n){
	        return [n.d3plus.x, n.d3plus.y]
	      }})
	
	  if (!primaryDistance) {
	    primaryDistance = ring_width/2
	  }
	
	  if (!secondaryDistance) {
	    secondaryDistance = ring_width/4
	  }
	
	  if (primaryDistance/2 - 4 < 8) {
	    var primaryMax = d3.min([primaryDistance/2,8])
	  }
	  else {
	    var primaryMax = primaryDistance/2 - 4
	  }
	
	  if (secondaryDistance/2 - 4 < 4) {
	    var secondaryMax = d3.min([secondaryDistance/2,4])
	  }
	  else {
	    var secondaryMax = secondaryDistance/2 - 4
	  }
	
	  if (secondaryMax > ring_width/10) {
	    secondaryMax = ring_width/10
	  }
	
	  if (secondaryMax > primaryMax && secondaryMax > 10) {
	    secondaryMax = primaryMax*.75
	  }
	  if (primaryMax > secondaryMax*1.5) {
	    primaryMax = secondaryMax*1.5
	  }
	
	  primaryMax = Math.floor(primaryMax)
	  secondaryMax = Math.floor(secondaryMax)
	
	  var ids = uniqueValues(primaries, vars.id.value, fetchValue, vars)
	  ids = ids.concat(uniqueValues(secondaries, vars.id.value, fetchValue, vars))
	  ids.push(vars.focus.value[0])
	
	  var data = vars.data.viz.filter(function(d){
	    return ids.indexOf(d[vars.id.value]) >= 0
	  })
	
	  if (vars.size.value) {
	
	    var domain = d3.extent(data,function(d){
	      return fetchValue(vars,d,vars.size.value)
	    })
	
	    if (domain[0] == domain[1]) {
	      domain[0] = 0
	    }
	
	    var radius = d3.scale.linear()
	      .domain(domain)
	      .rangeRound([3,d3.min([primaryMax,secondaryMax])])
	
	    var val = fetchValue(vars,center,vars.size.value)
	    center.d3plus.r = radius(val)
	
	  }
	  else {
	
	    var radius = d3.scale.linear()
	      .domain([1,2])
	      .rangeRound([primaryMax,secondaryMax])
	
	
	    if (vars.edges.label) {
	      center.d3plus.r = radius(1)*1.5
	    }
	
	  }
	
	  secondaries.forEach(function(s){
	    s.d3plus.ring = 2
	    var val = vars.size.value ? fetchValue(vars,s,vars.size.value) : 2
	    s.d3plus.r = radius(val)
	  })
	
	  primaries.forEach(function(p){
	    p.d3plus.ring = 1
	    var val = vars.size.value ? fetchValue(vars,p,vars.size.value) : 1
	    p.d3plus.r = radius(val)
	  })
	
	  nodes = [center].concat(primaries).concat(secondaries)
	
	  primaries.forEach(function(p,i){
	
	    var check = [vars.edges.source,vars.edges.target]
	      , edge = p.d3plus.edge
	
	    check.forEach(function(node){
	
	      edge[node] = nodes.filter(function(n){
	        return n[vars.id.value] == edge[node][vars.id.value]
	      })[0]
	
	    })
	
	    delete edge.d3plus
	    edges.push(edge)
	
	    vars.edges.connections(p[vars.id.value],vars.id.value).forEach(function(edge){
	
	      var c = edge[vars.edges.source][vars.id.value] == p[vars.id.value]
	            ? edge[vars.edges.target] : edge[vars.edges.source]
	
	      if (c[vars.id.value] != center[vars.id.value]) {
	
	        var target = secondaries.filter(function(s){
	          return s[vars.id.value] == c[vars.id.value]
	        })[0]
	
	        if (!target) {
	          var r = primaryRing
	          target = primaries.filter(function(s){
	            return s[vars.id.value] == c[vars.id.value]
	          })[0]
	        }
	        else {
	          var r = secondaryRing
	        }
	
	        if (target) {
	
	          edge.d3plus = {
	            "spline": true,
	            "translate": {
	              "x": vars.width.viz/2,
	              "y": vars.height.viz/2
	            }
	          }
	
	          var check = [vars.edges.source,vars.edges.target]
	
	          check.forEach(function(node,i){
	
	            edge[node] = nodes.filter(function(n){
	              return n[vars.id.value] == edge[node][vars.id.value]
	            })[0]
	
	            if (edge[node].d3plus.edges === undefined) edge[node].d3plus.edges = {}
	
	            var oppID = i === 0 ? edge[vars.edges.target][vars.id.value] : edge[vars.edges.source][vars.id.value]
	
	            if (edge[node][vars.id.value] == p[vars.id.value]) {
	
	              edge[node].d3plus.edges[oppID] = {
	                "angle": p.d3plus.radians + Math.PI,
	                "radius": ring_width/2
	              }
	
	            }
	            else {
	
	              edge[node].d3plus.edges[oppID] = {
	                "angle": target.d3plus.radians,
	                "radius": ring_width/2
	              }
	
	            }
	          })
	
	          edges.push(edge)
	
	        }
	
	      }
	
	    })
	
	  })
	
	  var labelColor = false;
	  if (vars.background.value &&
	      ["transparent", "none"].indexOf(vars.background.value) < 0 &&
	      d3.hsl(vars.background.value).l < 0.5) {
	    labelColor = textColor(vars.background.value);
	  }
	
	  nodes.forEach(function(n) {
	
	    if (!vars.small && vars.labels.value) {
	
	      if (n[vars.id.value] != vars.focus.value[0]) {
	
	        n.d3plus.rotate = n.d3plus.radians*(180/Math.PI)
	
	        var angle = n.d3plus.rotate,
	            width = ring_width-(vars.labels.padding*3)-n.d3plus.r
	
	        if (angle < -90 || angle > 90) {
	          angle = angle-180
	          var buffer = -(n.d3plus.r+width/2+vars.labels.padding),
	              anchor = "end"
	        }
	        else {
	          var buffer = n.d3plus.r+width/2+vars.labels.padding,
	              anchor = "start"
	        }
	
	        var background = primaries.indexOf(n) >= 0 ? true : false
	
	        var height = n.d3plus.ring == 1 ? primaryDistance : secondaryDistance
	
	        n.d3plus.label = {
	          "x": buffer,
	          "y": 0,
	          "w": width,
	          "h": height,
	          "angle": angle,
	          "anchor": anchor,
	          "valign": "center",
	          "color": labelColor || legible(fetchColor(vars,n)),
	          "resize": [8, vars.labels.font.size],
	          "background": background,
	          "mouse": true
	        }
	
	      }
	      else if (vars.size.value || vars.edges.label) {
	
	        var height = primaryRing-n.d3plus.r*2-vars.labels.padding*2
	
	        n.d3plus.label = {
	          "x": 0,
	          "y": n.d3plus.r+height/2,
	          "w": primaryRing,
	          "h": height,
	          "color": labelColor || legible(fetchColor(vars,n)),
	          "resize": [10,40],
	          "background": true,
	          "mouse": true
	        }
	
	      }
	      else {
	        delete n.d3plus.rotate
	        delete n.d3plus.label
	      }
	
	    }
	    else {
	      delete n.d3plus.rotate
	      delete n.d3plus.label
	    }
	
	  })
	
	  vars.mouse.viz = {};
	  vars.mouse.viz[events.click] = function(d) {
	    if (d[vars.id.value] != vars.focus.value[0]) {
	      removeTooltip(vars.type.value);
	      var old_focus = vars.focus.value[0];
	      vars.history.states.push(function(){
	        vars.self.focus(old_focus).draw();
	      })
	      vars.self.focus(d[vars.id.value]).draw();
	    }
	  }
	
	  return {"edges": edges, "nodes": nodes, "data": data}
	
	};
	
	//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	// Visualization Settings and Helper Functions
	//------------------------------------------------------------------------------
	rings.filter       = function( vars , data ) {
	
	  var primaries = vars.edges.connections(vars.focus.value[0],vars.id.value,true)
	    , secondaries = []
	
	  primaries.forEach(function(p){
	    secondaries = secondaries.concat(vars.edges.connections(p[vars.id.value],vars.id.value,true))
	  })
	
	  var connections = primaries.concat(secondaries)
	    , ids = uniqueValues(connections, vars.id.value, fetchValue, vars)
	    , returnData = []
	
	  ids.forEach(function(id){
	
	    var d = data.filter(function(d){
	      return d[vars.id.value] == id
	    })[0]
	
	    if ( !d ) {
	      var obj = {"d3plus": {}}
	      obj[vars.id.value] = id
	      returnData.push(obj)
	    }
	    else {
	      returnData.push(d)
	    }
	
	  })
	
	  return returnData
	
	}
	rings.nesting      = false
	rings.scale        = 1
	rings.shapes       = [ "circle" , "square" , "donut" ]
	rings.requirements = [ "edges" , "focus" ]
	rings.tooltip      = "static"
	
	module.exports = rings


/***/ },
/* 421 */
/***/ function(module, exports) {

	module.exports = function() {
	  var sankey = {},
	      nodeWidth = 24,
	      nodePadding = 8,
	      size = [1, 1],
	      nodes = [],
	      links = [];
	
	  sankey.nodeWidth = function(_) {
	    if (!arguments.length) return nodeWidth;
	    nodeWidth = +_;
	    return sankey;
	  };
	
	  sankey.nodePadding = function(_) {
	    if (!arguments.length) return nodePadding;
	    nodePadding = +_;
	    return sankey;
	  };
	
	  sankey.nodes = function(_) {
	    if (!arguments.length) return nodes;
	    nodes = _;
	    return sankey;
	  };
	
	  sankey.links = function(_) {
	    if (!arguments.length) return links;
	    links = _;
	    return sankey;
	  };
	
	  sankey.size = function(_) {
	    if (!arguments.length) return size;
	    size = _;
	    return sankey;
	  };
	
	  sankey.layout = function(iterations) {
	    computeNodeLinks();
	    computeNodeValues();
	    computeNodeBreadths();
	    computeNodeDepths(iterations);
	    computeLinkDepths();
	    return sankey;
	  };
	
	  sankey.relayout = function() {
	    computeLinkDepths();
	    return sankey;
	  };
	
	  sankey.link = function() {
	    var curvature = .5;
	
	    function link(d) {
	      var x0 = d.source.x + d.source.dx,
	          x1 = d.target.x,
	          xi = d3.interpolateNumber(x0, x1),
	          x2 = xi(curvature),
	          x3 = xi(1 - curvature),
	          y0 = d.source.y + d.sy + d.dy / 2,
	          y1 = d.target.y + d.ty + d.dy / 2;
	      return "M" + x0 + "," + y0
	           + "C" + x2 + "," + y0
	           + " " + x3 + "," + y1
	           + " " + x1 + "," + y1;
	    }
	
	    link.curvature = function(_) {
	      if (!arguments.length) return curvature;
	      curvature = +_;
	      return link;
	    };
	
	    return link;
	  };
	
	  // Populate the sourceLinks and targetLinks for each node.
	  // Also, if the source and target are not objects, assume they are indices.
	  function computeNodeLinks() {
	    nodes.forEach(function(node) {
	      node.sourceLinks = [];
	      node.targetLinks = [];
	    });
	    links.forEach(function(link) {
	      var source = link.source,
	          target = link.target;
	      if (typeof source === "number") source = link.source = nodes[link.source];
	      if (typeof target === "number") target = link.target = nodes[link.target];
	      source.sourceLinks.push(link);
	      target.targetLinks.push(link);
	    });
	  }
	
	  // Compute the value (size) of each node by summing the associated links.
	  function computeNodeValues() {
	    nodes.forEach(function(node) {
	      node.value = Math.max(
	        d3.sum(node.sourceLinks, value),
	        d3.sum(node.targetLinks, value)
	      );
	    });
	  }
	
	  // Iteratively assign the breadth (x-position) for each node.
	  // Nodes are assigned the maximum breadth of incoming neighbors plus one;
	  // nodes with no incoming links are assigned breadth zero, while
	  // nodes with no outgoing links are assigned the maximum breadth.
	  function computeNodeBreadths() {
	    var remainingNodes = nodes,
	        nextNodes,
	        x = 0;
	
	    while (remainingNodes.length) {
	      nextNodes = [];
	      remainingNodes.forEach(function(node) {
	        node.x = x;
	        node.dx = nodeWidth;
	        node.sourceLinks.forEach(function(link) {
	          if (nextNodes.indexOf(link.target) < 0) {
	            nextNodes.push(link.target);
	          }
	        });
	      });
	      remainingNodes = nextNodes;
	      ++x;
	    }
	
	    //
	    moveSinksRight(x);
	    scaleNodeBreadths((size[0] - nodeWidth) / (x - 1));
	  }
	
	  function moveSourcesRight() {
	    nodes.forEach(function(node) {
	      if (!node.targetLinks.length) {
	        node.x = d3.min(node.sourceLinks, function(d) { return d.target.x; }) - 1;
	      }
	    });
	  }
	
	  function moveSinksRight(x) {
	    nodes.forEach(function(node) {
	      if (!node.sourceLinks.length) {
	        node.x = x - 1;
	      }
	    });
	  }
	
	  function scaleNodeBreadths(kx) {
	    nodes.forEach(function(node) {
	      node.x *= kx;
	    });
	  }
	
	  function computeNodeDepths(iterations) {
	    var nodesByBreadth = d3.nest()
	        .key(function(d) { return d.x; })
	        .sortKeys(d3.ascending)
	        .entries(nodes)
	        .map(function(d) { return d.values; });
	
	    //
	    initializeNodeDepth();
	    resolveCollisions();
	    for (var alpha = 1; iterations > 0; --iterations) {
	      relaxRightToLeft(alpha *= .99);
	      resolveCollisions();
	      relaxLeftToRight(alpha);
	      resolveCollisions();
	    }
	
	    function initializeNodeDepth() {
	      var ky = d3.min(nodesByBreadth, function(nodes) {
	        return (size[1] - (nodes.length - 1) * nodePadding) / d3.sum(nodes, value);
	      });
	
	      nodesByBreadth.forEach(function(nodes) {
	        nodes.forEach(function(node, i) {
	          node.y = i;
	          node.dy = node.value * ky;
	        });
	      });
	
	      links.forEach(function(link) {
	        link.dy = link.value * ky;
	      });
	    }
	
	    function relaxLeftToRight(alpha) {
	      nodesByBreadth.forEach(function(nodes, breadth) {
	        nodes.forEach(function(node) {
	          if (node.targetLinks.length) {
	            var y = d3.sum(node.targetLinks, weightedSource) / d3.sum(node.targetLinks, value);
	            node.y += (y - center(node)) * alpha;
	          }
	        });
	      });
	
	      function weightedSource(link) {
	        return center(link.source) * link.value;
	      }
	    }
	
	    function relaxRightToLeft(alpha) {
	      nodesByBreadth.slice().reverse().forEach(function(nodes) {
	        nodes.forEach(function(node) {
	          if (node.sourceLinks.length) {
	            var y = d3.sum(node.sourceLinks, weightedTarget) / d3.sum(node.sourceLinks, value);
	            node.y += (y - center(node)) * alpha;
	          }
	        });
	      });
	
	      function weightedTarget(link) {
	        return center(link.target) * link.value;
	      }
	    }
	
	    function resolveCollisions() {
	      nodesByBreadth.forEach(function(nodes) {
	        var node,
	            dy,
	            y0 = 0,
	            n = nodes.length,
	            i;
	
	        // Push any overlapping nodes down.
	        nodes.sort(ascendingDepth);
	        for (i = 0; i < n; ++i) {
	          node = nodes[i];
	          dy = y0 - node.y;
	          if (dy > 0) node.y += dy;
	          y0 = node.y + node.dy + nodePadding;
	        }
	
	        // If the bottommost node goes outside the bounds, push it back up.
	        dy = y0 - nodePadding - size[1];
	        if (dy > 0) {
	          y0 = node.y -= dy;
	
	          // Push any overlapping nodes back up.
	          for (i = n - 2; i >= 0; --i) {
	            node = nodes[i];
	            dy = node.y + node.dy + nodePadding - y0;
	            if (dy > 0) node.y -= dy;
	            y0 = node.y;
	          }
	        }
	      });
	    }
	
	    function ascendingDepth(a, b) {
	      return a.y - b.y;
	    }
	  }
	
	  function computeLinkDepths() {
	    nodes.forEach(function(node) {
	      node.sourceLinks.sort(ascendingTargetDepth);
	      node.targetLinks.sort(ascendingSourceDepth);
	    });
	    nodes.forEach(function(node) {
	      var sy = 0, ty = 0;
	      node.sourceLinks.forEach(function(link) {
	        link.sy = sy;
	        sy += link.dy;
	      });
	      node.targetLinks.forEach(function(link) {
	        link.ty = ty;
	        ty += link.dy;
	      });
	    });
	
	    function ascendingSourceDepth(a, b) {
	      return a.source.y - b.source.y;
	    }
	
	    function ascendingTargetDepth(a, b) {
	      return a.target.y - b.target.y;
	    }
	  }
	
	  function center(node) {
	    return node.y + node.dy / 2;
	  }
	
	  function value(link) {
	    return link.value;
	  }
	
	  return sankey;
	};


/***/ },
/* 422 */
/***/ function(module, exports, __webpack_require__) {

	var fetchValue = __webpack_require__(3);
	var uniques    = __webpack_require__(8);
	var copy       = __webpack_require__(11);
	var rand_col   = __webpack_require__(81);
	
	//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	// Table
	//------------------------------------------------------------------------------
	
	var table = function(vars) {
	
	  // get unique IDs and columns
	  var ids = uniques(vars.data.viz, vars.id.value, fetchValue, vars);
	  var cols = uniques(vars.cols.value);
	
	  // if user wants to show the row labels (default behavior) add this as a col
	  if (cols.indexOf("label") < 0 && vars.cols.index.value){
	    cols.unshift("label");
	  }
	
	  // width/height are a function of number of IDs and columns
	  var item_height = vars.height.viz / (ids.length+1); // add 1 for header offset
	  var item_width = vars.width.viz / cols.length;
	
	  //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	  // Setup background
	  //----------------------------------------------------------------------------
	  vars.group.selectAll("rect").data([0]).enter()
	    .append("rect")
	    .attr("class", "background")
	    .attr("height", vars.height.viz)
	    .attr("width", vars.width.viz)
	    .style("fill", vars.color.missing)
	  // draw line separater w/ enter/update/exit
	  var lines_horiz = vars.group.selectAll("line.horiz").data(vars.data.viz);
	  lines_horiz.enter().append("line").attr("class", "horiz")
	  lines_horiz
	    .attr("x1", 0)
	    .attr("y1", function(d, row_i){ return (item_height * row_i) + item_height })
	    .attr("x2", vars.width.viz)
	    .attr("y2", function(d, row_i){ return (item_height * row_i) + item_height })
	    .style("fill", "#fff")
	    .style("stroke", "#fff")
	  lines_horiz.exit().remove()
	  // draw line separater w/ enter/update/exit
	  var lines_vert = vars.group.selectAll("line.vert").data(cols);
	  lines_vert.enter().append("line").attr("class", "vert")
	  lines_vert
	    .attr("x1", function(d, col_i){ return (item_width * col_i) + item_width })
	    .attr("y1", 0)
	    .attr("x2", function(d, col_i){ return (item_width * col_i) + item_width })
	    .attr("y2", vars.height.viz)
	    .style("fill", "#fff")
	    .style("stroke", "#fff")
	  lines_vert.exit().remove()
	
	  var ret = []
	  var colors = {}
	
	  // doing 2 things here, first we add our column headers to our ret array as
	  // items dor d3plus to draw. We also compute the color scales for each column
	  cols.forEach(function(col, col_i){
	    // add columns
	    var header = {"d3plus":{
	      "x": (item_width * col_i) + item_width/2,
	      "y": item_height/2,
	      "width": item_width,
	      "height": item_height,
	      "id": "d3p_header_"+col.toString().replace(/ /g,"_"),
	      "shape": "square",
	      "color": "#fff",
	      "text": vars.format.value(col)
	    }}
	    if(col == vars.id.value){
	      header.d3plus.color = "#fff";
	    }
	    if(col == "label"){
	      header.d3plus.label = false;
	      header.d3plus.color = "#fff";
	      header.d3plus.stroke = "#fff";
	    }
	    ret.push(header)
	
	    // set up color scales
	    if(vars.data.keys[col] == "number"){
	      var domain_extent = d3.extent(vars.data.viz, function(d){ return d[col]; })
	      if(domain_extent[0] == domain_extent[1]){
	        domain_extent = [domain_extent[0]-1, domain_extent[1]]
	      }
	      colors[col] = d3.scale.linear().domain(domain_extent).range([vars.color.missing,rand_col(col)])
	    }
	    else if(vars.data.keys[col] == "boolean"){
	      colors[col] = function(bool){
	        return bool ? rand_col(col) : vars.color.missing;
	      }
	    }
	  })
	
	  vars.data.viz.forEach(function(d, row_i){
	    // offset for column headers
	    row_i += 1;
	
	    // loop through each user defined column to create new "object" to draw
	    cols.forEach(function(col, col_i){
	
	      // need to clone data since we'll be dupliating it for each column
	      var d_clone = copy(d);
	
	      // set unique ID otherwise it'd be the same in each column
	      d_clone.d3plus.id = "d3p_"+d_clone[vars.id.value].toString().replace(/ /g,"_")+"_"+col;
	      d_clone.d3plus.x = (item_width * col_i) + item_width/2;
	      d_clone.d3plus.y = (item_height * row_i) + item_height/2;
	      d_clone.d3plus.width = item_width;
	      d_clone.d3plus.height = item_height;
	
	      if(col == "label"){
	        d_clone.d3plus.shape = "square";
	        d_clone.d3plus.color = "#fff";
	        // special case for top left corner
	        ret.push(d_clone)
	      }
	
	      // be sure that this column is actually in this data item
	      if(d3.keys(d).indexOf(col) >= 0 && col in d){
	        if(colors[col]){
	          d_clone.d3plus.color = colors[col](d_clone[col]);
	        }
	        d_clone.d3plus.text = vars.format.value(d_clone[col]);
	        if(vars.data.keys[col] == "boolean"){
	          d_clone.d3plus.label = false;
	        }
	        else if(vars.data.keys[col] == "string"){
	          d_clone.d3plus.color = vars.color.missing;
	          d_clone.d3plus.stroke = "#fff";
	          d_clone.d3plus.shape = "square";
	        }
	        ret.push(d_clone)
	      }
	    })
	
	  })
	
	  return ret
	
	};
	
	//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	// Visualization Settings and Helper Functions
	//------------------------------------------------------------------------------
	table.shapes = ["check", "cross", "diamond", "square", "triangle", "triangle_up", "triangle_down"]
	table.requirements = ["data", "cols"]
	
	module.exports = table


/***/ },
/* 423 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = __webpack_require__(156);


/***/ },
/* 424 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule AutoFocusUtils
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var ReactMount = __webpack_require__(13);
	
	var findDOMNode = __webpack_require__(109);
	var focusNode = __webpack_require__(180);
	
	var Mixin = {
	  componentDidMount: function () {
	    if (this.props.autoFocus) {
	      focusNode(findDOMNode(this));
	    }
	  }
	};
	
	var AutoFocusUtils = {
	  Mixin: Mixin,
	
	  focusDOMComponent: function () {
	    focusNode(ReactMount.getNode(this._rootNodeID));
	  }
	};
	
	module.exports = AutoFocusUtils;

/***/ },
/* 425 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015 Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule BeforeInputEventPlugin
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var EventConstants = __webpack_require__(34);
	var EventPropagators = __webpack_require__(61);
	var ExecutionEnvironment = __webpack_require__(10);
	var FallbackCompositionState = __webpack_require__(433);
	var SyntheticCompositionEvent = __webpack_require__(465);
	var SyntheticInputEvent = __webpack_require__(468);
	
	var keyOf = __webpack_require__(38);
	
	var END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space
	var START_KEYCODE = 229;
	
	var canUseCompositionEvent = ExecutionEnvironment.canUseDOM && 'CompositionEvent' in window;
	
	var documentMode = null;
	if (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {
	  documentMode = document.documentMode;
	}
	
	// Webkit offers a very useful `textInput` event that can be used to
	// directly represent `beforeInput`. The IE `textinput` event is not as
	// useful, so we don't use it.
	var canUseTextInputEvent = ExecutionEnvironment.canUseDOM && 'TextEvent' in window && !documentMode && !isPresto();
	
	// In IE9+, we have access to composition events, but the data supplied
	// by the native compositionend event may be incorrect. Japanese ideographic
	// spaces, for instance (\u3000) are not recorded correctly.
	var useFallbackCompositionData = ExecutionEnvironment.canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);
	
	/**
	 * Opera <= 12 includes TextEvent in window, but does not fire
	 * text input events. Rely on keypress instead.
	 */
	function isPresto() {
	  var opera = window.opera;
	  return typeof opera === 'object' && typeof opera.version === 'function' && parseInt(opera.version(), 10) <= 12;
	}
	
	var SPACEBAR_CODE = 32;
	var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);
	
	var topLevelTypes = EventConstants.topLevelTypes;
	
	// Events and their corresponding property names.
	var eventTypes = {
	  beforeInput: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onBeforeInput: null }),
	      captured: keyOf({ onBeforeInputCapture: null })
	    },
	    dependencies: [topLevelTypes.topCompositionEnd, topLevelTypes.topKeyPress, topLevelTypes.topTextInput, topLevelTypes.topPaste]
	  },
	  compositionEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCompositionEnd: null }),
	      captured: keyOf({ onCompositionEndCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionEnd, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
	  },
	  compositionStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCompositionStart: null }),
	      captured: keyOf({ onCompositionStartCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionStart, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
	  },
	  compositionUpdate: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCompositionUpdate: null }),
	      captured: keyOf({ onCompositionUpdateCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionUpdate, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
	  }
	};
	
	// Track whether we've ever handled a keypress on the space key.
	var hasSpaceKeypress = false;
	
	/**
	 * Return whether a native keypress event is assumed to be a command.
	 * This is required because Firefox fires `keypress` events for key commands
	 * (cut, copy, select-all, etc.) even though no character is inserted.
	 */
	function isKeypressCommand(nativeEvent) {
	  return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&
	  // ctrlKey && altKey is equivalent to AltGr, and is not a command.
	  !(nativeEvent.ctrlKey && nativeEvent.altKey);
	}
	
	/**
	 * Translate native top level events into event types.
	 *
	 * @param {string} topLevelType
	 * @return {object}
	 */
	function getCompositionEventType(topLevelType) {
	  switch (topLevelType) {
	    case topLevelTypes.topCompositionStart:
	      return eventTypes.compositionStart;
	    case topLevelTypes.topCompositionEnd:
	      return eventTypes.compositionEnd;
	    case topLevelTypes.topCompositionUpdate:
	      return eventTypes.compositionUpdate;
	  }
	}
	
	/**
	 * Does our fallback best-guess model think this event signifies that
	 * composition has begun?
	 *
	 * @param {string} topLevelType
	 * @param {object} nativeEvent
	 * @return {boolean}
	 */
	function isFallbackCompositionStart(topLevelType, nativeEvent) {
	  return topLevelType === topLevelTypes.topKeyDown && nativeEvent.keyCode === START_KEYCODE;
	}
	
	/**
	 * Does our fallback mode think that this event is the end of composition?
	 *
	 * @param {string} topLevelType
	 * @param {object} nativeEvent
	 * @return {boolean}
	 */
	function isFallbackCompositionEnd(topLevelType, nativeEvent) {
	  switch (topLevelType) {
	    case topLevelTypes.topKeyUp:
	      // Command keys insert or clear IME input.
	      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
	    case topLevelTypes.topKeyDown:
	      // Expect IME keyCode on each keydown. If we get any other
	      // code we must have exited earlier.
	      return nativeEvent.keyCode !== START_KEYCODE;
	    case topLevelTypes.topKeyPress:
	    case topLevelTypes.topMouseDown:
	    case topLevelTypes.topBlur:
	      // Events are not possible without cancelling IME.
	      return true;
	    default:
	      return false;
	  }
	}
	
	/**
	 * Google Input Tools provides composition data via a CustomEvent,
	 * with the `data` property populated in the `detail` object. If this
	 * is available on the event object, use it. If not, this is a plain
	 * composition event and we have nothing special to extract.
	 *
	 * @param {object} nativeEvent
	 * @return {?string}
	 */
	function getDataFromCustomEvent(nativeEvent) {
	  var detail = nativeEvent.detail;
	  if (typeof detail === 'object' && 'data' in detail) {
	    return detail.data;
	  }
	  return null;
	}
	
	// Track the current IME composition fallback object, if any.
	var currentComposition = null;
	
	/**
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {DOMEventTarget} topLevelTarget The listening component root node.
	 * @param {string} topLevelTargetID ID of `topLevelTarget`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?object} A SyntheticCompositionEvent.
	 */
	function extractCompositionEvent(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
	  var eventType;
	  var fallbackData;
	
	  if (canUseCompositionEvent) {
	    eventType = getCompositionEventType(topLevelType);
	  } else if (!currentComposition) {
	    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {
	      eventType = eventTypes.compositionStart;
	    }
	  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {
	    eventType = eventTypes.compositionEnd;
	  }
	
	  if (!eventType) {
	    return null;
	  }
	
	  if (useFallbackCompositionData) {
	    // The current composition is stored statically and must not be
	    // overwritten while composition continues.
	    if (!currentComposition && eventType === eventTypes.compositionStart) {
	      currentComposition = FallbackCompositionState.getPooled(topLevelTarget);
	    } else if (eventType === eventTypes.compositionEnd) {
	      if (currentComposition) {
	        fallbackData = currentComposition.getData();
	      }
	    }
	  }
	
	  var event = SyntheticCompositionEvent.getPooled(eventType, topLevelTargetID, nativeEvent, nativeEventTarget);
	
	  if (fallbackData) {
	    // Inject data generated from fallback path into the synthetic event.
	    // This matches the property of native CompositionEventInterface.
	    event.data = fallbackData;
	  } else {
	    var customData = getDataFromCustomEvent(nativeEvent);
	    if (customData !== null) {
	      event.data = customData;
	    }
	  }
	
	  EventPropagators.accumulateTwoPhaseDispatches(event);
	  return event;
	}
	
	/**
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?string} The string corresponding to this `beforeInput` event.
	 */
	function getNativeBeforeInputChars(topLevelType, nativeEvent) {
	  switch (topLevelType) {
	    case topLevelTypes.topCompositionEnd:
	      return getDataFromCustomEvent(nativeEvent);
	    case topLevelTypes.topKeyPress:
	      /**
	       * If native `textInput` events are available, our goal is to make
	       * use of them. However, there is a special case: the spacebar key.
	       * In Webkit, preventing default on a spacebar `textInput` event
	       * cancels character insertion, but it *also* causes the browser
	       * to fall back to its default spacebar behavior of scrolling the
	       * page.
	       *
	       * Tracking at:
	       * https://code.google.com/p/chromium/issues/detail?id=355103
	       *
	       * To avoid this issue, use the keypress event as if no `textInput`
	       * event is available.
	       */
	      var which = nativeEvent.which;
	      if (which !== SPACEBAR_CODE) {
	        return null;
	      }
	
	      hasSpaceKeypress = true;
	      return SPACEBAR_CHAR;
	
	    case topLevelTypes.topTextInput:
	      // Record the characters to be added to the DOM.
	      var chars = nativeEvent.data;
	
	      // If it's a spacebar character, assume that we have already handled
	      // it at the keypress level and bail immediately. Android Chrome
	      // doesn't give us keycodes, so we need to blacklist it.
	      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
	        return null;
	      }
	
	      return chars;
	
	    default:
	      // For other native event types, do nothing.
	      return null;
	  }
	}
	
	/**
	 * For browsers that do not provide the `textInput` event, extract the
	 * appropriate string to use for SyntheticInputEvent.
	 *
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?string} The fallback string for this `beforeInput` event.
	 */
	function getFallbackBeforeInputChars(topLevelType, nativeEvent) {
	  // If we are currently composing (IME) and using a fallback to do so,
	  // try to extract the composed characters from the fallback object.
	  if (currentComposition) {
	    if (topLevelType === topLevelTypes.topCompositionEnd || isFallbackCompositionEnd(topLevelType, nativeEvent)) {
	      var chars = currentComposition.getData();
	      FallbackCompositionState.release(currentComposition);
	      currentComposition = null;
	      return chars;
	    }
	    return null;
	  }
	
	  switch (topLevelType) {
	    case topLevelTypes.topPaste:
	      // If a paste event occurs after a keypress, throw out the input
	      // chars. Paste events should not lead to BeforeInput events.
	      return null;
	    case topLevelTypes.topKeyPress:
	      /**
	       * As of v27, Firefox may fire keypress events even when no character
	       * will be inserted. A few possibilities:
	       *
	       * - `which` is `0`. Arrow keys, Esc key, etc.
	       *
	       * - `which` is the pressed key code, but no char is available.
	       *   Ex: 'AltGr + d` in Polish. There is no modified character for
	       *   this key combination and no character is inserted into the
	       *   document, but FF fires the keypress for char code `100` anyway.
	       *   No `input` event will occur.
	       *
	       * - `which` is the pressed key code, but a command combination is
	       *   being used. Ex: `Cmd+C`. No character is inserted, and no
	       *   `input` event will occur.
	       */
	      if (nativeEvent.which && !isKeypressCommand(nativeEvent)) {
	        return String.fromCharCode(nativeEvent.which);
	      }
	      return null;
	    case topLevelTypes.topCompositionEnd:
	      return useFallbackCompositionData ? null : nativeEvent.data;
	    default:
	      return null;
	  }
	}
	
	/**
	 * Extract a SyntheticInputEvent for `beforeInput`, based on either native
	 * `textInput` or fallback behavior.
	 *
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {DOMEventTarget} topLevelTarget The listening component root node.
	 * @param {string} topLevelTargetID ID of `topLevelTarget`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?object} A SyntheticInputEvent.
	 */
	function extractBeforeInputEvent(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
	  var chars;
	
	  if (canUseTextInputEvent) {
	    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);
	  } else {
	    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);
	  }
	
	  // If no characters are being inserted, no BeforeInput event should
	  // be fired.
	  if (!chars) {
	    return null;
	  }
	
	  var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, topLevelTargetID, nativeEvent, nativeEventTarget);
	
	  event.data = chars;
	  EventPropagators.accumulateTwoPhaseDispatches(event);
	  return event;
	}
	
	/**
	 * Create an `onBeforeInput` event to match
	 * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
	 *
	 * This event plugin is based on the native `textInput` event
	 * available in Chrome, Safari, Opera, and IE. This event fires after
	 * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
	 *
	 * `beforeInput` is spec'd but not implemented in any browsers, and
	 * the `input` event does not provide any useful information about what has
	 * actually been added, contrary to the spec. Thus, `textInput` is the best
	 * available event to identify the characters that have actually been inserted
	 * into the target node.
	 *
	 * This plugin is also responsible for emitting `composition` events, thus
	 * allowing us to share composition fallback code for both `beforeInput` and
	 * `composition` event types.
	 */
	var BeforeInputEventPlugin = {
	
	  eventTypes: eventTypes,
	
	  /**
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {DOMEventTarget} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native browser event.
	   * @return {*} An accumulation of synthetic events.
	   * @see {EventPluginHub.extractEvents}
	   */
	  extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
	    return [extractCompositionEvent(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget), extractBeforeInputEvent(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget)];
	  }
	};
	
	module.exports = BeforeInputEventPlugin;

/***/ },
/* 426 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule CSSPropertyOperations
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var CSSProperty = __webpack_require__(150);
	var ExecutionEnvironment = __webpack_require__(10);
	var ReactPerf = __webpack_require__(22);
	
	var camelizeStyleName = __webpack_require__(482);
	var dangerousStyleValue = __webpack_require__(473);
	var hyphenateStyleName = __webpack_require__(487);
	var memoizeStringOnly = __webpack_require__(491);
	var warning = __webpack_require__(6);
	
	var processStyleName = memoizeStringOnly(function (styleName) {
	  return hyphenateStyleName(styleName);
	});
	
	var hasShorthandPropertyBug = false;
	var styleFloatAccessor = 'cssFloat';
	if (ExecutionEnvironment.canUseDOM) {
	  var tempStyle = document.createElement('div').style;
	  try {
	    // IE8 throws "Invalid argument." if resetting shorthand style properties.
	    tempStyle.font = '';
	  } catch (e) {
	    hasShorthandPropertyBug = true;
	  }
	  // IE8 only supports accessing cssFloat (standard) as styleFloat
	  if (document.documentElement.style.cssFloat === undefined) {
	    styleFloatAccessor = 'styleFloat';
	  }
	}
	
	if (process.env.NODE_ENV !== 'production') {
	  // 'msTransform' is correct, but the other prefixes should be capitalized
	  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;
	
	  // style values shouldn't contain a semicolon
	  var badStyleValueWithSemicolonPattern = /;\s*$/;
	
	  var warnedStyleNames = {};
	  var warnedStyleValues = {};
	
	  var warnHyphenatedStyleName = function (name) {
	    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
	      return;
	    }
	
	    warnedStyleNames[name] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported style property %s. Did you mean %s?', name, camelizeStyleName(name)) : undefined;
	  };
	
	  var warnBadVendoredStyleName = function (name) {
	    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
	      return;
	    }
	
	    warnedStyleNames[name] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?', name, name.charAt(0).toUpperCase() + name.slice(1)) : undefined;
	  };
	
	  var warnStyleValueWithSemicolon = function (name, value) {
	    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
	      return;
	    }
	
	    warnedStyleValues[value] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Style property values shouldn\'t contain a semicolon. ' + 'Try "%s: %s" instead.', name, value.replace(badStyleValueWithSemicolonPattern, '')) : undefined;
	  };
	
	  /**
	   * @param {string} name
	   * @param {*} value
	   */
	  var warnValidStyle = function (name, value) {
	    if (name.indexOf('-') > -1) {
	      warnHyphenatedStyleName(name);
	    } else if (badVendoredStyleNamePattern.test(name)) {
	      warnBadVendoredStyleName(name);
	    } else if (badStyleValueWithSemicolonPattern.test(value)) {
	      warnStyleValueWithSemicolon(name, value);
	    }
	  };
	}
	
	/**
	 * Operations for dealing with CSS properties.
	 */
	var CSSPropertyOperations = {
	
	  /**
	   * Serializes a mapping of style properties for use as inline styles:
	   *
	   *   > createMarkupForStyles({width: '200px', height: 0})
	   *   "width:200px;height:0;"
	   *
	   * Undefined values are ignored so that declarative programming is easier.
	   * The result should be HTML-escaped before insertion into the DOM.
	   *
	   * @param {object} styles
	   * @return {?string}
	   */
	  createMarkupForStyles: function (styles) {
	    var serialized = '';
	    for (var styleName in styles) {
	      if (!styles.hasOwnProperty(styleName)) {
	        continue;
	      }
	      var styleValue = styles[styleName];
	      if (process.env.NODE_ENV !== 'production') {
	        warnValidStyle(styleName, styleValue);
	      }
	      if (styleValue != null) {
	        serialized += processStyleName(styleName) + ':';
	        serialized += dangerousStyleValue(styleName, styleValue) + ';';
	      }
	    }
	    return serialized || null;
	  },
	
	  /**
	   * Sets the value for multiple styles on a node.  If a value is specified as
	   * '' (empty string), the corresponding style property will be unset.
	   *
	   * @param {DOMElement} node
	   * @param {object} styles
	   */
	  setValueForStyles: function (node, styles) {
	    var style = node.style;
	    for (var styleName in styles) {
	      if (!styles.hasOwnProperty(styleName)) {
	        continue;
	      }
	      if (process.env.NODE_ENV !== 'production') {
	        warnValidStyle(styleName, styles[styleName]);
	      }
	      var styleValue = dangerousStyleValue(styleName, styles[styleName]);
	      if (styleName === 'float') {
	        styleName = styleFloatAccessor;
	      }
	      if (styleValue) {
	        style[styleName] = styleValue;
	      } else {
	        var expansion = hasShorthandPropertyBug && CSSProperty.shorthandPropertyExpansions[styleName];
	        if (expansion) {
	          // Shorthand property that IE8 won't like unsetting, so unset each
	          // component to placate it
	          for (var individualStyleName in expansion) {
	            style[individualStyleName] = '';
	          }
	        } else {
	          style[styleName] = '';
	        }
	      }
	    }
	  }
	
	};
	
	ReactPerf.measureMethods(CSSPropertyOperations, 'CSSPropertyOperations', {
	  setValueForStyles: 'setValueForStyles'
	});
	
	module.exports = CSSPropertyOperations;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 427 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ChangeEventPlugin
	 */
	
	'use strict';
	
	var EventConstants = __webpack_require__(34);
	var EventPluginHub = __webpack_require__(60);
	var EventPropagators = __webpack_require__(61);
	var ExecutionEnvironment = __webpack_require__(10);
	var ReactUpdates = __webpack_require__(24);
	var SyntheticEvent = __webpack_require__(44);
	
	var getEventTarget = __webpack_require__(112);
	var isEventSupported = __webpack_require__(115);
	var isTextInputElement = __webpack_require__(177);
	var keyOf = __webpack_require__(38);
	
	var topLevelTypes = EventConstants.topLevelTypes;
	
	var eventTypes = {
	  change: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onChange: null }),
	      captured: keyOf({ onChangeCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topChange, topLevelTypes.topClick, topLevelTypes.topFocus, topLevelTypes.topInput, topLevelTypes.topKeyDown, topLevelTypes.topKeyUp, topLevelTypes.topSelectionChange]
	  }
	};
	
	/**
	 * For IE shims
	 */
	var activeElement = null;
	var activeElementID = null;
	var activeElementValue = null;
	var activeElementValueProp = null;
	
	/**
	 * SECTION: handle `change` event
	 */
	function shouldUseChangeEvent(elem) {
	  var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
	  return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';
	}
	
	var doesChangeEventBubble = false;
	if (ExecutionEnvironment.canUseDOM) {
	  // See `handleChange` comment below
	  doesChangeEventBubble = isEventSupported('change') && (!('documentMode' in document) || document.documentMode > 8);
	}
	
	function manualDispatchChangeEvent(nativeEvent) {
	  var event = SyntheticEvent.getPooled(eventTypes.change, activeElementID, nativeEvent, getEventTarget(nativeEvent));
	  EventPropagators.accumulateTwoPhaseDispatches(event);
	
	  // If change and propertychange bubbled, we'd just bind to it like all the
	  // other events and have it go through ReactBrowserEventEmitter. Since it
	  // doesn't, we manually listen for the events and so we have to enqueue and
	  // process the abstract event manually.
	  //
	  // Batching is necessary here in order to ensure that all event handlers run
	  // before the next rerender (including event handlers attached to ancestor
	  // elements instead of directly on the input). Without this, controlled
	  // components don't work properly in conjunction with event bubbling because
	  // the component is rerendered and the value reverted before all the event
	  // handlers can run. See https://github.com/facebook/react/issues/708.
	  ReactUpdates.batchedUpdates(runEventInBatch, event);
	}
	
	function runEventInBatch(event) {
	  EventPluginHub.enqueueEvents(event);
	  EventPluginHub.processEventQueue(false);
	}
	
	function startWatchingForChangeEventIE8(target, targetID) {
	  activeElement = target;
	  activeElementID = targetID;
	  activeElement.attachEvent('onchange', manualDispatchChangeEvent);
	}
	
	function stopWatchingForChangeEventIE8() {
	  if (!activeElement) {
	    return;
	  }
	  activeElement.detachEvent('onchange', manualDispatchChangeEvent);
	  activeElement = null;
	  activeElementID = null;
	}
	
	function getTargetIDForChangeEvent(topLevelType, topLevelTarget, topLevelTargetID) {
	  if (topLevelType === topLevelTypes.topChange) {
	    return topLevelTargetID;
	  }
	}
	function handleEventsForChangeEventIE8(topLevelType, topLevelTarget, topLevelTargetID) {
	  if (topLevelType === topLevelTypes.topFocus) {
	    // stopWatching() should be a noop here but we call it just in case we
	    // missed a blur event somehow.
	    stopWatchingForChangeEventIE8();
	    startWatchingForChangeEventIE8(topLevelTarget, topLevelTargetID);
	  } else if (topLevelType === topLevelTypes.topBlur) {
	    stopWatchingForChangeEventIE8();
	  }
	}
	
	/**
	 * SECTION: handle `input` event
	 */
	var isInputEventSupported = false;
	if (ExecutionEnvironment.canUseDOM) {
	  // IE9 claims to support the input event but fails to trigger it when
	  // deleting text, so we ignore its input events
	  isInputEventSupported = isEventSupported('input') && (!('documentMode' in document) || document.documentMode > 9);
	}
	
	/**
	 * (For old IE.) Replacement getter/setter for the `value` property that gets
	 * set on the active element.
	 */
	var newValueProp = {
	  get: function () {
	    return activeElementValueProp.get.call(this);
	  },
	  set: function (val) {
	    // Cast to a string so we can do equality checks.
	    activeElementValue = '' + val;
	    activeElementValueProp.set.call(this, val);
	  }
	};
	
	/**
	 * (For old IE.) Starts tracking propertychange events on the passed-in element
	 * and override the value property so that we can distinguish user events from
	 * value changes in JS.
	 */
	function startWatchingForValueChange(target, targetID) {
	  activeElement = target;
	  activeElementID = targetID;
	  activeElementValue = target.value;
	  activeElementValueProp = Object.getOwnPropertyDescriptor(target.constructor.prototype, 'value');
	
	  // Not guarded in a canDefineProperty check: IE8 supports defineProperty only
	  // on DOM elements
	  Object.defineProperty(activeElement, 'value', newValueProp);
	  activeElement.attachEvent('onpropertychange', handlePropertyChange);
	}
	
	/**
	 * (For old IE.) Removes the event listeners from the currently-tracked element,
	 * if any exists.
	 */
	function stopWatchingForValueChange() {
	  if (!activeElement) {
	    return;
	  }
	
	  // delete restores the original property definition
	  delete activeElement.value;
	  activeElement.detachEvent('onpropertychange', handlePropertyChange);
	
	  activeElement = null;
	  activeElementID = null;
	  activeElementValue = null;
	  activeElementValueProp = null;
	}
	
	/**
	 * (For old IE.) Handles a propertychange event, sending a `change` event if
	 * the value of the active element has changed.
	 */
	function handlePropertyChange(nativeEvent) {
	  if (nativeEvent.propertyName !== 'value') {
	    return;
	  }
	  var value = nativeEvent.srcElement.value;
	  if (value === activeElementValue) {
	    return;
	  }
	  activeElementValue = value;
	
	  manualDispatchChangeEvent(nativeEvent);
	}
	
	/**
	 * If a `change` event should be fired, returns the target's ID.
	 */
	function getTargetIDForInputEvent(topLevelType, topLevelTarget, topLevelTargetID) {
	  if (topLevelType === topLevelTypes.topInput) {
	    // In modern browsers (i.e., not IE8 or IE9), the input event is exactly
	    // what we want so fall through here and trigger an abstract event
	    return topLevelTargetID;
	  }
	}
	
	// For IE8 and IE9.
	function handleEventsForInputEventIE(topLevelType, topLevelTarget, topLevelTargetID) {
	  if (topLevelType === topLevelTypes.topFocus) {
	    // In IE8, we can capture almost all .value changes by adding a
	    // propertychange handler and looking for events with propertyName
	    // equal to 'value'
	    // In IE9, propertychange fires for most input events but is buggy and
	    // doesn't fire when text is deleted, but conveniently, selectionchange
	    // appears to fire in all of the remaining cases so we catch those and
	    // forward the event if the value has changed
	    // In either case, we don't want to call the event handler if the value
	    // is changed from JS so we redefine a setter for `.value` that updates
	    // our activeElementValue variable, allowing us to ignore those changes
	    //
	    // stopWatching() should be a noop here but we call it just in case we
	    // missed a blur event somehow.
	    stopWatchingForValueChange();
	    startWatchingForValueChange(topLevelTarget, topLevelTargetID);
	  } else if (topLevelType === topLevelTypes.topBlur) {
	    stopWatchingForValueChange();
	  }
	}
	
	// For IE8 and IE9.
	function getTargetIDForInputEventIE(topLevelType, topLevelTarget, topLevelTargetID) {
	  if (topLevelType === topLevelTypes.topSelectionChange || topLevelType === topLevelTypes.topKeyUp || topLevelType === topLevelTypes.topKeyDown) {
	    // On the selectionchange event, the target is just document which isn't
	    // helpful for us so just check activeElement instead.
	    //
	    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
	    // propertychange on the first input event after setting `value` from a
	    // script and fires only keydown, keypress, keyup. Catching keyup usually
	    // gets it and catching keydown lets us fire an event for the first
	    // keystroke if user does a key repeat (it'll be a little delayed: right
	    // before the second keystroke). Other input methods (e.g., paste) seem to
	    // fire selectionchange normally.
	    if (activeElement && activeElement.value !== activeElementValue) {
	      activeElementValue = activeElement.value;
	      return activeElementID;
	    }
	  }
	}
	
	/**
	 * SECTION: handle `click` event
	 */
	function shouldUseClickEvent(elem) {
	  // Use the `click` event to detect changes to checkbox and radio inputs.
	  // This approach works across all browsers, whereas `change` does not fire
	  // until `blur` in IE8.
	  return elem.nodeName && elem.nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');
	}
	
	function getTargetIDForClickEvent(topLevelType, topLevelTarget, topLevelTargetID) {
	  if (topLevelType === topLevelTypes.topClick) {
	    return topLevelTargetID;
	  }
	}
	
	/**
	 * This plugin creates an `onChange` event that normalizes change events
	 * across form elements. This event fires at a time when it's possible to
	 * change the element's value without seeing a flicker.
	 *
	 * Supported elements are:
	 * - input (see `isTextInputElement`)
	 * - textarea
	 * - select
	 */
	var ChangeEventPlugin = {
	
	  eventTypes: eventTypes,
	
	  /**
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {DOMEventTarget} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native browser event.
	   * @return {*} An accumulation of synthetic events.
	   * @see {EventPluginHub.extractEvents}
	   */
	  extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
	
	    var getTargetIDFunc, handleEventFunc;
	    if (shouldUseChangeEvent(topLevelTarget)) {
	      if (doesChangeEventBubble) {
	        getTargetIDFunc = getTargetIDForChangeEvent;
	      } else {
	        handleEventFunc = handleEventsForChangeEventIE8;
	      }
	    } else if (isTextInputElement(topLevelTarget)) {
	      if (isInputEventSupported) {
	        getTargetIDFunc = getTargetIDForInputEvent;
	      } else {
	        getTargetIDFunc = getTargetIDForInputEventIE;
	        handleEventFunc = handleEventsForInputEventIE;
	      }
	    } else if (shouldUseClickEvent(topLevelTarget)) {
	      getTargetIDFunc = getTargetIDForClickEvent;
	    }
	
	    if (getTargetIDFunc) {
	      var targetID = getTargetIDFunc(topLevelType, topLevelTarget, topLevelTargetID);
	      if (targetID) {
	        var event = SyntheticEvent.getPooled(eventTypes.change, targetID, nativeEvent, nativeEventTarget);
	        event.type = 'change';
	        EventPropagators.accumulateTwoPhaseDispatches(event);
	        return event;
	      }
	    }
	
	    if (handleEventFunc) {
	      handleEventFunc(topLevelType, topLevelTarget, topLevelTargetID);
	    }
	  }
	
	};
	
	module.exports = ChangeEventPlugin;

/***/ },
/* 428 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ClientReactRootIndex
	 * @typechecks
	 */
	
	'use strict';
	
	var nextReactRootIndex = 0;
	
	var ClientReactRootIndex = {
	  createReactRootIndex: function () {
	    return nextReactRootIndex++;
	  }
	};
	
	module.exports = ClientReactRootIndex;

/***/ },
/* 429 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule Danger
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(10);
	
	var createNodesFromMarkup = __webpack_require__(484);
	var emptyFunction = __webpack_require__(27);
	var getMarkupWrap = __webpack_require__(182);
	var invariant = __webpack_require__(4);
	
	var OPEN_TAG_NAME_EXP = /^(<[^ \/>]+)/;
	var RESULT_INDEX_ATTR = 'data-danger-index';
	
	/**
	 * Extracts the `nodeName` from a string of markup.
	 *
	 * NOTE: Extracting the `nodeName` does not require a regular expression match
	 * because we make assumptions about React-generated markup (i.e. there are no
	 * spaces surrounding the opening tag and there is at least one attribute).
	 *
	 * @param {string} markup String of markup.
	 * @return {string} Node name of the supplied markup.
	 * @see http://jsperf.com/extract-nodename
	 */
	function getNodeName(markup) {
	  return markup.substring(1, markup.indexOf(' '));
	}
	
	var Danger = {
	
	  /**
	   * Renders markup into an array of nodes. The markup is expected to render
	   * into a list of root nodes. Also, the length of `resultList` and
	   * `markupList` should be the same.
	   *
	   * @param {array<string>} markupList List of markup strings to render.
	   * @return {array<DOMElement>} List of rendered nodes.
	   * @internal
	   */
	  dangerouslyRenderMarkup: function (markupList) {
	    !ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyRenderMarkup(...): Cannot render markup in a worker ' + 'thread. Make sure `window` and `document` are available globally ' + 'before requiring React when unit testing or use ' + 'ReactDOMServer.renderToString for server rendering.') : invariant(false) : undefined;
	    var nodeName;
	    var markupByNodeName = {};
	    // Group markup by `nodeName` if a wrap is necessary, else by '*'.
	    for (var i = 0; i < markupList.length; i++) {
	      !markupList[i] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyRenderMarkup(...): Missing markup.') : invariant(false) : undefined;
	      nodeName = getNodeName(markupList[i]);
	      nodeName = getMarkupWrap(nodeName) ? nodeName : '*';
	      markupByNodeName[nodeName] = markupByNodeName[nodeName] || [];
	      markupByNodeName[nodeName][i] = markupList[i];
	    }
	    var resultList = [];
	    var resultListAssignmentCount = 0;
	    for (nodeName in markupByNodeName) {
	      if (!markupByNodeName.hasOwnProperty(nodeName)) {
	        continue;
	      }
	      var markupListByNodeName = markupByNodeName[nodeName];
	
	      // This for-in loop skips the holes of the sparse array. The order of
	      // iteration should follow the order of assignment, which happens to match
	      // numerical index order, but we don't rely on that.
	      var resultIndex;
	      for (resultIndex in markupListByNodeName) {
	        if (markupListByNodeName.hasOwnProperty(resultIndex)) {
	          var markup = markupListByNodeName[resultIndex];
	
	          // Push the requested markup with an additional RESULT_INDEX_ATTR
	          // attribute.  If the markup does not start with a < character, it
	          // will be discarded below (with an appropriate console.error).
	          markupListByNodeName[resultIndex] = markup.replace(OPEN_TAG_NAME_EXP,
	          // This index will be parsed back out below.
	          '$1 ' + RESULT_INDEX_ATTR + '="' + resultIndex + '" ');
	        }
	      }
	
	      // Render each group of markup with similar wrapping `nodeName`.
	      var renderNodes = createNodesFromMarkup(markupListByNodeName.join(''), emptyFunction // Do nothing special with <script> tags.
	      );
	
	      for (var j = 0; j < renderNodes.length; ++j) {
	        var renderNode = renderNodes[j];
	        if (renderNode.hasAttribute && renderNode.hasAttribute(RESULT_INDEX_ATTR)) {
	
	          resultIndex = +renderNode.getAttribute(RESULT_INDEX_ATTR);
	          renderNode.removeAttribute(RESULT_INDEX_ATTR);
	
	          !!resultList.hasOwnProperty(resultIndex) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Danger: Assigning to an already-occupied result index.') : invariant(false) : undefined;
	
	          resultList[resultIndex] = renderNode;
	
	          // This should match resultList.length and markupList.length when
	          // we're done.
	          resultListAssignmentCount += 1;
	        } else if (process.env.NODE_ENV !== 'production') {
	          console.error('Danger: Discarding unexpected node:', renderNode);
	        }
	      }
	    }
	
	    // Although resultList was populated out of order, it should now be a dense
	    // array.
	    !(resultListAssignmentCount === resultList.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Danger: Did not assign to every index of resultList.') : invariant(false) : undefined;
	
	    !(resultList.length === markupList.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Danger: Expected markup to render %s nodes, but rendered %s.', markupList.length, resultList.length) : invariant(false) : undefined;
	
	    return resultList;
	  },
	
	  /**
	   * Replaces a node with a string of markup at its current position within its
	   * parent. The markup must render into a single root node.
	   *
	   * @param {DOMElement} oldChild Child node to replace.
	   * @param {string} markup Markup to render in place of the child node.
	   * @internal
	   */
	  dangerouslyReplaceNodeWithMarkup: function (oldChild, markup) {
	    !ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a ' + 'worker thread. Make sure `window` and `document` are available ' + 'globally before requiring React when unit testing or use ' + 'ReactDOMServer.renderToString() for server rendering.') : invariant(false) : undefined;
	    !markup ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.') : invariant(false) : undefined;
	    !(oldChild.tagName.toLowerCase() !== 'html') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the ' + '<html> node. This is because browser quirks make this unreliable ' + 'and/or slow. If you want to render to the root you must use ' + 'server rendering. See ReactDOMServer.renderToString().') : invariant(false) : undefined;
	
	    var newChild;
	    if (typeof markup === 'string') {
	      newChild = createNodesFromMarkup(markup, emptyFunction)[0];
	    } else {
	      newChild = markup;
	    }
	    oldChild.parentNode.replaceChild(newChild, oldChild);
	  }
	
	};
	
	module.exports = Danger;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 430 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DefaultEventPluginOrder
	 */
	
	'use strict';
	
	var keyOf = __webpack_require__(38);
	
	/**
	 * Module that is injectable into `EventPluginHub`, that specifies a
	 * deterministic ordering of `EventPlugin`s. A convenient way to reason about
	 * plugins, without having to package every one of them. This is better than
	 * having plugins be ordered in the same order that they are injected because
	 * that ordering would be influenced by the packaging order.
	 * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that
	 * preventing default on events is convenient in `SimpleEventPlugin` handlers.
	 */
	var DefaultEventPluginOrder = [keyOf({ ResponderEventPlugin: null }), keyOf({ SimpleEventPlugin: null }), keyOf({ TapEventPlugin: null }), keyOf({ EnterLeaveEventPlugin: null }), keyOf({ ChangeEventPlugin: null }), keyOf({ SelectEventPlugin: null }), keyOf({ BeforeInputEventPlugin: null })];
	
	module.exports = DefaultEventPluginOrder;

/***/ },
/* 431 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EnterLeaveEventPlugin
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var EventConstants = __webpack_require__(34);
	var EventPropagators = __webpack_require__(61);
	var SyntheticMouseEvent = __webpack_require__(74);
	
	var ReactMount = __webpack_require__(13);
	var keyOf = __webpack_require__(38);
	
	var topLevelTypes = EventConstants.topLevelTypes;
	var getFirstReactDOM = ReactMount.getFirstReactDOM;
	
	var eventTypes = {
	  mouseEnter: {
	    registrationName: keyOf({ onMouseEnter: null }),
	    dependencies: [topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]
	  },
	  mouseLeave: {
	    registrationName: keyOf({ onMouseLeave: null }),
	    dependencies: [topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]
	  }
	};
	
	var extractedEvents = [null, null];
	
	var EnterLeaveEventPlugin = {
	
	  eventTypes: eventTypes,
	
	  /**
	   * For almost every interaction we care about, there will be both a top-level
	   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
	   * we do not extract duplicate events. However, moving the mouse into the
	   * browser from outside will not fire a `mouseout` event. In this case, we use
	   * the `mouseover` top-level event.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {DOMEventTarget} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native browser event.
	   * @return {*} An accumulation of synthetic events.
	   * @see {EventPluginHub.extractEvents}
	   */
	  extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
	    if (topLevelType === topLevelTypes.topMouseOver && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
	      return null;
	    }
	    if (topLevelType !== topLevelTypes.topMouseOut && topLevelType !== topLevelTypes.topMouseOver) {
	      // Must not be a mouse in or mouse out - ignoring.
	      return null;
	    }
	
	    var win;
	    if (topLevelTarget.window === topLevelTarget) {
	      // `topLevelTarget` is probably a window object.
	      win = topLevelTarget;
	    } else {
	      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
	      var doc = topLevelTarget.ownerDocument;
	      if (doc) {
	        win = doc.defaultView || doc.parentWindow;
	      } else {
	        win = window;
	      }
	    }
	
	    var from;
	    var to;
	    var fromID = '';
	    var toID = '';
	    if (topLevelType === topLevelTypes.topMouseOut) {
	      from = topLevelTarget;
	      fromID = topLevelTargetID;
	      to = getFirstReactDOM(nativeEvent.relatedTarget || nativeEvent.toElement);
	      if (to) {
	        toID = ReactMount.getID(to);
	      } else {
	        to = win;
	      }
	      to = to || win;
	    } else {
	      from = win;
	      to = topLevelTarget;
	      toID = topLevelTargetID;
	    }
	
	    if (from === to) {
	      // Nothing pertains to our managed components.
	      return null;
	    }
	
	    var leave = SyntheticMouseEvent.getPooled(eventTypes.mouseLeave, fromID, nativeEvent, nativeEventTarget);
	    leave.type = 'mouseleave';
	    leave.target = from;
	    leave.relatedTarget = to;
	
	    var enter = SyntheticMouseEvent.getPooled(eventTypes.mouseEnter, toID, nativeEvent, nativeEventTarget);
	    enter.type = 'mouseenter';
	    enter.target = to;
	    enter.relatedTarget = from;
	
	    EventPropagators.accumulateEnterLeaveDispatches(leave, enter, fromID, toID);
	
	    extractedEvents[0] = leave;
	    extractedEvents[1] = enter;
	
	    return extractedEvents;
	  }
	
	};
	
	module.exports = EnterLeaveEventPlugin;

/***/ },
/* 432 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPluginUtils
	 */
	
	'use strict';
	
	var EventConstants = __webpack_require__(34);
	var ReactErrorUtils = __webpack_require__(165);
	
	var invariant = __webpack_require__(4);
	var warning = __webpack_require__(6);
	
	/**
	 * Injected dependencies:
	 */
	
	/**
	 * - `Mount`: [required] Module that can convert between React dom IDs and
	 *   actual node references.
	 */
	var injection = {
	  Mount: null,
	  injectMount: function (InjectedMount) {
	    injection.Mount = InjectedMount;
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(InjectedMount && InjectedMount.getNode && InjectedMount.getID, 'EventPluginUtils.injection.injectMount(...): Injected Mount ' + 'module is missing getNode or getID.') : undefined;
	    }
	  }
	};
	
	var topLevelTypes = EventConstants.topLevelTypes;
	
	function isEndish(topLevelType) {
	  return topLevelType === topLevelTypes.topMouseUp || topLevelType === topLevelTypes.topTouchEnd || topLevelType === topLevelTypes.topTouchCancel;
	}
	
	function isMoveish(topLevelType) {
	  return topLevelType === topLevelTypes.topMouseMove || topLevelType === topLevelTypes.topTouchMove;
	}
	function isStartish(topLevelType) {
	  return topLevelType === topLevelTypes.topMouseDown || topLevelType === topLevelTypes.topTouchStart;
	}
	
	var validateEventDispatches;
	if (process.env.NODE_ENV !== 'production') {
	  validateEventDispatches = function (event) {
	    var dispatchListeners = event._dispatchListeners;
	    var dispatchIDs = event._dispatchIDs;
	
	    var listenersIsArr = Array.isArray(dispatchListeners);
	    var idsIsArr = Array.isArray(dispatchIDs);
	    var IDsLen = idsIsArr ? dispatchIDs.length : dispatchIDs ? 1 : 0;
	    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;
	
	    process.env.NODE_ENV !== 'production' ? warning(idsIsArr === listenersIsArr && IDsLen === listenersLen, 'EventPluginUtils: Invalid `event`.') : undefined;
	  };
	}
	
	/**
	 * Dispatch the event to the listener.
	 * @param {SyntheticEvent} event SyntheticEvent to handle
	 * @param {boolean} simulated If the event is simulated (changes exn behavior)
	 * @param {function} listener Application-level callback
	 * @param {string} domID DOM id to pass to the callback.
	 */
	function executeDispatch(event, simulated, listener, domID) {
	  var type = event.type || 'unknown-event';
	  event.currentTarget = injection.Mount.getNode(domID);
	  if (simulated) {
	    ReactErrorUtils.invokeGuardedCallbackWithCatch(type, listener, event, domID);
	  } else {
	    ReactErrorUtils.invokeGuardedCallback(type, listener, event, domID);
	  }
	  event.currentTarget = null;
	}
	
	/**
	 * Standard/simple iteration through an event's collected dispatches.
	 */
	function executeDispatchesInOrder(event, simulated) {
	  var dispatchListeners = event._dispatchListeners;
	  var dispatchIDs = event._dispatchIDs;
	  if (process.env.NODE_ENV !== 'production') {
	    validateEventDispatches(event);
	  }
	  if (Array.isArray(dispatchListeners)) {
	    for (var i = 0; i < dispatchListeners.length; i++) {
	      if (event.isPropagationStopped()) {
	        break;
	      }
	      // Listeners and IDs are two parallel arrays that are always in sync.
	      executeDispatch(event, simulated, dispatchListeners[i], dispatchIDs[i]);
	    }
	  } else if (dispatchListeners) {
	    executeDispatch(event, simulated, dispatchListeners, dispatchIDs);
	  }
	  event._dispatchListeners = null;
	  event._dispatchIDs = null;
	}
	
	/**
	 * Standard/simple iteration through an event's collected dispatches, but stops
	 * at the first dispatch execution returning true, and returns that id.
	 *
	 * @return {?string} id of the first dispatch execution who's listener returns
	 * true, or null if no listener returned true.
	 */
	function executeDispatchesInOrderStopAtTrueImpl(event) {
	  var dispatchListeners = event._dispatchListeners;
	  var dispatchIDs = event._dispatchIDs;
	  if (process.env.NODE_ENV !== 'production') {
	    validateEventDispatches(event);
	  }
	  if (Array.isArray(dispatchListeners)) {
	    for (var i = 0; i < dispatchListeners.length; i++) {
	      if (event.isPropagationStopped()) {
	        break;
	      }
	      // Listeners and IDs are two parallel arrays that are always in sync.
	      if (dispatchListeners[i](event, dispatchIDs[i])) {
	        return dispatchIDs[i];
	      }
	    }
	  } else if (dispatchListeners) {
	    if (dispatchListeners(event, dispatchIDs)) {
	      return dispatchIDs;
	    }
	  }
	  return null;
	}
	
	/**
	 * @see executeDispatchesInOrderStopAtTrueImpl
	 */
	function executeDispatchesInOrderStopAtTrue(event) {
	  var ret = executeDispatchesInOrderStopAtTrueImpl(event);
	  event._dispatchIDs = null;
	  event._dispatchListeners = null;
	  return ret;
	}
	
	/**
	 * Execution of a "direct" dispatch - there must be at most one dispatch
	 * accumulated on the event or it is considered an error. It doesn't really make
	 * sense for an event with multiple dispatches (bubbled) to keep track of the
	 * return values at each dispatch execution, but it does tend to make sense when
	 * dealing with "direct" dispatches.
	 *
	 * @return {*} The return value of executing the single dispatch.
	 */
	function executeDirectDispatch(event) {
	  if (process.env.NODE_ENV !== 'production') {
	    validateEventDispatches(event);
	  }
	  var dispatchListener = event._dispatchListeners;
	  var dispatchID = event._dispatchIDs;
	  !!Array.isArray(dispatchListener) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'executeDirectDispatch(...): Invalid `event`.') : invariant(false) : undefined;
	  var res = dispatchListener ? dispatchListener(event, dispatchID) : null;
	  event._dispatchListeners = null;
	  event._dispatchIDs = null;
	  return res;
	}
	
	/**
	 * @param {SyntheticEvent} event
	 * @return {boolean} True iff number of dispatches accumulated is greater than 0.
	 */
	function hasDispatches(event) {
	  return !!event._dispatchListeners;
	}
	
	/**
	 * General utilities that are useful in creating custom Event Plugins.
	 */
	var EventPluginUtils = {
	  isEndish: isEndish,
	  isMoveish: isMoveish,
	  isStartish: isStartish,
	
	  executeDirectDispatch: executeDirectDispatch,
	  executeDispatchesInOrder: executeDispatchesInOrder,
	  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,
	  hasDispatches: hasDispatches,
	
	  getNode: function (id) {
	    return injection.Mount.getNode(id);
	  },
	  getID: function (node) {
	    return injection.Mount.getID(node);
	  },
	
	  injection: injection
	};
	
	module.exports = EventPluginUtils;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 433 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule FallbackCompositionState
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var PooledClass = __webpack_require__(37);
	
	var assign = __webpack_require__(5);
	var getTextContentAccessor = __webpack_require__(176);
	
	/**
	 * This helper class stores information about text content of a target node,
	 * allowing comparison of content before and after a given event.
	 *
	 * Identify the node where selection currently begins, then observe
	 * both its text content and its current position in the DOM. Since the
	 * browser may natively replace the target node during composition, we can
	 * use its position to find its replacement.
	 *
	 * @param {DOMEventTarget} root
	 */
	function FallbackCompositionState(root) {
	  this._root = root;
	  this._startText = this.getText();
	  this._fallbackText = null;
	}
	
	assign(FallbackCompositionState.prototype, {
	  destructor: function () {
	    this._root = null;
	    this._startText = null;
	    this._fallbackText = null;
	  },
	
	  /**
	   * Get current text of input.
	   *
	   * @return {string}
	   */
	  getText: function () {
	    if ('value' in this._root) {
	      return this._root.value;
	    }
	    return this._root[getTextContentAccessor()];
	  },
	
	  /**
	   * Determine the differing substring between the initially stored
	   * text content and the current content.
	   *
	   * @return {string}
	   */
	  getData: function () {
	    if (this._fallbackText) {
	      return this._fallbackText;
	    }
	
	    var start;
	    var startValue = this._startText;
	    var startLength = startValue.length;
	    var end;
	    var endValue = this.getText();
	    var endLength = endValue.length;
	
	    for (start = 0; start < startLength; start++) {
	      if (startValue[start] !== endValue[start]) {
	        break;
	      }
	    }
	
	    var minEnd = startLength - start;
	    for (end = 1; end <= minEnd; end++) {
	      if (startValue[startLength - end] !== endValue[endLength - end]) {
	        break;
	      }
	    }
	
	    var sliceTail = end > 1 ? 1 - end : undefined;
	    this._fallbackText = endValue.slice(start, sliceTail);
	    return this._fallbackText;
	  }
	});
	
	PooledClass.addPoolingTo(FallbackCompositionState);
	
	module.exports = FallbackCompositionState;

/***/ },
/* 434 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule HTMLDOMPropertyConfig
	 */
	
	'use strict';
	
	var DOMProperty = __webpack_require__(42);
	var ExecutionEnvironment = __webpack_require__(10);
	
	var MUST_USE_ATTRIBUTE = DOMProperty.injection.MUST_USE_ATTRIBUTE;
	var MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;
	var HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;
	var HAS_SIDE_EFFECTS = DOMProperty.injection.HAS_SIDE_EFFECTS;
	var HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;
	var HAS_POSITIVE_NUMERIC_VALUE = DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;
	var HAS_OVERLOADED_BOOLEAN_VALUE = DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;
	
	var hasSVG;
	if (ExecutionEnvironment.canUseDOM) {
	  var implementation = document.implementation;
	  hasSVG = implementation && implementation.hasFeature && implementation.hasFeature('http://www.w3.org/TR/SVG11/feature#BasicStructure', '1.1');
	}
	
	var HTMLDOMPropertyConfig = {
	  isCustomAttribute: RegExp.prototype.test.bind(/^(data|aria)-[a-z_][a-z\d_.\-]*$/),
	  Properties: {
	    /**
	     * Standard Properties
	     */
	    accept: null,
	    acceptCharset: null,
	    accessKey: null,
	    action: null,
	    allowFullScreen: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
	    allowTransparency: MUST_USE_ATTRIBUTE,
	    alt: null,
	    async: HAS_BOOLEAN_VALUE,
	    autoComplete: null,
	    // autoFocus is polyfilled/normalized by AutoFocusUtils
	    // autoFocus: HAS_BOOLEAN_VALUE,
	    autoPlay: HAS_BOOLEAN_VALUE,
	    capture: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
	    cellPadding: null,
	    cellSpacing: null,
	    charSet: MUST_USE_ATTRIBUTE,
	    challenge: MUST_USE_ATTRIBUTE,
	    checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    classID: MUST_USE_ATTRIBUTE,
	    // To set className on SVG elements, it's necessary to use .setAttribute;
	    // this works on HTML elements too in all browsers except IE8. Conveniently,
	    // IE8 doesn't support SVG and so we can simply use the attribute in
	    // browsers that support SVG and the property in browsers that don't,
	    // regardless of whether the element is HTML or SVG.
	    className: hasSVG ? MUST_USE_ATTRIBUTE : MUST_USE_PROPERTY,
	    cols: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,
	    colSpan: null,
	    content: null,
	    contentEditable: null,
	    contextMenu: MUST_USE_ATTRIBUTE,
	    controls: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    coords: null,
	    crossOrigin: null,
	    data: null, // For `<object />` acts as `src`.
	    dateTime: MUST_USE_ATTRIBUTE,
	    'default': HAS_BOOLEAN_VALUE,
	    defer: HAS_BOOLEAN_VALUE,
	    dir: null,
	    disabled: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
	    download: HAS_OVERLOADED_BOOLEAN_VALUE,
	    draggable: null,
	    encType: null,
	    form: MUST_USE_ATTRIBUTE,
	    formAction: MUST_USE_ATTRIBUTE,
	    formEncType: MUST_USE_ATTRIBUTE,
	    formMethod: MUST_USE_ATTRIBUTE,
	    formNoValidate: HAS_BOOLEAN_VALUE,
	    formTarget: MUST_USE_ATTRIBUTE,
	    frameBorder: MUST_USE_ATTRIBUTE,
	    headers: null,
	    height: MUST_USE_ATTRIBUTE,
	    hidden: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
	    high: null,
	    href: null,
	    hrefLang: null,
	    htmlFor: null,
	    httpEquiv: null,
	    icon: null,
	    id: MUST_USE_PROPERTY,
	    inputMode: MUST_USE_ATTRIBUTE,
	    integrity: null,
	    is: MUST_USE_ATTRIBUTE,
	    keyParams: MUST_USE_ATTRIBUTE,
	    keyType: MUST_USE_ATTRIBUTE,
	    kind: null,
	    label: null,
	    lang: null,
	    list: MUST_USE_ATTRIBUTE,
	    loop: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    low: null,
	    manifest: MUST_USE_ATTRIBUTE,
	    marginHeight: null,
	    marginWidth: null,
	    max: null,
	    maxLength: MUST_USE_ATTRIBUTE,
	    media: MUST_USE_ATTRIBUTE,
	    mediaGroup: null,
	    method: null,
	    min: null,
	    minLength: MUST_USE_ATTRIBUTE,
	    multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    name: null,
	    nonce: MUST_USE_ATTRIBUTE,
	    noValidate: HAS_BOOLEAN_VALUE,
	    open: HAS_BOOLEAN_VALUE,
	    optimum: null,
	    pattern: null,
	    placeholder: null,
	    poster: null,
	    preload: null,
	    radioGroup: null,
	    readOnly: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    rel: null,
	    required: HAS_BOOLEAN_VALUE,
	    reversed: HAS_BOOLEAN_VALUE,
	    role: MUST_USE_ATTRIBUTE,
	    rows: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,
	    rowSpan: null,
	    sandbox: null,
	    scope: null,
	    scoped: HAS_BOOLEAN_VALUE,
	    scrolling: null,
	    seamless: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
	    selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    shape: null,
	    size: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,
	    sizes: MUST_USE_ATTRIBUTE,
	    span: HAS_POSITIVE_NUMERIC_VALUE,
	    spellCheck: null,
	    src: null,
	    srcDoc: MUST_USE_PROPERTY,
	    srcLang: null,
	    srcSet: MUST_USE_ATTRIBUTE,
	    start: HAS_NUMERIC_VALUE,
	    step: null,
	    style: null,
	    summary: null,
	    tabIndex: null,
	    target: null,
	    title: null,
	    type: null,
	    useMap: null,
	    value: MUST_USE_PROPERTY | HAS_SIDE_EFFECTS,
	    width: MUST_USE_ATTRIBUTE,
	    wmode: MUST_USE_ATTRIBUTE,
	    wrap: null,
	
	    /**
	     * RDFa Properties
	     */
	    about: MUST_USE_ATTRIBUTE,
	    datatype: MUST_USE_ATTRIBUTE,
	    inlist: MUST_USE_ATTRIBUTE,
	    prefix: MUST_USE_ATTRIBUTE,
	    // property is also supported for OpenGraph in meta tags.
	    property: MUST_USE_ATTRIBUTE,
	    resource: MUST_USE_ATTRIBUTE,
	    'typeof': MUST_USE_ATTRIBUTE,
	    vocab: MUST_USE_ATTRIBUTE,
	
	    /**
	     * Non-standard Properties
	     */
	    // autoCapitalize and autoCorrect are supported in Mobile Safari for
	    // keyboard hints.
	    autoCapitalize: MUST_USE_ATTRIBUTE,
	    autoCorrect: MUST_USE_ATTRIBUTE,
	    // autoSave allows WebKit/Blink to persist values of input fields on page reloads
	    autoSave: null,
	    // color is for Safari mask-icon link
	    color: null,
	    // itemProp, itemScope, itemType are for
	    // Microdata support. See http://schema.org/docs/gs.html
	    itemProp: MUST_USE_ATTRIBUTE,
	    itemScope: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
	    itemType: MUST_USE_ATTRIBUTE,
	    // itemID and itemRef are for Microdata support as well but
	    // only specified in the the WHATWG spec document. See
	    // https://html.spec.whatwg.org/multipage/microdata.html#microdata-dom-api
	    itemID: MUST_USE_ATTRIBUTE,
	    itemRef: MUST_USE_ATTRIBUTE,
	    // results show looking glass icon and recent searches on input
	    // search fields in WebKit/Blink
	    results: null,
	    // IE-only attribute that specifies security restrictions on an iframe
	    // as an alternative to the sandbox attribute on IE<10
	    security: MUST_USE_ATTRIBUTE,
	    // IE-only attribute that controls focus behavior
	    unselectable: MUST_USE_ATTRIBUTE
	  },
	  DOMAttributeNames: {
	    acceptCharset: 'accept-charset',
	    className: 'class',
	    htmlFor: 'for',
	    httpEquiv: 'http-equiv'
	  },
	  DOMPropertyNames: {
	    autoComplete: 'autocomplete',
	    autoFocus: 'autofocus',
	    autoPlay: 'autoplay',
	    autoSave: 'autosave',
	    // `encoding` is equivalent to `enctype`, IE8 lacks an `enctype` setter.
	    // http://www.w3.org/TR/html5/forms.html#dom-fs-encoding
	    encType: 'encoding',
	    hrefLang: 'hreflang',
	    radioGroup: 'radiogroup',
	    spellCheck: 'spellcheck',
	    srcDoc: 'srcdoc',
	    srcSet: 'srcset'
	  }
	};
	
	module.exports = HTMLDOMPropertyConfig;

/***/ },
/* 435 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule React
	 */
	
	'use strict';
	
	var ReactDOM = __webpack_require__(156);
	var ReactDOMServer = __webpack_require__(445);
	var ReactIsomorphic = __webpack_require__(452);
	
	var assign = __webpack_require__(5);
	var deprecated = __webpack_require__(474);
	
	// `version` will be added here by ReactIsomorphic.
	var React = {};
	
	assign(React, ReactIsomorphic);
	
	assign(React, {
	  // ReactDOM
	  findDOMNode: deprecated('findDOMNode', 'ReactDOM', 'react-dom', ReactDOM, ReactDOM.findDOMNode),
	  render: deprecated('render', 'ReactDOM', 'react-dom', ReactDOM, ReactDOM.render),
	  unmountComponentAtNode: deprecated('unmountComponentAtNode', 'ReactDOM', 'react-dom', ReactDOM, ReactDOM.unmountComponentAtNode),
	
	  // ReactDOMServer
	  renderToString: deprecated('renderToString', 'ReactDOMServer', 'react-dom/server', ReactDOMServer, ReactDOMServer.renderToString),
	  renderToStaticMarkup: deprecated('renderToStaticMarkup', 'ReactDOMServer', 'react-dom/server', ReactDOMServer, ReactDOMServer.renderToStaticMarkup)
	});
	
	React.__SECRET_DOM_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactDOM;
	React.__SECRET_DOM_SERVER_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactDOMServer;
	
	module.exports = React;

/***/ },
/* 436 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactBrowserComponentMixin
	 */
	
	'use strict';
	
	var ReactInstanceMap = __webpack_require__(62);
	
	var findDOMNode = __webpack_require__(109);
	var warning = __webpack_require__(6);
	
	var didWarnKey = '_getDOMNodeDidWarn';
	
	var ReactBrowserComponentMixin = {
	  /**
	   * Returns the DOM node rendered by this component.
	   *
	   * @return {DOMElement} The root node of this component.
	   * @final
	   * @protected
	   */
	  getDOMNode: function () {
	    process.env.NODE_ENV !== 'production' ? warning(this.constructor[didWarnKey], '%s.getDOMNode(...) is deprecated. Please use ' + 'ReactDOM.findDOMNode(instance) instead.', ReactInstanceMap.get(this).getName() || this.tagName || 'Unknown') : undefined;
	    this.constructor[didWarnKey] = true;
	    return findDOMNode(this);
	  }
	};
	
	module.exports = ReactBrowserComponentMixin;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 437 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactChildReconciler
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var ReactReconciler = __webpack_require__(43);
	
	var instantiateReactComponent = __webpack_require__(114);
	var shouldUpdateReactComponent = __webpack_require__(117);
	var traverseAllChildren = __webpack_require__(118);
	var warning = __webpack_require__(6);
	
	function instantiateChild(childInstances, child, name) {
	  // We found a component instance.
	  var keyUnique = childInstances[name] === undefined;
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(keyUnique, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.', name) : undefined;
	  }
	  if (child != null && keyUnique) {
	    childInstances[name] = instantiateReactComponent(child, null);
	  }
	}
	
	/**
	 * ReactChildReconciler provides helpers for initializing or updating a set of
	 * children. Its output is suitable for passing it onto ReactMultiChild which
	 * does diffed reordering and insertion.
	 */
	var ReactChildReconciler = {
	  /**
	   * Generates a "mount image" for each of the supplied children. In the case
	   * of `ReactDOMComponent`, a mount image is a string of markup.
	   *
	   * @param {?object} nestedChildNodes Nested child maps.
	   * @return {?object} A set of child instances.
	   * @internal
	   */
	  instantiateChildren: function (nestedChildNodes, transaction, context) {
	    if (nestedChildNodes == null) {
	      return null;
	    }
	    var childInstances = {};
	    traverseAllChildren(nestedChildNodes, instantiateChild, childInstances);
	    return childInstances;
	  },
	
	  /**
	   * Updates the rendered children and returns a new set of children.
	   *
	   * @param {?object} prevChildren Previously initialized set of children.
	   * @param {?object} nextChildren Flat child element maps.
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   * @return {?object} A new set of child instances.
	   * @internal
	   */
	  updateChildren: function (prevChildren, nextChildren, transaction, context) {
	    // We currently don't have a way to track moves here but if we use iterators
	    // instead of for..in we can zip the iterators and check if an item has
	    // moved.
	    // TODO: If nothing has changed, return the prevChildren object so that we
	    // can quickly bailout if nothing has changed.
	    if (!nextChildren && !prevChildren) {
	      return null;
	    }
	    var name;
	    for (name in nextChildren) {
	      if (!nextChildren.hasOwnProperty(name)) {
	        continue;
	      }
	      var prevChild = prevChildren && prevChildren[name];
	      var prevElement = prevChild && prevChild._currentElement;
	      var nextElement = nextChildren[name];
	      if (prevChild != null && shouldUpdateReactComponent(prevElement, nextElement)) {
	        ReactReconciler.receiveComponent(prevChild, nextElement, transaction, context);
	        nextChildren[name] = prevChild;
	      } else {
	        if (prevChild) {
	          ReactReconciler.unmountComponent(prevChild, name);
	        }
	        // The child must be instantiated before it's mounted.
	        var nextChildInstance = instantiateReactComponent(nextElement, null);
	        nextChildren[name] = nextChildInstance;
	      }
	    }
	    // Unmount children that are no longer present.
	    for (name in prevChildren) {
	      if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {
	        ReactReconciler.unmountComponent(prevChildren[name]);
	      }
	    }
	    return nextChildren;
	  },
	
	  /**
	   * Unmounts all rendered children. This should be used to clean up children
	   * when this component is unmounted.
	   *
	   * @param {?object} renderedChildren Previously initialized set of children.
	   * @internal
	   */
	  unmountChildren: function (renderedChildren) {
	    for (var name in renderedChildren) {
	      if (renderedChildren.hasOwnProperty(name)) {
	        var renderedChild = renderedChildren[name];
	        ReactReconciler.unmountComponent(renderedChild);
	      }
	    }
	  }
	
	};
	
	module.exports = ReactChildReconciler;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 438 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactCompositeComponent
	 */
	
	'use strict';
	
	var ReactComponentEnvironment = __webpack_require__(105);
	var ReactCurrentOwner = __webpack_require__(35);
	var ReactElement = __webpack_require__(18);
	var ReactInstanceMap = __webpack_require__(62);
	var ReactPerf = __webpack_require__(22);
	var ReactPropTypeLocations = __webpack_require__(73);
	var ReactPropTypeLocationNames = __webpack_require__(72);
	var ReactReconciler = __webpack_require__(43);
	var ReactUpdateQueue = __webpack_require__(107);
	
	var assign = __webpack_require__(5);
	var emptyObject = __webpack_require__(64);
	var invariant = __webpack_require__(4);
	var shouldUpdateReactComponent = __webpack_require__(117);
	var warning = __webpack_require__(6);
	
	function getDeclarationErrorAddendum(component) {
	  var owner = component._currentElement._owner || null;
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}
	
	function StatelessComponent(Component) {}
	StatelessComponent.prototype.render = function () {
	  var Component = ReactInstanceMap.get(this)._currentElement.type;
	  return Component(this.props, this.context, this.updater);
	};
	
	/**
	 * ------------------ The Life-Cycle of a Composite Component ------------------
	 *
	 * - constructor: Initialization of state. The instance is now retained.
	 *   - componentWillMount
	 *   - render
	 *   - [children's constructors]
	 *     - [children's componentWillMount and render]
	 *     - [children's componentDidMount]
	 *     - componentDidMount
	 *
	 *       Update Phases:
	 *       - componentWillReceiveProps (only called if parent updated)
	 *       - shouldComponentUpdate
	 *         - componentWillUpdate
	 *           - render
	 *           - [children's constructors or receive props phases]
	 *         - componentDidUpdate
	 *
	 *     - componentWillUnmount
	 *     - [children's componentWillUnmount]
	 *   - [children destroyed]
	 * - (destroyed): The instance is now blank, released by React and ready for GC.
	 *
	 * -----------------------------------------------------------------------------
	 */
	
	/**
	 * An incrementing ID assigned to each component when it is mounted. This is
	 * used to enforce the order in which `ReactUpdates` updates dirty components.
	 *
	 * @private
	 */
	var nextMountID = 1;
	
	/**
	 * @lends {ReactCompositeComponent.prototype}
	 */
	var ReactCompositeComponentMixin = {
	
	  /**
	   * Base constructor for all composite component.
	   *
	   * @param {ReactElement} element
	   * @final
	   * @internal
	   */
	  construct: function (element) {
	    this._currentElement = element;
	    this._rootNodeID = null;
	    this._instance = null;
	
	    // See ReactUpdateQueue
	    this._pendingElement = null;
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;
	
	    this._renderedComponent = null;
	
	    this._context = null;
	    this._mountOrder = 0;
	    this._topLevelWrapper = null;
	
	    // See ReactUpdates and ReactUpdateQueue.
	    this._pendingCallbacks = null;
	  },
	
	  /**
	   * Initializes the component, renders markup, and registers event listeners.
	   *
	   * @param {string} rootID DOM ID of the root node.
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @return {?string} Rendered markup to be inserted into the DOM.
	   * @final
	   * @internal
	   */
	  mountComponent: function (rootID, transaction, context) {
	    this._context = context;
	    this._mountOrder = nextMountID++;
	    this._rootNodeID = rootID;
	
	    var publicProps = this._processProps(this._currentElement.props);
	    var publicContext = this._processContext(context);
	
	    var Component = this._currentElement.type;
	
	    // Initialize the public class
	    var inst;
	    var renderedElement;
	
	    // This is a way to detect if Component is a stateless arrow function
	    // component, which is not newable. It might not be 100% reliable but is
	    // something we can do until we start detecting that Component extends
	    // React.Component. We already assume that typeof Component === 'function'.
	    var canInstantiate = ('prototype' in Component);
	
	    if (canInstantiate) {
	      if (process.env.NODE_ENV !== 'production') {
	        ReactCurrentOwner.current = this;
	        try {
	          inst = new Component(publicProps, publicContext, ReactUpdateQueue);
	        } finally {
	          ReactCurrentOwner.current = null;
	        }
	      } else {
	        inst = new Component(publicProps, publicContext, ReactUpdateQueue);
	      }
	    }
	
	    if (!canInstantiate || inst === null || inst === false || ReactElement.isValidElement(inst)) {
	      renderedElement = inst;
	      inst = new StatelessComponent(Component);
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      // This will throw later in _renderValidatedComponent, but add an early
	      // warning now to help debugging
	      if (inst.render == null) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`, returned ' + 'null/false from a stateless component, or tried to render an ' + 'element whose type is a function that isn\'t a React component.', Component.displayName || Component.name || 'Component') : undefined;
	      } else {
	        // We support ES6 inheriting from React.Component, the module pattern,
	        // and stateless components, but not ES6 classes that don't extend
	        process.env.NODE_ENV !== 'production' ? warning(Component.prototype && Component.prototype.isReactComponent || !canInstantiate || !(inst instanceof Component), '%s(...): React component classes must extend React.Component.', Component.displayName || Component.name || 'Component') : undefined;
	      }
	    }
	
	    // These should be set up in the constructor, but as a convenience for
	    // simpler class abstractions, we set them up after the fact.
	    inst.props = publicProps;
	    inst.context = publicContext;
	    inst.refs = emptyObject;
	    inst.updater = ReactUpdateQueue;
	
	    this._instance = inst;
	
	    // Store a reference from the instance back to the internal representation
	    ReactInstanceMap.set(inst, this);
	
	    if (process.env.NODE_ENV !== 'production') {
	      // Since plain JS classes are defined without any special initialization
	      // logic, we can not catch common errors early. Therefore, we have to
	      // catch them here, at initialization time, instead.
	      process.env.NODE_ENV !== 'production' ? warning(!inst.getInitialState || inst.getInitialState.isReactClassApproved, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', this.getName() || 'a component') : undefined;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.getDefaultProps || inst.getDefaultProps.isReactClassApproved, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', this.getName() || 'a component') : undefined;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.propTypes, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', this.getName() || 'a component') : undefined;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.contextTypes, 'contextTypes was defined as an instance property on %s. Use a ' + 'static property to define contextTypes instead.', this.getName() || 'a component') : undefined;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentShouldUpdate !== 'function', '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', this.getName() || 'A component') : undefined;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentDidUnmount !== 'function', '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', this.getName() || 'A component') : undefined;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentWillRecieveProps !== 'function', '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', this.getName() || 'A component') : undefined;
	    }
	
	    var initialState = inst.state;
	    if (initialState === undefined) {
	      inst.state = initialState = null;
	    }
	    !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.state: must be set to an object or null', this.getName() || 'ReactCompositeComponent') : invariant(false) : undefined;
	
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;
	
	    if (inst.componentWillMount) {
	      inst.componentWillMount();
	      // When mounting, calls to `setState` by `componentWillMount` will set
	      // `this._pendingStateQueue` without triggering a re-render.
	      if (this._pendingStateQueue) {
	        inst.state = this._processPendingState(inst.props, inst.context);
	      }
	    }
	
	    // If not a stateless component, we now render
	    if (renderedElement === undefined) {
	      renderedElement = this._renderValidatedComponent();
	    }
	
	    this._renderedComponent = this._instantiateReactComponent(renderedElement);
	
	    var markup = ReactReconciler.mountComponent(this._renderedComponent, rootID, transaction, this._processChildContext(context));
	    if (inst.componentDidMount) {
	      transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);
	    }
	
	    return markup;
	  },
	
	  /**
	   * Releases any resources allocated by `mountComponent`.
	   *
	   * @final
	   * @internal
	   */
	  unmountComponent: function () {
	    var inst = this._instance;
	
	    if (inst.componentWillUnmount) {
	      inst.componentWillUnmount();
	    }
	
	    ReactReconciler.unmountComponent(this._renderedComponent);
	    this._renderedComponent = null;
	    this._instance = null;
	
	    // Reset pending fields
	    // Even if this component is scheduled for another update in ReactUpdates,
	    // it would still be ignored because these fields are reset.
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;
	    this._pendingCallbacks = null;
	    this._pendingElement = null;
	
	    // These fields do not really need to be reset since this object is no
	    // longer accessible.
	    this._context = null;
	    this._rootNodeID = null;
	    this._topLevelWrapper = null;
	
	    // Delete the reference from the instance to this internal representation
	    // which allow the internals to be properly cleaned up even if the user
	    // leaks a reference to the public instance.
	    ReactInstanceMap.remove(inst);
	
	    // Some existing components rely on inst.props even after they've been
	    // destroyed (in event handlers).
	    // TODO: inst.props = null;
	    // TODO: inst.state = null;
	    // TODO: inst.context = null;
	  },
	
	  /**
	   * Filters the context object to only contain keys specified in
	   * `contextTypes`
	   *
	   * @param {object} context
	   * @return {?object}
	   * @private
	   */
	  _maskContext: function (context) {
	    var maskedContext = null;
	    var Component = this._currentElement.type;
	    var contextTypes = Component.contextTypes;
	    if (!contextTypes) {
	      return emptyObject;
	    }
	    maskedContext = {};
	    for (var contextName in contextTypes) {
	      maskedContext[contextName] = context[contextName];
	    }
	    return maskedContext;
	  },
	
	  /**
	   * Filters the context object to only contain keys specified in
	   * `contextTypes`, and asserts that they are valid.
	   *
	   * @param {object} context
	   * @return {?object}
	   * @private
	   */
	  _processContext: function (context) {
	    var maskedContext = this._maskContext(context);
	    if (process.env.NODE_ENV !== 'production') {
	      var Component = this._currentElement.type;
	      if (Component.contextTypes) {
	        this._checkPropTypes(Component.contextTypes, maskedContext, ReactPropTypeLocations.context);
	      }
	    }
	    return maskedContext;
	  },
	
	  /**
	   * @param {object} currentContext
	   * @return {object}
	   * @private
	   */
	  _processChildContext: function (currentContext) {
	    var Component = this._currentElement.type;
	    var inst = this._instance;
	    var childContext = inst.getChildContext && inst.getChildContext();
	    if (childContext) {
	      !(typeof Component.childContextTypes === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): childContextTypes must be defined in order to ' + 'use getChildContext().', this.getName() || 'ReactCompositeComponent') : invariant(false) : undefined;
	      if (process.env.NODE_ENV !== 'production') {
	        this._checkPropTypes(Component.childContextTypes, childContext, ReactPropTypeLocations.childContext);
	      }
	      for (var name in childContext) {
	        !(name in Component.childContextTypes) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): key "%s" is not defined in childContextTypes.', this.getName() || 'ReactCompositeComponent', name) : invariant(false) : undefined;
	      }
	      return assign({}, currentContext, childContext);
	    }
	    return currentContext;
	  },
	
	  /**
	   * Processes props by setting default values for unspecified props and
	   * asserting that the props are valid. Does not mutate its argument; returns
	   * a new props object with defaults merged in.
	   *
	   * @param {object} newProps
	   * @return {object}
	   * @private
	   */
	  _processProps: function (newProps) {
	    if (process.env.NODE_ENV !== 'production') {
	      var Component = this._currentElement.type;
	      if (Component.propTypes) {
	        this._checkPropTypes(Component.propTypes, newProps, ReactPropTypeLocations.prop);
	      }
	    }
	    return newProps;
	  },
	
	  /**
	   * Assert that the props are valid
	   *
	   * @param {object} propTypes Map of prop name to a ReactPropType
	   * @param {object} props
	   * @param {string} location e.g. "prop", "context", "child context"
	   * @private
	   */
	  _checkPropTypes: function (propTypes, props, location) {
	    // TODO: Stop validating prop types here and only use the element
	    // validation.
	    var componentName = this.getName();
	    for (var propName in propTypes) {
	      if (propTypes.hasOwnProperty(propName)) {
	        var error;
	        try {
	          // This is intentionally an invariant that gets caught. It's the same
	          // behavior as without this statement except with a better message.
	          !(typeof propTypes[propName] === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually ' + 'from React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], propName) : invariant(false) : undefined;
	          error = propTypes[propName](props, propName, componentName, location);
	        } catch (ex) {
	          error = ex;
	        }
	        if (error instanceof Error) {
	          // We may want to extend this logic for similar errors in
	          // top-level render calls, so I'm abstracting it away into
	          // a function to minimize refactoring in the future
	          var addendum = getDeclarationErrorAddendum(this);
	
	          if (location === ReactPropTypeLocations.prop) {
	            // Preface gives us something to blacklist in warning module
	            process.env.NODE_ENV !== 'production' ? warning(false, 'Failed Composite propType: %s%s', error.message, addendum) : undefined;
	          } else {
	            process.env.NODE_ENV !== 'production' ? warning(false, 'Failed Context Types: %s%s', error.message, addendum) : undefined;
	          }
	        }
	      }
	    }
	  },
	
	  receiveComponent: function (nextElement, transaction, nextContext) {
	    var prevElement = this._currentElement;
	    var prevContext = this._context;
	
	    this._pendingElement = null;
	
	    this.updateComponent(transaction, prevElement, nextElement, prevContext, nextContext);
	  },
	
	  /**
	   * If any of `_pendingElement`, `_pendingStateQueue`, or `_pendingForceUpdate`
	   * is set, update the component.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  performUpdateIfNecessary: function (transaction) {
	    if (this._pendingElement != null) {
	      ReactReconciler.receiveComponent(this, this._pendingElement || this._currentElement, transaction, this._context);
	    }
	
	    if (this._pendingStateQueue !== null || this._pendingForceUpdate) {
	      this.updateComponent(transaction, this._currentElement, this._currentElement, this._context, this._context);
	    }
	  },
	
	  /**
	   * Perform an update to a mounted component. The componentWillReceiveProps and
	   * shouldComponentUpdate methods are called, then (assuming the update isn't
	   * skipped) the remaining update lifecycle methods are called and the DOM
	   * representation is updated.
	   *
	   * By default, this implements React's rendering and reconciliation algorithm.
	   * Sophisticated clients may wish to override this.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @param {ReactElement} prevParentElement
	   * @param {ReactElement} nextParentElement
	   * @internal
	   * @overridable
	   */
	  updateComponent: function (transaction, prevParentElement, nextParentElement, prevUnmaskedContext, nextUnmaskedContext) {
	    var inst = this._instance;
	
	    var nextContext = this._context === nextUnmaskedContext ? inst.context : this._processContext(nextUnmaskedContext);
	    var nextProps;
	
	    // Distinguish between a props update versus a simple state update
	    if (prevParentElement === nextParentElement) {
	      // Skip checking prop types again -- we don't read inst.props to avoid
	      // warning for DOM component props in this upgrade
	      nextProps = nextParentElement.props;
	    } else {
	      nextProps = this._processProps(nextParentElement.props);
	      // An update here will schedule an update but immediately set
	      // _pendingStateQueue which will ensure that any state updates gets
	      // immediately reconciled instead of waiting for the next batch.
	
	      if (inst.componentWillReceiveProps) {
	        inst.componentWillReceiveProps(nextProps, nextContext);
	      }
	    }
	
	    var nextState = this._processPendingState(nextProps, nextContext);
	
	    var shouldUpdate = this._pendingForceUpdate || !inst.shouldComponentUpdate || inst.shouldComponentUpdate(nextProps, nextState, nextContext);
	
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(typeof shouldUpdate !== 'undefined', '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', this.getName() || 'ReactCompositeComponent') : undefined;
	    }
	
	    if (shouldUpdate) {
	      this._pendingForceUpdate = false;
	      // Will set `this.props`, `this.state` and `this.context`.
	      this._performComponentUpdate(nextParentElement, nextProps, nextState, nextContext, transaction, nextUnmaskedContext);
	    } else {
	      // If it's determined that a component should not update, we still want
	      // to set props and state but we shortcut the rest of the update.
	      this._currentElement = nextParentElement;
	      this._context = nextUnmaskedContext;
	      inst.props = nextProps;
	      inst.state = nextState;
	      inst.context = nextContext;
	    }
	  },
	
	  _processPendingState: function (props, context) {
	    var inst = this._instance;
	    var queue = this._pendingStateQueue;
	    var replace = this._pendingReplaceState;
	    this._pendingReplaceState = false;
	    this._pendingStateQueue = null;
	
	    if (!queue) {
	      return inst.state;
	    }
	
	    if (replace && queue.length === 1) {
	      return queue[0];
	    }
	
	    var nextState = assign({}, replace ? queue[0] : inst.state);
	    for (var i = replace ? 1 : 0; i < queue.length; i++) {
	      var partial = queue[i];
	      assign(nextState, typeof partial === 'function' ? partial.call(inst, nextState, props, context) : partial);
	    }
	
	    return nextState;
	  },
	
	  /**
	   * Merges new props and state, notifies delegate methods of update and
	   * performs update.
	   *
	   * @param {ReactElement} nextElement Next element
	   * @param {object} nextProps Next public object to set as properties.
	   * @param {?object} nextState Next object to set as state.
	   * @param {?object} nextContext Next public object to set as context.
	   * @param {ReactReconcileTransaction} transaction
	   * @param {?object} unmaskedContext
	   * @private
	   */
	  _performComponentUpdate: function (nextElement, nextProps, nextState, nextContext, transaction, unmaskedContext) {
	    var inst = this._instance;
	
	    var hasComponentDidUpdate = Boolean(inst.componentDidUpdate);
	    var prevProps;
	    var prevState;
	    var prevContext;
	    if (hasComponentDidUpdate) {
	      prevProps = inst.props;
	      prevState = inst.state;
	      prevContext = inst.context;
	    }
	
	    if (inst.componentWillUpdate) {
	      inst.componentWillUpdate(nextProps, nextState, nextContext);
	    }
	
	    this._currentElement = nextElement;
	    this._context = unmaskedContext;
	    inst.props = nextProps;
	    inst.state = nextState;
	    inst.context = nextContext;
	
	    this._updateRenderedComponent(transaction, unmaskedContext);
	
	    if (hasComponentDidUpdate) {
	      transaction.getReactMountReady().enqueue(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), inst);
	    }
	  },
	
	  /**
	   * Call the component's `render` method and update the DOM accordingly.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  _updateRenderedComponent: function (transaction, context) {
	    var prevComponentInstance = this._renderedComponent;
	    var prevRenderedElement = prevComponentInstance._currentElement;
	    var nextRenderedElement = this._renderValidatedComponent();
	    if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {
	      ReactReconciler.receiveComponent(prevComponentInstance, nextRenderedElement, transaction, this._processChildContext(context));
	    } else {
	      // These two IDs are actually the same! But nothing should rely on that.
	      var thisID = this._rootNodeID;
	      var prevComponentID = prevComponentInstance._rootNodeID;
	      ReactReconciler.unmountComponent(prevComponentInstance);
	
	      this._renderedComponent = this._instantiateReactComponent(nextRenderedElement);
	      var nextMarkup = ReactReconciler.mountComponent(this._renderedComponent, thisID, transaction, this._processChildContext(context));
	      this._replaceNodeWithMarkupByID(prevComponentID, nextMarkup);
	    }
	  },
	
	  /**
	   * @protected
	   */
	  _replaceNodeWithMarkupByID: function (prevComponentID, nextMarkup) {
	    ReactComponentEnvironment.replaceNodeWithMarkupByID(prevComponentID, nextMarkup);
	  },
	
	  /**
	   * @protected
	   */
	  _renderValidatedComponentWithoutOwnerOrContext: function () {
	    var inst = this._instance;
	    var renderedComponent = inst.render();
	    if (process.env.NODE_ENV !== 'production') {
	      // We allow auto-mocks to proceed as if they're returning null.
	      if (typeof renderedComponent === 'undefined' && inst.render._isMockFunction) {
	        // This is probably bad practice. Consider warning here and
	        // deprecating this convenience.
	        renderedComponent = null;
	      }
	    }
	
	    return renderedComponent;
	  },
	
	  /**
	   * @private
	   */
	  _renderValidatedComponent: function () {
	    var renderedComponent;
	    ReactCurrentOwner.current = this;
	    try {
	      renderedComponent = this._renderValidatedComponentWithoutOwnerOrContext();
	    } finally {
	      ReactCurrentOwner.current = null;
	    }
	    !(
	    // TODO: An `isValidNode` function would probably be more appropriate
	    renderedComponent === null || renderedComponent === false || ReactElement.isValidElement(renderedComponent)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.render(): A valid ReactComponent must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', this.getName() || 'ReactCompositeComponent') : invariant(false) : undefined;
	    return renderedComponent;
	  },
	
	  /**
	   * Lazily allocates the refs object and stores `component` as `ref`.
	   *
	   * @param {string} ref Reference name.
	   * @param {component} component Component to store as `ref`.
	   * @final
	   * @private
	   */
	  attachRef: function (ref, component) {
	    var inst = this.getPublicInstance();
	    !(inst != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Stateless function components cannot have refs.') : invariant(false) : undefined;
	    var publicComponentInstance = component.getPublicInstance();
	    if (process.env.NODE_ENV !== 'production') {
	      var componentName = component && component.getName ? component.getName() : 'a component';
	      process.env.NODE_ENV !== 'production' ? warning(publicComponentInstance != null, 'Stateless function components cannot be given refs ' + '(See ref "%s" in %s created by %s). ' + 'Attempts to access this ref will fail.', ref, componentName, this.getName()) : undefined;
	    }
	    var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;
	    refs[ref] = publicComponentInstance;
	  },
	
	  /**
	   * Detaches a reference name.
	   *
	   * @param {string} ref Name to dereference.
	   * @final
	   * @private
	   */
	  detachRef: function (ref) {
	    var refs = this.getPublicInstance().refs;
	    delete refs[ref];
	  },
	
	  /**
	   * Get a text description of the component that can be used to identify it
	   * in error messages.
	   * @return {string} The name or null.
	   * @internal
	   */
	  getName: function () {
	    var type = this._currentElement.type;
	    var constructor = this._instance && this._instance.constructor;
	    return type.displayName || constructor && constructor.displayName || type.name || constructor && constructor.name || null;
	  },
	
	  /**
	   * Get the publicly accessible representation of this component - i.e. what
	   * is exposed by refs and returned by render. Can be null for stateless
	   * components.
	   *
	   * @return {ReactComponent} the public component instance.
	   * @internal
	   */
	  getPublicInstance: function () {
	    var inst = this._instance;
	    if (inst instanceof StatelessComponent) {
	      return null;
	    }
	    return inst;
	  },
	
	  // Stub
	  _instantiateReactComponent: null
	
	};
	
	ReactPerf.measureMethods(ReactCompositeComponentMixin, 'ReactCompositeComponent', {
	  mountComponent: 'mountComponent',
	  updateComponent: 'updateComponent',
	  _renderValidatedComponent: '_renderValidatedComponent'
	});
	
	var ReactCompositeComponent = {
	
	  Mixin: ReactCompositeComponentMixin
	
	};
	
	module.exports = ReactCompositeComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 439 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMButton
	 */
	
	'use strict';
	
	var mouseListenerNames = {
	  onClick: true,
	  onDoubleClick: true,
	  onMouseDown: true,
	  onMouseMove: true,
	  onMouseUp: true,
	
	  onClickCapture: true,
	  onDoubleClickCapture: true,
	  onMouseDownCapture: true,
	  onMouseMoveCapture: true,
	  onMouseUpCapture: true
	};
	
	/**
	 * Implements a <button> native component that does not receive mouse events
	 * when `disabled` is set.
	 */
	var ReactDOMButton = {
	  getNativeProps: function (inst, props, context) {
	    if (!props.disabled) {
	      return props;
	    }
	
	    // Copy the props, except the mouse listeners
	    var nativeProps = {};
	    for (var key in props) {
	      if (props.hasOwnProperty(key) && !mouseListenerNames[key]) {
	        nativeProps[key] = props[key];
	      }
	    }
	
	    return nativeProps;
	  }
	};
	
	module.exports = ReactDOMButton;

/***/ },
/* 440 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMComponent
	 * @typechecks static-only
	 */
	
	/* global hasOwnProperty:true */
	
	'use strict';
	
	var AutoFocusUtils = __webpack_require__(424);
	var CSSPropertyOperations = __webpack_require__(426);
	var DOMProperty = __webpack_require__(42);
	var DOMPropertyOperations = __webpack_require__(102);
	var EventConstants = __webpack_require__(34);
	var ReactBrowserEventEmitter = __webpack_require__(71);
	var ReactComponentBrowserEnvironment = __webpack_require__(104);
	var ReactDOMButton = __webpack_require__(439);
	var ReactDOMInput = __webpack_require__(442);
	var ReactDOMOption = __webpack_require__(443);
	var ReactDOMSelect = __webpack_require__(158);
	var ReactDOMTextarea = __webpack_require__(446);
	var ReactMount = __webpack_require__(13);
	var ReactMultiChild = __webpack_require__(453);
	var ReactPerf = __webpack_require__(22);
	var ReactUpdateQueue = __webpack_require__(107);
	
	var assign = __webpack_require__(5);
	var canDefineProperty = __webpack_require__(76);
	var escapeTextContentForBrowser = __webpack_require__(77);
	var invariant = __webpack_require__(4);
	var isEventSupported = __webpack_require__(115);
	var keyOf = __webpack_require__(38);
	var setInnerHTML = __webpack_require__(78);
	var setTextContent = __webpack_require__(116);
	var shallowEqual = __webpack_require__(183);
	var validateDOMNesting = __webpack_require__(119);
	var warning = __webpack_require__(6);
	
	var deleteListener = ReactBrowserEventEmitter.deleteListener;
	var listenTo = ReactBrowserEventEmitter.listenTo;
	var registrationNameModules = ReactBrowserEventEmitter.registrationNameModules;
	
	// For quickly matching children type, to test if can be treated as content.
	var CONTENT_TYPES = { 'string': true, 'number': true };
	
	var CHILDREN = keyOf({ children: null });
	var STYLE = keyOf({ style: null });
	var HTML = keyOf({ __html: null });
	
	var ELEMENT_NODE_TYPE = 1;
	
	function getDeclarationErrorAddendum(internalInstance) {
	  if (internalInstance) {
	    var owner = internalInstance._currentElement._owner || null;
	    if (owner) {
	      var name = owner.getName();
	      if (name) {
	        return ' This DOM node was rendered by `' + name + '`.';
	      }
	    }
	  }
	  return '';
	}
	
	var legacyPropsDescriptor;
	if (process.env.NODE_ENV !== 'production') {
	  legacyPropsDescriptor = {
	    props: {
	      enumerable: false,
	      get: function () {
	        var component = this._reactInternalComponent;
	        process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .props of a DOM node; instead, ' + 'recreate the props as `render` did originally or read the DOM ' + 'properties/attributes directly from this node (e.g., ' + 'this.refs.box.className).%s', getDeclarationErrorAddendum(component)) : undefined;
	        return component._currentElement.props;
	      }
	    }
	  };
	}
	
	function legacyGetDOMNode() {
	  if (process.env.NODE_ENV !== 'production') {
	    var component = this._reactInternalComponent;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .getDOMNode() of a DOM node; ' + 'instead, use the node directly.%s', getDeclarationErrorAddendum(component)) : undefined;
	  }
	  return this;
	}
	
	function legacyIsMounted() {
	  var component = this._reactInternalComponent;
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .isMounted() of a DOM node.%s', getDeclarationErrorAddendum(component)) : undefined;
	  }
	  return !!component;
	}
	
	function legacySetStateEtc() {
	  if (process.env.NODE_ENV !== 'production') {
	    var component = this._reactInternalComponent;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .setState(), .replaceState(), or ' + '.forceUpdate() of a DOM node. This is a no-op.%s', getDeclarationErrorAddendum(component)) : undefined;
	  }
	}
	
	function legacySetProps(partialProps, callback) {
	  var component = this._reactInternalComponent;
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .setProps() of a DOM node. ' + 'Instead, call ReactDOM.render again at the top level.%s', getDeclarationErrorAddendum(component)) : undefined;
	  }
	  if (!component) {
	    return;
	  }
	  ReactUpdateQueue.enqueueSetPropsInternal(component, partialProps);
	  if (callback) {
	    ReactUpdateQueue.enqueueCallbackInternal(component, callback);
	  }
	}
	
	function legacyReplaceProps(partialProps, callback) {
	  var component = this._reactInternalComponent;
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .replaceProps() of a DOM node. ' + 'Instead, call ReactDOM.render again at the top level.%s', getDeclarationErrorAddendum(component)) : undefined;
	  }
	  if (!component) {
	    return;
	  }
	  ReactUpdateQueue.enqueueReplacePropsInternal(component, partialProps);
	  if (callback) {
	    ReactUpdateQueue.enqueueCallbackInternal(component, callback);
	  }
	}
	
	function friendlyStringify(obj) {
	  if (typeof obj === 'object') {
	    if (Array.isArray(obj)) {
	      return '[' + obj.map(friendlyStringify).join(', ') + ']';
	    } else {
	      var pairs = [];
	      for (var key in obj) {
	        if (Object.prototype.hasOwnProperty.call(obj, key)) {
	          var keyEscaped = /^[a-z$_][\w$_]*$/i.test(key) ? key : JSON.stringify(key);
	          pairs.push(keyEscaped + ': ' + friendlyStringify(obj[key]));
	        }
	      }
	      return '{' + pairs.join(', ') + '}';
	    }
	  } else if (typeof obj === 'string') {
	    return JSON.stringify(obj);
	  } else if (typeof obj === 'function') {
	    return '[function object]';
	  }
	  // Differs from JSON.stringify in that undefined becauses undefined and that
	  // inf and nan don't become null
	  return String(obj);
	}
	
	var styleMutationWarning = {};
	
	function checkAndWarnForMutatedStyle(style1, style2, component) {
	  if (style1 == null || style2 == null) {
	    return;
	  }
	  if (shallowEqual(style1, style2)) {
	    return;
	  }
	
	  var componentName = component._tag;
	  var owner = component._currentElement._owner;
	  var ownerName;
	  if (owner) {
	    ownerName = owner.getName();
	  }
	
	  var hash = ownerName + '|' + componentName;
	
	  if (styleMutationWarning.hasOwnProperty(hash)) {
	    return;
	  }
	
	  styleMutationWarning[hash] = true;
	
	  process.env.NODE_ENV !== 'production' ? warning(false, '`%s` was passed a style object that has previously been mutated. ' + 'Mutating `style` is deprecated. Consider cloning it beforehand. Check ' + 'the `render` %s. Previous style: %s. Mutated style: %s.', componentName, owner ? 'of `' + ownerName + '`' : 'using <' + componentName + '>', friendlyStringify(style1), friendlyStringify(style2)) : undefined;
	}
	
	/**
	 * @param {object} component
	 * @param {?object} props
	 */
	function assertValidProps(component, props) {
	  if (!props) {
	    return;
	  }
	  // Note the use of `==` which checks for null or undefined.
	  if (process.env.NODE_ENV !== 'production') {
	    if (voidElementTags[component._tag]) {
	      process.env.NODE_ENV !== 'production' ? warning(props.children == null && props.dangerouslySetInnerHTML == null, '%s is a void element tag and must not have `children` or ' + 'use `props.dangerouslySetInnerHTML`.%s', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : undefined;
	    }
	  }
	  if (props.dangerouslySetInnerHTML != null) {
	    !(props.children == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.') : invariant(false) : undefined;
	    !(typeof props.dangerouslySetInnerHTML === 'object' && HTML in props.dangerouslySetInnerHTML) ? process.env.NODE_ENV !== 'production' ? invariant(false, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. ' + 'Please visit https://fb.me/react-invariant-dangerously-set-inner-html ' + 'for more information.') : invariant(false) : undefined;
	  }
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(props.innerHTML == null, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.') : undefined;
	    process.env.NODE_ENV !== 'production' ? warning(!props.contentEditable || props.children == null, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.') : undefined;
	  }
	  !(props.style == null || typeof props.style === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'The `style` prop expects a mapping from style properties to values, ' + 'not a string. For example, style={{marginRight: spacing + \'em\'}} when ' + 'using JSX.%s', getDeclarationErrorAddendum(component)) : invariant(false) : undefined;
	}
	
	function enqueuePutListener(id, registrationName, listener, transaction) {
	  if (process.env.NODE_ENV !== 'production') {
	    // IE8 has no API for event capturing and the `onScroll` event doesn't
	    // bubble.
	    process.env.NODE_ENV !== 'production' ? warning(registrationName !== 'onScroll' || isEventSupported('scroll', true), 'This browser doesn\'t support the `onScroll` event') : undefined;
	  }
	  var container = ReactMount.findReactContainerForID(id);
	  if (container) {
	    var doc = container.nodeType === ELEMENT_NODE_TYPE ? container.ownerDocument : container;
	    listenTo(registrationName, doc);
	  }
	  transaction.getReactMountReady().enqueue(putListener, {
	    id: id,
	    registrationName: registrationName,
	    listener: listener
	  });
	}
	
	function putListener() {
	  var listenerToPut = this;
	  ReactBrowserEventEmitter.putListener(listenerToPut.id, listenerToPut.registrationName, listenerToPut.listener);
	}
	
	// There are so many media events, it makes sense to just
	// maintain a list rather than create a `trapBubbledEvent` for each
	var mediaEvents = {
	  topAbort: 'abort',
	  topCanPlay: 'canplay',
	  topCanPlayThrough: 'canplaythrough',
	  topDurationChange: 'durationchange',
	  topEmptied: 'emptied',
	  topEncrypted: 'encrypted',
	  topEnded: 'ended',
	  topError: 'error',
	  topLoadedData: 'loadeddata',
	  topLoadedMetadata: 'loadedmetadata',
	  topLoadStart: 'loadstart',
	  topPause: 'pause',
	  topPlay: 'play',
	  topPlaying: 'playing',
	  topProgress: 'progress',
	  topRateChange: 'ratechange',
	  topSeeked: 'seeked',
	  topSeeking: 'seeking',
	  topStalled: 'stalled',
	  topSuspend: 'suspend',
	  topTimeUpdate: 'timeupdate',
	  topVolumeChange: 'volumechange',
	  topWaiting: 'waiting'
	};
	
	function trapBubbledEventsLocal() {
	  var inst = this;
	  // If a component renders to null or if another component fatals and causes
	  // the state of the tree to be corrupted, `node` here can be null.
	  !inst._rootNodeID ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Must be mounted to trap events') : invariant(false) : undefined;
	  var node = ReactMount.getNode(inst._rootNodeID);
	  !node ? process.env.NODE_ENV !== 'production' ? invariant(false, 'trapBubbledEvent(...): Requires node to be rendered.') : invariant(false) : undefined;
	
	  switch (inst._tag) {
	    case 'iframe':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load', node)];
	      break;
	    case 'video':
	    case 'audio':
	
	      inst._wrapperState.listeners = [];
	      // create listener for each media event
	      for (var event in mediaEvents) {
	        if (mediaEvents.hasOwnProperty(event)) {
	          inst._wrapperState.listeners.push(ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes[event], mediaEvents[event], node));
	        }
	      }
	
	      break;
	    case 'img':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topError, 'error', node), ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load', node)];
	      break;
	    case 'form':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topReset, 'reset', node), ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topSubmit, 'submit', node)];
	      break;
	  }
	}
	
	function mountReadyInputWrapper() {
	  ReactDOMInput.mountReadyWrapper(this);
	}
	
	function postUpdateSelectWrapper() {
	  ReactDOMSelect.postUpdateWrapper(this);
	}
	
	// For HTML, certain tags should omit their close tag. We keep a whitelist for
	// those special cased tags.
	
	var omittedCloseTags = {
	  'area': true,
	  'base': true,
	  'br': true,
	  'col': true,
	  'embed': true,
	  'hr': true,
	  'img': true,
	  'input': true,
	  'keygen': true,
	  'link': true,
	  'meta': true,
	  'param': true,
	  'source': true,
	  'track': true,
	  'wbr': true
	};
	
	// NOTE: menuitem's close tag should be omitted, but that causes problems.
	var newlineEatingTags = {
	  'listing': true,
	  'pre': true,
	  'textarea': true
	};
	
	// For HTML, certain tags cannot have children. This has the same purpose as
	// `omittedCloseTags` except that `menuitem` should still have its closing tag.
	
	var voidElementTags = assign({
	  'menuitem': true
	}, omittedCloseTags);
	
	// We accept any tag to be rendered but since this gets injected into arbitrary
	// HTML, we want to make sure that it's a safe tag.
	// http://www.w3.org/TR/REC-xml/#NT-Name
	
	var VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/; // Simplified subset
	var validatedTagCache = {};
	var hasOwnProperty = ({}).hasOwnProperty;
	
	function validateDangerousTag(tag) {
	  if (!hasOwnProperty.call(validatedTagCache, tag)) {
	    !VALID_TAG_REGEX.test(tag) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Invalid tag: %s', tag) : invariant(false) : undefined;
	    validatedTagCache[tag] = true;
	  }
	}
	
	function processChildContextDev(context, inst) {
	  // Pass down our tag name to child components for validation purposes
	  context = assign({}, context);
	  var info = context[validateDOMNesting.ancestorInfoContextKey];
	  context[validateDOMNesting.ancestorInfoContextKey] = validateDOMNesting.updatedAncestorInfo(info, inst._tag, inst);
	  return context;
	}
	
	function isCustomComponent(tagName, props) {
	  return tagName.indexOf('-') >= 0 || props.is != null;
	}
	
	/**
	 * Creates a new React class that is idempotent and capable of containing other
	 * React components. It accepts event listeners and DOM properties that are
	 * valid according to `DOMProperty`.
	 *
	 *  - Event listeners: `onClick`, `onMouseDown`, etc.
	 *  - DOM properties: `className`, `name`, `title`, etc.
	 *
	 * The `style` property functions differently from the DOM API. It accepts an
	 * object mapping of style properties to values.
	 *
	 * @constructor ReactDOMComponent
	 * @extends ReactMultiChild
	 */
	function ReactDOMComponent(tag) {
	  validateDangerousTag(tag);
	  this._tag = tag.toLowerCase();
	  this._renderedChildren = null;
	  this._previousStyle = null;
	  this._previousStyleCopy = null;
	  this._rootNodeID = null;
	  this._wrapperState = null;
	  this._topLevelWrapper = null;
	  this._nodeWithLegacyProperties = null;
	  if (process.env.NODE_ENV !== 'production') {
	    this._unprocessedContextDev = null;
	    this._processedContextDev = null;
	  }
	}
	
	ReactDOMComponent.displayName = 'ReactDOMComponent';
	
	ReactDOMComponent.Mixin = {
	
	  construct: function (element) {
	    this._currentElement = element;
	  },
	
	  /**
	   * Generates root tag markup then recurses. This method has side effects and
	   * is not idempotent.
	   *
	   * @internal
	   * @param {string} rootID The root DOM ID for this node.
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} context
	   * @return {string} The computed markup.
	   */
	  mountComponent: function (rootID, transaction, context) {
	    this._rootNodeID = rootID;
	
	    var props = this._currentElement.props;
	
	    switch (this._tag) {
	      case 'iframe':
	      case 'img':
	      case 'form':
	      case 'video':
	      case 'audio':
	        this._wrapperState = {
	          listeners: null
	        };
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	      case 'button':
	        props = ReactDOMButton.getNativeProps(this, props, context);
	        break;
	      case 'input':
	        ReactDOMInput.mountWrapper(this, props, context);
	        props = ReactDOMInput.getNativeProps(this, props, context);
	        break;
	      case 'option':
	        ReactDOMOption.mountWrapper(this, props, context);
	        props = ReactDOMOption.getNativeProps(this, props, context);
	        break;
	      case 'select':
	        ReactDOMSelect.mountWrapper(this, props, context);
	        props = ReactDOMSelect.getNativeProps(this, props, context);
	        context = ReactDOMSelect.processChildContext(this, props, context);
	        break;
	      case 'textarea':
	        ReactDOMTextarea.mountWrapper(this, props, context);
	        props = ReactDOMTextarea.getNativeProps(this, props, context);
	        break;
	    }
	
	    assertValidProps(this, props);
	    if (process.env.NODE_ENV !== 'production') {
	      if (context[validateDOMNesting.ancestorInfoContextKey]) {
	        validateDOMNesting(this._tag, this, context[validateDOMNesting.ancestorInfoContextKey]);
	      }
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      this._unprocessedContextDev = context;
	      this._processedContextDev = processChildContextDev(context, this);
	      context = this._processedContextDev;
	    }
	
	    var mountImage;
	    if (transaction.useCreateElement) {
	      var ownerDocument = context[ReactMount.ownerDocumentContextKey];
	      var el = ownerDocument.createElement(this._currentElement.type);
	      DOMPropertyOperations.setAttributeForID(el, this._rootNodeID);
	      // Populate node cache
	      ReactMount.getID(el);
	      this._updateDOMProperties({}, props, transaction, el);
	      this._createInitialChildren(transaction, props, context, el);
	      mountImage = el;
	    } else {
	      var tagOpen = this._createOpenTagMarkupAndPutListeners(transaction, props);
	      var tagContent = this._createContentMarkup(transaction, props, context);
	      if (!tagContent && omittedCloseTags[this._tag]) {
	        mountImage = tagOpen + '/>';
	      } else {
	        mountImage = tagOpen + '>' + tagContent + '</' + this._currentElement.type + '>';
	      }
	    }
	
	    switch (this._tag) {
	      case 'input':
	        transaction.getReactMountReady().enqueue(mountReadyInputWrapper, this);
	      // falls through
	      case 'button':
	      case 'select':
	      case 'textarea':
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	    }
	
	    return mountImage;
	  },
	
	  /**
	   * Creates markup for the open tag and all attributes.
	   *
	   * This method has side effects because events get registered.
	   *
	   * Iterating over object properties is faster than iterating over arrays.
	   * @see http://jsperf.com/obj-vs-arr-iteration
	   *
	   * @private
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} props
	   * @return {string} Markup of opening tag.
	   */
	  _createOpenTagMarkupAndPutListeners: function (transaction, props) {
	    var ret = '<' + this._currentElement.type;
	
	    for (var propKey in props) {
	      if (!props.hasOwnProperty(propKey)) {
	        continue;
	      }
	      var propValue = props[propKey];
	      if (propValue == null) {
	        continue;
	      }
	      if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (propValue) {
	          enqueuePutListener(this._rootNodeID, propKey, propValue, transaction);
	        }
	      } else {
	        if (propKey === STYLE) {
	          if (propValue) {
	            if (process.env.NODE_ENV !== 'production') {
	              // See `_updateDOMProperties`. style block
	              this._previousStyle = propValue;
	            }
	            propValue = this._previousStyleCopy = assign({}, props.style);
	          }
	          propValue = CSSPropertyOperations.createMarkupForStyles(propValue);
	        }
	        var markup = null;
	        if (this._tag != null && isCustomComponent(this._tag, props)) {
	          if (propKey !== CHILDREN) {
	            markup = DOMPropertyOperations.createMarkupForCustomAttribute(propKey, propValue);
	          }
	        } else {
	          markup = DOMPropertyOperations.createMarkupForProperty(propKey, propValue);
	        }
	        if (markup) {
	          ret += ' ' + markup;
	        }
	      }
	    }
	
	    // For static pages, no need to put React ID and checksum. Saves lots of
	    // bytes.
	    if (transaction.renderToStaticMarkup) {
	      return ret;
	    }
	
	    var markupForID = DOMPropertyOperations.createMarkupForID(this._rootNodeID);
	    return ret + ' ' + markupForID;
	  },
	
	  /**
	   * Creates markup for the content between the tags.
	   *
	   * @private
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} props
	   * @param {object} context
	   * @return {string} Content markup.
	   */
	  _createContentMarkup: function (transaction, props, context) {
	    var ret = '';
	
	    // Intentional use of != to avoid catching zero/false.
	    var innerHTML = props.dangerouslySetInnerHTML;
	    if (innerHTML != null) {
	      if (innerHTML.__html != null) {
	        ret = innerHTML.__html;
	      }
	    } else {
	      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
	      var childrenToUse = contentToUse != null ? null : props.children;
	      if (contentToUse != null) {
	        // TODO: Validate that text is allowed as a child of this node
	        ret = escapeTextContentForBrowser(contentToUse);
	      } else if (childrenToUse != null) {
	        var mountImages = this.mountChildren(childrenToUse, transaction, context);
	        ret = mountImages.join('');
	      }
	    }
	    if (newlineEatingTags[this._tag] && ret.charAt(0) === '\n') {
	      // text/html ignores the first character in these tags if it's a newline
	      // Prefer to break application/xml over text/html (for now) by adding
	      // a newline specifically to get eaten by the parser. (Alternately for
	      // textareas, replacing "^\n" with "\r\n" doesn't get eaten, and the first
	      // \r is normalized out by HTMLTextAreaElement#value.)
	      // See: <http://www.w3.org/TR/html-polyglot/#newlines-in-textarea-and-pre>
	      // See: <http://www.w3.org/TR/html5/syntax.html#element-restrictions>
	      // See: <http://www.w3.org/TR/html5/syntax.html#newlines>
	      // See: Parsing of "textarea" "listing" and "pre" elements
	      //  from <http://www.w3.org/TR/html5/syntax.html#parsing-main-inbody>
	      return '\n' + ret;
	    } else {
	      return ret;
	    }
	  },
	
	  _createInitialChildren: function (transaction, props, context, el) {
	    // Intentional use of != to avoid catching zero/false.
	    var innerHTML = props.dangerouslySetInnerHTML;
	    if (innerHTML != null) {
	      if (innerHTML.__html != null) {
	        setInnerHTML(el, innerHTML.__html);
	      }
	    } else {
	      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
	      var childrenToUse = contentToUse != null ? null : props.children;
	      if (contentToUse != null) {
	        // TODO: Validate that text is allowed as a child of this node
	        setTextContent(el, contentToUse);
	      } else if (childrenToUse != null) {
	        var mountImages = this.mountChildren(childrenToUse, transaction, context);
	        for (var i = 0; i < mountImages.length; i++) {
	          el.appendChild(mountImages[i]);
	        }
	      }
	    }
	  },
	
	  /**
	   * Receives a next element and updates the component.
	   *
	   * @internal
	   * @param {ReactElement} nextElement
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} context
	   */
	  receiveComponent: function (nextElement, transaction, context) {
	    var prevElement = this._currentElement;
	    this._currentElement = nextElement;
	    this.updateComponent(transaction, prevElement, nextElement, context);
	  },
	
	  /**
	   * Updates a native DOM component after it has already been allocated and
	   * attached to the DOM. Reconciles the root DOM node, then recurses.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @param {ReactElement} prevElement
	   * @param {ReactElement} nextElement
	   * @internal
	   * @overridable
	   */
	  updateComponent: function (transaction, prevElement, nextElement, context) {
	    var lastProps = prevElement.props;
	    var nextProps = this._currentElement.props;
	
	    switch (this._tag) {
	      case 'button':
	        lastProps = ReactDOMButton.getNativeProps(this, lastProps);
	        nextProps = ReactDOMButton.getNativeProps(this, nextProps);
	        break;
	      case 'input':
	        ReactDOMInput.updateWrapper(this);
	        lastProps = ReactDOMInput.getNativeProps(this, lastProps);
	        nextProps = ReactDOMInput.getNativeProps(this, nextProps);
	        break;
	      case 'option':
	        lastProps = ReactDOMOption.getNativeProps(this, lastProps);
	        nextProps = ReactDOMOption.getNativeProps(this, nextProps);
	        break;
	      case 'select':
	        lastProps = ReactDOMSelect.getNativeProps(this, lastProps);
	        nextProps = ReactDOMSelect.getNativeProps(this, nextProps);
	        break;
	      case 'textarea':
	        ReactDOMTextarea.updateWrapper(this);
	        lastProps = ReactDOMTextarea.getNativeProps(this, lastProps);
	        nextProps = ReactDOMTextarea.getNativeProps(this, nextProps);
	        break;
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      // If the context is reference-equal to the old one, pass down the same
	      // processed object so the update bailout in ReactReconciler behaves
	      // correctly (and identically in dev and prod). See #5005.
	      if (this._unprocessedContextDev !== context) {
	        this._unprocessedContextDev = context;
	        this._processedContextDev = processChildContextDev(context, this);
	      }
	      context = this._processedContextDev;
	    }
	
	    assertValidProps(this, nextProps);
	    this._updateDOMProperties(lastProps, nextProps, transaction, null);
	    this._updateDOMChildren(lastProps, nextProps, transaction, context);
	
	    if (!canDefineProperty && this._nodeWithLegacyProperties) {
	      this._nodeWithLegacyProperties.props = nextProps;
	    }
	
	    if (this._tag === 'select') {
	      // <select> value update needs to occur after <option> children
	      // reconciliation
	      transaction.getReactMountReady().enqueue(postUpdateSelectWrapper, this);
	    }
	  },
	
	  /**
	   * Reconciles the properties by detecting differences in property values and
	   * updating the DOM as necessary. This function is probably the single most
	   * critical path for performance optimization.
	   *
	   * TODO: Benchmark whether checking for changed values in memory actually
	   *       improves performance (especially statically positioned elements).
	   * TODO: Benchmark the effects of putting this at the top since 99% of props
	   *       do not change for a given reconciliation.
	   * TODO: Benchmark areas that can be improved with caching.
	   *
	   * @private
	   * @param {object} lastProps
	   * @param {object} nextProps
	   * @param {ReactReconcileTransaction} transaction
	   * @param {?DOMElement} node
	   */
	  _updateDOMProperties: function (lastProps, nextProps, transaction, node) {
	    var propKey;
	    var styleName;
	    var styleUpdates;
	    for (propKey in lastProps) {
	      if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey)) {
	        continue;
	      }
	      if (propKey === STYLE) {
	        var lastStyle = this._previousStyleCopy;
	        for (styleName in lastStyle) {
	          if (lastStyle.hasOwnProperty(styleName)) {
	            styleUpdates = styleUpdates || {};
	            styleUpdates[styleName] = '';
	          }
	        }
	        this._previousStyleCopy = null;
	      } else if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (lastProps[propKey]) {
	          // Only call deleteListener if there was a listener previously or
	          // else willDeleteListener gets called when there wasn't actually a
	          // listener (e.g., onClick={null})
	          deleteListener(this._rootNodeID, propKey);
	        }
	      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
	        if (!node) {
	          node = ReactMount.getNode(this._rootNodeID);
	        }
	        DOMPropertyOperations.deleteValueForProperty(node, propKey);
	      }
	    }
	    for (propKey in nextProps) {
	      var nextProp = nextProps[propKey];
	      var lastProp = propKey === STYLE ? this._previousStyleCopy : lastProps[propKey];
	      if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp) {
	        continue;
	      }
	      if (propKey === STYLE) {
	        if (nextProp) {
	          if (process.env.NODE_ENV !== 'production') {
	            checkAndWarnForMutatedStyle(this._previousStyleCopy, this._previousStyle, this);
	            this._previousStyle = nextProp;
	          }
	          nextProp = this._previousStyleCopy = assign({}, nextProp);
	        } else {
	          this._previousStyleCopy = null;
	        }
	        if (lastProp) {
	          // Unset styles on `lastProp` but not on `nextProp`.
	          for (styleName in lastProp) {
	            if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
	              styleUpdates = styleUpdates || {};
	              styleUpdates[styleName] = '';
	            }
	          }
	          // Update styles that changed since `lastProp`.
	          for (styleName in nextProp) {
	            if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
	              styleUpdates = styleUpdates || {};
	              styleUpdates[styleName] = nextProp[styleName];
	            }
	          }
	        } else {
	          // Relies on `updateStylesByID` not mutating `styleUpdates`.
	          styleUpdates = nextProp;
	        }
	      } else if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (nextProp) {
	          enqueuePutListener(this._rootNodeID, propKey, nextProp, transaction);
	        } else if (lastProp) {
	          deleteListener(this._rootNodeID, propKey);
	        }
	      } else if (isCustomComponent(this._tag, nextProps)) {
	        if (!node) {
	          node = ReactMount.getNode(this._rootNodeID);
	        }
	        if (propKey === CHILDREN) {
	          nextProp = null;
	        }
	        DOMPropertyOperations.setValueForAttribute(node, propKey, nextProp);
	      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
	        if (!node) {
	          node = ReactMount.getNode(this._rootNodeID);
	        }
	        // If we're updating to null or undefined, we should remove the property
	        // from the DOM node instead of inadvertantly setting to a string. This
	        // brings us in line with the same behavior we have on initial render.
	        if (nextProp != null) {
	          DOMPropertyOperations.setValueForProperty(node, propKey, nextProp);
	        } else {
	          DOMPropertyOperations.deleteValueForProperty(node, propKey);
	        }
	      }
	    }
	    if (styleUpdates) {
	      if (!node) {
	        node = ReactMount.getNode(this._rootNodeID);
	      }
	      CSSPropertyOperations.setValueForStyles(node, styleUpdates);
	    }
	  },
	
	  /**
	   * Reconciles the children with the various properties that affect the
	   * children content.
	   *
	   * @param {object} lastProps
	   * @param {object} nextProps
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   */
	  _updateDOMChildren: function (lastProps, nextProps, transaction, context) {
	    var lastContent = CONTENT_TYPES[typeof lastProps.children] ? lastProps.children : null;
	    var nextContent = CONTENT_TYPES[typeof nextProps.children] ? nextProps.children : null;
	
	    var lastHtml = lastProps.dangerouslySetInnerHTML && lastProps.dangerouslySetInnerHTML.__html;
	    var nextHtml = nextProps.dangerouslySetInnerHTML && nextProps.dangerouslySetInnerHTML.__html;
	
	    // Note the use of `!=` which checks for null or undefined.
	    var lastChildren = lastContent != null ? null : lastProps.children;
	    var nextChildren = nextContent != null ? null : nextProps.children;
	
	    // If we're switching from children to content/html or vice versa, remove
	    // the old content
	    var lastHasContentOrHtml = lastContent != null || lastHtml != null;
	    var nextHasContentOrHtml = nextContent != null || nextHtml != null;
	    if (lastChildren != null && nextChildren == null) {
	      this.updateChildren(null, transaction, context);
	    } else if (lastHasContentOrHtml && !nextHasContentOrHtml) {
	      this.updateTextContent('');
	    }
	
	    if (nextContent != null) {
	      if (lastContent !== nextContent) {
	        this.updateTextContent('' + nextContent);
	      }
	    } else if (nextHtml != null) {
	      if (lastHtml !== nextHtml) {
	        this.updateMarkup('' + nextHtml);
	      }
	    } else if (nextChildren != null) {
	      this.updateChildren(nextChildren, transaction, context);
	    }
	  },
	
	  /**
	   * Destroys all event registrations for this instance. Does not remove from
	   * the DOM. That must be done by the parent.
	   *
	   * @internal
	   */
	  unmountComponent: function () {
	    switch (this._tag) {
	      case 'iframe':
	      case 'img':
	      case 'form':
	      case 'video':
	      case 'audio':
	        var listeners = this._wrapperState.listeners;
	        if (listeners) {
	          for (var i = 0; i < listeners.length; i++) {
	            listeners[i].remove();
	          }
	        }
	        break;
	      case 'input':
	        ReactDOMInput.unmountWrapper(this);
	        break;
	      case 'html':
	      case 'head':
	      case 'body':
	        /**
	         * Components like <html> <head> and <body> can't be removed or added
	         * easily in a cross-browser way, however it's valuable to be able to
	         * take advantage of React's reconciliation for styling and <title>
	         * management. So we just document it and throw in dangerous cases.
	         */
	         true ? process.env.NODE_ENV !== 'production' ? invariant(false, '<%s> tried to unmount. Because of cross-browser quirks it is ' + 'impossible to unmount some top-level components (eg <html>, ' + '<head>, and <body>) reliably and efficiently. To fix this, have a ' + 'single top-level component that never unmounts render these ' + 'elements.', this._tag) : invariant(false) : undefined;
	        break;
	    }
	
	    this.unmountChildren();
	    ReactBrowserEventEmitter.deleteAllListeners(this._rootNodeID);
	    ReactComponentBrowserEnvironment.unmountIDFromEnvironment(this._rootNodeID);
	    this._rootNodeID = null;
	    this._wrapperState = null;
	    if (this._nodeWithLegacyProperties) {
	      var node = this._nodeWithLegacyProperties;
	      node._reactInternalComponent = null;
	      this._nodeWithLegacyProperties = null;
	    }
	  },
	
	  getPublicInstance: function () {
	    if (!this._nodeWithLegacyProperties) {
	      var node = ReactMount.getNode(this._rootNodeID);
	
	      node._reactInternalComponent = this;
	      node.getDOMNode = legacyGetDOMNode;
	      node.isMounted = legacyIsMounted;
	      node.setState = legacySetStateEtc;
	      node.replaceState = legacySetStateEtc;
	      node.forceUpdate = legacySetStateEtc;
	      node.setProps = legacySetProps;
	      node.replaceProps = legacyReplaceProps;
	
	      if (process.env.NODE_ENV !== 'production') {
	        if (canDefineProperty) {
	          Object.defineProperties(node, legacyPropsDescriptor);
	        } else {
	          // updateComponent will update this property on subsequent renders
	          node.props = this._currentElement.props;
	        }
	      } else {
	        // updateComponent will update this property on subsequent renders
	        node.props = this._currentElement.props;
	      }
	
	      this._nodeWithLegacyProperties = node;
	    }
	    return this._nodeWithLegacyProperties;
	  }
	
	};
	
	ReactPerf.measureMethods(ReactDOMComponent, 'ReactDOMComponent', {
	  mountComponent: 'mountComponent',
	  updateComponent: 'updateComponent'
	});
	
	assign(ReactDOMComponent.prototype, ReactDOMComponent.Mixin, ReactMultiChild.Mixin);
	
	module.exports = ReactDOMComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 441 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMFactories
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var ReactElement = __webpack_require__(18);
	var ReactElementValidator = __webpack_require__(162);
	
	var mapObject = __webpack_require__(490);
	
	/**
	 * Create a factory that creates HTML tag elements.
	 *
	 * @param {string} tag Tag name (e.g. `div`).
	 * @private
	 */
	function createDOMFactory(tag) {
	  if (process.env.NODE_ENV !== 'production') {
	    return ReactElementValidator.createFactory(tag);
	  }
	  return ReactElement.createFactory(tag);
	}
	
	/**
	 * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.
	 * This is also accessible via `React.DOM`.
	 *
	 * @public
	 */
	var ReactDOMFactories = mapObject({
	  a: 'a',
	  abbr: 'abbr',
	  address: 'address',
	  area: 'area',
	  article: 'article',
	  aside: 'aside',
	  audio: 'audio',
	  b: 'b',
	  base: 'base',
	  bdi: 'bdi',
	  bdo: 'bdo',
	  big: 'big',
	  blockquote: 'blockquote',
	  body: 'body',
	  br: 'br',
	  button: 'button',
	  canvas: 'canvas',
	  caption: 'caption',
	  cite: 'cite',
	  code: 'code',
	  col: 'col',
	  colgroup: 'colgroup',
	  data: 'data',
	  datalist: 'datalist',
	  dd: 'dd',
	  del: 'del',
	  details: 'details',
	  dfn: 'dfn',
	  dialog: 'dialog',
	  div: 'div',
	  dl: 'dl',
	  dt: 'dt',
	  em: 'em',
	  embed: 'embed',
	  fieldset: 'fieldset',
	  figcaption: 'figcaption',
	  figure: 'figure',
	  footer: 'footer',
	  form: 'form',
	  h1: 'h1',
	  h2: 'h2',
	  h3: 'h3',
	  h4: 'h4',
	  h5: 'h5',
	  h6: 'h6',
	  head: 'head',
	  header: 'header',
	  hgroup: 'hgroup',
	  hr: 'hr',
	  html: 'html',
	  i: 'i',
	  iframe: 'iframe',
	  img: 'img',
	  input: 'input',
	  ins: 'ins',
	  kbd: 'kbd',
	  keygen: 'keygen',
	  label: 'label',
	  legend: 'legend',
	  li: 'li',
	  link: 'link',
	  main: 'main',
	  map: 'map',
	  mark: 'mark',
	  menu: 'menu',
	  menuitem: 'menuitem',
	  meta: 'meta',
	  meter: 'meter',
	  nav: 'nav',
	  noscript: 'noscript',
	  object: 'object',
	  ol: 'ol',
	  optgroup: 'optgroup',
	  option: 'option',
	  output: 'output',
	  p: 'p',
	  param: 'param',
	  picture: 'picture',
	  pre: 'pre',
	  progress: 'progress',
	  q: 'q',
	  rp: 'rp',
	  rt: 'rt',
	  ruby: 'ruby',
	  s: 's',
	  samp: 'samp',
	  script: 'script',
	  section: 'section',
	  select: 'select',
	  small: 'small',
	  source: 'source',
	  span: 'span',
	  strong: 'strong',
	  style: 'style',
	  sub: 'sub',
	  summary: 'summary',
	  sup: 'sup',
	  table: 'table',
	  tbody: 'tbody',
	  td: 'td',
	  textarea: 'textarea',
	  tfoot: 'tfoot',
	  th: 'th',
	  thead: 'thead',
	  time: 'time',
	  title: 'title',
	  tr: 'tr',
	  track: 'track',
	  u: 'u',
	  ul: 'ul',
	  'var': 'var',
	  video: 'video',
	  wbr: 'wbr',
	
	  // SVG
	  circle: 'circle',
	  clipPath: 'clipPath',
	  defs: 'defs',
	  ellipse: 'ellipse',
	  g: 'g',
	  image: 'image',
	  line: 'line',
	  linearGradient: 'linearGradient',
	  mask: 'mask',
	  path: 'path',
	  pattern: 'pattern',
	  polygon: 'polygon',
	  polyline: 'polyline',
	  radialGradient: 'radialGradient',
	  rect: 'rect',
	  stop: 'stop',
	  svg: 'svg',
	  text: 'text',
	  tspan: 'tspan'
	
	}, createDOMFactory);
	
	module.exports = ReactDOMFactories;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 442 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMInput
	 */
	
	'use strict';
	
	var ReactDOMIDOperations = __webpack_require__(106);
	var LinkedValueUtils = __webpack_require__(103);
	var ReactMount = __webpack_require__(13);
	var ReactUpdates = __webpack_require__(24);
	
	var assign = __webpack_require__(5);
	var invariant = __webpack_require__(4);
	
	var instancesByReactID = {};
	
	function forceUpdateIfMounted() {
	  if (this._rootNodeID) {
	    // DOM component is still mounted; update
	    ReactDOMInput.updateWrapper(this);
	  }
	}
	
	/**
	 * Implements an <input> native component that allows setting these optional
	 * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
	 *
	 * If `checked` or `value` are not supplied (or null/undefined), user actions
	 * that affect the checked state or value will trigger updates to the element.
	 *
	 * If they are supplied (and not null/undefined), the rendered element will not
	 * trigger updates to the element. Instead, the props must change in order for
	 * the rendered element to be updated.
	 *
	 * The rendered element will be initialized as unchecked (or `defaultChecked`)
	 * with an empty value (or `defaultValue`).
	 *
	 * @see http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
	 */
	var ReactDOMInput = {
	  getNativeProps: function (inst, props, context) {
	    var value = LinkedValueUtils.getValue(props);
	    var checked = LinkedValueUtils.getChecked(props);
	
	    var nativeProps = assign({}, props, {
	      defaultChecked: undefined,
	      defaultValue: undefined,
	      value: value != null ? value : inst._wrapperState.initialValue,
	      checked: checked != null ? checked : inst._wrapperState.initialChecked,
	      onChange: inst._wrapperState.onChange
	    });
	
	    return nativeProps;
	  },
	
	  mountWrapper: function (inst, props) {
	    if (process.env.NODE_ENV !== 'production') {
	      LinkedValueUtils.checkPropTypes('input', props, inst._currentElement._owner);
	    }
	
	    var defaultValue = props.defaultValue;
	    inst._wrapperState = {
	      initialChecked: props.defaultChecked || false,
	      initialValue: defaultValue != null ? defaultValue : null,
	      onChange: _handleChange.bind(inst)
	    };
	  },
	
	  mountReadyWrapper: function (inst) {
	    // Can't be in mountWrapper or else server rendering leaks.
	    instancesByReactID[inst._rootNodeID] = inst;
	  },
	
	  unmountWrapper: function (inst) {
	    delete instancesByReactID[inst._rootNodeID];
	  },
	
	  updateWrapper: function (inst) {
	    var props = inst._currentElement.props;
	
	    // TODO: Shouldn't this be getChecked(props)?
	    var checked = props.checked;
	    if (checked != null) {
	      ReactDOMIDOperations.updatePropertyByID(inst._rootNodeID, 'checked', checked || false);
	    }
	
	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	      // Cast `value` to a string to ensure the value is set correctly. While
	      // browsers typically do this as necessary, jsdom doesn't.
	      ReactDOMIDOperations.updatePropertyByID(inst._rootNodeID, 'value', '' + value);
	    }
	  }
	};
	
	function _handleChange(event) {
	  var props = this._currentElement.props;
	
	  var returnValue = LinkedValueUtils.executeOnChange(props, event);
	
	  // Here we use asap to wait until all updates have propagated, which
	  // is important when using controlled components within layers:
	  // https://github.com/facebook/react/issues/1698
	  ReactUpdates.asap(forceUpdateIfMounted, this);
	
	  var name = props.name;
	  if (props.type === 'radio' && name != null) {
	    var rootNode = ReactMount.getNode(this._rootNodeID);
	    var queryRoot = rootNode;
	
	    while (queryRoot.parentNode) {
	      queryRoot = queryRoot.parentNode;
	    }
	
	    // If `rootNode.form` was non-null, then we could try `form.elements`,
	    // but that sometimes behaves strangely in IE8. We could also try using
	    // `form.getElementsByName`, but that will only return direct children
	    // and won't include inputs that use the HTML5 `form=` attribute. Since
	    // the input might not even be in a form, let's just use the global
	    // `querySelectorAll` to ensure we don't miss anything.
	    var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type="radio"]');
	
	    for (var i = 0; i < group.length; i++) {
	      var otherNode = group[i];
	      if (otherNode === rootNode || otherNode.form !== rootNode.form) {
	        continue;
	      }
	      // This will throw if radio buttons rendered by different copies of React
	      // and the same name are rendered into the same form (same as #1939).
	      // That's probably okay; we don't support it just as we don't support
	      // mixing React with non-React.
	      var otherID = ReactMount.getID(otherNode);
	      !otherID ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOMInput: Mixing React and non-React radio inputs with the ' + 'same `name` is not supported.') : invariant(false) : undefined;
	      var otherInstance = instancesByReactID[otherID];
	      !otherInstance ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOMInput: Unknown radio button ID %s.', otherID) : invariant(false) : undefined;
	      // If this is a controlled radio button group, forcing the input that
	      // was previously checked to update will cause it to be come re-checked
	      // as appropriate.
	      ReactUpdates.asap(forceUpdateIfMounted, otherInstance);
	    }
	  }
	
	  return returnValue;
	}
	
	module.exports = ReactDOMInput;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 443 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMOption
	 */
	
	'use strict';
	
	var ReactChildren = __webpack_require__(153);
	var ReactDOMSelect = __webpack_require__(158);
	
	var assign = __webpack_require__(5);
	var warning = __webpack_require__(6);
	
	var valueContextKey = ReactDOMSelect.valueContextKey;
	
	/**
	 * Implements an <option> native component that warns when `selected` is set.
	 */
	var ReactDOMOption = {
	  mountWrapper: function (inst, props, context) {
	    // TODO (yungsters): Remove support for `selected` in <option>.
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(props.selected == null, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.') : undefined;
	    }
	
	    // Look up whether this option is 'selected' via context
	    var selectValue = context[valueContextKey];
	
	    // If context key is null (e.g., no specified value or after initial mount)
	    // or missing (e.g., for <datalist>), we don't change props.selected
	    var selected = null;
	    if (selectValue != null) {
	      selected = false;
	      if (Array.isArray(selectValue)) {
	        // multiple
	        for (var i = 0; i < selectValue.length; i++) {
	          if ('' + selectValue[i] === '' + props.value) {
	            selected = true;
	            break;
	          }
	        }
	      } else {
	        selected = '' + selectValue === '' + props.value;
	      }
	    }
	
	    inst._wrapperState = { selected: selected };
	  },
	
	  getNativeProps: function (inst, props, context) {
	    var nativeProps = assign({ selected: undefined, children: undefined }, props);
	
	    // Read state only from initial mount because <select> updates value
	    // manually; we need the initial state only for server rendering
	    if (inst._wrapperState.selected != null) {
	      nativeProps.selected = inst._wrapperState.selected;
	    }
	
	    var content = '';
	
	    // Flatten children and warn if they aren't strings or numbers;
	    // invalid types are ignored.
	    ReactChildren.forEach(props.children, function (child) {
	      if (child == null) {
	        return;
	      }
	      if (typeof child === 'string' || typeof child === 'number') {
	        content += child;
	      } else {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'Only strings and numbers are supported as <option> children.') : undefined;
	      }
	    });
	
	    if (content) {
	      nativeProps.children = content;
	    }
	
	    return nativeProps;
	  }
	
	};
	
	module.exports = ReactDOMOption;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 444 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMSelection
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(10);
	
	var getNodeForCharacterOffset = __webpack_require__(477);
	var getTextContentAccessor = __webpack_require__(176);
	
	/**
	 * While `isCollapsed` is available on the Selection object and `collapsed`
	 * is available on the Range object, IE11 sometimes gets them wrong.
	 * If the anchor/focus nodes and offsets are the same, the range is collapsed.
	 */
	function isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {
	  return anchorNode === focusNode && anchorOffset === focusOffset;
	}
	
	/**
	 * Get the appropriate anchor and focus node/offset pairs for IE.
	 *
	 * The catch here is that IE's selection API doesn't provide information
	 * about whether the selection is forward or backward, so we have to
	 * behave as though it's always forward.
	 *
	 * IE text differs from modern selection in that it behaves as though
	 * block elements end with a new line. This means character offsets will
	 * differ between the two APIs.
	 *
	 * @param {DOMElement} node
	 * @return {object}
	 */
	function getIEOffsets(node) {
	  var selection = document.selection;
	  var selectedRange = selection.createRange();
	  var selectedLength = selectedRange.text.length;
	
	  // Duplicate selection so we can move range without breaking user selection.
	  var fromStart = selectedRange.duplicate();
	  fromStart.moveToElementText(node);
	  fromStart.setEndPoint('EndToStart', selectedRange);
	
	  var startOffset = fromStart.text.length;
	  var endOffset = startOffset + selectedLength;
	
	  return {
	    start: startOffset,
	    end: endOffset
	  };
	}
	
	/**
	 * @param {DOMElement} node
	 * @return {?object}
	 */
	function getModernOffsets(node) {
	  var selection = window.getSelection && window.getSelection();
	
	  if (!selection || selection.rangeCount === 0) {
	    return null;
	  }
	
	  var anchorNode = selection.anchorNode;
	  var anchorOffset = selection.anchorOffset;
	  var focusNode = selection.focusNode;
	  var focusOffset = selection.focusOffset;
	
	  var currentRange = selection.getRangeAt(0);
	
	  // In Firefox, range.startContainer and range.endContainer can be "anonymous
	  // divs", e.g. the up/down buttons on an <input type="number">. Anonymous
	  // divs do not seem to expose properties, triggering a "Permission denied
	  // error" if any of its properties are accessed. The only seemingly possible
	  // way to avoid erroring is to access a property that typically works for
	  // non-anonymous divs and catch any error that may otherwise arise. See
	  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427
	  try {
	    /* eslint-disable no-unused-expressions */
	    currentRange.startContainer.nodeType;
	    currentRange.endContainer.nodeType;
	    /* eslint-enable no-unused-expressions */
	  } catch (e) {
	    return null;
	  }
	
	  // If the node and offset values are the same, the selection is collapsed.
	  // `Selection.isCollapsed` is available natively, but IE sometimes gets
	  // this value wrong.
	  var isSelectionCollapsed = isCollapsed(selection.anchorNode, selection.anchorOffset, selection.focusNode, selection.focusOffset);
	
	  var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;
	
	  var tempRange = currentRange.cloneRange();
	  tempRange.selectNodeContents(node);
	  tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);
	
	  var isTempRangeCollapsed = isCollapsed(tempRange.startContainer, tempRange.startOffset, tempRange.endContainer, tempRange.endOffset);
	
	  var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;
	  var end = start + rangeLength;
	
	  // Detect whether the selection is backward.
	  var detectionRange = document.createRange();
	  detectionRange.setStart(anchorNode, anchorOffset);
	  detectionRange.setEnd(focusNode, focusOffset);
	  var isBackward = detectionRange.collapsed;
	
	  return {
	    start: isBackward ? end : start,
	    end: isBackward ? start : end
	  };
	}
	
	/**
	 * @param {DOMElement|DOMTextNode} node
	 * @param {object} offsets
	 */
	function setIEOffsets(node, offsets) {
	  var range = document.selection.createRange().duplicate();
	  var start, end;
	
	  if (typeof offsets.end === 'undefined') {
	    start = offsets.start;
	    end = start;
	  } else if (offsets.start > offsets.end) {
	    start = offsets.end;
	    end = offsets.start;
	  } else {
	    start = offsets.start;
	    end = offsets.end;
	  }
	
	  range.moveToElementText(node);
	  range.moveStart('character', start);
	  range.setEndPoint('EndToStart', range);
	  range.moveEnd('character', end - start);
	  range.select();
	}
	
	/**
	 * In modern non-IE browsers, we can support both forward and backward
	 * selections.
	 *
	 * Note: IE10+ supports the Selection object, but it does not support
	 * the `extend` method, which means that even in modern IE, it's not possible
	 * to programatically create a backward selection. Thus, for all IE
	 * versions, we use the old IE API to create our selections.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @param {object} offsets
	 */
	function setModernOffsets(node, offsets) {
	  if (!window.getSelection) {
	    return;
	  }
	
	  var selection = window.getSelection();
	  var length = node[getTextContentAccessor()].length;
	  var start = Math.min(offsets.start, length);
	  var end = typeof offsets.end === 'undefined' ? start : Math.min(offsets.end, length);
	
	  // IE 11 uses modern selection, but doesn't support the extend method.
	  // Flip backward selections, so we can set with a single range.
	  if (!selection.extend && start > end) {
	    var temp = end;
	    end = start;
	    start = temp;
	  }
	
	  var startMarker = getNodeForCharacterOffset(node, start);
	  var endMarker = getNodeForCharacterOffset(node, end);
	
	  if (startMarker && endMarker) {
	    var range = document.createRange();
	    range.setStart(startMarker.node, startMarker.offset);
	    selection.removeAllRanges();
	
	    if (start > end) {
	      selection.addRange(range);
	      selection.extend(endMarker.node, endMarker.offset);
	    } else {
	      range.setEnd(endMarker.node, endMarker.offset);
	      selection.addRange(range);
	    }
	  }
	}
	
	var useIEOffsets = ExecutionEnvironment.canUseDOM && 'selection' in document && !('getSelection' in window);
	
	var ReactDOMSelection = {
	  /**
	   * @param {DOMElement} node
	   */
	  getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,
	
	  /**
	   * @param {DOMElement|DOMTextNode} node
	   * @param {object} offsets
	   */
	  setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets
	};
	
	module.exports = ReactDOMSelection;

/***/ },
/* 445 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMServer
	 */
	
	'use strict';
	
	var ReactDefaultInjection = __webpack_require__(161);
	var ReactServerRendering = __webpack_require__(458);
	var ReactVersion = __webpack_require__(108);
	
	ReactDefaultInjection.inject();
	
	var ReactDOMServer = {
	  renderToString: ReactServerRendering.renderToString,
	  renderToStaticMarkup: ReactServerRendering.renderToStaticMarkup,
	  version: ReactVersion
	};
	
	module.exports = ReactDOMServer;

/***/ },
/* 446 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMTextarea
	 */
	
	'use strict';
	
	var LinkedValueUtils = __webpack_require__(103);
	var ReactDOMIDOperations = __webpack_require__(106);
	var ReactUpdates = __webpack_require__(24);
	
	var assign = __webpack_require__(5);
	var invariant = __webpack_require__(4);
	var warning = __webpack_require__(6);
	
	function forceUpdateIfMounted() {
	  if (this._rootNodeID) {
	    // DOM component is still mounted; update
	    ReactDOMTextarea.updateWrapper(this);
	  }
	}
	
	/**
	 * Implements a <textarea> native component that allows setting `value`, and
	 * `defaultValue`. This differs from the traditional DOM API because value is
	 * usually set as PCDATA children.
	 *
	 * If `value` is not supplied (or null/undefined), user actions that affect the
	 * value will trigger updates to the element.
	 *
	 * If `value` is supplied (and not null/undefined), the rendered element will
	 * not trigger updates to the element. Instead, the `value` prop must change in
	 * order for the rendered element to be updated.
	 *
	 * The rendered element will be initialized with an empty value, the prop
	 * `defaultValue` if specified, or the children content (deprecated).
	 */
	var ReactDOMTextarea = {
	  getNativeProps: function (inst, props, context) {
	    !(props.dangerouslySetInnerHTML == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.') : invariant(false) : undefined;
	
	    // Always set children to the same thing. In IE9, the selection range will
	    // get reset if `textContent` is mutated.
	    var nativeProps = assign({}, props, {
	      defaultValue: undefined,
	      value: undefined,
	      children: inst._wrapperState.initialValue,
	      onChange: inst._wrapperState.onChange
	    });
	
	    return nativeProps;
	  },
	
	  mountWrapper: function (inst, props) {
	    if (process.env.NODE_ENV !== 'production') {
	      LinkedValueUtils.checkPropTypes('textarea', props, inst._currentElement._owner);
	    }
	
	    var defaultValue = props.defaultValue;
	    // TODO (yungsters): Remove support for children content in <textarea>.
	    var children = props.children;
	    if (children != null) {
	      if (process.env.NODE_ENV !== 'production') {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.') : undefined;
	      }
	      !(defaultValue == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : invariant(false) : undefined;
	      if (Array.isArray(children)) {
	        !(children.length <= 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, '<textarea> can only have at most one child.') : invariant(false) : undefined;
	        children = children[0];
	      }
	
	      defaultValue = '' + children;
	    }
	    if (defaultValue == null) {
	      defaultValue = '';
	    }
	    var value = LinkedValueUtils.getValue(props);
	
	    inst._wrapperState = {
	      // We save the initial value so that `ReactDOMComponent` doesn't update
	      // `textContent` (unnecessary since we update value).
	      // The initial value can be a boolean or object so that's why it's
	      // forced to be a string.
	      initialValue: '' + (value != null ? value : defaultValue),
	      onChange: _handleChange.bind(inst)
	    };
	  },
	
	  updateWrapper: function (inst) {
	    var props = inst._currentElement.props;
	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	      // Cast `value` to a string to ensure the value is set correctly. While
	      // browsers typically do this as necessary, jsdom doesn't.
	      ReactDOMIDOperations.updatePropertyByID(inst._rootNodeID, 'value', '' + value);
	    }
	  }
	};
	
	function _handleChange(event) {
	  var props = this._currentElement.props;
	  var returnValue = LinkedValueUtils.executeOnChange(props, event);
	  ReactUpdates.asap(forceUpdateIfMounted, this);
	  return returnValue;
	}
	
	module.exports = ReactDOMTextarea;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 447 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDefaultPerf
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var DOMProperty = __webpack_require__(42);
	var ReactDefaultPerfAnalysis = __webpack_require__(448);
	var ReactMount = __webpack_require__(13);
	var ReactPerf = __webpack_require__(22);
	
	var performanceNow = __webpack_require__(493);
	
	function roundFloat(val) {
	  return Math.floor(val * 100) / 100;
	}
	
	function addValue(obj, key, val) {
	  obj[key] = (obj[key] || 0) + val;
	}
	
	var ReactDefaultPerf = {
	  _allMeasurements: [], // last item in the list is the current one
	  _mountStack: [0],
	  _injected: false,
	
	  start: function () {
	    if (!ReactDefaultPerf._injected) {
	      ReactPerf.injection.injectMeasure(ReactDefaultPerf.measure);
	    }
	
	    ReactDefaultPerf._allMeasurements.length = 0;
	    ReactPerf.enableMeasure = true;
	  },
	
	  stop: function () {
	    ReactPerf.enableMeasure = false;
	  },
	
	  getLastMeasurements: function () {
	    return ReactDefaultPerf._allMeasurements;
	  },
	
	  printExclusive: function (measurements) {
	    measurements = measurements || ReactDefaultPerf._allMeasurements;
	    var summary = ReactDefaultPerfAnalysis.getExclusiveSummary(measurements);
	    console.table(summary.map(function (item) {
	      return {
	        'Component class name': item.componentName,
	        'Total inclusive time (ms)': roundFloat(item.inclusive),
	        'Exclusive mount time (ms)': roundFloat(item.exclusive),
	        'Exclusive render time (ms)': roundFloat(item.render),
	        'Mount time per instance (ms)': roundFloat(item.exclusive / item.count),
	        'Render time per instance (ms)': roundFloat(item.render / item.count),
	        'Instances': item.count
	      };
	    }));
	    // TODO: ReactDefaultPerfAnalysis.getTotalTime() does not return the correct
	    // number.
	  },
	
	  printInclusive: function (measurements) {
	    measurements = measurements || ReactDefaultPerf._allMeasurements;
	    var summary = ReactDefaultPerfAnalysis.getInclusiveSummary(measurements);
	    console.table(summary.map(function (item) {
	      return {
	        'Owner > component': item.componentName,
	        'Inclusive time (ms)': roundFloat(item.time),
	        'Instances': item.count
	      };
	    }));
	    console.log('Total time:', ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms');
	  },
	
	  getMeasurementsSummaryMap: function (measurements) {
	    var summary = ReactDefaultPerfAnalysis.getInclusiveSummary(measurements, true);
	    return summary.map(function (item) {
	      return {
	        'Owner > component': item.componentName,
	        'Wasted time (ms)': item.time,
	        'Instances': item.count
	      };
	    });
	  },
	
	  printWasted: function (measurements) {
	    measurements = measurements || ReactDefaultPerf._allMeasurements;
	    console.table(ReactDefaultPerf.getMeasurementsSummaryMap(measurements));
	    console.log('Total time:', ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms');
	  },
	
	  printDOM: function (measurements) {
	    measurements = measurements || ReactDefaultPerf._allMeasurements;
	    var summary = ReactDefaultPerfAnalysis.getDOMSummary(measurements);
	    console.table(summary.map(function (item) {
	      var result = {};
	      result[DOMProperty.ID_ATTRIBUTE_NAME] = item.id;
	      result.type = item.type;
	      result.args = JSON.stringify(item.args);
	      return result;
	    }));
	    console.log('Total time:', ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms');
	  },
	
	  _recordWrite: function (id, fnName, totalTime, args) {
	    // TODO: totalTime isn't that useful since it doesn't count paints/reflows
	    var writes = ReactDefaultPerf._allMeasurements[ReactDefaultPerf._allMeasurements.length - 1].writes;
	    writes[id] = writes[id] || [];
	    writes[id].push({
	      type: fnName,
	      time: totalTime,
	      args: args
	    });
	  },
	
	  measure: function (moduleName, fnName, func) {
	    return function () {
	      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	        args[_key] = arguments[_key];
	      }
	
	      var totalTime;
	      var rv;
	      var start;
	
	      if (fnName === '_renderNewRootComponent' || fnName === 'flushBatchedUpdates') {
	        // A "measurement" is a set of metrics recorded for each flush. We want
	        // to group the metrics for a given flush together so we can look at the
	        // components that rendered and the DOM operations that actually
	        // happened to determine the amount of "wasted work" performed.
	        ReactDefaultPerf._allMeasurements.push({
	          exclusive: {},
	          inclusive: {},
	          render: {},
	          counts: {},
	          writes: {},
	          displayNames: {},
	          totalTime: 0,
	          created: {}
	        });
	        start = performanceNow();
	        rv = func.apply(this, args);
	        ReactDefaultPerf._allMeasurements[ReactDefaultPerf._allMeasurements.length - 1].totalTime = performanceNow() - start;
	        return rv;
	      } else if (fnName === '_mountImageIntoNode' || moduleName === 'ReactBrowserEventEmitter' || moduleName === 'ReactDOMIDOperations' || moduleName === 'CSSPropertyOperations' || moduleName === 'DOMChildrenOperations' || moduleName === 'DOMPropertyOperations') {
	        start = performanceNow();
	        rv = func.apply(this, args);
	        totalTime = performanceNow() - start;
	
	        if (fnName === '_mountImageIntoNode') {
	          var mountID = ReactMount.getID(args[1]);
	          ReactDefaultPerf._recordWrite(mountID, fnName, totalTime, args[0]);
	        } else if (fnName === 'dangerouslyProcessChildrenUpdates') {
	          // special format
	          args[0].forEach(function (update) {
	            var writeArgs = {};
	            if (update.fromIndex !== null) {
	              writeArgs.fromIndex = update.fromIndex;
	            }
	            if (update.toIndex !== null) {
	              writeArgs.toIndex = update.toIndex;
	            }
	            if (update.textContent !== null) {
	              writeArgs.textContent = update.textContent;
	            }
	            if (update.markupIndex !== null) {
	              writeArgs.markup = args[1][update.markupIndex];
	            }
	            ReactDefaultPerf._recordWrite(update.parentID, update.type, totalTime, writeArgs);
	          });
	        } else {
	          // basic format
	          var id = args[0];
	          if (typeof id === 'object') {
	            id = ReactMount.getID(args[0]);
	          }
	          ReactDefaultPerf._recordWrite(id, fnName, totalTime, Array.prototype.slice.call(args, 1));
	        }
	        return rv;
	      } else if (moduleName === 'ReactCompositeComponent' && (fnName === 'mountComponent' || fnName === 'updateComponent' || // TODO: receiveComponent()?
	      fnName === '_renderValidatedComponent')) {
	
	        if (this._currentElement.type === ReactMount.TopLevelWrapper) {
	          return func.apply(this, args);
	        }
	
	        var rootNodeID = fnName === 'mountComponent' ? args[0] : this._rootNodeID;
	        var isRender = fnName === '_renderValidatedComponent';
	        var isMount = fnName === 'mountComponent';
	
	        var mountStack = ReactDefaultPerf._mountStack;
	        var entry = ReactDefaultPerf._allMeasurements[ReactDefaultPerf._allMeasurements.length - 1];
	
	        if (isRender) {
	          addValue(entry.counts, rootNodeID, 1);
	        } else if (isMount) {
	          entry.created[rootNodeID] = true;
	          mountStack.push(0);
	        }
	
	        start = performanceNow();
	        rv = func.apply(this, args);
	        totalTime = performanceNow() - start;
	
	        if (isRender) {
	          addValue(entry.render, rootNodeID, totalTime);
	        } else if (isMount) {
	          var subMountTime = mountStack.pop();
	          mountStack[mountStack.length - 1] += totalTime;
	          addValue(entry.exclusive, rootNodeID, totalTime - subMountTime);
	          addValue(entry.inclusive, rootNodeID, totalTime);
	        } else {
	          addValue(entry.inclusive, rootNodeID, totalTime);
	        }
	
	        entry.displayNames[rootNodeID] = {
	          current: this.getName(),
	          owner: this._currentElement._owner ? this._currentElement._owner.getName() : '<root>'
	        };
	
	        return rv;
	      } else {
	        return func.apply(this, args);
	      }
	    };
	  }
	};
	
	module.exports = ReactDefaultPerf;

/***/ },
/* 448 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDefaultPerfAnalysis
	 */
	
	'use strict';
	
	var assign = __webpack_require__(5);
	
	// Don't try to save users less than 1.2ms (a number I made up)
	var DONT_CARE_THRESHOLD = 1.2;
	var DOM_OPERATION_TYPES = {
	  '_mountImageIntoNode': 'set innerHTML',
	  INSERT_MARKUP: 'set innerHTML',
	  MOVE_EXISTING: 'move',
	  REMOVE_NODE: 'remove',
	  SET_MARKUP: 'set innerHTML',
	  TEXT_CONTENT: 'set textContent',
	  'setValueForProperty': 'update attribute',
	  'setValueForAttribute': 'update attribute',
	  'deleteValueForProperty': 'remove attribute',
	  'setValueForStyles': 'update styles',
	  'replaceNodeWithMarkup': 'replace',
	  'updateTextContent': 'set textContent'
	};
	
	function getTotalTime(measurements) {
	  // TODO: return number of DOM ops? could be misleading.
	  // TODO: measure dropped frames after reconcile?
	  // TODO: log total time of each reconcile and the top-level component
	  // class that triggered it.
	  var totalTime = 0;
	  for (var i = 0; i < measurements.length; i++) {
	    var measurement = measurements[i];
	    totalTime += measurement.totalTime;
	  }
	  return totalTime;
	}
	
	function getDOMSummary(measurements) {
	  var items = [];
	  measurements.forEach(function (measurement) {
	    Object.keys(measurement.writes).forEach(function (id) {
	      measurement.writes[id].forEach(function (write) {
	        items.push({
	          id: id,
	          type: DOM_OPERATION_TYPES[write.type] || write.type,
	          args: write.args
	        });
	      });
	    });
	  });
	  return items;
	}
	
	function getExclusiveSummary(measurements) {
	  var candidates = {};
	  var displayName;
	
	  for (var i = 0; i < measurements.length; i++) {
	    var measurement = measurements[i];
	    var allIDs = assign({}, measurement.exclusive, measurement.inclusive);
	
	    for (var id in allIDs) {
	      displayName = measurement.displayNames[id].current;
	
	      candidates[displayName] = candidates[displayName] || {
	        componentName: displayName,
	        inclusive: 0,
	        exclusive: 0,
	        render: 0,
	        count: 0
	      };
	      if (measurement.render[id]) {
	        candidates[displayName].render += measurement.render[id];
	      }
	      if (measurement.exclusive[id]) {
	        candidates[displayName].exclusive += measurement.exclusive[id];
	      }
	      if (measurement.inclusive[id]) {
	        candidates[displayName].inclusive += measurement.inclusive[id];
	      }
	      if (measurement.counts[id]) {
	        candidates[displayName].count += measurement.counts[id];
	      }
	    }
	  }
	
	  // Now make a sorted array with the results.
	  var arr = [];
	  for (displayName in candidates) {
	    if (candidates[displayName].exclusive >= DONT_CARE_THRESHOLD) {
	      arr.push(candidates[displayName]);
	    }
	  }
	
	  arr.sort(function (a, b) {
	    return b.exclusive - a.exclusive;
	  });
	
	  return arr;
	}
	
	function getInclusiveSummary(measurements, onlyClean) {
	  var candidates = {};
	  var inclusiveKey;
	
	  for (var i = 0; i < measurements.length; i++) {
	    var measurement = measurements[i];
	    var allIDs = assign({}, measurement.exclusive, measurement.inclusive);
	    var cleanComponents;
	
	    if (onlyClean) {
	      cleanComponents = getUnchangedComponents(measurement);
	    }
	
	    for (var id in allIDs) {
	      if (onlyClean && !cleanComponents[id]) {
	        continue;
	      }
	
	      var displayName = measurement.displayNames[id];
	
	      // Inclusive time is not useful for many components without knowing where
	      // they are instantiated. So we aggregate inclusive time with both the
	      // owner and current displayName as the key.
	      inclusiveKey = displayName.owner + ' > ' + displayName.current;
	
	      candidates[inclusiveKey] = candidates[inclusiveKey] || {
	        componentName: inclusiveKey,
	        time: 0,
	        count: 0
	      };
	
	      if (measurement.inclusive[id]) {
	        candidates[inclusiveKey].time += measurement.inclusive[id];
	      }
	      if (measurement.counts[id]) {
	        candidates[inclusiveKey].count += measurement.counts[id];
	      }
	    }
	  }
	
	  // Now make a sorted array with the results.
	  var arr = [];
	  for (inclusiveKey in candidates) {
	    if (candidates[inclusiveKey].time >= DONT_CARE_THRESHOLD) {
	      arr.push(candidates[inclusiveKey]);
	    }
	  }
	
	  arr.sort(function (a, b) {
	    return b.time - a.time;
	  });
	
	  return arr;
	}
	
	function getUnchangedComponents(measurement) {
	  // For a given reconcile, look at which components did not actually
	  // render anything to the DOM and return a mapping of their ID to
	  // the amount of time it took to render the entire subtree.
	  var cleanComponents = {};
	  var dirtyLeafIDs = Object.keys(measurement.writes);
	  var allIDs = assign({}, measurement.exclusive, measurement.inclusive);
	
	  for (var id in allIDs) {
	    var isDirty = false;
	    // For each component that rendered, see if a component that triggered
	    // a DOM op is in its subtree.
	    for (var i = 0; i < dirtyLeafIDs.length; i++) {
	      if (dirtyLeafIDs[i].indexOf(id) === 0) {
	        isDirty = true;
	        break;
	      }
	    }
	    // check if component newly created
	    if (measurement.created[id]) {
	      isDirty = true;
	    }
	    if (!isDirty && measurement.counts[id] > 0) {
	      cleanComponents[id] = true;
	    }
	  }
	  return cleanComponents;
	}
	
	var ReactDefaultPerfAnalysis = {
	  getExclusiveSummary: getExclusiveSummary,
	  getInclusiveSummary: getInclusiveSummary,
	  getDOMSummary: getDOMSummary,
	  getTotalTime: getTotalTime
	};
	
	module.exports = ReactDefaultPerfAnalysis;

/***/ },
/* 449 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactEventEmitterMixin
	 */
	
	'use strict';
	
	var EventPluginHub = __webpack_require__(60);
	
	function runEventQueueInBatch(events) {
	  EventPluginHub.enqueueEvents(events);
	  EventPluginHub.processEventQueue(false);
	}
	
	var ReactEventEmitterMixin = {
	
	  /**
	   * Streams a fired top-level event to `EventPluginHub` where plugins have the
	   * opportunity to create `ReactEvent`s to be dispatched.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {object} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native environment event.
	   */
	  handleTopLevel: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
	    var events = EventPluginHub.extractEvents(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget);
	    runEventQueueInBatch(events);
	  }
	};
	
	module.exports = ReactEventEmitterMixin;

/***/ },
/* 450 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactEventListener
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var EventListener = __webpack_require__(178);
	var ExecutionEnvironment = __webpack_require__(10);
	var PooledClass = __webpack_require__(37);
	var ReactInstanceHandles = __webpack_require__(49);
	var ReactMount = __webpack_require__(13);
	var ReactUpdates = __webpack_require__(24);
	
	var assign = __webpack_require__(5);
	var getEventTarget = __webpack_require__(112);
	var getUnboundedScrollPosition = __webpack_require__(485);
	
	var DOCUMENT_FRAGMENT_NODE_TYPE = 11;
	
	/**
	 * Finds the parent React component of `node`.
	 *
	 * @param {*} node
	 * @return {?DOMEventTarget} Parent container, or `null` if the specified node
	 *                           is not nested.
	 */
	function findParent(node) {
	  // TODO: It may be a good idea to cache this to prevent unnecessary DOM
	  // traversal, but caching is difficult to do correctly without using a
	  // mutation observer to listen for all DOM changes.
	  var nodeID = ReactMount.getID(node);
	  var rootID = ReactInstanceHandles.getReactRootIDFromNodeID(nodeID);
	  var container = ReactMount.findReactContainerForID(rootID);
	  var parent = ReactMount.getFirstReactDOM(container);
	  return parent;
	}
	
	// Used to store ancestor hierarchy in top level callback
	function TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {
	  this.topLevelType = topLevelType;
	  this.nativeEvent = nativeEvent;
	  this.ancestors = [];
	}
	assign(TopLevelCallbackBookKeeping.prototype, {
	  destructor: function () {
	    this.topLevelType = null;
	    this.nativeEvent = null;
	    this.ancestors.length = 0;
	  }
	});
	PooledClass.addPoolingTo(TopLevelCallbackBookKeeping, PooledClass.twoArgumentPooler);
	
	function handleTopLevelImpl(bookKeeping) {
	  // TODO: Re-enable event.path handling
	  //
	  // if (bookKeeping.nativeEvent.path && bookKeeping.nativeEvent.path.length > 1) {
	  //   // New browsers have a path attribute on native events
	  //   handleTopLevelWithPath(bookKeeping);
	  // } else {
	  //   // Legacy browsers don't have a path attribute on native events
	  //   handleTopLevelWithoutPath(bookKeeping);
	  // }
	
	  void handleTopLevelWithPath; // temporarily unused
	  handleTopLevelWithoutPath(bookKeeping);
	}
	
	// Legacy browsers don't have a path attribute on native events
	function handleTopLevelWithoutPath(bookKeeping) {
	  var topLevelTarget = ReactMount.getFirstReactDOM(getEventTarget(bookKeeping.nativeEvent)) || window;
	
	  // Loop through the hierarchy, in case there's any nested components.
	  // It's important that we build the array of ancestors before calling any
	  // event handlers, because event handlers can modify the DOM, leading to
	  // inconsistencies with ReactMount's node cache. See #1105.
	  var ancestor = topLevelTarget;
	  while (ancestor) {
	    bookKeeping.ancestors.push(ancestor);
	    ancestor = findParent(ancestor);
	  }
	
	  for (var i = 0; i < bookKeeping.ancestors.length; i++) {
	    topLevelTarget = bookKeeping.ancestors[i];
	    var topLevelTargetID = ReactMount.getID(topLevelTarget) || '';
	    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, topLevelTarget, topLevelTargetID, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));
	  }
	}
	
	// New browsers have a path attribute on native events
	function handleTopLevelWithPath(bookKeeping) {
	  var path = bookKeeping.nativeEvent.path;
	  var currentNativeTarget = path[0];
	  var eventsFired = 0;
	  for (var i = 0; i < path.length; i++) {
	    var currentPathElement = path[i];
	    if (currentPathElement.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE) {
	      currentNativeTarget = path[i + 1];
	    }
	    // TODO: slow
	    var reactParent = ReactMount.getFirstReactDOM(currentPathElement);
	    if (reactParent === currentPathElement) {
	      var currentPathElementID = ReactMount.getID(currentPathElement);
	      var newRootID = ReactInstanceHandles.getReactRootIDFromNodeID(currentPathElementID);
	      bookKeeping.ancestors.push(currentPathElement);
	
	      var topLevelTargetID = ReactMount.getID(currentPathElement) || '';
	      eventsFired++;
	      ReactEventListener._handleTopLevel(bookKeeping.topLevelType, currentPathElement, topLevelTargetID, bookKeeping.nativeEvent, currentNativeTarget);
	
	      // Jump to the root of this React render tree
	      while (currentPathElementID !== newRootID) {
	        i++;
	        currentPathElement = path[i];
	        currentPathElementID = ReactMount.getID(currentPathElement);
	      }
	    }
	  }
	  if (eventsFired === 0) {
	    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, window, '', bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));
	  }
	}
	
	function scrollValueMonitor(cb) {
	  var scrollPosition = getUnboundedScrollPosition(window);
	  cb(scrollPosition);
	}
	
	var ReactEventListener = {
	  _enabled: true,
	  _handleTopLevel: null,
	
	  WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,
	
	  setHandleTopLevel: function (handleTopLevel) {
	    ReactEventListener._handleTopLevel = handleTopLevel;
	  },
	
	  setEnabled: function (enabled) {
	    ReactEventListener._enabled = !!enabled;
	  },
	
	  isEnabled: function () {
	    return ReactEventListener._enabled;
	  },
	
	  /**
	   * Traps top-level events by using event bubbling.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {string} handlerBaseName Event name (e.g. "click").
	   * @param {object} handle Element on which to attach listener.
	   * @return {?object} An object with a remove function which will forcefully
	   *                  remove the listener.
	   * @internal
	   */
	  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {
	    var element = handle;
	    if (!element) {
	      return null;
	    }
	    return EventListener.listen(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
	  },
	
	  /**
	   * Traps a top-level event by using event capturing.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {string} handlerBaseName Event name (e.g. "click").
	   * @param {object} handle Element on which to attach listener.
	   * @return {?object} An object with a remove function which will forcefully
	   *                  remove the listener.
	   * @internal
	   */
	  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {
	    var element = handle;
	    if (!element) {
	      return null;
	    }
	    return EventListener.capture(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
	  },
	
	  monitorScrollValue: function (refresh) {
	    var callback = scrollValueMonitor.bind(null, refresh);
	    EventListener.listen(window, 'scroll', callback);
	  },
	
	  dispatchEvent: function (topLevelType, nativeEvent) {
	    if (!ReactEventListener._enabled) {
	      return;
	    }
	
	    var bookKeeping = TopLevelCallbackBookKeeping.getPooled(topLevelType, nativeEvent);
	    try {
	      // Event queue being processed in the same cycle allows
	      // `preventDefault`.
	      ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);
	    } finally {
	      TopLevelCallbackBookKeeping.release(bookKeeping);
	    }
	  }
	};
	
	module.exports = ReactEventListener;

/***/ },
/* 451 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInjection
	 */
	
	'use strict';
	
	var DOMProperty = __webpack_require__(42);
	var EventPluginHub = __webpack_require__(60);
	var ReactComponentEnvironment = __webpack_require__(105);
	var ReactClass = __webpack_require__(154);
	var ReactEmptyComponent = __webpack_require__(163);
	var ReactBrowserEventEmitter = __webpack_require__(71);
	var ReactNativeComponent = __webpack_require__(169);
	var ReactPerf = __webpack_require__(22);
	var ReactRootIndex = __webpack_require__(172);
	var ReactUpdates = __webpack_require__(24);
	
	var ReactInjection = {
	  Component: ReactComponentEnvironment.injection,
	  Class: ReactClass.injection,
	  DOMProperty: DOMProperty.injection,
	  EmptyComponent: ReactEmptyComponent.injection,
	  EventPluginHub: EventPluginHub.injection,
	  EventEmitter: ReactBrowserEventEmitter.injection,
	  NativeComponent: ReactNativeComponent.injection,
	  Perf: ReactPerf.injection,
	  RootIndex: ReactRootIndex.injection,
	  Updates: ReactUpdates.injection
	};
	
	module.exports = ReactInjection;

/***/ },
/* 452 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactIsomorphic
	 */
	
	'use strict';
	
	var ReactChildren = __webpack_require__(153);
	var ReactComponent = __webpack_require__(155);
	var ReactClass = __webpack_require__(154);
	var ReactDOMFactories = __webpack_require__(441);
	var ReactElement = __webpack_require__(18);
	var ReactElementValidator = __webpack_require__(162);
	var ReactPropTypes = __webpack_require__(171);
	var ReactVersion = __webpack_require__(108);
	
	var assign = __webpack_require__(5);
	var onlyChild = __webpack_require__(478);
	
	var createElement = ReactElement.createElement;
	var createFactory = ReactElement.createFactory;
	var cloneElement = ReactElement.cloneElement;
	
	if (process.env.NODE_ENV !== 'production') {
	  createElement = ReactElementValidator.createElement;
	  createFactory = ReactElementValidator.createFactory;
	  cloneElement = ReactElementValidator.cloneElement;
	}
	
	var React = {
	
	  // Modern
	
	  Children: {
	    map: ReactChildren.map,
	    forEach: ReactChildren.forEach,
	    count: ReactChildren.count,
	    toArray: ReactChildren.toArray,
	    only: onlyChild
	  },
	
	  Component: ReactComponent,
	
	  createElement: createElement,
	  cloneElement: cloneElement,
	  isValidElement: ReactElement.isValidElement,
	
	  // Classic
	
	  PropTypes: ReactPropTypes,
	  createClass: ReactClass.createClass,
	  createFactory: createFactory,
	  createMixin: function (mixin) {
	    // Currently a noop. Will be used to validate and trace mixins.
	    return mixin;
	  },
	
	  // This looks DOM specific but these are actually isomorphic helpers
	  // since they are just generating DOM strings.
	  DOM: ReactDOMFactories,
	
	  version: ReactVersion,
	
	  // Hook for JSX spread, don't use this for anything else.
	  __spread: assign
	};
	
	module.exports = React;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 453 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMultiChild
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var ReactComponentEnvironment = __webpack_require__(105);
	var ReactMultiChildUpdateTypes = __webpack_require__(168);
	
	var ReactCurrentOwner = __webpack_require__(35);
	var ReactReconciler = __webpack_require__(43);
	var ReactChildReconciler = __webpack_require__(437);
	
	var flattenChildren = __webpack_require__(475);
	
	/**
	 * Updating children of a component may trigger recursive updates. The depth is
	 * used to batch recursive updates to render markup more efficiently.
	 *
	 * @type {number}
	 * @private
	 */
	var updateDepth = 0;
	
	/**
	 * Queue of update configuration objects.
	 *
	 * Each object has a `type` property that is in `ReactMultiChildUpdateTypes`.
	 *
	 * @type {array<object>}
	 * @private
	 */
	var updateQueue = [];
	
	/**
	 * Queue of markup to be rendered.
	 *
	 * @type {array<string>}
	 * @private
	 */
	var markupQueue = [];
	
	/**
	 * Enqueues markup to be rendered and inserted at a supplied index.
	 *
	 * @param {string} parentID ID of the parent component.
	 * @param {string} markup Markup that renders into an element.
	 * @param {number} toIndex Destination index.
	 * @private
	 */
	function enqueueInsertMarkup(parentID, markup, toIndex) {
	  // NOTE: Null values reduce hidden classes.
	  updateQueue.push({
	    parentID: parentID,
	    parentNode: null,
	    type: ReactMultiChildUpdateTypes.INSERT_MARKUP,
	    markupIndex: markupQueue.push(markup) - 1,
	    content: null,
	    fromIndex: null,
	    toIndex: toIndex
	  });
	}
	
	/**
	 * Enqueues moving an existing element to another index.
	 *
	 * @param {string} parentID ID of the parent component.
	 * @param {number} fromIndex Source index of the existing element.
	 * @param {number} toIndex Destination index of the element.
	 * @private
	 */
	function enqueueMove(parentID, fromIndex, toIndex) {
	  // NOTE: Null values reduce hidden classes.
	  updateQueue.push({
	    parentID: parentID,
	    parentNode: null,
	    type: ReactMultiChildUpdateTypes.MOVE_EXISTING,
	    markupIndex: null,
	    content: null,
	    fromIndex: fromIndex,
	    toIndex: toIndex
	  });
	}
	
	/**
	 * Enqueues removing an element at an index.
	 *
	 * @param {string} parentID ID of the parent component.
	 * @param {number} fromIndex Index of the element to remove.
	 * @private
	 */
	function enqueueRemove(parentID, fromIndex) {
	  // NOTE: Null values reduce hidden classes.
	  updateQueue.push({
	    parentID: parentID,
	    parentNode: null,
	    type: ReactMultiChildUpdateTypes.REMOVE_NODE,
	    markupIndex: null,
	    content: null,
	    fromIndex: fromIndex,
	    toIndex: null
	  });
	}
	
	/**
	 * Enqueues setting the markup of a node.
	 *
	 * @param {string} parentID ID of the parent component.
	 * @param {string} markup Markup that renders into an element.
	 * @private
	 */
	function enqueueSetMarkup(parentID, markup) {
	  // NOTE: Null values reduce hidden classes.
	  updateQueue.push({
	    parentID: parentID,
	    parentNode: null,
	    type: ReactMultiChildUpdateTypes.SET_MARKUP,
	    markupIndex: null,
	    content: markup,
	    fromIndex: null,
	    toIndex: null
	  });
	}
	
	/**
	 * Enqueues setting the text content.
	 *
	 * @param {string} parentID ID of the parent component.
	 * @param {string} textContent Text content to set.
	 * @private
	 */
	function enqueueTextContent(parentID, textContent) {
	  // NOTE: Null values reduce hidden classes.
	  updateQueue.push({
	    parentID: parentID,
	    parentNode: null,
	    type: ReactMultiChildUpdateTypes.TEXT_CONTENT,
	    markupIndex: null,
	    content: textContent,
	    fromIndex: null,
	    toIndex: null
	  });
	}
	
	/**
	 * Processes any enqueued updates.
	 *
	 * @private
	 */
	function processQueue() {
	  if (updateQueue.length) {
	    ReactComponentEnvironment.processChildrenUpdates(updateQueue, markupQueue);
	    clearQueue();
	  }
	}
	
	/**
	 * Clears any enqueued updates.
	 *
	 * @private
	 */
	function clearQueue() {
	  updateQueue.length = 0;
	  markupQueue.length = 0;
	}
	
	/**
	 * ReactMultiChild are capable of reconciling multiple children.
	 *
	 * @class ReactMultiChild
	 * @internal
	 */
	var ReactMultiChild = {
	
	  /**
	   * Provides common functionality for components that must reconcile multiple
	   * children. This is used by `ReactDOMComponent` to mount, update, and
	   * unmount child components.
	   *
	   * @lends {ReactMultiChild.prototype}
	   */
	  Mixin: {
	
	    _reconcilerInstantiateChildren: function (nestedChildren, transaction, context) {
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._currentElement) {
	          try {
	            ReactCurrentOwner.current = this._currentElement._owner;
	            return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);
	          } finally {
	            ReactCurrentOwner.current = null;
	          }
	        }
	      }
	      return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);
	    },
	
	    _reconcilerUpdateChildren: function (prevChildren, nextNestedChildrenElements, transaction, context) {
	      var nextChildren;
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._currentElement) {
	          try {
	            ReactCurrentOwner.current = this._currentElement._owner;
	            nextChildren = flattenChildren(nextNestedChildrenElements);
	          } finally {
	            ReactCurrentOwner.current = null;
	          }
	          return ReactChildReconciler.updateChildren(prevChildren, nextChildren, transaction, context);
	        }
	      }
	      nextChildren = flattenChildren(nextNestedChildrenElements);
	      return ReactChildReconciler.updateChildren(prevChildren, nextChildren, transaction, context);
	    },
	
	    /**
	     * Generates a "mount image" for each of the supplied children. In the case
	     * of `ReactDOMComponent`, a mount image is a string of markup.
	     *
	     * @param {?object} nestedChildren Nested child maps.
	     * @return {array} An array of mounted representations.
	     * @internal
	     */
	    mountChildren: function (nestedChildren, transaction, context) {
	      var children = this._reconcilerInstantiateChildren(nestedChildren, transaction, context);
	      this._renderedChildren = children;
	      var mountImages = [];
	      var index = 0;
	      for (var name in children) {
	        if (children.hasOwnProperty(name)) {
	          var child = children[name];
	          // Inlined for performance, see `ReactInstanceHandles.createReactID`.
	          var rootID = this._rootNodeID + name;
	          var mountImage = ReactReconciler.mountComponent(child, rootID, transaction, context);
	          child._mountIndex = index++;
	          mountImages.push(mountImage);
	        }
	      }
	      return mountImages;
	    },
	
	    /**
	     * Replaces any rendered children with a text content string.
	     *
	     * @param {string} nextContent String of content.
	     * @internal
	     */
	    updateTextContent: function (nextContent) {
	      updateDepth++;
	      var errorThrown = true;
	      try {
	        var prevChildren = this._renderedChildren;
	        // Remove any rendered children.
	        ReactChildReconciler.unmountChildren(prevChildren);
	        // TODO: The setTextContent operation should be enough
	        for (var name in prevChildren) {
	          if (prevChildren.hasOwnProperty(name)) {
	            this._unmountChild(prevChildren[name]);
	          }
	        }
	        // Set new text content.
	        this.setTextContent(nextContent);
	        errorThrown = false;
	      } finally {
	        updateDepth--;
	        if (!updateDepth) {
	          if (errorThrown) {
	            clearQueue();
	          } else {
	            processQueue();
	          }
	        }
	      }
	    },
	
	    /**
	     * Replaces any rendered children with a markup string.
	     *
	     * @param {string} nextMarkup String of markup.
	     * @internal
	     */
	    updateMarkup: function (nextMarkup) {
	      updateDepth++;
	      var errorThrown = true;
	      try {
	        var prevChildren = this._renderedChildren;
	        // Remove any rendered children.
	        ReactChildReconciler.unmountChildren(prevChildren);
	        for (var name in prevChildren) {
	          if (prevChildren.hasOwnProperty(name)) {
	            this._unmountChildByName(prevChildren[name], name);
	          }
	        }
	        this.setMarkup(nextMarkup);
	        errorThrown = false;
	      } finally {
	        updateDepth--;
	        if (!updateDepth) {
	          if (errorThrown) {
	            clearQueue();
	          } else {
	            processQueue();
	          }
	        }
	      }
	    },
	
	    /**
	     * Updates the rendered children with new children.
	     *
	     * @param {?object} nextNestedChildrenElements Nested child element maps.
	     * @param {ReactReconcileTransaction} transaction
	     * @internal
	     */
	    updateChildren: function (nextNestedChildrenElements, transaction, context) {
	      updateDepth++;
	      var errorThrown = true;
	      try {
	        this._updateChildren(nextNestedChildrenElements, transaction, context);
	        errorThrown = false;
	      } finally {
	        updateDepth--;
	        if (!updateDepth) {
	          if (errorThrown) {
	            clearQueue();
	          } else {
	            processQueue();
	          }
	        }
	      }
	    },
	
	    /**
	     * Improve performance by isolating this hot code path from the try/catch
	     * block in `updateChildren`.
	     *
	     * @param {?object} nextNestedChildrenElements Nested child element maps.
	     * @param {ReactReconcileTransaction} transaction
	     * @final
	     * @protected
	     */
	    _updateChildren: function (nextNestedChildrenElements, transaction, context) {
	      var prevChildren = this._renderedChildren;
	      var nextChildren = this._reconcilerUpdateChildren(prevChildren, nextNestedChildrenElements, transaction, context);
	      this._renderedChildren = nextChildren;
	      if (!nextChildren && !prevChildren) {
	        return;
	      }
	      var name;
	      // `nextIndex` will increment for each child in `nextChildren`, but
	      // `lastIndex` will be the last index visited in `prevChildren`.
	      var lastIndex = 0;
	      var nextIndex = 0;
	      for (name in nextChildren) {
	        if (!nextChildren.hasOwnProperty(name)) {
	          continue;
	        }
	        var prevChild = prevChildren && prevChildren[name];
	        var nextChild = nextChildren[name];
	        if (prevChild === nextChild) {
	          this.moveChild(prevChild, nextIndex, lastIndex);
	          lastIndex = Math.max(prevChild._mountIndex, lastIndex);
	          prevChild._mountIndex = nextIndex;
	        } else {
	          if (prevChild) {
	            // Update `lastIndex` before `_mountIndex` gets unset by unmounting.
	            lastIndex = Math.max(prevChild._mountIndex, lastIndex);
	            this._unmountChild(prevChild);
	          }
	          // The child must be instantiated before it's mounted.
	          this._mountChildByNameAtIndex(nextChild, name, nextIndex, transaction, context);
	        }
	        nextIndex++;
	      }
	      // Remove children that are no longer present.
	      for (name in prevChildren) {
	        if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {
	          this._unmountChild(prevChildren[name]);
	        }
	      }
	    },
	
	    /**
	     * Unmounts all rendered children. This should be used to clean up children
	     * when this component is unmounted.
	     *
	     * @internal
	     */
	    unmountChildren: function () {
	      var renderedChildren = this._renderedChildren;
	      ReactChildReconciler.unmountChildren(renderedChildren);
	      this._renderedChildren = null;
	    },
	
	    /**
	     * Moves a child component to the supplied index.
	     *
	     * @param {ReactComponent} child Component to move.
	     * @param {number} toIndex Destination index of the element.
	     * @param {number} lastIndex Last index visited of the siblings of `child`.
	     * @protected
	     */
	    moveChild: function (child, toIndex, lastIndex) {
	      // If the index of `child` is less than `lastIndex`, then it needs to
	      // be moved. Otherwise, we do not need to move it because a child will be
	      // inserted or moved before `child`.
	      if (child._mountIndex < lastIndex) {
	        enqueueMove(this._rootNodeID, child._mountIndex, toIndex);
	      }
	    },
	
	    /**
	     * Creates a child component.
	     *
	     * @param {ReactComponent} child Component to create.
	     * @param {string} mountImage Markup to insert.
	     * @protected
	     */
	    createChild: function (child, mountImage) {
	      enqueueInsertMarkup(this._rootNodeID, mountImage, child._mountIndex);
	    },
	
	    /**
	     * Removes a child component.
	     *
	     * @param {ReactComponent} child Child to remove.
	     * @protected
	     */
	    removeChild: function (child) {
	      enqueueRemove(this._rootNodeID, child._mountIndex);
	    },
	
	    /**
	     * Sets this text content string.
	     *
	     * @param {string} textContent Text content to set.
	     * @protected
	     */
	    setTextContent: function (textContent) {
	      enqueueTextContent(this._rootNodeID, textContent);
	    },
	
	    /**
	     * Sets this markup string.
	     *
	     * @param {string} markup Markup to set.
	     * @protected
	     */
	    setMarkup: function (markup) {
	      enqueueSetMarkup(this._rootNodeID, markup);
	    },
	
	    /**
	     * Mounts a child with the supplied name.
	     *
	     * NOTE: This is part of `updateChildren` and is here for readability.
	     *
	     * @param {ReactComponent} child Component to mount.
	     * @param {string} name Name of the child.
	     * @param {number} index Index at which to insert the child.
	     * @param {ReactReconcileTransaction} transaction
	     * @private
	     */
	    _mountChildByNameAtIndex: function (child, name, index, transaction, context) {
	      // Inlined for performance, see `ReactInstanceHandles.createReactID`.
	      var rootID = this._rootNodeID + name;
	      var mountImage = ReactReconciler.mountComponent(child, rootID, transaction, context);
	      child._mountIndex = index;
	      this.createChild(child, mountImage);
	    },
	
	    /**
	     * Unmounts a rendered child.
	     *
	     * NOTE: This is part of `updateChildren` and is here for readability.
	     *
	     * @param {ReactComponent} child Component to unmount.
	     * @private
	     */
	    _unmountChild: function (child) {
	      this.removeChild(child);
	      child._mountIndex = null;
	    }
	
	  }
	
	};
	
	module.exports = ReactMultiChild;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 454 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactOwner
	 */
	
	'use strict';
	
	var invariant = __webpack_require__(4);
	
	/**
	 * ReactOwners are capable of storing references to owned components.
	 *
	 * All components are capable of //being// referenced by owner components, but
	 * only ReactOwner components are capable of //referencing// owned components.
	 * The named reference is known as a "ref".
	 *
	 * Refs are available when mounted and updated during reconciliation.
	 *
	 *   var MyComponent = React.createClass({
	 *     render: function() {
	 *       return (
	 *         <div onClick={this.handleClick}>
	 *           <CustomComponent ref="custom" />
	 *         </div>
	 *       );
	 *     },
	 *     handleClick: function() {
	 *       this.refs.custom.handleClick();
	 *     },
	 *     componentDidMount: function() {
	 *       this.refs.custom.initialize();
	 *     }
	 *   });
	 *
	 * Refs should rarely be used. When refs are used, they should only be done to
	 * control data that is not handled by React's data flow.
	 *
	 * @class ReactOwner
	 */
	var ReactOwner = {
	
	  /**
	   * @param {?object} object
	   * @return {boolean} True if `object` is a valid owner.
	   * @final
	   */
	  isValidOwner: function (object) {
	    return !!(object && typeof object.attachRef === 'function' && typeof object.detachRef === 'function');
	  },
	
	  /**
	   * Adds a component by ref to an owner component.
	   *
	   * @param {ReactComponent} component Component to reference.
	   * @param {string} ref Name by which to refer to the component.
	   * @param {ReactOwner} owner Component on which to record the ref.
	   * @final
	   * @internal
	   */
	  addComponentAsRefTo: function (component, ref, owner) {
	    !ReactOwner.isValidOwner(owner) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'addComponentAsRefTo(...): Only a ReactOwner can have refs. You might ' + 'be adding a ref to a component that was not created inside a component\'s ' + '`render` method, or you have multiple copies of React loaded ' + '(details: https://fb.me/react-refs-must-have-owner).') : invariant(false) : undefined;
	    owner.attachRef(ref, component);
	  },
	
	  /**
	   * Removes a component by ref from an owner component.
	   *
	   * @param {ReactComponent} component Component to dereference.
	   * @param {string} ref Name of the ref to remove.
	   * @param {ReactOwner} owner Component on which the ref is recorded.
	   * @final
	   * @internal
	   */
	  removeComponentAsRefFrom: function (component, ref, owner) {
	    !ReactOwner.isValidOwner(owner) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. You might ' + 'be removing a ref to a component that was not created inside a component\'s ' + '`render` method, or you have multiple copies of React loaded ' + '(details: https://fb.me/react-refs-must-have-owner).') : invariant(false) : undefined;
	    // Check that `component` is still the current ref because we do not want to
	    // detach the ref if another component stole it.
	    if (owner.getPublicInstance().refs[ref] === component.getPublicInstance()) {
	      owner.detachRef(ref);
	    }
	  }
	
	};
	
	module.exports = ReactOwner;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 455 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactReconcileTransaction
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var CallbackQueue = __webpack_require__(101);
	var PooledClass = __webpack_require__(37);
	var ReactBrowserEventEmitter = __webpack_require__(71);
	var ReactDOMFeatureFlags = __webpack_require__(157);
	var ReactInputSelection = __webpack_require__(166);
	var Transaction = __webpack_require__(75);
	
	var assign = __webpack_require__(5);
	
	/**
	 * Ensures that, when possible, the selection range (currently selected text
	 * input) is not disturbed by performing the transaction.
	 */
	var SELECTION_RESTORATION = {
	  /**
	   * @return {Selection} Selection information.
	   */
	  initialize: ReactInputSelection.getSelectionInformation,
	  /**
	   * @param {Selection} sel Selection information returned from `initialize`.
	   */
	  close: ReactInputSelection.restoreSelection
	};
	
	/**
	 * Suppresses events (blur/focus) that could be inadvertently dispatched due to
	 * high level DOM manipulations (like temporarily removing a text input from the
	 * DOM).
	 */
	var EVENT_SUPPRESSION = {
	  /**
	   * @return {boolean} The enabled status of `ReactBrowserEventEmitter` before
	   * the reconciliation.
	   */
	  initialize: function () {
	    var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();
	    ReactBrowserEventEmitter.setEnabled(false);
	    return currentlyEnabled;
	  },
	
	  /**
	   * @param {boolean} previouslyEnabled Enabled status of
	   *   `ReactBrowserEventEmitter` before the reconciliation occurred. `close`
	   *   restores the previous value.
	   */
	  close: function (previouslyEnabled) {
	    ReactBrowserEventEmitter.setEnabled(previouslyEnabled);
	  }
	};
	
	/**
	 * Provides a queue for collecting `componentDidMount` and
	 * `componentDidUpdate` callbacks during the the transaction.
	 */
	var ON_DOM_READY_QUEUEING = {
	  /**
	   * Initializes the internal `onDOMReady` queue.
	   */
	  initialize: function () {
	    this.reactMountReady.reset();
	  },
	
	  /**
	   * After DOM is flushed, invoke all registered `onDOMReady` callbacks.
	   */
	  close: function () {
	    this.reactMountReady.notifyAll();
	  }
	};
	
	/**
	 * Executed within the scope of the `Transaction` instance. Consider these as
	 * being member methods, but with an implied ordering while being isolated from
	 * each other.
	 */
	var TRANSACTION_WRAPPERS = [SELECTION_RESTORATION, EVENT_SUPPRESSION, ON_DOM_READY_QUEUEING];
	
	/**
	 * Currently:
	 * - The order that these are listed in the transaction is critical:
	 * - Suppresses events.
	 * - Restores selection range.
	 *
	 * Future:
	 * - Restore document/overflow scroll positions that were unintentionally
	 *   modified via DOM insertions above the top viewport boundary.
	 * - Implement/integrate with customized constraint based layout system and keep
	 *   track of which dimensions must be remeasured.
	 *
	 * @class ReactReconcileTransaction
	 */
	function ReactReconcileTransaction(forceHTML) {
	  this.reinitializeTransaction();
	  // Only server-side rendering really needs this option (see
	  // `ReactServerRendering`), but server-side uses
	  // `ReactServerRenderingTransaction` instead. This option is here so that it's
	  // accessible and defaults to false when `ReactDOMComponent` and
	  // `ReactTextComponent` checks it in `mountComponent`.`
	  this.renderToStaticMarkup = false;
	  this.reactMountReady = CallbackQueue.getPooled(null);
	  this.useCreateElement = !forceHTML && ReactDOMFeatureFlags.useCreateElement;
	}
	
	var Mixin = {
	  /**
	   * @see Transaction
	   * @abstract
	   * @final
	   * @return {array<object>} List of operation wrap procedures.
	   *   TODO: convert to array<TransactionWrapper>
	   */
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  },
	
	  /**
	   * @return {object} The queue to collect `onDOMReady` callbacks with.
	   */
	  getReactMountReady: function () {
	    return this.reactMountReady;
	  },
	
	  /**
	   * `PooledClass` looks for this, and will invoke this before allowing this
	   * instance to be reused.
	   */
	  destructor: function () {
	    CallbackQueue.release(this.reactMountReady);
	    this.reactMountReady = null;
	  }
	};
	
	assign(ReactReconcileTransaction.prototype, Transaction.Mixin, Mixin);
	
	PooledClass.addPoolingTo(ReactReconcileTransaction);
	
	module.exports = ReactReconcileTransaction;

/***/ },
/* 456 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactRef
	 */
	
	'use strict';
	
	var ReactOwner = __webpack_require__(454);
	
	var ReactRef = {};
	
	function attachRef(ref, component, owner) {
	  if (typeof ref === 'function') {
	    ref(component.getPublicInstance());
	  } else {
	    // Legacy ref
	    ReactOwner.addComponentAsRefTo(component, ref, owner);
	  }
	}
	
	function detachRef(ref, component, owner) {
	  if (typeof ref === 'function') {
	    ref(null);
	  } else {
	    // Legacy ref
	    ReactOwner.removeComponentAsRefFrom(component, ref, owner);
	  }
	}
	
	ReactRef.attachRefs = function (instance, element) {
	  if (element === null || element === false) {
	    return;
	  }
	  var ref = element.ref;
	  if (ref != null) {
	    attachRef(ref, instance, element._owner);
	  }
	};
	
	ReactRef.shouldUpdateRefs = function (prevElement, nextElement) {
	  // If either the owner or a `ref` has changed, make sure the newest owner
	  // has stored a reference to `this`, and the previous owner (if different)
	  // has forgotten the reference to `this`. We use the element instead
	  // of the public this.props because the post processing cannot determine
	  // a ref. The ref conceptually lives on the element.
	
	  // TODO: Should this even be possible? The owner cannot change because
	  // it's forbidden by shouldUpdateReactComponent. The ref can change
	  // if you swap the keys of but not the refs. Reconsider where this check
	  // is made. It probably belongs where the key checking and
	  // instantiateReactComponent is done.
	
	  var prevEmpty = prevElement === null || prevElement === false;
	  var nextEmpty = nextElement === null || nextElement === false;
	
	  return(
	    // This has a few false positives w/r/t empty components.
	    prevEmpty || nextEmpty || nextElement._owner !== prevElement._owner || nextElement.ref !== prevElement.ref
	  );
	};
	
	ReactRef.detachRefs = function (instance, element) {
	  if (element === null || element === false) {
	    return;
	  }
	  var ref = element.ref;
	  if (ref != null) {
	    detachRef(ref, instance, element._owner);
	  }
	};
	
	module.exports = ReactRef;

/***/ },
/* 457 */
/***/ function(module, exports) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactServerBatchingStrategy
	 * @typechecks
	 */
	
	'use strict';
	
	var ReactServerBatchingStrategy = {
	  isBatchingUpdates: false,
	  batchedUpdates: function (callback) {
	    // Don't do anything here. During the server rendering we don't want to
	    // schedule any updates. We will simply ignore them.
	  }
	};
	
	module.exports = ReactServerBatchingStrategy;

/***/ },
/* 458 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks static-only
	 * @providesModule ReactServerRendering
	 */
	'use strict';
	
	var ReactDefaultBatchingStrategy = __webpack_require__(160);
	var ReactElement = __webpack_require__(18);
	var ReactInstanceHandles = __webpack_require__(49);
	var ReactMarkupChecksum = __webpack_require__(167);
	var ReactServerBatchingStrategy = __webpack_require__(457);
	var ReactServerRenderingTransaction = __webpack_require__(459);
	var ReactUpdates = __webpack_require__(24);
	
	var emptyObject = __webpack_require__(64);
	var instantiateReactComponent = __webpack_require__(114);
	var invariant = __webpack_require__(4);
	
	/**
	 * @param {ReactElement} element
	 * @return {string} the HTML markup
	 */
	function renderToString(element) {
	  !ReactElement.isValidElement(element) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'renderToString(): You must pass a valid ReactElement.') : invariant(false) : undefined;
	
	  var transaction;
	  try {
	    ReactUpdates.injection.injectBatchingStrategy(ReactServerBatchingStrategy);
	
	    var id = ReactInstanceHandles.createReactRootID();
	    transaction = ReactServerRenderingTransaction.getPooled(false);
	
	    return transaction.perform(function () {
	      var componentInstance = instantiateReactComponent(element, null);
	      var markup = componentInstance.mountComponent(id, transaction, emptyObject);
	      return ReactMarkupChecksum.addChecksumToMarkup(markup);
	    }, null);
	  } finally {
	    ReactServerRenderingTransaction.release(transaction);
	    // Revert to the DOM batching strategy since these two renderers
	    // currently share these stateful modules.
	    ReactUpdates.injection.injectBatchingStrategy(ReactDefaultBatchingStrategy);
	  }
	}
	
	/**
	 * @param {ReactElement} element
	 * @return {string} the HTML markup, without the extra React ID and checksum
	 * (for generating static pages)
	 */
	function renderToStaticMarkup(element) {
	  !ReactElement.isValidElement(element) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'renderToStaticMarkup(): You must pass a valid ReactElement.') : invariant(false) : undefined;
	
	  var transaction;
	  try {
	    ReactUpdates.injection.injectBatchingStrategy(ReactServerBatchingStrategy);
	
	    var id = ReactInstanceHandles.createReactRootID();
	    transaction = ReactServerRenderingTransaction.getPooled(true);
	
	    return transaction.perform(function () {
	      var componentInstance = instantiateReactComponent(element, null);
	      return componentInstance.mountComponent(id, transaction, emptyObject);
	    }, null);
	  } finally {
	    ReactServerRenderingTransaction.release(transaction);
	    // Revert to the DOM batching strategy since these two renderers
	    // currently share these stateful modules.
	    ReactUpdates.injection.injectBatchingStrategy(ReactDefaultBatchingStrategy);
	  }
	}
	
	module.exports = {
	  renderToString: renderToString,
	  renderToStaticMarkup: renderToStaticMarkup
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 459 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactServerRenderingTransaction
	 * @typechecks
	 */
	
	'use strict';
	
	var PooledClass = __webpack_require__(37);
	var CallbackQueue = __webpack_require__(101);
	var Transaction = __webpack_require__(75);
	
	var assign = __webpack_require__(5);
	var emptyFunction = __webpack_require__(27);
	
	/**
	 * Provides a `CallbackQueue` queue for collecting `onDOMReady` callbacks
	 * during the performing of the transaction.
	 */
	var ON_DOM_READY_QUEUEING = {
	  /**
	   * Initializes the internal `onDOMReady` queue.
	   */
	  initialize: function () {
	    this.reactMountReady.reset();
	  },
	
	  close: emptyFunction
	};
	
	/**
	 * Executed within the scope of the `Transaction` instance. Consider these as
	 * being member methods, but with an implied ordering while being isolated from
	 * each other.
	 */
	var TRANSACTION_WRAPPERS = [ON_DOM_READY_QUEUEING];
	
	/**
	 * @class ReactServerRenderingTransaction
	 * @param {boolean} renderToStaticMarkup
	 */
	function ReactServerRenderingTransaction(renderToStaticMarkup) {
	  this.reinitializeTransaction();
	  this.renderToStaticMarkup = renderToStaticMarkup;
	  this.reactMountReady = CallbackQueue.getPooled(null);
	  this.useCreateElement = false;
	}
	
	var Mixin = {
	  /**
	   * @see Transaction
	   * @abstract
	   * @final
	   * @return {array} Empty list of operation wrap procedures.
	   */
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  },
	
	  /**
	   * @return {object} The queue to collect `onDOMReady` callbacks with.
	   */
	  getReactMountReady: function () {
	    return this.reactMountReady;
	  },
	
	  /**
	   * `PooledClass` looks for this, and will invoke this before allowing this
	   * instance to be reused.
	   */
	  destructor: function () {
	    CallbackQueue.release(this.reactMountReady);
	    this.reactMountReady = null;
	  }
	};
	
	assign(ReactServerRenderingTransaction.prototype, Transaction.Mixin, Mixin);
	
	PooledClass.addPoolingTo(ReactServerRenderingTransaction);
	
	module.exports = ReactServerRenderingTransaction;

/***/ },
/* 460 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SVGDOMPropertyConfig
	 */
	
	'use strict';
	
	var DOMProperty = __webpack_require__(42);
	
	var MUST_USE_ATTRIBUTE = DOMProperty.injection.MUST_USE_ATTRIBUTE;
	
	var NS = {
	  xlink: 'http://www.w3.org/1999/xlink',
	  xml: 'http://www.w3.org/XML/1998/namespace'
	};
	
	var SVGDOMPropertyConfig = {
	  Properties: {
	    clipPath: MUST_USE_ATTRIBUTE,
	    cx: MUST_USE_ATTRIBUTE,
	    cy: MUST_USE_ATTRIBUTE,
	    d: MUST_USE_ATTRIBUTE,
	    dx: MUST_USE_ATTRIBUTE,
	    dy: MUST_USE_ATTRIBUTE,
	    fill: MUST_USE_ATTRIBUTE,
	    fillOpacity: MUST_USE_ATTRIBUTE,
	    fontFamily: MUST_USE_ATTRIBUTE,
	    fontSize: MUST_USE_ATTRIBUTE,
	    fx: MUST_USE_ATTRIBUTE,
	    fy: MUST_USE_ATTRIBUTE,
	    gradientTransform: MUST_USE_ATTRIBUTE,
	    gradientUnits: MUST_USE_ATTRIBUTE,
	    markerEnd: MUST_USE_ATTRIBUTE,
	    markerMid: MUST_USE_ATTRIBUTE,
	    markerStart: MUST_USE_ATTRIBUTE,
	    offset: MUST_USE_ATTRIBUTE,
	    opacity: MUST_USE_ATTRIBUTE,
	    patternContentUnits: MUST_USE_ATTRIBUTE,
	    patternUnits: MUST_USE_ATTRIBUTE,
	    points: MUST_USE_ATTRIBUTE,
	    preserveAspectRatio: MUST_USE_ATTRIBUTE,
	    r: MUST_USE_ATTRIBUTE,
	    rx: MUST_USE_ATTRIBUTE,
	    ry: MUST_USE_ATTRIBUTE,
	    spreadMethod: MUST_USE_ATTRIBUTE,
	    stopColor: MUST_USE_ATTRIBUTE,
	    stopOpacity: MUST_USE_ATTRIBUTE,
	    stroke: MUST_USE_ATTRIBUTE,
	    strokeDasharray: MUST_USE_ATTRIBUTE,
	    strokeLinecap: MUST_USE_ATTRIBUTE,
	    strokeOpacity: MUST_USE_ATTRIBUTE,
	    strokeWidth: MUST_USE_ATTRIBUTE,
	    textAnchor: MUST_USE_ATTRIBUTE,
	    transform: MUST_USE_ATTRIBUTE,
	    version: MUST_USE_ATTRIBUTE,
	    viewBox: MUST_USE_ATTRIBUTE,
	    x1: MUST_USE_ATTRIBUTE,
	    x2: MUST_USE_ATTRIBUTE,
	    x: MUST_USE_ATTRIBUTE,
	    xlinkActuate: MUST_USE_ATTRIBUTE,
	    xlinkArcrole: MUST_USE_ATTRIBUTE,
	    xlinkHref: MUST_USE_ATTRIBUTE,
	    xlinkRole: MUST_USE_ATTRIBUTE,
	    xlinkShow: MUST_USE_ATTRIBUTE,
	    xlinkTitle: MUST_USE_ATTRIBUTE,
	    xlinkType: MUST_USE_ATTRIBUTE,
	    xmlBase: MUST_USE_ATTRIBUTE,
	    xmlLang: MUST_USE_ATTRIBUTE,
	    xmlSpace: MUST_USE_ATTRIBUTE,
	    y1: MUST_USE_ATTRIBUTE,
	    y2: MUST_USE_ATTRIBUTE,
	    y: MUST_USE_ATTRIBUTE
	  },
	  DOMAttributeNamespaces: {
	    xlinkActuate: NS.xlink,
	    xlinkArcrole: NS.xlink,
	    xlinkHref: NS.xlink,
	    xlinkRole: NS.xlink,
	    xlinkShow: NS.xlink,
	    xlinkTitle: NS.xlink,
	    xlinkType: NS.xlink,
	    xmlBase: NS.xml,
	    xmlLang: NS.xml,
	    xmlSpace: NS.xml
	  },
	  DOMAttributeNames: {
	    clipPath: 'clip-path',
	    fillOpacity: 'fill-opacity',
	    fontFamily: 'font-family',
	    fontSize: 'font-size',
	    gradientTransform: 'gradientTransform',
	    gradientUnits: 'gradientUnits',
	    markerEnd: 'marker-end',
	    markerMid: 'marker-mid',
	    markerStart: 'marker-start',
	    patternContentUnits: 'patternContentUnits',
	    patternUnits: 'patternUnits',
	    preserveAspectRatio: 'preserveAspectRatio',
	    spreadMethod: 'spreadMethod',
	    stopColor: 'stop-color',
	    stopOpacity: 'stop-opacity',
	    strokeDasharray: 'stroke-dasharray',
	    strokeLinecap: 'stroke-linecap',
	    strokeOpacity: 'stroke-opacity',
	    strokeWidth: 'stroke-width',
	    textAnchor: 'text-anchor',
	    viewBox: 'viewBox',
	    xlinkActuate: 'xlink:actuate',
	    xlinkArcrole: 'xlink:arcrole',
	    xlinkHref: 'xlink:href',
	    xlinkRole: 'xlink:role',
	    xlinkShow: 'xlink:show',
	    xlinkTitle: 'xlink:title',
	    xlinkType: 'xlink:type',
	    xmlBase: 'xml:base',
	    xmlLang: 'xml:lang',
	    xmlSpace: 'xml:space'
	  }
	};
	
	module.exports = SVGDOMPropertyConfig;

/***/ },
/* 461 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SelectEventPlugin
	 */
	
	'use strict';
	
	var EventConstants = __webpack_require__(34);
	var EventPropagators = __webpack_require__(61);
	var ExecutionEnvironment = __webpack_require__(10);
	var ReactInputSelection = __webpack_require__(166);
	var SyntheticEvent = __webpack_require__(44);
	
	var getActiveElement = __webpack_require__(181);
	var isTextInputElement = __webpack_require__(177);
	var keyOf = __webpack_require__(38);
	var shallowEqual = __webpack_require__(183);
	
	var topLevelTypes = EventConstants.topLevelTypes;
	
	var skipSelectionChangeEvent = ExecutionEnvironment.canUseDOM && 'documentMode' in document && document.documentMode <= 11;
	
	var eventTypes = {
	  select: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSelect: null }),
	      captured: keyOf({ onSelectCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topContextMenu, topLevelTypes.topFocus, topLevelTypes.topKeyDown, topLevelTypes.topMouseDown, topLevelTypes.topMouseUp, topLevelTypes.topSelectionChange]
	  }
	};
	
	var activeElement = null;
	var activeElementID = null;
	var lastSelection = null;
	var mouseDown = false;
	
	// Track whether a listener exists for this plugin. If none exist, we do
	// not extract events.
	var hasListener = false;
	var ON_SELECT_KEY = keyOf({ onSelect: null });
	
	/**
	 * Get an object which is a unique representation of the current selection.
	 *
	 * The return value will not be consistent across nodes or browsers, but
	 * two identical selections on the same node will return identical objects.
	 *
	 * @param {DOMElement} node
	 * @return {object}
	 */
	function getSelection(node) {
	  if ('selectionStart' in node && ReactInputSelection.hasSelectionCapabilities(node)) {
	    return {
	      start: node.selectionStart,
	      end: node.selectionEnd
	    };
	  } else if (window.getSelection) {
	    var selection = window.getSelection();
	    return {
	      anchorNode: selection.anchorNode,
	      anchorOffset: selection.anchorOffset,
	      focusNode: selection.focusNode,
	      focusOffset: selection.focusOffset
	    };
	  } else if (document.selection) {
	    var range = document.selection.createRange();
	    return {
	      parentElement: range.parentElement(),
	      text: range.text,
	      top: range.boundingTop,
	      left: range.boundingLeft
	    };
	  }
	}
	
	/**
	 * Poll selection to see whether it's changed.
	 *
	 * @param {object} nativeEvent
	 * @return {?SyntheticEvent}
	 */
	function constructSelectEvent(nativeEvent, nativeEventTarget) {
	  // Ensure we have the right element, and that the user is not dragging a
	  // selection (this matches native `select` event behavior). In HTML5, select
	  // fires only on input and textarea thus if there's no focused element we
	  // won't dispatch.
	  if (mouseDown || activeElement == null || activeElement !== getActiveElement()) {
	    return null;
	  }
	
	  // Only fire when selection has actually changed.
	  var currentSelection = getSelection(activeElement);
	  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
	    lastSelection = currentSelection;
	
	    var syntheticEvent = SyntheticEvent.getPooled(eventTypes.select, activeElementID, nativeEvent, nativeEventTarget);
	
	    syntheticEvent.type = 'select';
	    syntheticEvent.target = activeElement;
	
	    EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);
	
	    return syntheticEvent;
	  }
	
	  return null;
	}
	
	/**
	 * This plugin creates an `onSelect` event that normalizes select events
	 * across form elements.
	 *
	 * Supported elements are:
	 * - input (see `isTextInputElement`)
	 * - textarea
	 * - contentEditable
	 *
	 * This differs from native browser implementations in the following ways:
	 * - Fires on contentEditable fields as well as inputs.
	 * - Fires for collapsed selection.
	 * - Fires after user input.
	 */
	var SelectEventPlugin = {
	
	  eventTypes: eventTypes,
	
	  /**
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {DOMEventTarget} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native browser event.
	   * @return {*} An accumulation of synthetic events.
	   * @see {EventPluginHub.extractEvents}
	   */
	  extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
	    if (!hasListener) {
	      return null;
	    }
	
	    switch (topLevelType) {
	      // Track the input node that has focus.
	      case topLevelTypes.topFocus:
	        if (isTextInputElement(topLevelTarget) || topLevelTarget.contentEditable === 'true') {
	          activeElement = topLevelTarget;
	          activeElementID = topLevelTargetID;
	          lastSelection = null;
	        }
	        break;
	      case topLevelTypes.topBlur:
	        activeElement = null;
	        activeElementID = null;
	        lastSelection = null;
	        break;
	
	      // Don't fire the event while the user is dragging. This matches the
	      // semantics of the native select event.
	      case topLevelTypes.topMouseDown:
	        mouseDown = true;
	        break;
	      case topLevelTypes.topContextMenu:
	      case topLevelTypes.topMouseUp:
	        mouseDown = false;
	        return constructSelectEvent(nativeEvent, nativeEventTarget);
	
	      // Chrome and IE fire non-standard event when selection is changed (and
	      // sometimes when it hasn't). IE's event fires out of order with respect
	      // to key and input events on deletion, so we discard it.
	      //
	      // Firefox doesn't support selectionchange, so check selection status
	      // after each key entry. The selection changes after keydown and before
	      // keyup, but we check on keydown as well in the case of holding down a
	      // key, when multiple keydown events are fired but only one keyup is.
	      // This is also our approach for IE handling, for the reason above.
	      case topLevelTypes.topSelectionChange:
	        if (skipSelectionChangeEvent) {
	          break;
	        }
	      // falls through
	      case topLevelTypes.topKeyDown:
	      case topLevelTypes.topKeyUp:
	        return constructSelectEvent(nativeEvent, nativeEventTarget);
	    }
	
	    return null;
	  },
	
	  didPutListener: function (id, registrationName, listener) {
	    if (registrationName === ON_SELECT_KEY) {
	      hasListener = true;
	    }
	  }
	};
	
	module.exports = SelectEventPlugin;

/***/ },
/* 462 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ServerReactRootIndex
	 * @typechecks
	 */
	
	'use strict';
	
	/**
	 * Size of the reactRoot ID space. We generate random numbers for React root
	 * IDs and if there's a collision the events and DOM update system will
	 * get confused. In the future we need a way to generate GUIDs but for
	 * now this will work on a smaller scale.
	 */
	var GLOBAL_MOUNT_POINT_MAX = Math.pow(2, 53);
	
	var ServerReactRootIndex = {
	  createReactRootIndex: function () {
	    return Math.ceil(Math.random() * GLOBAL_MOUNT_POINT_MAX);
	  }
	};
	
	module.exports = ServerReactRootIndex;

/***/ },
/* 463 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SimpleEventPlugin
	 */
	
	'use strict';
	
	var EventConstants = __webpack_require__(34);
	var EventListener = __webpack_require__(178);
	var EventPropagators = __webpack_require__(61);
	var ReactMount = __webpack_require__(13);
	var SyntheticClipboardEvent = __webpack_require__(464);
	var SyntheticEvent = __webpack_require__(44);
	var SyntheticFocusEvent = __webpack_require__(467);
	var SyntheticKeyboardEvent = __webpack_require__(469);
	var SyntheticMouseEvent = __webpack_require__(74);
	var SyntheticDragEvent = __webpack_require__(466);
	var SyntheticTouchEvent = __webpack_require__(470);
	var SyntheticUIEvent = __webpack_require__(63);
	var SyntheticWheelEvent = __webpack_require__(471);
	
	var emptyFunction = __webpack_require__(27);
	var getEventCharCode = __webpack_require__(110);
	var invariant = __webpack_require__(4);
	var keyOf = __webpack_require__(38);
	
	var topLevelTypes = EventConstants.topLevelTypes;
	
	var eventTypes = {
	  abort: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onAbort: true }),
	      captured: keyOf({ onAbortCapture: true })
	    }
	  },
	  blur: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onBlur: true }),
	      captured: keyOf({ onBlurCapture: true })
	    }
	  },
	  canPlay: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCanPlay: true }),
	      captured: keyOf({ onCanPlayCapture: true })
	    }
	  },
	  canPlayThrough: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCanPlayThrough: true }),
	      captured: keyOf({ onCanPlayThroughCapture: true })
	    }
	  },
	  click: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onClick: true }),
	      captured: keyOf({ onClickCapture: true })
	    }
	  },
	  contextMenu: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onContextMenu: true }),
	      captured: keyOf({ onContextMenuCapture: true })
	    }
	  },
	  copy: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCopy: true }),
	      captured: keyOf({ onCopyCapture: true })
	    }
	  },
	  cut: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCut: true }),
	      captured: keyOf({ onCutCapture: true })
	    }
	  },
	  doubleClick: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDoubleClick: true }),
	      captured: keyOf({ onDoubleClickCapture: true })
	    }
	  },
	  drag: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDrag: true }),
	      captured: keyOf({ onDragCapture: true })
	    }
	  },
	  dragEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragEnd: true }),
	      captured: keyOf({ onDragEndCapture: true })
	    }
	  },
	  dragEnter: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragEnter: true }),
	      captured: keyOf({ onDragEnterCapture: true })
	    }
	  },
	  dragExit: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragExit: true }),
	      captured: keyOf({ onDragExitCapture: true })
	    }
	  },
	  dragLeave: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragLeave: true }),
	      captured: keyOf({ onDragLeaveCapture: true })
	    }
	  },
	  dragOver: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragOver: true }),
	      captured: keyOf({ onDragOverCapture: true })
	    }
	  },
	  dragStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragStart: true }),
	      captured: keyOf({ onDragStartCapture: true })
	    }
	  },
	  drop: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDrop: true }),
	      captured: keyOf({ onDropCapture: true })
	    }
	  },
	  durationChange: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDurationChange: true }),
	      captured: keyOf({ onDurationChangeCapture: true })
	    }
	  },
	  emptied: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onEmptied: true }),
	      captured: keyOf({ onEmptiedCapture: true })
	    }
	  },
	  encrypted: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onEncrypted: true }),
	      captured: keyOf({ onEncryptedCapture: true })
	    }
	  },
	  ended: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onEnded: true }),
	      captured: keyOf({ onEndedCapture: true })
	    }
	  },
	  error: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onError: true }),
	      captured: keyOf({ onErrorCapture: true })
	    }
	  },
	  focus: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onFocus: true }),
	      captured: keyOf({ onFocusCapture: true })
	    }
	  },
	  input: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onInput: true }),
	      captured: keyOf({ onInputCapture: true })
	    }
	  },
	  keyDown: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onKeyDown: true }),
	      captured: keyOf({ onKeyDownCapture: true })
	    }
	  },
	  keyPress: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onKeyPress: true }),
	      captured: keyOf({ onKeyPressCapture: true })
	    }
	  },
	  keyUp: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onKeyUp: true }),
	      captured: keyOf({ onKeyUpCapture: true })
	    }
	  },
	  load: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoad: true }),
	      captured: keyOf({ onLoadCapture: true })
	    }
	  },
	  loadedData: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoadedData: true }),
	      captured: keyOf({ onLoadedDataCapture: true })
	    }
	  },
	  loadedMetadata: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoadedMetadata: true }),
	      captured: keyOf({ onLoadedMetadataCapture: true })
	    }
	  },
	  loadStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoadStart: true }),
	      captured: keyOf({ onLoadStartCapture: true })
	    }
	  },
	  // Note: We do not allow listening to mouseOver events. Instead, use the
	  // onMouseEnter/onMouseLeave created by `EnterLeaveEventPlugin`.
	  mouseDown: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseDown: true }),
	      captured: keyOf({ onMouseDownCapture: true })
	    }
	  },
	  mouseMove: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseMove: true }),
	      captured: keyOf({ onMouseMoveCapture: true })
	    }
	  },
	  mouseOut: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseOut: true }),
	      captured: keyOf({ onMouseOutCapture: true })
	    }
	  },
	  mouseOver: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseOver: true }),
	      captured: keyOf({ onMouseOverCapture: true })
	    }
	  },
	  mouseUp: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseUp: true }),
	      captured: keyOf({ onMouseUpCapture: true })
	    }
	  },
	  paste: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPaste: true }),
	      captured: keyOf({ onPasteCapture: true })
	    }
	  },
	  pause: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPause: true }),
	      captured: keyOf({ onPauseCapture: true })
	    }
	  },
	  play: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPlay: true }),
	      captured: keyOf({ onPlayCapture: true })
	    }
	  },
	  playing: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPlaying: true }),
	      captured: keyOf({ onPlayingCapture: true })
	    }
	  },
	  progress: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onProgress: true }),
	      captured: keyOf({ onProgressCapture: true })
	    }
	  },
	  rateChange: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onRateChange: true }),
	      captured: keyOf({ onRateChangeCapture: true })
	    }
	  },
	  reset: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onReset: true }),
	      captured: keyOf({ onResetCapture: true })
	    }
	  },
	  scroll: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onScroll: true }),
	      captured: keyOf({ onScrollCapture: true })
	    }
	  },
	  seeked: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSeeked: true }),
	      captured: keyOf({ onSeekedCapture: true })
	    }
	  },
	  seeking: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSeeking: true }),
	      captured: keyOf({ onSeekingCapture: true })
	    }
	  },
	  stalled: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onStalled: true }),
	      captured: keyOf({ onStalledCapture: true })
	    }
	  },
	  submit: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSubmit: true }),
	      captured: keyOf({ onSubmitCapture: true })
	    }
	  },
	  suspend: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSuspend: true }),
	      captured: keyOf({ onSuspendCapture: true })
	    }
	  },
	  timeUpdate: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTimeUpdate: true }),
	      captured: keyOf({ onTimeUpdateCapture: true })
	    }
	  },
	  touchCancel: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchCancel: true }),
	      captured: keyOf({ onTouchCancelCapture: true })
	    }
	  },
	  touchEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchEnd: true }),
	      captured: keyOf({ onTouchEndCapture: true })
	    }
	  },
	  touchMove: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchMove: true }),
	      captured: keyOf({ onTouchMoveCapture: true })
	    }
	  },
	  touchStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchStart: true }),
	      captured: keyOf({ onTouchStartCapture: true })
	    }
	  },
	  volumeChange: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onVolumeChange: true }),
	      captured: keyOf({ onVolumeChangeCapture: true })
	    }
	  },
	  waiting: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onWaiting: true }),
	      captured: keyOf({ onWaitingCapture: true })
	    }
	  },
	  wheel: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onWheel: true }),
	      captured: keyOf({ onWheelCapture: true })
	    }
	  }
	};
	
	var topLevelEventsToDispatchConfig = {
	  topAbort: eventTypes.abort,
	  topBlur: eventTypes.blur,
	  topCanPlay: eventTypes.canPlay,
	  topCanPlayThrough: eventTypes.canPlayThrough,
	  topClick: eventTypes.click,
	  topContextMenu: eventTypes.contextMenu,
	  topCopy: eventTypes.copy,
	  topCut: eventTypes.cut,
	  topDoubleClick: eventTypes.doubleClick,
	  topDrag: eventTypes.drag,
	  topDragEnd: eventTypes.dragEnd,
	  topDragEnter: eventTypes.dragEnter,
	  topDragExit: eventTypes.dragExit,
	  topDragLeave: eventTypes.dragLeave,
	  topDragOver: eventTypes.dragOver,
	  topDragStart: eventTypes.dragStart,
	  topDrop: eventTypes.drop,
	  topDurationChange: eventTypes.durationChange,
	  topEmptied: eventTypes.emptied,
	  topEncrypted: eventTypes.encrypted,
	  topEnded: eventTypes.ended,
	  topError: eventTypes.error,
	  topFocus: eventTypes.focus,
	  topInput: eventTypes.input,
	  topKeyDown: eventTypes.keyDown,
	  topKeyPress: eventTypes.keyPress,
	  topKeyUp: eventTypes.keyUp,
	  topLoad: eventTypes.load,
	  topLoadedData: eventTypes.loadedData,
	  topLoadedMetadata: eventTypes.loadedMetadata,
	  topLoadStart: eventTypes.loadStart,
	  topMouseDown: eventTypes.mouseDown,
	  topMouseMove: eventTypes.mouseMove,
	  topMouseOut: eventTypes.mouseOut,
	  topMouseOver: eventTypes.mouseOver,
	  topMouseUp: eventTypes.mouseUp,
	  topPaste: eventTypes.paste,
	  topPause: eventTypes.pause,
	  topPlay: eventTypes.play,
	  topPlaying: eventTypes.playing,
	  topProgress: eventTypes.progress,
	  topRateChange: eventTypes.rateChange,
	  topReset: eventTypes.reset,
	  topScroll: eventTypes.scroll,
	  topSeeked: eventTypes.seeked,
	  topSeeking: eventTypes.seeking,
	  topStalled: eventTypes.stalled,
	  topSubmit: eventTypes.submit,
	  topSuspend: eventTypes.suspend,
	  topTimeUpdate: eventTypes.timeUpdate,
	  topTouchCancel: eventTypes.touchCancel,
	  topTouchEnd: eventTypes.touchEnd,
	  topTouchMove: eventTypes.touchMove,
	  topTouchStart: eventTypes.touchStart,
	  topVolumeChange: eventTypes.volumeChange,
	  topWaiting: eventTypes.waiting,
	  topWheel: eventTypes.wheel
	};
	
	for (var type in topLevelEventsToDispatchConfig) {
	  topLevelEventsToDispatchConfig[type].dependencies = [type];
	}
	
	var ON_CLICK_KEY = keyOf({ onClick: null });
	var onClickListeners = {};
	
	var SimpleEventPlugin = {
	
	  eventTypes: eventTypes,
	
	  /**
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {DOMEventTarget} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native browser event.
	   * @return {*} An accumulation of synthetic events.
	   * @see {EventPluginHub.extractEvents}
	   */
	  extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
	    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];
	    if (!dispatchConfig) {
	      return null;
	    }
	    var EventConstructor;
	    switch (topLevelType) {
	      case topLevelTypes.topAbort:
	      case topLevelTypes.topCanPlay:
	      case topLevelTypes.topCanPlayThrough:
	      case topLevelTypes.topDurationChange:
	      case topLevelTypes.topEmptied:
	      case topLevelTypes.topEncrypted:
	      case topLevelTypes.topEnded:
	      case topLevelTypes.topError:
	      case topLevelTypes.topInput:
	      case topLevelTypes.topLoad:
	      case topLevelTypes.topLoadedData:
	      case topLevelTypes.topLoadedMetadata:
	      case topLevelTypes.topLoadStart:
	      case topLevelTypes.topPause:
	      case topLevelTypes.topPlay:
	      case topLevelTypes.topPlaying:
	      case topLevelTypes.topProgress:
	      case topLevelTypes.topRateChange:
	      case topLevelTypes.topReset:
	      case topLevelTypes.topSeeked:
	      case topLevelTypes.topSeeking:
	      case topLevelTypes.topStalled:
	      case topLevelTypes.topSubmit:
	      case topLevelTypes.topSuspend:
	      case topLevelTypes.topTimeUpdate:
	      case topLevelTypes.topVolumeChange:
	      case topLevelTypes.topWaiting:
	        // HTML Events
	        // @see http://www.w3.org/TR/html5/index.html#events-0
	        EventConstructor = SyntheticEvent;
	        break;
	      case topLevelTypes.topKeyPress:
	        // FireFox creates a keypress event for function keys too. This removes
	        // the unwanted keypress events. Enter is however both printable and
	        // non-printable. One would expect Tab to be as well (but it isn't).
	        if (getEventCharCode(nativeEvent) === 0) {
	          return null;
	        }
	      /* falls through */
	      case topLevelTypes.topKeyDown:
	      case topLevelTypes.topKeyUp:
	        EventConstructor = SyntheticKeyboardEvent;
	        break;
	      case topLevelTypes.topBlur:
	      case topLevelTypes.topFocus:
	        EventConstructor = SyntheticFocusEvent;
	        break;
	      case topLevelTypes.topClick:
	        // Firefox creates a click event on right mouse clicks. This removes the
	        // unwanted click events.
	        if (nativeEvent.button === 2) {
	          return null;
	        }
	      /* falls through */
	      case topLevelTypes.topContextMenu:
	      case topLevelTypes.topDoubleClick:
	      case topLevelTypes.topMouseDown:
	      case topLevelTypes.topMouseMove:
	      case topLevelTypes.topMouseOut:
	      case topLevelTypes.topMouseOver:
	      case topLevelTypes.topMouseUp:
	        EventConstructor = SyntheticMouseEvent;
	        break;
	      case topLevelTypes.topDrag:
	      case topLevelTypes.topDragEnd:
	      case topLevelTypes.topDragEnter:
	      case topLevelTypes.topDragExit:
	      case topLevelTypes.topDragLeave:
	      case topLevelTypes.topDragOver:
	      case topLevelTypes.topDragStart:
	      case topLevelTypes.topDrop:
	        EventConstructor = SyntheticDragEvent;
	        break;
	      case topLevelTypes.topTouchCancel:
	      case topLevelTypes.topTouchEnd:
	      case topLevelTypes.topTouchMove:
	      case topLevelTypes.topTouchStart:
	        EventConstructor = SyntheticTouchEvent;
	        break;
	      case topLevelTypes.topScroll:
	        EventConstructor = SyntheticUIEvent;
	        break;
	      case topLevelTypes.topWheel:
	        EventConstructor = SyntheticWheelEvent;
	        break;
	      case topLevelTypes.topCopy:
	      case topLevelTypes.topCut:
	      case topLevelTypes.topPaste:
	        EventConstructor = SyntheticClipboardEvent;
	        break;
	    }
	    !EventConstructor ? process.env.NODE_ENV !== 'production' ? invariant(false, 'SimpleEventPlugin: Unhandled event type, `%s`.', topLevelType) : invariant(false) : undefined;
	    var event = EventConstructor.getPooled(dispatchConfig, topLevelTargetID, nativeEvent, nativeEventTarget);
	    EventPropagators.accumulateTwoPhaseDispatches(event);
	    return event;
	  },
	
	  didPutListener: function (id, registrationName, listener) {
	    // Mobile Safari does not fire properly bubble click events on
	    // non-interactive elements, which means delegated click listeners do not
	    // fire. The workaround for this bug involves attaching an empty click
	    // listener on the target node.
	    if (registrationName === ON_CLICK_KEY) {
	      var node = ReactMount.getNode(id);
	      if (!onClickListeners[id]) {
	        onClickListeners[id] = EventListener.listen(node, 'click', emptyFunction);
	      }
	    }
	  },
	
	  willDeleteListener: function (id, registrationName) {
	    if (registrationName === ON_CLICK_KEY) {
	      onClickListeners[id].remove();
	      delete onClickListeners[id];
	    }
	  }
	
	};
	
	module.exports = SimpleEventPlugin;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 464 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticClipboardEvent
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(44);
	
	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/clipboard-apis/
	 */
	var ClipboardEventInterface = {
	  clipboardData: function (event) {
	    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;
	  }
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);
	
	module.exports = SyntheticClipboardEvent;

/***/ },
/* 465 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticCompositionEvent
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(44);
	
	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
	 */
	var CompositionEventInterface = {
	  data: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticCompositionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticEvent.augmentClass(SyntheticCompositionEvent, CompositionEventInterface);
	
	module.exports = SyntheticCompositionEvent;

/***/ },
/* 466 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticDragEvent
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var SyntheticMouseEvent = __webpack_require__(74);
	
	/**
	 * @interface DragEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var DragEventInterface = {
	  dataTransfer: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);
	
	module.exports = SyntheticDragEvent;

/***/ },
/* 467 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticFocusEvent
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var SyntheticUIEvent = __webpack_require__(63);
	
	/**
	 * @interface FocusEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var FocusEventInterface = {
	  relatedTarget: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);
	
	module.exports = SyntheticFocusEvent;

/***/ },
/* 468 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticInputEvent
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(44);
	
	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
	 *      /#events-inputevents
	 */
	var InputEventInterface = {
	  data: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticInputEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticEvent.augmentClass(SyntheticInputEvent, InputEventInterface);
	
	module.exports = SyntheticInputEvent;

/***/ },
/* 469 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticKeyboardEvent
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var SyntheticUIEvent = __webpack_require__(63);
	
	var getEventCharCode = __webpack_require__(110);
	var getEventKey = __webpack_require__(476);
	var getEventModifierState = __webpack_require__(111);
	
	/**
	 * @interface KeyboardEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var KeyboardEventInterface = {
	  key: getEventKey,
	  location: null,
	  ctrlKey: null,
	  shiftKey: null,
	  altKey: null,
	  metaKey: null,
	  repeat: null,
	  locale: null,
	  getModifierState: getEventModifierState,
	  // Legacy Interface
	  charCode: function (event) {
	    // `charCode` is the result of a KeyPress event and represents the value of
	    // the actual printable character.
	
	    // KeyPress is deprecated, but its replacement is not yet final and not
	    // implemented in any major browser. Only KeyPress has charCode.
	    if (event.type === 'keypress') {
	      return getEventCharCode(event);
	    }
	    return 0;
	  },
	  keyCode: function (event) {
	    // `keyCode` is the result of a KeyDown/Up event and represents the value of
	    // physical keyboard key.
	
	    // The actual meaning of the value depends on the users' keyboard layout
	    // which cannot be detected. Assuming that it is a US keyboard layout
	    // provides a surprisingly accurate mapping for US and European users.
	    // Due to this, it is left to the user to implement at this time.
	    if (event.type === 'keydown' || event.type === 'keyup') {
	      return event.keyCode;
	    }
	    return 0;
	  },
	  which: function (event) {
	    // `which` is an alias for either `keyCode` or `charCode` depending on the
	    // type of the event.
	    if (event.type === 'keypress') {
	      return getEventCharCode(event);
	    }
	    if (event.type === 'keydown' || event.type === 'keyup') {
	      return event.keyCode;
	    }
	    return 0;
	  }
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);
	
	module.exports = SyntheticKeyboardEvent;

/***/ },
/* 470 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticTouchEvent
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var SyntheticUIEvent = __webpack_require__(63);
	
	var getEventModifierState = __webpack_require__(111);
	
	/**
	 * @interface TouchEvent
	 * @see http://www.w3.org/TR/touch-events/
	 */
	var TouchEventInterface = {
	  touches: null,
	  targetTouches: null,
	  changedTouches: null,
	  altKey: null,
	  metaKey: null,
	  ctrlKey: null,
	  shiftKey: null,
	  getModifierState: getEventModifierState
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);
	
	module.exports = SyntheticTouchEvent;

/***/ },
/* 471 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticWheelEvent
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var SyntheticMouseEvent = __webpack_require__(74);
	
	/**
	 * @interface WheelEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var WheelEventInterface = {
	  deltaX: function (event) {
	    return 'deltaX' in event ? event.deltaX :
	    // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
	    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;
	  },
	  deltaY: function (event) {
	    return 'deltaY' in event ? event.deltaY :
	    // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
	    'wheelDeltaY' in event ? -event.wheelDeltaY :
	    // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
	    'wheelDelta' in event ? -event.wheelDelta : 0;
	  },
	  deltaZ: null,
	
	  // Browsers without "deltaMode" is reporting in raw wheel delta where one
	  // notch on the scroll is always +/- 120, roughly equivalent to pixels.
	  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
	  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
	  deltaMode: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticMouseEvent}
	 */
	function SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);
	
	module.exports = SyntheticWheelEvent;

/***/ },
/* 472 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule adler32
	 */
	
	'use strict';
	
	var MOD = 65521;
	
	// adler32 is not cryptographically strong, and is only used to sanity check that
	// markup generated on the server matches the markup generated on the client.
	// This implementation (a modified version of the SheetJS version) has been optimized
	// for our use case, at the expense of conforming to the adler32 specification
	// for non-ascii inputs.
	function adler32(data) {
	  var a = 1;
	  var b = 0;
	  var i = 0;
	  var l = data.length;
	  var m = l & ~0x3;
	  while (i < m) {
	    for (; i < Math.min(i + 4096, m); i += 4) {
	      b += (a += data.charCodeAt(i)) + (a += data.charCodeAt(i + 1)) + (a += data.charCodeAt(i + 2)) + (a += data.charCodeAt(i + 3));
	    }
	    a %= MOD;
	    b %= MOD;
	  }
	  for (; i < l; i++) {
	    b += a += data.charCodeAt(i);
	  }
	  a %= MOD;
	  b %= MOD;
	  return a | b << 16;
	}
	
	module.exports = adler32;

/***/ },
/* 473 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule dangerousStyleValue
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var CSSProperty = __webpack_require__(150);
	
	var isUnitlessNumber = CSSProperty.isUnitlessNumber;
	
	/**
	 * Convert a value into the proper css writable value. The style name `name`
	 * should be logical (no hyphens), as specified
	 * in `CSSProperty.isUnitlessNumber`.
	 *
	 * @param {string} name CSS property name such as `topMargin`.
	 * @param {*} value CSS property value such as `10px`.
	 * @return {string} Normalized style value with dimensions applied.
	 */
	function dangerousStyleValue(name, value) {
	  // Note that we've removed escapeTextForBrowser() calls here since the
	  // whole string will be escaped when the attribute is injected into
	  // the markup. If you provide unsafe user data here they can inject
	  // arbitrary CSS which may be problematic (I couldn't repro this):
	  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
	  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
	  // This is not an XSS hole but instead a potential CSS injection issue
	  // which has lead to a greater discussion about how we're going to
	  // trust URLs moving forward. See #2115901
	
	  var isEmpty = value == null || typeof value === 'boolean' || value === '';
	  if (isEmpty) {
	    return '';
	  }
	
	  var isNonNumeric = isNaN(value);
	  if (isNonNumeric || value === 0 || isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {
	    return '' + value; // cast to string
	  }
	
	  if (typeof value === 'string') {
	    value = value.trim();
	  }
	  return value + 'px';
	}
	
	module.exports = dangerousStyleValue;

/***/ },
/* 474 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule deprecated
	 */
	
	'use strict';
	
	var assign = __webpack_require__(5);
	var warning = __webpack_require__(6);
	
	/**
	 * This will log a single deprecation notice per function and forward the call
	 * on to the new API.
	 *
	 * @param {string} fnName The name of the function
	 * @param {string} newModule The module that fn will exist in
	 * @param {string} newPackage The module that fn will exist in
	 * @param {*} ctx The context this forwarded call should run in
	 * @param {function} fn The function to forward on to
	 * @return {function} The function that will warn once and then call fn
	 */
	function deprecated(fnName, newModule, newPackage, ctx, fn) {
	  var warned = false;
	  if (process.env.NODE_ENV !== 'production') {
	    var newFn = function () {
	      process.env.NODE_ENV !== 'production' ? warning(warned,
	      // Require examples in this string must be split to prevent React's
	      // build tools from mistaking them for real requires.
	      // Otherwise the build tools will attempt to build a '%s' module.
	      'React.%s is deprecated. Please use %s.%s from require' + '(\'%s\') ' + 'instead.', fnName, newModule, fnName, newPackage) : undefined;
	      warned = true;
	      return fn.apply(ctx, arguments);
	    };
	    // We need to make sure all properties of the original fn are copied over.
	    // In particular, this is needed to support PropTypes
	    return assign(newFn, fn);
	  }
	
	  return fn;
	}
	
	module.exports = deprecated;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 475 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule flattenChildren
	 */
	
	'use strict';
	
	var traverseAllChildren = __webpack_require__(118);
	var warning = __webpack_require__(6);
	
	/**
	 * @param {function} traverseContext Context passed through traversal.
	 * @param {?ReactComponent} child React child component.
	 * @param {!string} name String name of key path to child.
	 */
	function flattenSingleChildIntoContext(traverseContext, child, name) {
	  // We found a component instance.
	  var result = traverseContext;
	  var keyUnique = result[name] === undefined;
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(keyUnique, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.', name) : undefined;
	  }
	  if (keyUnique && child != null) {
	    result[name] = child;
	  }
	}
	
	/**
	 * Flattens children that are typically specified as `props.children`. Any null
	 * children will not be included in the resulting object.
	 * @return {!object} flattened children keyed by name.
	 */
	function flattenChildren(children) {
	  if (children == null) {
	    return children;
	  }
	  var result = {};
	  traverseAllChildren(children, flattenSingleChildIntoContext, result);
	  return result;
	}
	
	module.exports = flattenChildren;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 476 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventKey
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var getEventCharCode = __webpack_require__(110);
	
	/**
	 * Normalization of deprecated HTML5 `key` values
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
	 */
	var normalizeKey = {
	  'Esc': 'Escape',
	  'Spacebar': ' ',
	  'Left': 'ArrowLeft',
	  'Up': 'ArrowUp',
	  'Right': 'ArrowRight',
	  'Down': 'ArrowDown',
	  'Del': 'Delete',
	  'Win': 'OS',
	  'Menu': 'ContextMenu',
	  'Apps': 'ContextMenu',
	  'Scroll': 'ScrollLock',
	  'MozPrintableKey': 'Unidentified'
	};
	
	/**
	 * Translation from legacy `keyCode` to HTML5 `key`
	 * Only special keys supported, all others depend on keyboard layout or browser
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
	 */
	var translateToKey = {
	  8: 'Backspace',
	  9: 'Tab',
	  12: 'Clear',
	  13: 'Enter',
	  16: 'Shift',
	  17: 'Control',
	  18: 'Alt',
	  19: 'Pause',
	  20: 'CapsLock',
	  27: 'Escape',
	  32: ' ',
	  33: 'PageUp',
	  34: 'PageDown',
	  35: 'End',
	  36: 'Home',
	  37: 'ArrowLeft',
	  38: 'ArrowUp',
	  39: 'ArrowRight',
	  40: 'ArrowDown',
	  45: 'Insert',
	  46: 'Delete',
	  112: 'F1', 113: 'F2', 114: 'F3', 115: 'F4', 116: 'F5', 117: 'F6',
	  118: 'F7', 119: 'F8', 120: 'F9', 121: 'F10', 122: 'F11', 123: 'F12',
	  144: 'NumLock',
	  145: 'ScrollLock',
	  224: 'Meta'
	};
	
	/**
	 * @param {object} nativeEvent Native browser event.
	 * @return {string} Normalized `key` property.
	 */
	function getEventKey(nativeEvent) {
	  if (nativeEvent.key) {
	    // Normalize inconsistent values reported by browsers due to
	    // implementations of a working draft specification.
	
	    // FireFox implements `key` but returns `MozPrintableKey` for all
	    // printable characters (normalized to `Unidentified`), ignore it.
	    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
	    if (key !== 'Unidentified') {
	      return key;
	    }
	  }
	
	  // Browser does not implement `key`, polyfill as much of it as we can.
	  if (nativeEvent.type === 'keypress') {
	    var charCode = getEventCharCode(nativeEvent);
	
	    // The enter-key is technically both printable and non-printable and can
	    // thus be captured by `keypress`, no other non-printable key should.
	    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
	  }
	  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
	    // While user keyboard layout determines the actual meaning of each
	    // `keyCode` value, almost all function keys have a universal value.
	    return translateToKey[nativeEvent.keyCode] || 'Unidentified';
	  }
	  return '';
	}
	
	module.exports = getEventKey;

/***/ },
/* 477 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getNodeForCharacterOffset
	 */
	
	'use strict';
	
	/**
	 * Given any node return the first leaf node without children.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @return {DOMElement|DOMTextNode}
	 */
	function getLeafNode(node) {
	  while (node && node.firstChild) {
	    node = node.firstChild;
	  }
	  return node;
	}
	
	/**
	 * Get the next sibling within a container. This will walk up the
	 * DOM if a node's siblings have been exhausted.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @return {?DOMElement|DOMTextNode}
	 */
	function getSiblingNode(node) {
	  while (node) {
	    if (node.nextSibling) {
	      return node.nextSibling;
	    }
	    node = node.parentNode;
	  }
	}
	
	/**
	 * Get object describing the nodes which contain characters at offset.
	 *
	 * @param {DOMElement|DOMTextNode} root
	 * @param {number} offset
	 * @return {?object}
	 */
	function getNodeForCharacterOffset(root, offset) {
	  var node = getLeafNode(root);
	  var nodeStart = 0;
	  var nodeEnd = 0;
	
	  while (node) {
	    if (node.nodeType === 3) {
	      nodeEnd = nodeStart + node.textContent.length;
	
	      if (nodeStart <= offset && nodeEnd >= offset) {
	        return {
	          node: node,
	          offset: offset - nodeStart
	        };
	      }
	
	      nodeStart = nodeEnd;
	    }
	
	    node = getLeafNode(getSiblingNode(node));
	  }
	}
	
	module.exports = getNodeForCharacterOffset;

/***/ },
/* 478 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule onlyChild
	 */
	'use strict';
	
	var ReactElement = __webpack_require__(18);
	
	var invariant = __webpack_require__(4);
	
	/**
	 * Returns the first child in a collection of children and verifies that there
	 * is only one child in the collection. The current implementation of this
	 * function assumes that a single child gets passed without a wrapper, but the
	 * purpose of this helper function is to abstract away the particular structure
	 * of children.
	 *
	 * @param {?object} children Child collection structure.
	 * @return {ReactComponent} The first and only `ReactComponent` contained in the
	 * structure.
	 */
	function onlyChild(children) {
	  !ReactElement.isValidElement(children) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'onlyChild must be passed a children with exactly one child.') : invariant(false) : undefined;
	  return children;
	}
	
	module.exports = onlyChild;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 479 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule quoteAttributeValueForBrowser
	 */
	
	'use strict';
	
	var escapeTextContentForBrowser = __webpack_require__(77);
	
	/**
	 * Escapes attribute value to prevent scripting attacks.
	 *
	 * @param {*} value Value to escape.
	 * @return {string} An escaped string.
	 */
	function quoteAttributeValueForBrowser(value) {
	  return '"' + escapeTextContentForBrowser(value) + '"';
	}
	
	module.exports = quoteAttributeValueForBrowser;

/***/ },
/* 480 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	* @providesModule renderSubtreeIntoContainer
	*/
	
	'use strict';
	
	var ReactMount = __webpack_require__(13);
	
	module.exports = ReactMount.renderSubtreeIntoContainer;

/***/ },
/* 481 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule camelize
	 * @typechecks
	 */
	
	"use strict";
	
	var _hyphenPattern = /-(.)/g;
	
	/**
	 * Camelcases a hyphenated string, for example:
	 *
	 *   > camelize('background-color')
	 *   < "backgroundColor"
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function camelize(string) {
	  return string.replace(_hyphenPattern, function (_, character) {
	    return character.toUpperCase();
	  });
	}
	
	module.exports = camelize;

/***/ },
/* 482 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule camelizeStyleName
	 * @typechecks
	 */
	
	'use strict';
	
	var camelize = __webpack_require__(481);
	
	var msPattern = /^-ms-/;
	
	/**
	 * Camelcases a hyphenated CSS property name, for example:
	 *
	 *   > camelizeStyleName('background-color')
	 *   < "backgroundColor"
	 *   > camelizeStyleName('-moz-transition')
	 *   < "MozTransition"
	 *   > camelizeStyleName('-ms-transition')
	 *   < "msTransition"
	 *
	 * As Andi Smith suggests
	 * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
	 * is converted to lowercase `ms`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function camelizeStyleName(string) {
	  return camelize(string.replace(msPattern, 'ms-'));
	}
	
	module.exports = camelizeStyleName;

/***/ },
/* 483 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule createArrayFromMixed
	 * @typechecks
	 */
	
	'use strict';
	
	var toArray = __webpack_require__(494);
	
	/**
	 * Perform a heuristic test to determine if an object is "array-like".
	 *
	 *   A monk asked Joshu, a Zen master, "Has a dog Buddha nature?"
	 *   Joshu replied: "Mu."
	 *
	 * This function determines if its argument has "array nature": it returns
	 * true if the argument is an actual array, an `arguments' object, or an
	 * HTMLCollection (e.g. node.childNodes or node.getElementsByTagName()).
	 *
	 * It will return false for other array-like objects like Filelist.
	 *
	 * @param {*} obj
	 * @return {boolean}
	 */
	function hasArrayNature(obj) {
	  return(
	    // not null/false
	    !!obj && (
	    // arrays are objects, NodeLists are functions in Safari
	    typeof obj == 'object' || typeof obj == 'function') &&
	    // quacks like an array
	    'length' in obj &&
	    // not window
	    !('setInterval' in obj) &&
	    // no DOM node should be considered an array-like
	    // a 'select' element has 'length' and 'item' properties on IE8
	    typeof obj.nodeType != 'number' && (
	    // a real array
	    Array.isArray(obj) ||
	    // arguments
	    'callee' in obj ||
	    // HTMLCollection/NodeList
	    'item' in obj)
	  );
	}
	
	/**
	 * Ensure that the argument is an array by wrapping it in an array if it is not.
	 * Creates a copy of the argument if it is already an array.
	 *
	 * This is mostly useful idiomatically:
	 *
	 *   var createArrayFromMixed = require('createArrayFromMixed');
	 *
	 *   function takesOneOrMoreThings(things) {
	 *     things = createArrayFromMixed(things);
	 *     ...
	 *   }
	 *
	 * This allows you to treat `things' as an array, but accept scalars in the API.
	 *
	 * If you need to convert an array-like object, like `arguments`, into an array
	 * use toArray instead.
	 *
	 * @param {*} obj
	 * @return {array}
	 */
	function createArrayFromMixed(obj) {
	  if (!hasArrayNature(obj)) {
	    return [obj];
	  } else if (Array.isArray(obj)) {
	    return obj.slice();
	  } else {
	    return toArray(obj);
	  }
	}
	
	module.exports = createArrayFromMixed;

/***/ },
/* 484 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule createNodesFromMarkup
	 * @typechecks
	 */
	
	/*eslint-disable fb-www/unsafe-html*/
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(10);
	
	var createArrayFromMixed = __webpack_require__(483);
	var getMarkupWrap = __webpack_require__(182);
	var invariant = __webpack_require__(4);
	
	/**
	 * Dummy container used to render all markup.
	 */
	var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;
	
	/**
	 * Pattern used by `getNodeName`.
	 */
	var nodeNamePattern = /^\s*<(\w+)/;
	
	/**
	 * Extracts the `nodeName` of the first element in a string of markup.
	 *
	 * @param {string} markup String of markup.
	 * @return {?string} Node name of the supplied markup.
	 */
	function getNodeName(markup) {
	  var nodeNameMatch = markup.match(nodeNamePattern);
	  return nodeNameMatch && nodeNameMatch[1].toLowerCase();
	}
	
	/**
	 * Creates an array containing the nodes rendered from the supplied markup. The
	 * optionally supplied `handleScript` function will be invoked once for each
	 * <script> element that is rendered. If no `handleScript` function is supplied,
	 * an exception is thrown if any <script> elements are rendered.
	 *
	 * @param {string} markup A string of valid HTML markup.
	 * @param {?function} handleScript Invoked once for each rendered <script>.
	 * @return {array<DOMElement|DOMTextNode>} An array of rendered nodes.
	 */
	function createNodesFromMarkup(markup, handleScript) {
	  var node = dummyNode;
	  !!!dummyNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createNodesFromMarkup dummy not initialized') : invariant(false) : undefined;
	  var nodeName = getNodeName(markup);
	
	  var wrap = nodeName && getMarkupWrap(nodeName);
	  if (wrap) {
	    node.innerHTML = wrap[1] + markup + wrap[2];
	
	    var wrapDepth = wrap[0];
	    while (wrapDepth--) {
	      node = node.lastChild;
	    }
	  } else {
	    node.innerHTML = markup;
	  }
	
	  var scripts = node.getElementsByTagName('script');
	  if (scripts.length) {
	    !handleScript ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createNodesFromMarkup(...): Unexpected <script> element rendered.') : invariant(false) : undefined;
	    createArrayFromMixed(scripts).forEach(handleScript);
	  }
	
	  var nodes = createArrayFromMixed(node.childNodes);
	  while (node.lastChild) {
	    node.removeChild(node.lastChild);
	  }
	  return nodes;
	}
	
	module.exports = createNodesFromMarkup;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 485 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getUnboundedScrollPosition
	 * @typechecks
	 */
	
	'use strict';
	
	/**
	 * Gets the scroll position of the supplied element or window.
	 *
	 * The return values are unbounded, unlike `getScrollPosition`. This means they
	 * may be negative or exceed the element boundaries (which is possible using
	 * inertial scrolling).
	 *
	 * @param {DOMWindow|DOMElement} scrollable
	 * @return {object} Map with `x` and `y` keys.
	 */
	function getUnboundedScrollPosition(scrollable) {
	  if (scrollable === window) {
	    return {
	      x: window.pageXOffset || document.documentElement.scrollLeft,
	      y: window.pageYOffset || document.documentElement.scrollTop
	    };
	  }
	  return {
	    x: scrollable.scrollLeft,
	    y: scrollable.scrollTop
	  };
	}
	
	module.exports = getUnboundedScrollPosition;

/***/ },
/* 486 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule hyphenate
	 * @typechecks
	 */
	
	'use strict';
	
	var _uppercasePattern = /([A-Z])/g;
	
	/**
	 * Hyphenates a camelcased string, for example:
	 *
	 *   > hyphenate('backgroundColor')
	 *   < "background-color"
	 *
	 * For CSS style names, use `hyphenateStyleName` instead which works properly
	 * with all vendor prefixes, including `ms`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function hyphenate(string) {
	  return string.replace(_uppercasePattern, '-$1').toLowerCase();
	}
	
	module.exports = hyphenate;

/***/ },
/* 487 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule hyphenateStyleName
	 * @typechecks
	 */
	
	'use strict';
	
	var hyphenate = __webpack_require__(486);
	
	var msPattern = /^ms-/;
	
	/**
	 * Hyphenates a camelcased CSS property name, for example:
	 *
	 *   > hyphenateStyleName('backgroundColor')
	 *   < "background-color"
	 *   > hyphenateStyleName('MozTransition')
	 *   < "-moz-transition"
	 *   > hyphenateStyleName('msTransition')
	 *   < "-ms-transition"
	 *
	 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
	 * is converted to `-ms-`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function hyphenateStyleName(string) {
	  return hyphenate(string).replace(msPattern, '-ms-');
	}
	
	module.exports = hyphenateStyleName;

/***/ },
/* 488 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule isNode
	 * @typechecks
	 */
	
	/**
	 * @param {*} object The object to check.
	 * @return {boolean} Whether or not the object is a DOM node.
	 */
	'use strict';
	
	function isNode(object) {
	  return !!(object && (typeof Node === 'function' ? object instanceof Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));
	}
	
	module.exports = isNode;

/***/ },
/* 489 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule isTextNode
	 * @typechecks
	 */
	
	'use strict';
	
	var isNode = __webpack_require__(488);
	
	/**
	 * @param {*} object The object to check.
	 * @return {boolean} Whether or not the object is a DOM text node.
	 */
	function isTextNode(object) {
	  return isNode(object) && object.nodeType == 3;
	}
	
	module.exports = isTextNode;

/***/ },
/* 490 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule mapObject
	 */
	
	'use strict';
	
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	
	/**
	 * Executes the provided `callback` once for each enumerable own property in the
	 * object and constructs a new object from the results. The `callback` is
	 * invoked with three arguments:
	 *
	 *  - the property value
	 *  - the property name
	 *  - the object being traversed
	 *
	 * Properties that are added after the call to `mapObject` will not be visited
	 * by `callback`. If the values of existing properties are changed, the value
	 * passed to `callback` will be the value at the time `mapObject` visits them.
	 * Properties that are deleted before being visited are not visited.
	 *
	 * @grep function objectMap()
	 * @grep function objMap()
	 *
	 * @param {?object} object
	 * @param {function} callback
	 * @param {*} context
	 * @return {?object}
	 */
	function mapObject(object, callback, context) {
	  if (!object) {
	    return null;
	  }
	  var result = {};
	  for (var name in object) {
	    if (hasOwnProperty.call(object, name)) {
	      result[name] = callback.call(context, object[name], name, object);
	    }
	  }
	  return result;
	}
	
	module.exports = mapObject;

/***/ },
/* 491 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule memoizeStringOnly
	 * @typechecks static-only
	 */
	
	'use strict';
	
	/**
	 * Memoizes the return value of a function that accepts one string argument.
	 *
	 * @param {function} callback
	 * @return {function}
	 */
	function memoizeStringOnly(callback) {
	  var cache = {};
	  return function (string) {
	    if (!cache.hasOwnProperty(string)) {
	      cache[string] = callback.call(this, string);
	    }
	    return cache[string];
	  };
	}
	
	module.exports = memoizeStringOnly;

/***/ },
/* 492 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule performance
	 * @typechecks
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(10);
	
	var performance;
	
	if (ExecutionEnvironment.canUseDOM) {
	  performance = window.performance || window.msPerformance || window.webkitPerformance;
	}
	
	module.exports = performance || {};

/***/ },
/* 493 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule performanceNow
	 * @typechecks
	 */
	
	'use strict';
	
	var performance = __webpack_require__(492);
	
	var performanceNow;
	
	/**
	 * Detect if we can use `window.performance.now()` and gracefully fallback to
	 * `Date.now()` if it doesn't exist. We need to support Firefox < 15 for now
	 * because of Facebook's testing infrastructure.
	 */
	if (performance.now) {
	  performanceNow = function () {
	    return performance.now();
	  };
	} else {
	  performanceNow = function () {
	    return Date.now();
	  };
	}
	
	module.exports = performanceNow;

/***/ },
/* 494 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule toArray
	 * @typechecks
	 */
	
	'use strict';
	
	var invariant = __webpack_require__(4);
	
	/**
	 * Convert array-like objects to arrays.
	 *
	 * This API assumes the caller knows the contents of the data type. For less
	 * well defined inputs use createArrayFromMixed.
	 *
	 * @param {object|function|filelist} obj
	 * @return {array}
	 */
	function toArray(obj) {
	  var length = obj.length;
	
	  // Some browse builtin objects can report typeof 'function' (e.g. NodeList in
	  // old versions of Safari).
	  !(!Array.isArray(obj) && (typeof obj === 'object' || typeof obj === 'function')) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Array-like object expected') : invariant(false) : undefined;
	
	  !(typeof length === 'number') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object needs a length property') : invariant(false) : undefined;
	
	  !(length === 0 || length - 1 in obj) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object should have keys for indices') : invariant(false) : undefined;
	
	  // Old IE doesn't give collections access to hasOwnProperty. Assume inputs
	  // without method will throw during the slice call and skip straight to the
	  // fallback.
	  if (obj.hasOwnProperty) {
	    try {
	      return Array.prototype.slice.call(obj);
	    } catch (e) {
	      // IE < 9 does not support Array#slice on collections objects
	    }
	  }
	
	  // Fall back to copying key by key. This assumes all keys have a value,
	  // so will not preserve sparsely populated inputs.
	  var ret = Array(length);
	  for (var ii = 0; ii < length; ii++) {
	    ret[ii] = obj[ii];
	  }
	  return ret;
	}
	
	module.exports = toArray;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ },
/* 495 */
/***/ function(module, exports, __webpack_require__) {

	/*eslint-env browser*/
	
	var clientOverlay = document.createElement('div');
	var styles = {
	  background: 'rgba(0,0,0,0.85)',
	  color: '#E8E8E8',
	  lineHeight: '1.2',
	  whiteSpace: 'pre',
	  fontFamily: 'Menlo, Consolas, monospace',
	  fontSize: '13px',
	  position: 'fixed',
	  zIndex: 9999,
	  padding: '10px',
	  left: 0,
	  right: 0,
	  top: 0,
	  bottom: 0,
	  overflow: 'auto'
	};
	for (var key in styles) {
	  clientOverlay.style[key] = styles[key];
	}
	
	var ansiHTML = __webpack_require__(497);
	var colors = {
	  reset: ['transparent', 'transparent'],
	  black: '181818',
	  red: 'E36049',
	  green: 'B3CB74',
	  yellow: 'FFD080',
	  blue: '7CAFC2',
	  magenta: '7FACCA',
	  cyan: 'C3C2EF',
	  lightgrey: 'EBE7E3',
	  darkgrey: '6D7891'
	};
	ansiHTML.setColors(colors);
	
	var Entities = __webpack_require__(498).AllHtmlEntities;
	var entities = new Entities();
	
	exports.showProblems =
	function showProblems(type, lines) {
	  clientOverlay.innerHTML = '';
	  lines.forEach(function(msg) {
	    msg = ansiHTML(entities.encode(msg));
	    var div = document.createElement('div');
	    div.style.marginBottom = '26px';
	    div.innerHTML = problemType(type) + ' in ' + msg;
	    clientOverlay.appendChild(div);
	  });
	  if (document.body) {
	    document.body.appendChild(clientOverlay);
	  }
	};
	
	exports.clear =
	function clear() {
	  if (document.body && clientOverlay.parentNode) {
	    document.body.removeChild(clientOverlay);
	  }
	};
	
	var problemColors = {
	  errors: colors.red,
	  warnings: colors.yellow
	};
	
	function problemType (type) {
	  var color = problemColors[type] || colors.red;
	  return (
	    '<span style="background-color:#' + color + '; color:#fff; padding:2px 4px; border-radius: 2px">' +
	      type.slice(0, -1).toUpperCase() +
	    '</span>'
	  );
	}


/***/ },
/* 496 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(module) {/*eslint-env browser*/
	/*global __resourceQuery*/
	
	var options = {
	  path: "/__webpack_hmr",
	  timeout: 20 * 1000,
	  overlay: true,
	  reload: false,
	  log: true,
	  warn: true
	};
	if (false) {
	  var querystring = require('querystring');
	  var overrides = querystring.parse(__resourceQuery.slice(1));
	  if (overrides.path) options.path = overrides.path;
	  if (overrides.timeout) options.timeout = overrides.timeout;
	  if (overrides.overlay) options.overlay = overrides.overlay !== 'false';
	  if (overrides.reload) options.reload = overrides.reload !== 'false';
	  if (overrides.noInfo && overrides.noInfo !== 'false') {
	    options.log = false;
	  }
	  if (overrides.quiet && overrides.quiet !== 'false') {
	    options.log = false;
	    options.warn = false;
	  }
	}
	
	if (typeof window === 'undefined') {
	  // do nothing
	} else if (typeof window.EventSource === 'undefined') {
	  console.warn(
	    "webpack-hot-middleware's client requires EventSource to work. " +
	    "You should include a polyfill if you want to support this browser: " +
	    "https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events#Tools"
	  );
	} else {
	  connect(window.EventSource);
	}
	
	function connect(EventSource) {
	  var source = new EventSource(options.path);
	  var lastActivity = new Date();
	
	  source.onopen = handleOnline;
	  source.onmessage = handleMessage;
	  source.onerror = handleDisconnect;
	
	  var timer = setInterval(function() {
	    if ((new Date() - lastActivity) > options.timeout) {
	      handleDisconnect();
	    }
	  }, options.timeout / 2);
	
	  function handleOnline() {
	    if (options.log) console.log("[HMR] connected");
	    lastActivity = new Date();
	  }
	
	  function handleMessage(event) {
	    lastActivity = new Date();
	    if (event.data == "\uD83D\uDC93") {
	      return;
	    }
	    try {
	      processMessage(JSON.parse(event.data));
	    } catch (ex) {
	      if (options.warn) {
	        console.warn("Invalid HMR message: " + event.data + "\n" + ex);
	      }
	    }
	  }
	
	  function handleDisconnect() {
	    clearInterval(timer);
	    source.close();
	    setTimeout(function() { connect(EventSource); }, options.timeout);
	  }
	
	}
	
	var reporter;
	// the reporter needs to be a singleton on the page
	// in case the client is being used by mutliple bundles
	// we only want to report once.
	// all the errors will go to all clients
	var singletonKey = '__webpack_hot_middleware_reporter__';
	if (typeof window !== 'undefined' && !window[singletonKey]) {
	  reporter = window[singletonKey] = createReporter();
	}
	
	function createReporter() {
	  var strip = __webpack_require__(501);
	
	  var overlay;
	  if (typeof document !== 'undefined' && options.overlay) {
	    overlay = __webpack_require__(495);
	  }
	
	  return {
	    problems: function(type, obj) {
	      if (options.warn) {
	        console.warn("[HMR] bundle has " + type + ":");
	        obj[type].forEach(function(msg) {
	          console.warn("[HMR] " + strip(msg));
	        });
	      }
	      if (overlay && type !== 'warnings') overlay.showProblems(type, obj[type]);
	    },
	    success: function() {
	      if (overlay) overlay.clear();
	    },
	    useCustomOverlay: function(customOverlay) {
	      overlay = customOverlay;
	    }
	  };
	}
	
	var processUpdate = __webpack_require__(503);
	
	var customHandler;
	function processMessage(obj) {
	  if (obj.action == "building") {
	    if (options.log) console.log("[HMR] bundle rebuilding");
	  } else if (obj.action == "built") {
	    if (options.log) {
	      console.log(
	        "[HMR] bundle " + (obj.name ? obj.name + " " : "") +
	        "rebuilt in " + obj.time + "ms"
	      );
	    }
	    if (obj.errors.length > 0) {
	      if (reporter) reporter.problems('errors', obj);
	    } else {
	      if (reporter) {
	        if (obj.warnings.length > 0) reporter.problems('warnings', obj);
	        reporter.success();
	      }
	
	      processUpdate(obj.hash, obj.modules, options);
	    }
	  } else if (customHandler) {
	    customHandler(obj);
	  }
	}
	
	if (module) {
	  module.exports = {
	    subscribe: function subscribe(handler) {
	      customHandler = handler;
	    },
	    useCustomOverlay: function useCustomOverlay(customOverlay) {
	      if (reporter) reporter.useCustomOverlay(customOverlay);
	    }
	  };
	}
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(504)(module)))

/***/ },
/* 497 */
/***/ function(module, exports) {

	module.exports = ansiHTML;
	
	// Reference to https://github.com/sindresorhus/ansi-regex
	var re_ansi = /(?:(?:\u001b\[)|\u009b)(?:(?:[0-9]{1,3})?(?:(?:;[0-9]{0,3})*)?[A-M|f-m])|\u001b[A-M]/;
	
	var _defColors = {
	  reset: ['fff', '000'], // [FOREGROUD_COLOR, BACKGROUND_COLOR]
	  black: '000',
	  red: 'ff0000',
	  green: '209805',
	  yellow: 'e8bf03',
	  blue: '0000ff',
	  magenta: 'ff00ff',
	  cyan: '00ffee',
	  lightgrey: 'f0f0f0',
	  darkgrey: '888'
	};
	var _styles = {
	  30: 'black',
	  31: 'red',
	  32: 'green',
	  33: 'yellow',
	  34: 'blue',
	  35: 'magenta',
	  36: 'cyan',
	  37: 'lightgrey'
	};
	var _openTags = {
	  '1': 'font-weight:bold', // bold
	  '2': 'opacity:0.8', // dim
	  '3': '<i>', // italic
	  '4': '<u>', // underscore
	  '8': 'display:none', // hidden
	  '9': '<del>', // delete
	};
	var _closeTags = {
	  '23': '</i>', // reset italic
	  '24': '</u>', // reset underscore
	  '29': '</del>' // reset delete
	};
	[0, 21, 22, 27, 28, 39, 49].forEach(function (n) {
	  _closeTags[n] = '</span>';
	});
	
	/**
	 * Converts text with ANSI color codes to HTML markup.
	 * @param {String} text
	 * @returns {*}
	 */
	function ansiHTML(text) {
	  // Returns the text if the string has no ANSI escape code.
	  if (!re_ansi.test(text)) {
	    return text;
	  }
	
	  // Cache opened sequence.
	  var ansiCodes = [];
	  // Replace with markup.
	  var ret = text.replace(/\033\[(\d+)*m/g, function (match, seq) {
	    var ot = _openTags[seq];
	    if (ot) {
	      // If current sequence has been opened, close it.
	      if (!!~ansiCodes.indexOf(seq)) {
	        ansiCodes.pop();
	        return '</span>';
	      }
	      // Open tag.
	      ansiCodes.push(seq);
	      return ot[0] == '<' ? ot : '<span style="' + ot + ';">';
	    }
	
	    var ct = _closeTags[seq];
	    if (ct) {
	      // Pop sequence
	      ansiCodes.pop();
	      return ct;
	    }
	    return '';
	  });
	
	  // Make sure tags are closed.
	  var l = ansiCodes.length;
	  (l > 0) && (ret += Array(l + 1).join('</span>'));
	
	  return ret;
	}
	
	/**
	 * Customize colors.
	 * @param {Object} colors reference to _defColors
	 */
	ansiHTML.setColors = function (colors) {
	  if (typeof colors != 'object') {
	    throw new Error('`colors` parameter must be an Object.');
	  }
	
	  var _finalColors = {};
	  for (var key in _defColors) {
	    var hex = colors.hasOwnProperty(key) ? colors[key] : null;
	    if (!hex) {
	      _finalColors[key] = _defColors[key];
	      continue;
	    }
	    if ('reset' == key) {
	    	if(typeof hex == 'string'){
	    		hex = [hex];
	    	}
	      if (!Array.isArray(hex) || hex.length == 0 || hex.some(function (h) {
	          return typeof h != 'string';
	        })) {
	        throw new Error('The value of `' + key + '` property must be an Array and each item could only be a hex string, e.g.: FF0000');
	      }
	      var defHexColor = _defColors[key];
	      if(!hex[0]){
	      	hex[0] = defHexColor[0];
	      }
	      if (hex.length == 1 || !hex[1]) {
	      	hex = [hex[0]];
	        hex.push(defHexColor[1]);
	      }
	
	      hex = hex.slice(0, 2);
	    } else if (typeof hex != 'string') {
	      throw new Error('The value of `' + key + '` property must be a hex string, e.g.: FF0000');
	    }
	    _finalColors[key] = hex;
	  }
	  _setTags(_finalColors);
	};
	
	/**
	 * Reset colors.
	 */
	ansiHTML.reset = function(){
		_setTags(_defColors);
	};
	
	/**
	 * Expose tags, including open and close.
	 * @type {Object}
	 */
	ansiHTML.tags = {
	  get open() {
	    return _openTags;
	  },
	  get close() {
	    return _closeTags;
	  }
	};
	
	function _setTags(colors) {
	  // reset all
	  _openTags['0'] = 'font-weight:normal;opacity:1;color:#' + colors.reset[0] + ';background:#' + colors.reset[1];
	  // inverse
	  _openTags['7'] = 'color:#' + colors.reset[1] + ';background:#' + colors.reset[0];
	  // dark grey
	  _openTags['90'] = 'color:#' + colors.darkgrey;
	
	  for (var code in _styles) {
	    var color = _styles[code];
	    var oriColor = colors[color] || '000';
	    _openTags[code] = 'color:#' + oriColor;
	    code = parseInt(code);
	    _openTags[(code + 10).toString()] = 'background:#' + oriColor;
	  }
	}
	
	ansiHTML.reset();


/***/ },
/* 498 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = {
	  XmlEntities: __webpack_require__(500),
	  Html4Entities: __webpack_require__(499),
	  Html5Entities: __webpack_require__(185),
	  AllHtmlEntities: __webpack_require__(185)
	};


/***/ },
/* 499 */
/***/ function(module, exports) {

	var HTML_ALPHA = ['apos', 'nbsp', 'iexcl', 'cent', 'pound', 'curren', 'yen', 'brvbar', 'sect', 'uml', 'copy', 'ordf', 'laquo', 'not', 'shy', 'reg', 'macr', 'deg', 'plusmn', 'sup2', 'sup3', 'acute', 'micro', 'para', 'middot', 'cedil', 'sup1', 'ordm', 'raquo', 'frac14', 'frac12', 'frac34', 'iquest', 'Agrave', 'Aacute', 'Acirc', 'Atilde', 'Auml', 'Aring', 'Aelig', 'Ccedil', 'Egrave', 'Eacute', 'Ecirc', 'Euml', 'Igrave', 'Iacute', 'Icirc', 'Iuml', 'ETH', 'Ntilde', 'Ograve', 'Oacute', 'Ocirc', 'Otilde', 'Ouml', 'times', 'Oslash', 'Ugrave', 'Uacute', 'Ucirc', 'Uuml', 'Yacute', 'THORN', 'szlig', 'agrave', 'aacute', 'acirc', 'atilde', 'auml', 'aring', 'aelig', 'ccedil', 'egrave', 'eacute', 'ecirc', 'euml', 'igrave', 'iacute', 'icirc', 'iuml', 'eth', 'ntilde', 'ograve', 'oacute', 'ocirc', 'otilde', 'ouml', 'divide', 'Oslash', 'ugrave', 'uacute', 'ucirc', 'uuml', 'yacute', 'thorn', 'yuml', 'quot', 'amp', 'lt', 'gt', 'oelig', 'oelig', 'scaron', 'scaron', 'yuml', 'circ', 'tilde', 'ensp', 'emsp', 'thinsp', 'zwnj', 'zwj', 'lrm', 'rlm', 'ndash', 'mdash', 'lsquo', 'rsquo', 'sbquo', 'ldquo', 'rdquo', 'bdquo', 'dagger', 'dagger', 'permil', 'lsaquo', 'rsaquo', 'euro', 'fnof', 'alpha', 'beta', 'gamma', 'delta', 'epsilon', 'zeta', 'eta', 'theta', 'iota', 'kappa', 'lambda', 'mu', 'nu', 'xi', 'omicron', 'pi', 'rho', 'sigma', 'tau', 'upsilon', 'phi', 'chi', 'psi', 'omega', 'alpha', 'beta', 'gamma', 'delta', 'epsilon', 'zeta', 'eta', 'theta', 'iota', 'kappa', 'lambda', 'mu', 'nu', 'xi', 'omicron', 'pi', 'rho', 'sigmaf', 'sigma', 'tau', 'upsilon', 'phi', 'chi', 'psi', 'omega', 'thetasym', 'upsih', 'piv', 'bull', 'hellip', 'prime', 'prime', 'oline', 'frasl', 'weierp', 'image', 'real', 'trade', 'alefsym', 'larr', 'uarr', 'rarr', 'darr', 'harr', 'crarr', 'larr', 'uarr', 'rarr', 'darr', 'harr', 'forall', 'part', 'exist', 'empty', 'nabla', 'isin', 'notin', 'ni', 'prod', 'sum', 'minus', 'lowast', 'radic', 'prop', 'infin', 'ang', 'and', 'or', 'cap', 'cup', 'int', 'there4', 'sim', 'cong', 'asymp', 'ne', 'equiv', 'le', 'ge', 'sub', 'sup', 'nsub', 'sube', 'supe', 'oplus', 'otimes', 'perp', 'sdot', 'lceil', 'rceil', 'lfloor', 'rfloor', 'lang', 'rang', 'loz', 'spades', 'clubs', 'hearts', 'diams'];
	var HTML_CODES = [39, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 34, 38, 60, 62, 338, 339, 352, 353, 376, 710, 732, 8194, 8195, 8201, 8204, 8205, 8206, 8207, 8211, 8212, 8216, 8217, 8218, 8220, 8221, 8222, 8224, 8225, 8240, 8249, 8250, 8364, 402, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 931, 932, 933, 934, 935, 936, 937, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 977, 978, 982, 8226, 8230, 8242, 8243, 8254, 8260, 8472, 8465, 8476, 8482, 8501, 8592, 8593, 8594, 8595, 8596, 8629, 8656, 8657, 8658, 8659, 8660, 8704, 8706, 8707, 8709, 8711, 8712, 8713, 8715, 8719, 8721, 8722, 8727, 8730, 8733, 8734, 8736, 8743, 8744, 8745, 8746, 8747, 8756, 8764, 8773, 8776, 8800, 8801, 8804, 8805, 8834, 8835, 8836, 8838, 8839, 8853, 8855, 8869, 8901, 8968, 8969, 8970, 8971, 9001, 9002, 9674, 9824, 9827, 9829, 9830];
	
	var alphaIndex = {};
	var numIndex = {};
	
	var i = 0;
	var length = HTML_ALPHA.length;
	while (i < length) {
	    var a = HTML_ALPHA[i];
	    var c = HTML_CODES[i];
	    alphaIndex[a] = String.fromCharCode(c);
	    numIndex[c] = a;
	    i++;
	}
	
	/**
	 * @constructor
	 */
	function Html4Entities() {}
	
	/**
	 * @param {String} str
	 * @returns {String}
	 */
	Html4Entities.prototype.decode = function(str) {
	    if (str.length === 0) {
	        return '';
	    }
	    return str.replace(/&(#?[\w\d]+);?/g, function(s, entity) {
	        var chr;
	        if (entity.charAt(0) === "#") {
	            var code = entity.charAt(1).toLowerCase() === 'x' ?
	                parseInt(entity.substr(2), 16) :
	                parseInt(entity.substr(1));
	
	            if (!(isNaN(code) || code < -32768 || code > 65535)) {
	                chr = String.fromCharCode(code);
	            }
	        } else {
	            chr = alphaIndex[entity];
	        }
	        return chr || s;
	    });
	};
	
	/**
	 * @param {String} str
	 * @returns {String}
	 */
	Html4Entities.decode = function(str) {
	    return new Html4Entities().decode(str);
	};
	
	/**
	 * @param {String} str
	 * @returns {String}
	 */
	Html4Entities.prototype.encode = function(str) {
	    var strLength = str.length;
	    if (strLength === 0) {
	        return '';
	    }
	    var result = '';
	    var i = 0;
	    while (i < strLength) {
	        var alpha = numIndex[str.charCodeAt(i)];
	        result += alpha ? "&" + alpha + ";" : str.charAt(i);
	        i++;
	    }
	    return result;
	};
	
	/**
	 * @param {String} str
	 * @returns {String}
	 */
	Html4Entities.encode = function(str) {
	    return new Html4Entities().encode(str);
	};
	
	/**
	 * @param {String} str
	 * @returns {String}
	 */
	Html4Entities.prototype.encodeNonUTF = function(str) {
	    var strLength = str.length;
	    if (strLength === 0) {
	        return '';
	    }
	    var result = '';
	    var i = 0;
	    while (i < strLength) {
	        var cc = str.charCodeAt(i);
	        var alpha = numIndex[cc];
	        if (alpha) {
	            result += "&" + alpha + ";";
	        } else if (cc < 32 || cc > 126) {
	            result += "&#" + cc + ";";
	        } else {
	            result += str.charAt(i);
	        }
	        i++;
	    }
	    return result;
	};
	
	/**
	 * @param {String} str
	 * @returns {String}
	 */
	Html4Entities.encodeNonUTF = function(str) {
	    return new Html4Entities().encodeNonUTF(str);
	};
	
	/**
	 * @param {String} str
	 * @returns {String}
	 */
	Html4Entities.prototype.encodeNonASCII = function(str) {
	    var strLength = str.length;
	    if (strLength === 0) {
	        return '';
	    }
	    var result = '';
	    var i = 0;
	    while (i < strLength) {
	        var c = str.charCodeAt(i);
	        if (c <= 255) {
	            result += str[i++];
	            continue;
	        }
	        result += '&#' + c + ';';
	        i++;
	    }
	    return result;
	};
	
	/**
	 * @param {String} str
	 * @returns {String}
	 */
	Html4Entities.encodeNonASCII = function(str) {
	    return new Html4Entities().encodeNonASCII(str);
	};
	
	module.exports = Html4Entities;


/***/ },
/* 500 */
/***/ function(module, exports) {

	var ALPHA_INDEX = {
	    '&lt': '<',
	    '&gt': '>',
	    '&quot': '"',
	    '&apos': '\'',
	    '&amp': '&',
	    '&lt;': '<',
	    '&gt;': '>',
	    '&quot;': '"',
	    '&apos;': '\'',
	    '&amp;': '&'
	};
	
	var CHAR_INDEX = {
	    60: 'lt',
	    62: 'gt',
	    34: 'quot',
	    39: 'apos',
	    38: 'amp'
	};
	
	var CHAR_S_INDEX = {
	    '<': '&lt;',
	    '>': '&gt;',
	    '"': '&quot;',
	    '\'': '&apos;',
	    '&': '&amp;'
	};
	
	/**
	 * @constructor
	 */
	function XmlEntities() {}
	
	/**
	 * @param {String} str
	 * @returns {String}
	 */
	XmlEntities.prototype.encode = function(str) {
	    if (str.length === 0) {
	        return '';
	    }
	    return str.replace(/<|>|"|'|&/g, function(s) {
	        return CHAR_S_INDEX[s];
	    });
	};
	
	/**
	 * @param {String} str
	 * @returns {String}
	 */
	 XmlEntities.encode = function(str) {
	    return new XmlEntities().encode(str);
	 };
	
	/**
	 * @param {String} str
	 * @returns {String}
	 */
	XmlEntities.prototype.decode = function(str) {
	    if (str.length === 0) {
	        return '';
	    }
	    return str.replace(/&#?[0-9a-zA-Z]+;?/g, function(s) {
	        if (s.charAt(1) === '#') {
	            var code = s.charAt(2).toLowerCase() === 'x' ?
	                parseInt(s.substr(3), 16) :
	                parseInt(s.substr(2));
	
	            if (isNaN(code) || code < -32768 || code > 65535) {
	                return '';
	            }
	            return String.fromCharCode(code);
	        }
	        return ALPHA_INDEX[s] || s;
	    });
	};
	
	/**
	 * @param {String} str
	 * @returns {String}
	 */
	 XmlEntities.decode = function(str) {
	    return new XmlEntities().decode(str);
	 };
	
	/**
	 * @param {String} str
	 * @returns {String}
	 */
	XmlEntities.prototype.encodeNonUTF = function(str) {
	    var strLength = str.length;
	    if (strLength === 0) {
	        return '';
	    }
	    var result = '';
	    var i = 0;
	    while (i < strLength) {
	        var c = str.charCodeAt(i);
	        var alpha = CHAR_INDEX[c];
	        if (alpha) {
	            result += "&" + alpha + ";";
	            i++;
	            continue;
	        }
	        if (c < 32 || c > 126) {
	            result += '&#' + c + ';';
	        } else {
	            result += str.charAt(i);
	        }
	        i++;
	    }
	    return result;
	};
	
	/**
	 * @param {String} str
	 * @returns {String}
	 */
	 XmlEntities.encodeNonUTF = function(str) {
	    return new XmlEntities().encodeNonUTF(str);
	 };
	
	/**
	 * @param {String} str
	 * @returns {String}
	 */
	XmlEntities.prototype.encodeNonASCII = function(str) {
	    var strLenght = str.length;
	    if (strLenght === 0) {
	        return '';
	    }
	    var result = '';
	    var i = 0;
	    while (i < strLenght) {
	        var c = str.charCodeAt(i);
	        if (c <= 255) {
	            result += str[i++];
	            continue;
	        }
	        result += '&#' + c + ';';
	        i++;
	    }
	    return result;
	};
	
	/**
	 * @param {String} str
	 * @returns {String}
	 */
	 XmlEntities.encodeNonASCII = function(str) {
	    return new XmlEntities().encodeNonASCII(str);
	 };
	
	module.exports = XmlEntities;


/***/ },
/* 501 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var ansiRegex = __webpack_require__(502)();
	
	module.exports = function (str) {
		return typeof str === 'string' ? str.replace(ansiRegex, '') : str;
	};


/***/ },
/* 502 */
/***/ function(module, exports) {

	'use strict';
	module.exports = function () {
		return /[\u001b\u009b][[()#;?]*(?:[0-9]{1,4}(?:;[0-9]{0,4})*)?[0-9A-ORZcf-nqry=><]/g;
	};


/***/ },
/* 503 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Based heavily on https://github.com/webpack/webpack/blob/
	 *  c0afdf9c6abc1dd70707c594e473802a566f7b6e/hot/only-dev-server.js
	 * Original copyright Tobias Koppers @sokra (MIT license)
	 */
	
	/* global window __webpack_hash__ */
	
	if (false) {
	  throw new Error("[HMR] Hot Module Replacement is disabled.");
	}
	
	var hmrDocsUrl = "http://webpack.github.io/docs/hot-module-replacement-with-webpack.html"; // eslint-disable-line max-len
	
	var lastHash;
	var failureStatuses = { abort: 1, fail: 1 };
	var applyOptions = { ignoreUnaccepted: true };
	
	function upToDate(hash) {
	  if (hash) lastHash = hash;
	  return lastHash == __webpack_require__.h();
	}
	
	module.exports = function(hash, moduleMap, options) {
	  var reload = options.reload;
	  if (!upToDate(hash) && module.hot.status() == "idle") {
	    if (options.log) console.log("[HMR] Checking for updates on the server...");
	    check();
	  }
	
	  function check() {
	    var cb = function(err, updatedModules) {
	      if (err) return handleError(err);
	
	      if(!updatedModules) {
	        if (options.warn) {
	          console.warn("[HMR] Cannot find update (Full reload needed)");
	          console.warn("[HMR] (Probably because of restarting the server)");
	        }
	        performReload();
	        return null;
	      }
	
	      var applyCallback = function(applyErr, renewedModules) {
	        if (applyErr) return handleError(applyErr);
	
	        if (!upToDate()) check();
	
	        logUpdates(updatedModules, renewedModules);
	      };
	
	      var applyResult = module.hot.apply(applyOptions, applyCallback);
	      // webpack 2 promise
	      if (applyResult && applyResult.then) {
	        // HotModuleReplacement.runtime.js refers to the result as `outdatedModules`
	        applyResult.then(function(outdatedModules) {
	          applyCallback(null, outdatedModules);
	        });
	        applyResult.catch(applyCallback);
	      }
	
	    };
	
	    var result = module.hot.check(false, cb);
	    // webpack 2 promise
	    if (result && result.then) {
	        result.then(function(updatedModules) {
	            cb(null, updatedModules);
	        });
	        result.catch(cb);
	    }
	  }
	
	  function logUpdates(updatedModules, renewedModules) {
	    var unacceptedModules = updatedModules.filter(function(moduleId) {
	      return renewedModules && renewedModules.indexOf(moduleId) < 0;
	    });
	
	    if(unacceptedModules.length > 0) {
	      if (options.warn) {
	        console.warn(
	          "[HMR] The following modules couldn't be hot updated: " +
	          "(Full reload needed)\n" +
	          "This is usually because the modules which have changed " +
	          "(and their parents) do not know how to hot reload themselves. " +
	          "See " + hmrDocsUrl + " for more details."
	        );
	        unacceptedModules.forEach(function(moduleId) {
	          console.warn("[HMR]  - " + moduleMap[moduleId]);
	        });
	      }
	      performReload();
	      return;
	    }
	
	    if (options.log) {
	      if(!renewedModules || renewedModules.length === 0) {
	        console.log("[HMR] Nothing hot updated.");
	      } else {
	        console.log("[HMR] Updated modules:");
	        renewedModules.forEach(function(moduleId) {
	          console.log("[HMR]  - " + moduleMap[moduleId]);
	        });
	      }
	
	      if (upToDate()) {
	        console.log("[HMR] App is up to date.");
	      }
	    }
	  }
	
	  function handleError(err) {
	    if (module.hot.status() in failureStatuses) {
	      if (options.warn) {
	        console.warn("[HMR] Cannot check for update (Full reload needed)");
	        console.warn("[HMR] " + err.stack || err.message);
	      }
	      performReload();
	      return;
	    }
	    if (options.warn) {
	      console.warn("[HMR] Update check failed: " + err.stack || err.message);
	    }
	  }
	
	  function performReload() {
	    if (reload) {
	      if (options.warn) console.warn("[HMR] Reloading page");
	      window.location.reload();
	    }
	  }
	};


/***/ },
/* 504 */
/***/ function(module, exports) {

	module.exports = function(module) {
		if(!module.webpackPolyfill) {
			module.deprecate = function() {};
			module.paths = [];
			// module.parent = undefined by default
			module.children = [];
			module.webpackPolyfill = 1;
		}
		return module;
	}


/***/ },
/* 505 */
/***/ function(module, exports, __webpack_require__) {

	var lookup = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
	
	;(function (exports) {
		'use strict';
	
	  var Arr = (typeof Uint8Array !== 'undefined')
	    ? Uint8Array
	    : Array
	
		var PLUS   = '+'.charCodeAt(0)
		var SLASH  = '/'.charCodeAt(0)
		var NUMBER = '0'.charCodeAt(0)
		var LOWER  = 'a'.charCodeAt(0)
		var UPPER  = 'A'.charCodeAt(0)
		var PLUS_URL_SAFE = '-'.charCodeAt(0)
		var SLASH_URL_SAFE = '_'.charCodeAt(0)
	
		function decode (elt) {
			var code = elt.charCodeAt(0)
			if (code === PLUS ||
			    code === PLUS_URL_SAFE)
				return 62 // '+'
			if (code === SLASH ||
			    code === SLASH_URL_SAFE)
				return 63 // '/'
			if (code < NUMBER)
				return -1 //no match
			if (code < NUMBER + 10)
				return code - NUMBER + 26 + 26
			if (code < UPPER + 26)
				return code - UPPER
			if (code < LOWER + 26)
				return code - LOWER + 26
		}
	
		function b64ToByteArray (b64) {
			var i, j, l, tmp, placeHolders, arr
	
			if (b64.length % 4 > 0) {
				throw new Error('Invalid string. Length must be a multiple of 4')
			}
	
			// the number of equal signs (place holders)
			// if there are two placeholders, than the two characters before it
			// represent one byte
			// if there is only one, then the three characters before it represent 2 bytes
			// this is just a cheap hack to not do indexOf twice
			var len = b64.length
			placeHolders = '=' === b64.charAt(len - 2) ? 2 : '=' === b64.charAt(len - 1) ? 1 : 0
	
			// base64 is 4/3 + up to two characters of the original data
			arr = new Arr(b64.length * 3 / 4 - placeHolders)
	
			// if there are placeholders, only get up to the last complete 4 chars
			l = placeHolders > 0 ? b64.length - 4 : b64.length
	
			var L = 0
	
			function push (v) {
				arr[L++] = v
			}
	
			for (i = 0, j = 0; i < l; i += 4, j += 3) {
				tmp = (decode(b64.charAt(i)) << 18) | (decode(b64.charAt(i + 1)) << 12) | (decode(b64.charAt(i + 2)) << 6) | decode(b64.charAt(i + 3))
				push((tmp & 0xFF0000) >> 16)
				push((tmp & 0xFF00) >> 8)
				push(tmp & 0xFF)
			}
	
			if (placeHolders === 2) {
				tmp = (decode(b64.charAt(i)) << 2) | (decode(b64.charAt(i + 1)) >> 4)
				push(tmp & 0xFF)
			} else if (placeHolders === 1) {
				tmp = (decode(b64.charAt(i)) << 10) | (decode(b64.charAt(i + 1)) << 4) | (decode(b64.charAt(i + 2)) >> 2)
				push((tmp >> 8) & 0xFF)
				push(tmp & 0xFF)
			}
	
			return arr
		}
	
		function uint8ToBase64 (uint8) {
			var i,
				extraBytes = uint8.length % 3, // if we have 1 byte left, pad 2 bytes
				output = "",
				temp, length
	
			function encode (num) {
				return lookup.charAt(num)
			}
	
			function tripletToBase64 (num) {
				return encode(num >> 18 & 0x3F) + encode(num >> 12 & 0x3F) + encode(num >> 6 & 0x3F) + encode(num & 0x3F)
			}
	
			// go through the array every three bytes, we'll deal with trailing stuff later
			for (i = 0, length = uint8.length - extraBytes; i < length; i += 3) {
				temp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])
				output += tripletToBase64(temp)
			}
	
			// pad the end with zeros, but make sure to not forget the extra bytes
			switch (extraBytes) {
				case 1:
					temp = uint8[uint8.length - 1]
					output += encode(temp >> 2)
					output += encode((temp << 4) & 0x3F)
					output += '=='
					break
				case 2:
					temp = (uint8[uint8.length - 2] << 8) + (uint8[uint8.length - 1])
					output += encode(temp >> 10)
					output += encode((temp >> 4) & 0x3F)
					output += encode((temp << 2) & 0x3F)
					output += '='
					break
			}
	
			return output
		}
	
		exports.toByteArray = b64ToByteArray
		exports.fromByteArray = uint8ToBase64
	}( false ? (this.base64js = {}) : exports))


/***/ },
/* 506 */
/***/ function(module, exports) {

	exports.read = function (buffer, offset, isLE, mLen, nBytes) {
	  var e, m
	  var eLen = nBytes * 8 - mLen - 1
	  var eMax = (1 << eLen) - 1
	  var eBias = eMax >> 1
	  var nBits = -7
	  var i = isLE ? (nBytes - 1) : 0
	  var d = isLE ? -1 : 1
	  var s = buffer[offset + i]
	
	  i += d
	
	  e = s & ((1 << (-nBits)) - 1)
	  s >>= (-nBits)
	  nBits += eLen
	  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}
	
	  m = e & ((1 << (-nBits)) - 1)
	  e >>= (-nBits)
	  nBits += mLen
	  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}
	
	  if (e === 0) {
	    e = 1 - eBias
	  } else if (e === eMax) {
	    return m ? NaN : ((s ? -1 : 1) * Infinity)
	  } else {
	    m = m + Math.pow(2, mLen)
	    e = e - eBias
	  }
	  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
	}
	
	exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
	  var e, m, c
	  var eLen = nBytes * 8 - mLen - 1
	  var eMax = (1 << eLen) - 1
	  var eBias = eMax >> 1
	  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
	  var i = isLE ? 0 : (nBytes - 1)
	  var d = isLE ? 1 : -1
	  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0
	
	  value = Math.abs(value)
	
	  if (isNaN(value) || value === Infinity) {
	    m = isNaN(value) ? 1 : 0
	    e = eMax
	  } else {
	    e = Math.floor(Math.log(value) / Math.LN2)
	    if (value * (c = Math.pow(2, -e)) < 1) {
	      e--
	      c *= 2
	    }
	    if (e + eBias >= 1) {
	      value += rt / c
	    } else {
	      value += rt * Math.pow(2, 1 - eBias)
	    }
	    if (value * c >= 2) {
	      e++
	      c /= 2
	    }
	
	    if (e + eBias >= eMax) {
	      m = 0
	      e = eMax
	    } else if (e + eBias >= 1) {
	      m = (value * c - 1) * Math.pow(2, mLen)
	      e = e + eBias
	    } else {
	      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
	      e = 0
	    }
	  }
	
	  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}
	
	  e = (e << mLen) | m
	  eLen += mLen
	  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}
	
	  buffer[offset + i - d] |= s * 128
	}


/***/ },
/* 507 */
/***/ function(module, exports) {

	var toString = {}.toString;
	
	module.exports = Array.isArray || function (arr) {
	  return toString.call(arr) == '[object Array]';
	};


/***/ },
/* 508 */
/***/ function(module, exports) {

	[
	{"Country Name":"Afghanistan","Country Code":"AFG","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Albania","Country Code":"ALB","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":259000000,"1996Q2 [YR1996Q2]":259000000,"1996Q3 [YR1996Q3]":259000000,"1996Q4 [YR1996Q4]":259000000,"1997Q1 [YR1997Q1]":259000000,"1997Q2 [YR1997Q2]":259000000,"1997Q3 [YR1997Q3]":259000000,"1997Q4 [YR1997Q4]":259000000,"1998Q1 [YR1998Q1]":259000000,"1998Q2 [YR1998Q2]":259000000,"1998Q3 [YR1998Q3]":259000000,"1998Q4 [YR1998Q4]":259000000,"1999Q1 [YR1999Q1]":259000000,"1999Q2 [YR1999Q2]":259000000,"1999Q3 [YR1999Q3]":259000000,"1999Q4 [YR1999Q4]":259000000,"2000Q1 [YR2000Q1]":259000000,"2000Q2 [YR2000Q2]":259000000,"2000Q3 [YR2000Q3]":259000000,"2000Q4 [YR2000Q4]":259000000,"2001Q1 [YR2001Q1]":259000000,"2001Q2 [YR2001Q2]":259000000,"2001Q3 [YR2001Q3]":259000000,"2001Q4 [YR2001Q4]":259000000,"2002Q1 [YR2002Q1]":259000000,"2002Q2 [YR2002Q2]":259000000,"2002Q3 [YR2002Q3]":259000000,"2002Q4 [YR2002Q4]":259000000,"2003Q1 [YR2003Q1]":259000000,"2003Q2 [YR2003Q2]":259000000,"2003Q3 [YR2003Q3]":259000000,"2003Q4 [YR2003Q4]":259000000,"2004Q1 [YR2004Q1]":259000000,"2004Q2 [YR2004Q2]":259000000,"2004Q3 [YR2004Q3]":259000000,"2004Q4 [YR2004Q4]":259000000,"2005Q1 [YR2005Q1]":259000000,"2005Q2 [YR2005Q2]":259000000,"2005Q3 [YR2005Q3]":259000000,"2005Q4 [YR2005Q4]":259000000,"2006Q1 [YR2006Q1]":259000000,"2006Q2 [YR2006Q2]":259000000,"2006Q3 [YR2006Q3]":259000000,"2006Q4 [YR2006Q4]":259000000,"2007Q1 [YR2007Q1]":259000000,"2007Q2 [YR2007Q2]":259000000,"2007Q3 [YR2007Q3]":259000000,"2007Q4 [YR2007Q4]":259000000,"2008Q1 [YR2008Q1]":259000000,"2008Q2 [YR2008Q2]":259000000,"2008Q3 [YR2008Q3]":259000000,"2008Q4 [YR2008Q4]":259000000,"2009Q1 [YR2009Q1]":259000000,"2009Q2 [YR2009Q2]":259000000,"2009Q3 [YR2009Q3]":259000000,"2009Q4 [YR2009Q4]":259000000,"2010Q1 [YR2010Q1]":259000000,"2010Q2 [YR2010Q2]":259000000,"2010Q3 [YR2010Q3]":259000000,"2010Q4 [YR2010Q4]":660000000,"2011Q1 [YR2011Q1]":685000000,"2011Q2 [YR2011Q2]":692000000,"2011Q3 [YR2011Q3]":664000000,"2011Q4 [YR2011Q4]":647000000,"2012Q1 [YR2012Q1]":659000000,"2012Q2 [YR2012Q2]":636000000,"2012Q3 [YR2012Q3]":647000000,"2012Q4 [YR2012Q4]":655000000,"2013Q1 [YR2013Q1]":643000000,"2013Q2 [YR2013Q2]":651000000,"2013Q3 [YR2013Q3]":664000000,"2013Q4 [YR2013Q4]":672000000,"2014Q1 [YR2014Q1]":672000000,"2014Q2 [YR2014Q2]":668000000,"2014Q3 [YR2014Q3]":636000000,"2014Q4 [YR2014Q4]":623000000,"2015Q1 [YR2015Q1]":582000000,"2015Q2 [YR2015Q2]":594000000},
	{"Country Name":"Algeria","Country Code":"DZA","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":0,"1996Q2 [YR1996Q2]":0,"1996Q3 [YR1996Q3]":0,"1996Q4 [YR1996Q4]":0,"1997Q1 [YR1997Q1]":0,"1997Q2 [YR1997Q2]":0,"1997Q3 [YR1997Q3]":0,"1997Q4 [YR1997Q4]":0,"1998Q1 [YR1998Q1]":0,"1998Q2 [YR1998Q2]":0,"1998Q3 [YR1998Q3]":0,"1998Q4 [YR1998Q4]":0,"1999Q1 [YR1999Q1]":0,"1999Q2 [YR1999Q2]":0,"1999Q3 [YR1999Q3]":0,"1999Q4 [YR1999Q4]":0,"2000Q1 [YR2000Q1]":0,"2000Q2 [YR2000Q2]":0,"2000Q3 [YR2000Q3]":0,"2000Q4 [YR2000Q4]":0,"2001Q1 [YR2001Q1]":0,"2001Q2 [YR2001Q2]":0,"2001Q3 [YR2001Q3]":0,"2001Q4 [YR2001Q4]":0,"2002Q1 [YR2002Q1]":0,"2002Q2 [YR2002Q2]":0,"2002Q3 [YR2002Q3]":0,"2002Q4 [YR2002Q4]":0,"2003Q1 [YR2003Q1]":0,"2003Q2 [YR2003Q2]":0,"2003Q3 [YR2003Q3]":0,"2003Q4 [YR2003Q4]":0,"2004Q1 [YR2004Q1]":0,"2004Q2 [YR2004Q2]":0,"2004Q3 [YR2004Q3]":0,"2004Q4 [YR2004Q4]":0,"2005Q1 [YR2005Q1]":0,"2005Q2 [YR2005Q2]":0,"2005Q3 [YR2005Q3]":0,"2005Q4 [YR2005Q4]":0,"2006Q1 [YR2006Q1]":0,"2006Q2 [YR2006Q2]":0,"2006Q3 [YR2006Q3]":0,"2006Q4 [YR2006Q4]":0,"2007Q1 [YR2007Q1]":0,"2007Q2 [YR2007Q2]":0,"2007Q3 [YR2007Q3]":0,"2007Q4 [YR2007Q4]":0,"2008Q1 [YR2008Q1]":0,"2008Q2 [YR2008Q2]":0,"2008Q3 [YR2008Q3]":0,"2008Q4 [YR2008Q4]":0,"2009Q1 [YR2009Q1]":0,"2009Q2 [YR2009Q2]":0,"2009Q3 [YR2009Q3]":0,"2009Q4 [YR2009Q4]":0,"2010Q1 [YR2010Q1]":0,"2010Q2 [YR2010Q2]":0,"2010Q3 [YR2010Q3]":0,"2010Q4 [YR2010Q4]":0,"2011Q1 [YR2011Q1]":0,"2011Q2 [YR2011Q2]":0,"2011Q3 [YR2011Q3]":0,"2011Q4 [YR2011Q4]":0,"2012Q1 [YR2012Q1]":0,"2012Q2 [YR2012Q2]":0,"2012Q3 [YR2012Q3]":0,"2012Q4 [YR2012Q4]":0,"2013Q1 [YR2013Q1]":0,"2013Q2 [YR2013Q2]":0,"2013Q3 [YR2013Q3]":0,"2013Q4 [YR2013Q4]":0,"2014Q1 [YR2014Q1]":0,"2014Q2 [YR2014Q2]":0,"2014Q3 [YR2014Q3]":0,"2014Q4 [YR2014Q4]":0,"2015Q1 [YR2015Q1]":0,"2015Q2 [YR2015Q2]":0},
	{"Country Name":"American Samoa","Country Code":"ASM","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Andorra","Country Code":"ADO","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Angola","Country Code":"AGO","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Anguilla","Country Code":"AIA","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Antigua and Barbuda","Country Code":"ATG","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Argentina","Country Code":"ARG","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":45985000000,"1996Q2 [YR1996Q2]":49810000000,"1996Q3 [YR1996Q3]":51413000000,"1996Q4 [YR1996Q4]":54483000000,"1997Q1 [YR1997Q1]":59348000000,"1997Q2 [YR1997Q2]":61362000000,"1997Q3 [YR1997Q3]":67570000000,"1997Q4 [YR1997Q4]":67442000000,"1998Q1 [YR1998Q1]":70526000000,"1998Q2 [YR1998Q2]":77853000000,"1998Q3 [YR1998Q3]":80819000000,"1998Q4 [YR1998Q4]":75375000000,"1999Q1 [YR1999Q1]":75386000000,"1999Q2 [YR1999Q2]":78999000000,"1999Q3 [YR1999Q3]":81806000000,"1999Q4 [YR1999Q4]":83428000000,"2000Q1 [YR2000Q1]":87276000000,"2000Q2 [YR2000Q2]":91124000000,"2000Q3 [YR2000Q3]":91206000000,"2000Q4 [YR2000Q4]":90688000000,"2001Q1 [YR2001Q1]":90614000000,"2001Q2 [YR2001Q2]":94019000000,"2001Q3 [YR2001Q3]":95147000000,"2001Q4 [YR2001Q4]":93383000000,"2002Q1 [YR2002Q1]":90864000000,"2002Q2 [YR2002Q2]":93936000000,"2002Q3 [YR2002Q3]":92364000000,"2002Q4 [YR2002Q4]":93727000000,"2003Q1 [YR2003Q1]":93624000000,"2003Q2 [YR2003Q2]":94138000000,"2003Q3 [YR2003Q3]":93875000000,"2003Q4 [YR2003Q4]":96599000000,"2004Q1 [YR2004Q1]":95106000000,"2004Q2 [YR2004Q2]":92232000000,"2004Q3 [YR2004Q3]":91453000000,"2004Q4 [YR2004Q4]":94780000000,"2005Q1 [YR2005Q1]":92898000000,"2005Q2 [YR2005Q2]":60123000000,"2005Q3 [YR2005Q3]":59903000000,"2005Q4 [YR2005Q4]":59746000000,"2006Q1 [YR2006Q1]":60553000000,"2006Q2 [YR2006Q2]":61389000000,"2006Q3 [YR2006Q3]":61312000000,"2006Q4 [YR2006Q4]":62894000000,"2007Q1 [YR2007Q1]":62815000000,"2007Q2 [YR2007Q2]":64785000000,"2007Q3 [YR2007Q3]":67295000000,"2007Q4 [YR2007Q4]":68723000000,"2008Q1 [YR2008Q1]":69049000000,"2008Q2 [YR2008Q2]":67105000000,"2008Q3 [YR2008Q3]":63975000000,"2008Q4 [YR2008Q4]":56242000000,"2009Q1 [YR2009Q1]":54335000000,"2009Q2 [YR2009Q2]":54569000000,"2009Q3 [YR2009Q3]":53304000000,"2009Q4 [YR2009Q4]":52552000000,"2010Q1 [YR2010Q1]":50682000000,"2010Q2 [YR2010Q2]":50059000000,"2010Q3 [YR2010Q3]":53019000000,"2010Q4 [YR2010Q4]":53416000000,"2011Q1 [YR2011Q1]":56064000000,"2011Q2 [YR2011Q2]":56575000000,"2011Q3 [YR2011Q3]":54441000000,"2011Q4 [YR2011Q4]":53157000000,"2012Q1 [YR2012Q1]":53301000000,"2012Q2 [YR2012Q2]":51619000000,"2012Q3 [YR2012Q3]":52109000000,"2012Q4 [YR2012Q4]":52413000000,"2013Q1 [YR2013Q1]":51647000000,"2013Q2 [YR2013Q2]":52074000000,"2013Q3 [YR2013Q3]":52767000000,"2013Q4 [YR2013Q4]":53030000000,"2014Q1 [YR2014Q1]":52915000000,"2014Q2 [YR2014Q2]":53665000000,"2014Q3 [YR2014Q3]":51581000000,"2014Q4 [YR2014Q4]":50107000000,"2015Q1 [YR2015Q1]":49437000000,"2015Q2 [YR2015Q2]":50915000000},
	{"Country Name":"Armenia","Country Code":"ARM","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Aruba","Country Code":"ABW","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":8471000000,"1996Q2 [YR1996Q2]":8437000000,"1996Q3 [YR1996Q3]":9152000000,"1996Q4 [YR1996Q4]":9715000000,"1997Q1 [YR1997Q1]":12038000000,"1997Q2 [YR1997Q2]":12927000000,"1997Q3 [YR1997Q3]":13269000000,"1997Q4 [YR1997Q4]":12494000000,"1998Q1 [YR1998Q1]":13388000000,"1998Q2 [YR1998Q2]":12708000000,"1998Q3 [YR1998Q3]":13173000000,"1998Q4 [YR1998Q4]":15147000000,"1999Q1 [YR1999Q1]":14711000000,"1999Q2 [YR1999Q2]":15430000000,"1999Q3 [YR1999Q3]":19060000000,"1999Q4 [YR1999Q4]":19296000000,"2000Q1 [YR2000Q1]":18629000000,"2000Q2 [YR2000Q2]":19419000000,"2000Q3 [YR2000Q3]":18732000000,"2000Q4 [YR2000Q4]":17760000000,"2001Q1 [YR2001Q1]":16898000000,"2001Q2 [YR2001Q2]":17476000000,"2001Q3 [YR2001Q3]":18097000000,"2001Q4 [YR2001Q4]":16195000000,"2002Q1 [YR2002Q1]":14178000000,"2002Q2 [YR2002Q2]":15547000000,"2002Q3 [YR2002Q3]":14446000000,"2002Q4 [YR2002Q4]":13435000000,"2003Q1 [YR2003Q1]":12104000000,"2003Q2 [YR2003Q2]":11697000000,"2003Q3 [YR2003Q3]":14417000000,"2003Q4 [YR2003Q4]":15472000000,"2004Q1 [YR2004Q1]":15620000000,"2004Q2 [YR2004Q2]":14955000000,"2004Q3 [YR2004Q3]":14487000000,"2004Q4 [YR2004Q4]":15052000000,"2005Q1 [YR2005Q1]":14576000000,"2005Q2 [YR2005Q2]":13046000000,"2005Q3 [YR2005Q3]":12267000000,"2005Q4 [YR2005Q4]":11376000000,"2006Q1 [YR2006Q1]":10042000000,"2006Q2 [YR2006Q2]":9457000000,"2006Q3 [YR2006Q3]":9160000000,"2006Q4 [YR2006Q4]":9078000000,"2007Q1 [YR2007Q1]":8357000000,"2007Q2 [YR2007Q2]":8096000000,"2007Q3 [YR2007Q3]":8303000000,"2007Q4 [YR2007Q4]":8394000000,"2008Q1 [YR2008Q1]":8274000000,"2008Q2 [YR2008Q2]":8188000000,"2008Q3 [YR2008Q3]":8250000000,"2008Q4 [YR2008Q4]":8277000000,"2009Q1 [YR2009Q1]":7852000000,"2009Q2 [YR2009Q2]":7566000000,"2009Q3 [YR2009Q3]":6242000000,"2009Q4 [YR2009Q4]":6068000000,"2010Q1 [YR2010Q1]":6009000000,"2010Q2 [YR2010Q2]":6249000000,"2010Q3 [YR2010Q3]":6539000000,"2010Q4 [YR2010Q4]":6661000000,"2011Q1 [YR2011Q1]":6476000000,"2011Q2 [YR2011Q2]":6602000000,"2011Q3 [YR2011Q3]":6473000000,"2011Q4 [YR2011Q4]":6402000000,"2012Q1 [YR2012Q1]":6134000000,"2012Q2 [YR2012Q2]":6303000000,"2012Q3 [YR2012Q3]":6665000000,"2012Q4 [YR2012Q4]":6148000000,"2013Q1 [YR2013Q1]":5788000000,"2013Q2 [YR2013Q2]":5482000000,"2013Q3 [YR2013Q3]":4180000000,"2013Q4 [YR2013Q4]":3907000000,"2014Q1 [YR2014Q1]":3991000000,"2014Q2 [YR2014Q2]":4046000000,"2014Q3 [YR2014Q3]":3776000000,"2014Q4 [YR2014Q4]":3459000000,"2015Q1 [YR2015Q1]":3454000000,"2015Q2 [YR2015Q2]":3395000000},
	{"Country Name":"Australia","Country Code":"AUS","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":92882000000,"1996Q2 [YR1996Q2]":95820000000,"1996Q3 [YR1996Q3]":"1.02433E+11","1996Q4 [YR1996Q4]":"1.04317E+11","1997Q1 [YR1997Q1]":"1.0691E+11","1997Q2 [YR1997Q2]":"1.09075E+11","1997Q3 [YR1997Q3]":"1.09136E+11","1997Q4 [YR1997Q4]":99016000000,"1998Q1 [YR1998Q1]":"1.02536E+11","1998Q2 [YR1998Q2]":98592000000,"1998Q3 [YR1998Q3]":"1.0285E+11","1998Q4 [YR1998Q4]":"1.03652E+11","1999Q1 [YR1999Q1]":"1.09741E+11","1999Q2 [YR1999Q2]":"1.06289E+11","1999Q3 [YR1999Q3]":"1.16269E+11","1999Q4 [YR1999Q4]":"1.18382E+11","2000Q1 [YR2000Q1]":"1.20202E+11","2000Q2 [YR2000Q2]":"1.22209E+11","2000Q3 [YR2000Q3]":"1.22628E+11","2000Q4 [YR2000Q4]":"1.25019E+11","2001Q1 [YR2001Q1]":"1.23182E+11","2001Q2 [YR2001Q2]":"1.28984E+11","2001Q3 [YR2001Q3]":"1.34526E+11","2001Q4 [YR2001Q4]":"1.34635E+11","2002Q1 [YR2002Q1]":"1.38443E+11","2002Q2 [YR2002Q2]":"1.50866E+11","2002Q3 [YR2002Q3]":"1.53871E+11","2002Q4 [YR2002Q4]":"1.60551E+11","2003Q1 [YR2003Q1]":"1.69422E+11","2003Q2 [YR2003Q2]":"1.83612E+11","2003Q3 [YR2003Q3]":"1.9485E+11","2003Q4 [YR2003Q4]":"2.19879E+11","2004Q1 [YR2004Q1]":"2.38983E+11","2004Q2 [YR2004Q2]":"2.44252E+11","2004Q3 [YR2004Q3]":"2.68344E+11","2004Q4 [YR2004Q4]":"2.88711E+11","2005Q1 [YR2005Q1]":"2.92041E+11","2005Q2 [YR2005Q2]":"3.00035E+11","2005Q3 [YR2005Q3]":"3.00188E+11","2005Q4 [YR2005Q4]":"3.06567E+11","2006Q1 [YR2006Q1]":"3.29668E+11","2006Q2 [YR2006Q2]":"3.55743E+11","2006Q3 [YR2006Q3]":"3.72318E+11","2006Q4 [YR2006Q4]":"4.02355E+11","2007Q1 [YR2007Q1]":"4.19272E+11","2007Q2 [YR2007Q2]":"4.51145E+11","2007Q3 [YR2007Q3]":"4.62845E+11","2007Q4 [YR2007Q4]":"4.58296E+11","2008Q1 [YR2008Q1]":"5.15172E+11","2008Q2 [YR2008Q2]":"5.22321E+11","2008Q3 [YR2008Q3]":"4.71307E+11","2008Q4 [YR2008Q4]":"4.27136E+11","2009Q1 [YR2009Q1]":"4.0695E+11","2009Q2 [YR2009Q2]":"4.49497E+11","2009Q3 [YR2009Q3]":"4.84972E+11","2009Q4 [YR2009Q4]":"5.13794E+11","2010Q1 [YR2010Q1]":"5.19303E+11","2010Q2 [YR2010Q2]":"5.01315E+11","2010Q3 [YR2010Q3]":"5.42667E+11","2010Q4 [YR2010Q4]":"5.50159E+11","2011Q1 [YR2011Q1]":"5.56492E+11","2011Q2 [YR2011Q2]":"5.78629E+11","2011Q3 [YR2011Q3]":"5.54213E+11","2011Q4 [YR2011Q4]":"5.46089E+11","2012Q1 [YR2012Q1]":"5.68301E+11","2012Q2 [YR2012Q2]":"5.59651E+11","2012Q3 [YR2012Q3]":"5.90382E+11","2012Q4 [YR2012Q4]":"5.91712E+11","2013Q1 [YR2013Q1]":"5.94961E+11","2013Q2 [YR2013Q2]":"5.90149E+11","2013Q3 [YR2013Q3]":"6.10554E+11","2013Q4 [YR2013Q4]":"6.23994E+11","2014Q1 [YR2014Q1]":"6.29289E+11","2014Q2 [YR2014Q2]":"6.44923E+11","2014Q3 [YR2014Q3]":"6.17052E+11","2014Q4 [YR2014Q4]":"6.04214E+11","2015Q1 [YR2015Q1]":"5.85801E+11","2015Q2 [YR2015Q2]":"6.02236E+11"},
	{"Country Name":"Austria","Country Code":"AUT","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":62523000000,"1996Q2 [YR1996Q2]":62205000000,"1996Q3 [YR1996Q3]":62285000000,"1996Q4 [YR1996Q4]":61215000000,"1997Q1 [YR1997Q1]":60612000000,"1997Q2 [YR1997Q2]":61190000000,"1997Q3 [YR1997Q3]":62292000000,"1997Q4 [YR1997Q4]":61303000000,"1998Q1 [YR1998Q1]":62264000000,"1998Q2 [YR1998Q2]":64107000000,"1998Q3 [YR1998Q3]":68661000000,"1998Q4 [YR1998Q4]":72645000000,"1999Q1 [YR1999Q1]":72983000000,"1999Q2 [YR1999Q2]":75261000000,"1999Q3 [YR1999Q3]":78710000000,"1999Q4 [YR1999Q4]":77407000000,"2000Q1 [YR2000Q1]":81780000000,"2000Q2 [YR2000Q2]":86093000000,"2000Q3 [YR2000Q3]":86797000000,"2000Q4 [YR2000Q4]":87519000000,"2001Q1 [YR2001Q1]":93009000000,"2001Q2 [YR2001Q2]":90643000000,"2001Q3 [YR2001Q3]":96399000000,"2001Q4 [YR2001Q4]":"1.01062E+11","2002Q1 [YR2002Q1]":"1.09675E+11","2002Q2 [YR2002Q2]":"1.26217E+11","2002Q3 [YR2002Q3]":"1.24674E+11","2002Q4 [YR2002Q4]":"1.2995E+11","2003Q1 [YR2003Q1]":"1.40381E+11","2003Q2 [YR2003Q2]":"1.53445E+11","2003Q3 [YR2003Q3]":"1.59663E+11","2003Q4 [YR2003Q4]":"1.72069E+11","2004Q1 [YR2004Q1]":"1.80579E+11","2004Q2 [YR2004Q2]":"1.84899E+11","2004Q3 [YR2004Q3]":"1.90865E+11","2004Q4 [YR2004Q4]":"2.06367E+11","2005Q1 [YR2005Q1]":"2.14251E+11","2005Q2 [YR2005Q2]":"2.15399E+11","2005Q3 [YR2005Q3]":"2.12613E+11","2005Q4 [YR2005Q4]":"2.13581E+11","2006Q1 [YR2006Q1]":"2.30499E+11","2006Q2 [YR2006Q2]":"2.54311E+11","2006Q3 [YR2006Q3]":"2.53731E+11","2006Q4 [YR2006Q4]":"2.70141E+11","2007Q1 [YR2007Q1]":"3.05647E+11","2007Q2 [YR2007Q2]":"3.21665E+11","2007Q3 [YR2007Q3]":"3.45394E+11","2007Q4 [YR2007Q4]":"3.44576E+11","2008Q1 [YR2008Q1]":"3.85224E+11","2008Q2 [YR2008Q2]":"3.82487E+11","2008Q3 [YR2008Q3]":"3.54341E+11","2008Q4 [YR2008Q4]":"3.62246E+11","2009Q1 [YR2009Q1]":"3.58748E+11","2009Q2 [YR2009Q2]":"3.78741E+11","2009Q3 [YR2009Q3]":"3.94191E+11","2009Q4 [YR2009Q4]":"3.8176E+11","2010Q1 [YR2010Q1]":"3.65017E+11","2010Q2 [YR2010Q2]":"3.35095E+11","2010Q3 [YR2010Q3]":"3.66335E+11","2010Q4 [YR2010Q4]":"3.55903E+11","2011Q1 [YR2011Q1]":"3.85943E+11","2011Q2 [YR2011Q2]":"3.85291E+11","2011Q3 [YR2011Q3]":"3.6568E+11","2011Q4 [YR2011Q4]":"3.42889E+11","2012Q1 [YR2012Q1]":"3.41457E+11","2012Q2 [YR2012Q2]":"3.21421E+11","2012Q3 [YR2012Q3]":"3.27172E+11","2012Q4 [YR2012Q4]":"3.3217E+11","2013Q1 [YR2013Q1]":"3.19301E+11","2013Q2 [YR2013Q2]":"3.27076E+11","2013Q3 [YR2013Q3]":"3.4119E+11","2013Q4 [YR2013Q4]":"3.44662E+11","2014Q1 [YR2014Q1]":"3.28384E+11","2014Q2 [YR2014Q2]":"3.29016E+11","2014Q3 [YR2014Q3]":"2.99639E+11","2014Q4 [YR2014Q4]":"2.92248E+11","2015Q1 [YR2015Q1]":"2.64389E+11","2015Q2 [YR2015Q2]":"2.68009E+11"},
	{"Country Name":"Azerbaijan","Country Code":"AZE","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":0,"1996Q2 [YR1996Q2]":0,"1996Q3 [YR1996Q3]":0,"1996Q4 [YR1996Q4]":0,"1997Q1 [YR1997Q1]":0,"1997Q2 [YR1997Q2]":0,"1997Q3 [YR1997Q3]":0,"1997Q4 [YR1997Q4]":0,"1998Q1 [YR1998Q1]":0,"1998Q2 [YR1998Q2]":0,"1998Q3 [YR1998Q3]":0,"1998Q4 [YR1998Q4]":0,"1999Q1 [YR1999Q1]":0,"1999Q2 [YR1999Q2]":0,"1999Q3 [YR1999Q3]":0,"1999Q4 [YR1999Q4]":0,"2000Q1 [YR2000Q1]":0,"2000Q2 [YR2000Q2]":0,"2000Q3 [YR2000Q3]":0,"2000Q4 [YR2000Q4]":0,"2001Q1 [YR2001Q1]":0,"2001Q2 [YR2001Q2]":0,"2001Q3 [YR2001Q3]":0,"2001Q4 [YR2001Q4]":0,"2002Q1 [YR2002Q1]":0,"2002Q2 [YR2002Q2]":0,"2002Q3 [YR2002Q3]":0,"2002Q4 [YR2002Q4]":0,"2003Q1 [YR2003Q1]":0,"2003Q2 [YR2003Q2]":0,"2003Q3 [YR2003Q3]":0,"2003Q4 [YR2003Q4]":0,"2004Q1 [YR2004Q1]":0,"2004Q2 [YR2004Q2]":0,"2004Q3 [YR2004Q3]":0,"2004Q4 [YR2004Q4]":0,"2005Q1 [YR2005Q1]":0,"2005Q2 [YR2005Q2]":0,"2005Q3 [YR2005Q3]":0,"2005Q4 [YR2005Q4]":0,"2006Q1 [YR2006Q1]":0,"2006Q2 [YR2006Q2]":0,"2006Q3 [YR2006Q3]":0,"2006Q4 [YR2006Q4]":0,"2007Q1 [YR2007Q1]":0,"2007Q2 [YR2007Q2]":0,"2007Q3 [YR2007Q3]":0,"2007Q4 [YR2007Q4]":0,"2008Q1 [YR2008Q1]":14000000,"2008Q2 [YR2008Q2]":40000000,"2008Q3 [YR2008Q3]":50000000,"2008Q4 [YR2008Q4]":50000000,"2009Q1 [YR2009Q1]":50000000,"2009Q2 [YR2009Q2]":24000000,"2009Q3 [YR2009Q3]":24000000,"2009Q4 [YR2009Q4]":24000000,"2010Q1 [YR2010Q1]":24000000,"2010Q2 [YR2010Q2]":24000000,"2010Q3 [YR2010Q3]":24000000,"2010Q4 [YR2010Q4]":24000000,"2011Q1 [YR2011Q1]":24000000,"2011Q2 [YR2011Q2]":24000000,"2011Q3 [YR2011Q3]":14000000,"2011Q4 [YR2011Q4]":14000000,"2012Q1 [YR2012Q1]":514000000,"2012Q2 [YR2012Q2]":514000000,"2012Q3 [YR2012Q3]":500000000,"2012Q4 [YR2012Q4]":500000000,"2013Q1 [YR2013Q1]":1500000000,"2013Q2 [YR2013Q2]":1500000000,"2013Q3 [YR2013Q3]":1500000000,"2013Q4 [YR2013Q4]":1500000000,"2014Q1 [YR2014Q1]":2750000000,"2014Q2 [YR2014Q2]":3616000000,"2014Q3 [YR2014Q3]":3626000000,"2014Q4 [YR2014Q4]":3676000000,"2015Q1 [YR2015Q1]":4544000000,"2015Q2 [YR2015Q2]":4543000000},
	{"Country Name":"Bahamas, The","Country Code":"BHS","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":4050000000,"1996Q2 [YR1996Q2]":4662000000,"1996Q3 [YR1996Q3]":3787000000,"1996Q4 [YR1996Q4]":4017000000,"1997Q1 [YR1997Q1]":4076000000,"1997Q2 [YR1997Q2]":4211000000,"1997Q3 [YR1997Q3]":4365000000,"1997Q4 [YR1997Q4]":4243000000,"1998Q1 [YR1998Q1]":4692000000,"1998Q2 [YR1998Q2]":5535000000,"1998Q3 [YR1998Q3]":4884000000,"1998Q4 [YR1998Q4]":3795000000,"1999Q1 [YR1999Q1]":3274000000,"1999Q2 [YR1999Q2]":3560000000,"1999Q3 [YR1999Q3]":3111000000,"1999Q4 [YR1999Q4]":3384000000,"2000Q1 [YR2000Q1]":3686000000,"2000Q2 [YR2000Q2]":4022000000,"2000Q3 [YR2000Q3]":3733000000,"2000Q4 [YR2000Q4]":3564000000,"2001Q1 [YR2001Q1]":3317000000,"2001Q2 [YR2001Q2]":2726000000,"2001Q3 [YR2001Q3]":2642000000,"2001Q4 [YR2001Q4]":2488000000,"2002Q1 [YR2002Q1]":2532000000,"2002Q2 [YR2002Q2]":2502000000,"2002Q3 [YR2002Q3]":2377000000,"2002Q4 [YR2002Q4]":2346000000,"2003Q1 [YR2003Q1]":3004000000,"2003Q2 [YR2003Q2]":3200000000,"2003Q3 [YR2003Q3]":3380000000,"2003Q4 [YR2003Q4]":3276000000,"2004Q1 [YR2004Q1]":3626000000,"2004Q2 [YR2004Q2]":3618000000,"2004Q3 [YR2004Q3]":3830000000,"2004Q4 [YR2004Q4]":4177000000,"2005Q1 [YR2005Q1]":4984000000,"2005Q2 [YR2005Q2]":4787000000,"2005Q3 [YR2005Q3]":5193000000,"2005Q4 [YR2005Q4]":5846000000,"2006Q1 [YR2006Q1]":6098000000,"2006Q2 [YR2006Q2]":5861000000,"2006Q3 [YR2006Q3]":5940000000,"2006Q4 [YR2006Q4]":5486000000,"2007Q1 [YR2007Q1]":6196000000,"2007Q2 [YR2007Q2]":7280000000,"2007Q3 [YR2007Q3]":8280000000,"2007Q4 [YR2007Q4]":8686000000,"2008Q1 [YR2008Q1]":9280000000,"2008Q2 [YR2008Q2]":9681000000,"2008Q3 [YR2008Q3]":10151000000,"2008Q4 [YR2008Q4]":9093000000,"2009Q1 [YR2009Q1]":8474000000,"2009Q2 [YR2009Q2]":10249000000,"2009Q3 [YR2009Q3]":10026000000,"2009Q4 [YR2009Q4]":9869000000,"2010Q1 [YR2010Q1]":9813000000,"2010Q2 [YR2010Q2]":9574000000,"2010Q3 [YR2010Q3]":9674000000,"2010Q4 [YR2010Q4]":9080000000,"2011Q1 [YR2011Q1]":8904000000,"2011Q2 [YR2011Q2]":10571000000,"2011Q3 [YR2011Q3]":10871000000,"2011Q4 [YR2011Q4]":11875000000,"2012Q1 [YR2012Q1]":12300000000,"2012Q2 [YR2012Q2]":12722000000,"2012Q3 [YR2012Q3]":12881000000,"2012Q4 [YR2012Q4]":13876000000,"2013Q1 [YR2013Q1]":14696000000,"2013Q2 [YR2013Q2]":13165000000,"2013Q3 [YR2013Q3]":12964000000,"2013Q4 [YR2013Q4]":12710000000,"2014Q1 [YR2014Q1]":12588000000,"2014Q2 [YR2014Q2]":11134000000,"2014Q3 [YR2014Q3]":11993000000,"2014Q4 [YR2014Q4]":11438000000,"2015Q1 [YR2015Q1]":12997000000,"2015Q2 [YR2015Q2]":13741000000},
	{"Country Name":"Bahrain","Country Code":"BHR","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":72000000,"1996Q2 [YR1996Q2]":78000000,"1996Q3 [YR1996Q3]":128000000,"1996Q4 [YR1996Q4]":128000000,"1997Q1 [YR1997Q1]":148000000,"1997Q2 [YR1997Q2]":142000000,"1997Q3 [YR1997Q3]":348000000,"1997Q4 [YR1997Q4]":342000000,"1998Q1 [YR1998Q1]":338000000,"1998Q2 [YR1998Q2]":342000000,"1998Q3 [YR1998Q3]":268000000,"1998Q4 [YR1998Q4]":268000000,"1999Q1 [YR1999Q1]":265000000,"1999Q2 [YR1999Q2]":275000000,"1999Q3 [YR1999Q3]":275000000,"1999Q4 [YR1999Q4]":275000000,"2000Q1 [YR2000Q1]":275000000,"2000Q2 [YR2000Q2]":280000000,"2000Q3 [YR2000Q3]":275000000,"2000Q4 [YR2000Q4]":275000000,"2001Q1 [YR2001Q1]":275000000,"2001Q2 [YR2001Q2]":270000000,"2001Q3 [YR2001Q3]":220000000,"2001Q4 [YR2001Q4]":240000000,"2002Q1 [YR2002Q1]":225000000,"2002Q2 [YR2002Q2]":545000000,"2002Q3 [YR2002Q3]":330000000,"2002Q4 [YR2002Q4]":325000000,"2003Q1 [YR2003Q1]":825000000,"2003Q2 [YR2003Q2]":1085000000,"2003Q3 [YR2003Q3]":1095000000,"2003Q4 [YR2003Q4]":1095000000,"2004Q1 [YR2004Q1]":1105000000,"2004Q2 [YR2004Q2]":1345000000,"2004Q3 [YR2004Q3]":1325000000,"2004Q4 [YR2004Q4]":1338000000,"2005Q1 [YR2005Q1]":1358000000,"2005Q2 [YR2005Q2]":1338000000,"2005Q3 [YR2005Q3]":1758000000,"2005Q4 [YR2005Q4]":2245000000,"2006Q1 [YR2006Q1]":2745000000,"2006Q2 [YR2006Q2]":2745000000,"2006Q3 [YR2006Q3]":3055000000,"2006Q4 [YR2006Q4]":3135000000,"2007Q1 [YR2007Q1]":3135000000,"2007Q2 [YR2007Q2]":5237000000,"2007Q3 [YR2007Q3]":5238000000,"2007Q4 [YR2007Q4]":5201000000,"2008Q1 [YR2008Q1]":5071000000,"2008Q2 [YR2008Q2]":4790000000,"2008Q3 [YR2008Q3]":4668000000,"2008Q4 [YR2008Q4]":4549000000,"2009Q1 [YR2009Q1]":4540000000,"2009Q2 [YR2009Q2]":5118000000,"2009Q3 [YR2009Q3]":5075000000,"2009Q4 [YR2009Q4]":5611000000,"2010Q1 [YR2010Q1]":6813000000,"2010Q2 [YR2010Q2]":7033000000,"2010Q3 [YR2010Q3]":7033000000,"2010Q4 [YR2010Q4]":7160000000,"2011Q1 [YR2011Q1]":6460000000,"2011Q2 [YR2011Q2]":6447000000,"2011Q3 [YR2011Q3]":6147000000,"2011Q4 [YR2011Q4]":7327000000,"2012Q1 [YR2012Q1]":6907000000,"2012Q2 [YR2012Q2]":6247000000,"2012Q3 [YR2012Q3]":7747000000,"2012Q4 [YR2012Q4]":8355000000,"2013Q1 [YR2013Q1]":8358000000,"2013Q2 [YR2013Q2]":9052000000,"2013Q3 [YR2013Q3]":10549000000,"2013Q4 [YR2013Q4]":11130000000,"2014Q1 [YR2014Q1]":11178000000,"2014Q2 [YR2014Q2]":10713000000,"2014Q3 [YR2014Q3]":12131000000,"2014Q4 [YR2014Q4]":11855000000,"2015Q1 [YR2015Q1]":12153000000,"2015Q2 [YR2015Q2]":11674000000},
	{"Country Name":"Bangladesh","Country Code":"BGD","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Barbados","Country Code":"BRB","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":413000000,"1996Q2 [YR1996Q2]":291000000,"1996Q3 [YR1996Q3]":308000000,"1996Q4 [YR1996Q4]":223000000,"1997Q1 [YR1997Q1]":94000000,"1997Q2 [YR1997Q2]":227000000,"1997Q3 [YR1997Q3]":115000000,"1997Q4 [YR1997Q4]":68000000,"1998Q1 [YR1998Q1]":68000000,"1998Q2 [YR1998Q2]":30000000,"1998Q3 [YR1998Q3]":30000000,"1998Q4 [YR1998Q4]":30000000,"1999Q1 [YR1999Q1]":30000000,"1999Q2 [YR1999Q2]":30000000,"1999Q3 [YR1999Q3]":30000000,"1999Q4 [YR1999Q4]":0,"2000Q1 [YR2000Q1]":0,"2000Q2 [YR2000Q2]":100000000,"2000Q3 [YR2000Q3]":100000000,"2000Q4 [YR2000Q4]":100000000,"2001Q1 [YR2001Q1]":100000000,"2001Q2 [YR2001Q2]":100000000,"2001Q3 [YR2001Q3]":100000000,"2001Q4 [YR2001Q4]":250000000,"2002Q1 [YR2002Q1]":250000000,"2002Q2 [YR2002Q2]":250000000,"2002Q3 [YR2002Q3]":250000000,"2002Q4 [YR2002Q4]":250000000,"2003Q1 [YR2003Q1]":250000000,"2003Q2 [YR2003Q2]":250000000,"2003Q3 [YR2003Q3]":250000000,"2003Q4 [YR2003Q4]":250000000,"2004Q1 [YR2004Q1]":250000000,"2004Q2 [YR2004Q2]":250000000,"2004Q3 [YR2004Q3]":252000000,"2004Q4 [YR2004Q4]":270000000,"2005Q1 [YR2005Q1]":485000000,"2005Q2 [YR2005Q2]":486000000,"2005Q3 [YR2005Q3]":475000000,"2005Q4 [YR2005Q4]":589000000,"2006Q1 [YR2006Q1]":588000000,"2006Q2 [YR2006Q2]":738000000,"2006Q3 [YR2006Q3]":763000000,"2006Q4 [YR2006Q4]":813000000,"2007Q1 [YR2007Q1]":813000000,"2007Q2 [YR2007Q2]":823000000,"2007Q3 [YR2007Q3]":850000000,"2007Q4 [YR2007Q4]":904000000,"2008Q1 [YR2008Q1]":1252000000,"2008Q2 [YR2008Q2]":1252000000,"2008Q3 [YR2008Q3]":1257000000,"2008Q4 [YR2008Q4]":1243000000,"2009Q1 [YR2009Q1]":1217000000,"2009Q2 [YR2009Q2]":1192000000,"2009Q3 [YR2009Q3]":1197000000,"2009Q4 [YR2009Q4]":1635000000,"2010Q1 [YR2010Q1]":1266000000,"2010Q2 [YR2010Q2]":1351000000,"2010Q3 [YR2010Q3]":1551000000,"2010Q4 [YR2010Q4]":1541000000,"2011Q1 [YR2011Q1]":1541000000,"2011Q2 [YR2011Q2]":1541000000,"2011Q3 [YR2011Q3]":1400000000,"2011Q4 [YR2011Q4]":1395000000,"2012Q1 [YR2012Q1]":1395000000,"2012Q2 [YR2012Q2]":1407000000,"2012Q3 [YR2012Q3]":1657000000,"2012Q4 [YR2012Q4]":1649000000,"2013Q1 [YR2013Q1]":1649000000,"2013Q2 [YR2013Q2]":2121000000,"2013Q3 [YR2013Q3]":2128000000,"2013Q4 [YR2013Q4]":2150000000,"2014Q1 [YR2014Q1]":3400000000,"2014Q2 [YR2014Q2]":2950000000,"2014Q3 [YR2014Q3]":2950000000,"2014Q4 [YR2014Q4]":2760000000,"2015Q1 [YR2015Q1]":2760000000,"2015Q2 [YR2015Q2]":2760000000},
	{"Country Name":"Belarus","Country Code":"BLR","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":0,"1996Q2 [YR1996Q2]":0,"1996Q3 [YR1996Q3]":0,"1996Q4 [YR1996Q4]":0,"1997Q1 [YR1997Q1]":0,"1997Q2 [YR1997Q2]":0,"1997Q3 [YR1997Q3]":0,"1997Q4 [YR1997Q4]":0,"1998Q1 [YR1998Q1]":0,"1998Q2 [YR1998Q2]":0,"1998Q3 [YR1998Q3]":0,"1998Q4 [YR1998Q4]":0,"1999Q1 [YR1999Q1]":0,"1999Q2 [YR1999Q2]":0,"1999Q3 [YR1999Q3]":0,"1999Q4 [YR1999Q4]":0,"2000Q1 [YR2000Q1]":0,"2000Q2 [YR2000Q2]":0,"2000Q3 [YR2000Q3]":0,"2000Q4 [YR2000Q4]":0,"2001Q1 [YR2001Q1]":0,"2001Q2 [YR2001Q2]":0,"2001Q3 [YR2001Q3]":0,"2001Q4 [YR2001Q4]":0,"2002Q1 [YR2002Q1]":0,"2002Q2 [YR2002Q2]":0,"2002Q3 [YR2002Q3]":0,"2002Q4 [YR2002Q4]":0,"2003Q1 [YR2003Q1]":0,"2003Q2 [YR2003Q2]":0,"2003Q3 [YR2003Q3]":0,"2003Q4 [YR2003Q4]":0,"2004Q1 [YR2004Q1]":0,"2004Q2 [YR2004Q2]":0,"2004Q3 [YR2004Q3]":0,"2004Q4 [YR2004Q4]":0,"2005Q1 [YR2005Q1]":0,"2005Q2 [YR2005Q2]":0,"2005Q3 [YR2005Q3]":0,"2005Q4 [YR2005Q4]":0,"2006Q1 [YR2006Q1]":0,"2006Q2 [YR2006Q2]":0,"2006Q3 [YR2006Q3]":0,"2006Q4 [YR2006Q4]":92000000,"2007Q1 [YR2007Q1]":93000000,"2007Q2 [YR2007Q2]":114000000,"2007Q3 [YR2007Q3]":119000000,"2007Q4 [YR2007Q4]":20000000,"2008Q1 [YR2008Q1]":24000000,"2008Q2 [YR2008Q2]":24000000,"2008Q3 [YR2008Q3]":23000000,"2008Q4 [YR2008Q4]":20000000,"2009Q1 [YR2009Q1]":18000000,"2009Q2 [YR2009Q2]":19000000,"2009Q3 [YR2009Q3]":20000000,"2009Q4 [YR2009Q4]":20000000,"2010Q1 [YR2010Q1]":20000000,"2010Q2 [YR2010Q2]":3000000,"2010Q3 [YR2010Q3]":1003000000,"2010Q4 [YR2010Q4]":1233000000,"2011Q1 [YR2011Q1]":2046000000,"2011Q2 [YR2011Q2]":2049000000,"2011Q3 [YR2011Q3]":2020000000,"2011Q4 [YR2011Q4]":2017000000,"2012Q1 [YR2012Q1]":2039000000,"2012Q2 [YR2012Q2]":2013000000,"2012Q3 [YR2012Q3]":2026000000,"2012Q4 [YR2012Q4]":1800000000,"2013Q1 [YR2013Q1]":1800000000,"2013Q2 [YR2013Q2]":1800000000,"2013Q3 [YR2013Q3]":1800000000,"2013Q4 [YR2013Q4]":1800000000,"2014Q1 [YR2014Q1]":1800000000,"2014Q2 [YR2014Q2]":1800000000,"2014Q3 [YR2014Q3]":1800000000,"2014Q4 [YR2014Q4]":1800000000,"2015Q1 [YR2015Q1]":1800000000,"2015Q2 [YR2015Q2]":1800000000},
	{"Country Name":"Belgium","Country Code":"BEL","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":22926000000,"1996Q2 [YR1996Q2]":22465000000,"1996Q3 [YR1996Q3]":20696000000,"1996Q4 [YR1996Q4]":18940000000,"1997Q1 [YR1997Q1]":17970000000,"1997Q2 [YR1997Q2]":18404000000,"1997Q3 [YR1997Q3]":19553000000,"1997Q4 [YR1997Q4]":19836000000,"1998Q1 [YR1998Q1]":19096000000,"1998Q2 [YR1998Q2]":17587000000,"1998Q3 [YR1998Q3]":17946000000,"1998Q4 [YR1998Q4]":18207000000,"1999Q1 [YR1999Q1]":17172000000,"1999Q2 [YR1999Q2]":16563000000,"1999Q3 [YR1999Q3]":17566000000,"1999Q4 [YR1999Q4]":15625000000,"2000Q1 [YR2000Q1]":15395000000,"2000Q2 [YR2000Q2]":16507000000,"2000Q3 [YR2000Q3]":19408000000,"2000Q4 [YR2000Q4]":17259000000,"2001Q1 [YR2001Q1]":24286000000,"2001Q2 [YR2001Q2]":27180000000,"2001Q3 [YR2001Q3]":28486000000,"2001Q4 [YR2001Q4]":26955000000,"2002Q1 [YR2002Q1]":30222000000,"2002Q2 [YR2002Q2]":33192000000,"2002Q3 [YR2002Q3]":32526000000,"2002Q4 [YR2002Q4]":34838000000,"2003Q1 [YR2003Q1]":36725000000,"2003Q2 [YR2003Q2]":38868000000,"2003Q3 [YR2003Q3]":39693000000,"2003Q4 [YR2003Q4]":42845000000,"2004Q1 [YR2004Q1]":42818000000,"2004Q2 [YR2004Q2]":43562000000,"2004Q3 [YR2004Q3]":46548000000,"2004Q4 [YR2004Q4]":49783000000,"2005Q1 [YR2005Q1]":48112000000,"2005Q2 [YR2005Q2]":45801000000,"2005Q3 [YR2005Q3]":45131000000,"2005Q4 [YR2005Q4]":44804000000,"2006Q1 [YR2006Q1]":50800000000,"2006Q2 [YR2006Q2]":54056000000,"2006Q3 [YR2006Q3]":48835000000,"2006Q4 [YR2006Q4]":57126000000,"2007Q1 [YR2007Q1]":63233000000,"2007Q2 [YR2007Q2]":79030000000,"2007Q3 [YR2007Q3]":81259000000,"2007Q4 [YR2007Q4]":87823000000,"2008Q1 [YR2008Q1]":88712000000,"2008Q2 [YR2008Q2]":"1.04753E+11","2008Q3 [YR2008Q3]":93948000000,"2008Q4 [YR2008Q4]":"1.13913E+11","2009Q1 [YR2009Q1]":"1.18756E+11","2009Q2 [YR2009Q2]":"1.45164E+11","2009Q3 [YR2009Q3]":"1.50758E+11","2009Q4 [YR2009Q4]":"1.55391E+11","2010Q1 [YR2010Q1]":"1.52915E+11","2010Q2 [YR2010Q2]":"1.44143E+11","2010Q3 [YR2010Q3]":"1.67256E+11","2010Q4 [YR2010Q4]":"1.61282E+11","2011Q1 [YR2011Q1]":"1.71683E+11","2011Q2 [YR2011Q2]":"1.74873E+11","2011Q3 [YR2011Q3]":"1.57057E+11","2011Q4 [YR2011Q4]":"1.50359E+11","2012Q1 [YR2012Q1]":"1.46802E+11","2012Q2 [YR2012Q2]":"1.42158E+11","2012Q3 [YR2012Q3]":"1.48317E+11","2012Q4 [YR2012Q4]":"1.51126E+11","2013Q1 [YR2013Q1]":"1.47823E+11","2013Q2 [YR2013Q2]":"1.53464E+11","2013Q3 [YR2013Q3]":"1.67019E+11","2013Q4 [YR2013Q4]":"1.73655E+11","2014Q1 [YR2014Q1]":"1.69719E+11","2014Q2 [YR2014Q2]":"1.67631E+11","2014Q3 [YR2014Q3]":"1.55497E+11","2014Q4 [YR2014Q4]":"1.51886E+11","2015Q1 [YR2015Q1]":"1.38724E+11","2015Q2 [YR2015Q2]":"1.46108E+11"},
	{"Country Name":"Belgium-Luxembourg","Country Code":"BLX","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Belize","Country Code":"BLZ","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":0,"1996Q2 [YR1996Q2]":0,"1996Q3 [YR1996Q3]":0,"1996Q4 [YR1996Q4]":0,"1997Q1 [YR1997Q1]":0,"1997Q2 [YR1997Q2]":0,"1997Q3 [YR1997Q3]":0,"1997Q4 [YR1997Q4]":0,"1998Q1 [YR1998Q1]":0,"1998Q2 [YR1998Q2]":0,"1998Q3 [YR1998Q3]":0,"1998Q4 [YR1998Q4]":0,"1999Q1 [YR1999Q1]":0,"1999Q2 [YR1999Q2]":0,"1999Q3 [YR1999Q3]":0,"1999Q4 [YR1999Q4]":0,"2000Q1 [YR2000Q1]":0,"2000Q2 [YR2000Q2]":0,"2000Q3 [YR2000Q3]":0,"2000Q4 [YR2000Q4]":0,"2001Q1 [YR2001Q1]":0,"2001Q2 [YR2001Q2]":0,"2001Q3 [YR2001Q3]":0,"2001Q4 [YR2001Q4]":0,"2002Q1 [YR2002Q1]":0,"2002Q2 [YR2002Q2]":45000000,"2002Q3 [YR2002Q3]":170000000,"2002Q4 [YR2002Q4]":170000000,"2003Q1 [YR2003Q1]":170000000,"2003Q2 [YR2003Q2]":270000000,"2003Q3 [YR2003Q3]":270000000,"2003Q4 [YR2003Q4]":270000000,"2004Q1 [YR2004Q1]":270000000,"2004Q2 [YR2004Q2]":270000000,"2004Q3 [YR2004Q3]":270000000,"2004Q4 [YR2004Q4]":270000000,"2005Q1 [YR2005Q1]":270000000,"2005Q2 [YR2005Q2]":270000000,"2005Q3 [YR2005Q3]":270000000,"2005Q4 [YR2005Q4]":270000000,"2006Q1 [YR2006Q1]":270000000,"2006Q2 [YR2006Q2]":270000000,"2006Q3 [YR2006Q3]":270000000,"2006Q4 [YR2006Q4]":270000000,"2007Q1 [YR2007Q1]":156000000,"2007Q2 [YR2007Q2]":156000000,"2007Q3 [YR2007Q3]":156000000,"2007Q4 [YR2007Q4]":156000000,"2008Q1 [YR2008Q1]":156000000,"2008Q2 [YR2008Q2]":156000000,"2008Q3 [YR2008Q3]":156000000,"2008Q4 [YR2008Q4]":156000000,"2009Q1 [YR2009Q1]":156000000,"2009Q2 [YR2009Q2]":156000000,"2009Q3 [YR2009Q3]":156000000,"2009Q4 [YR2009Q4]":156000000,"2010Q1 [YR2010Q1]":156000000,"2010Q2 [YR2010Q2]":156000000,"2010Q3 [YR2010Q3]":156000000,"2010Q4 [YR2010Q4]":156000000,"2011Q1 [YR2011Q1]":156000000,"2011Q2 [YR2011Q2]":156000000,"2011Q3 [YR2011Q3]":156000000,"2011Q4 [YR2011Q4]":156000000,"2012Q1 [YR2012Q1]":156000000,"2012Q2 [YR2012Q2]":111000000,"2012Q3 [YR2012Q3]":100000000,"2012Q4 [YR2012Q4]":100000000,"2013Q1 [YR2013Q1]":100000000,"2013Q2 [YR2013Q2]":100000000,"2013Q3 [YR2013Q3]":100000000,"2013Q4 [YR2013Q4]":100000000,"2014Q1 [YR2014Q1]":100000000,"2014Q2 [YR2014Q2]":100000000,"2014Q3 [YR2014Q3]":100000000,"2014Q4 [YR2014Q4]":100000000,"2015Q1 [YR2015Q1]":100000000,"2015Q2 [YR2015Q2]":0},
	{"Country Name":"Benin","Country Code":"BEN","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Bermuda","Country Code":"BMU","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":6842000000,"1996Q2 [YR1996Q2]":7374000000,"1996Q3 [YR1996Q3]":8978000000,"1996Q4 [YR1996Q4]":10364000000,"1997Q1 [YR1997Q1]":11112000000,"1997Q2 [YR1997Q2]":11425000000,"1997Q3 [YR1997Q3]":11245000000,"1997Q4 [YR1997Q4]":10946000000,"1998Q1 [YR1998Q1]":13026000000,"1998Q2 [YR1998Q2]":14398000000,"1998Q3 [YR1998Q3]":17096000000,"1998Q4 [YR1998Q4]":17898000000,"1999Q1 [YR1999Q1]":17727000000,"1999Q2 [YR1999Q2]":17555000000,"1999Q3 [YR1999Q3]":18643000000,"1999Q4 [YR1999Q4]":18415000000,"2000Q1 [YR2000Q1]":18829000000,"2000Q2 [YR2000Q2]":20493000000,"2000Q3 [YR2000Q3]":19194000000,"2000Q4 [YR2000Q4]":22298000000,"2001Q1 [YR2001Q1]":22731000000,"2001Q2 [YR2001Q2]":23414000000,"2001Q3 [YR2001Q3]":24518000000,"2001Q4 [YR2001Q4]":23642000000,"2002Q1 [YR2002Q1]":21952000000,"2002Q2 [YR2002Q2]":24061000000,"2002Q3 [YR2002Q3]":23479000000,"2002Q4 [YR2002Q4]":22590000000,"2003Q1 [YR2003Q1]":22061000000,"2003Q2 [YR2003Q2]":22008000000,"2003Q3 [YR2003Q3]":21242000000,"2003Q4 [YR2003Q4]":25680000000,"2004Q1 [YR2004Q1]":24833000000,"2004Q2 [YR2004Q2]":24960000000,"2004Q3 [YR2004Q3]":25826000000,"2004Q4 [YR2004Q4]":26912000000,"2005Q1 [YR2005Q1]":29941000000,"2005Q2 [YR2005Q2]":29855000000,"2005Q3 [YR2005Q3]":29713000000,"2005Q4 [YR2005Q4]":30632000000,"2006Q1 [YR2006Q1]":30549000000,"2006Q2 [YR2006Q2]":32761000000,"2006Q3 [YR2006Q3]":36043000000,"2006Q4 [YR2006Q4]":34431000000,"2007Q1 [YR2007Q1]":37728000000,"2007Q2 [YR2007Q2]":42181000000,"2007Q3 [YR2007Q3]":42173000000,"2007Q4 [YR2007Q4]":41263000000,"2008Q1 [YR2008Q1]":42805000000,"2008Q2 [YR2008Q2]":48998000000,"2008Q3 [YR2008Q3]":51071000000,"2008Q4 [YR2008Q4]":50149000000,"2009Q1 [YR2009Q1]":56740000000,"2009Q2 [YR2009Q2]":60180000000,"2009Q3 [YR2009Q3]":61880000000,"2009Q4 [YR2009Q4]":65013000000,"2010Q1 [YR2010Q1]":66336000000,"2010Q2 [YR2010Q2]":65706000000,"2010Q3 [YR2010Q3]":71444000000,"2010Q4 [YR2010Q4]":75578000000,"2011Q1 [YR2011Q1]":77882000000,"2011Q2 [YR2011Q2]":81766000000,"2011Q3 [YR2011Q3]":81009000000,"2011Q4 [YR2011Q4]":81127000000,"2012Q1 [YR2012Q1]":79680000000,"2012Q2 [YR2012Q2]":83579000000,"2012Q3 [YR2012Q3]":86056000000,"2012Q4 [YR2012Q4]":87096000000,"2013Q1 [YR2013Q1]":88334000000,"2013Q2 [YR2013Q2]":93188000000,"2013Q3 [YR2013Q3]":96707000000,"2013Q4 [YR2013Q4]":97380000000,"2014Q1 [YR2014Q1]":"1.00064E+11","2014Q2 [YR2014Q2]":99017000000,"2014Q3 [YR2014Q3]":97957000000,"2014Q4 [YR2014Q4]":"1.00485E+11","2015Q1 [YR2015Q1]":"1.00386E+11","2015Q2 [YR2015Q2]":"1.01146E+11"},
	{"Country Name":"Bhutan","Country Code":"BTN","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Bolivia","Country Code":"BOL","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":3000000,"1996Q2 [YR1996Q2]":0,"1996Q3 [YR1996Q3]":0,"1996Q4 [YR1996Q4]":0,"1997Q1 [YR1997Q1]":0,"1997Q2 [YR1997Q2]":0,"1997Q3 [YR1997Q3]":0,"1997Q4 [YR1997Q4]":0,"1998Q1 [YR1998Q1]":0,"1998Q2 [YR1998Q2]":0,"1998Q3 [YR1998Q3]":0,"1998Q4 [YR1998Q4]":0,"1999Q1 [YR1999Q1]":0,"1999Q2 [YR1999Q2]":0,"1999Q3 [YR1999Q3]":0,"1999Q4 [YR1999Q4]":0,"2000Q1 [YR2000Q1]":0,"2000Q2 [YR2000Q2]":0,"2000Q3 [YR2000Q3]":0,"2000Q4 [YR2000Q4]":0,"2001Q1 [YR2001Q1]":0,"2001Q2 [YR2001Q2]":0,"2001Q3 [YR2001Q3]":0,"2001Q4 [YR2001Q4]":0,"2002Q1 [YR2002Q1]":0,"2002Q2 [YR2002Q2]":0,"2002Q3 [YR2002Q3]":0,"2002Q4 [YR2002Q4]":0,"2003Q1 [YR2003Q1]":0,"2003Q2 [YR2003Q2]":0,"2003Q3 [YR2003Q3]":0,"2003Q4 [YR2003Q4]":0,"2004Q1 [YR2004Q1]":0,"2004Q2 [YR2004Q2]":0,"2004Q3 [YR2004Q3]":0,"2004Q4 [YR2004Q4]":0,"2005Q1 [YR2005Q1]":0,"2005Q2 [YR2005Q2]":0,"2005Q3 [YR2005Q3]":0,"2005Q4 [YR2005Q4]":0,"2006Q1 [YR2006Q1]":0,"2006Q2 [YR2006Q2]":0,"2006Q3 [YR2006Q3]":0,"2006Q4 [YR2006Q4]":0,"2007Q1 [YR2007Q1]":0,"2007Q2 [YR2007Q2]":0,"2007Q3 [YR2007Q3]":0,"2007Q4 [YR2007Q4]":0,"2008Q1 [YR2008Q1]":0,"2008Q2 [YR2008Q2]":0,"2008Q3 [YR2008Q3]":0,"2008Q4 [YR2008Q4]":0,"2009Q1 [YR2009Q1]":0,"2009Q2 [YR2009Q2]":0,"2009Q3 [YR2009Q3]":0,"2009Q4 [YR2009Q4]":0,"2010Q1 [YR2010Q1]":0,"2010Q2 [YR2010Q2]":0,"2010Q3 [YR2010Q3]":0,"2010Q4 [YR2010Q4]":0,"2011Q1 [YR2011Q1]":0,"2011Q2 [YR2011Q2]":0,"2011Q3 [YR2011Q3]":150000000,"2011Q4 [YR2011Q4]":150000000,"2012Q1 [YR2012Q1]":150000000,"2012Q2 [YR2012Q2]":150000000,"2012Q3 [YR2012Q3]":150000000,"2012Q4 [YR2012Q4]":650000000,"2013Q1 [YR2013Q1]":650000000,"2013Q2 [YR2013Q2]":650000000,"2013Q3 [YR2013Q3]":1650000000,"2013Q4 [YR2013Q4]":1650000000,"2014Q1 [YR2014Q1]":1650000000,"2014Q2 [YR2014Q2]":1650000000,"2014Q3 [YR2014Q3]":1650000000,"2014Q4 [YR2014Q4]":1650000000,"2015Q1 [YR2015Q1]":1650000000,"2015Q2 [YR2015Q2]":1650000000},
	{"Country Name":"Bonaire, Sint Eustatius and Saba","Country Code":"BQS","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Bosnia and Herzegovina","Country Code":"BIH","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":0,"1996Q2 [YR1996Q2]":0,"1996Q3 [YR1996Q3]":0,"1996Q4 [YR1996Q4]":0,"1997Q1 [YR1997Q1]":0,"1997Q2 [YR1997Q2]":0,"1997Q3 [YR1997Q3]":0,"1997Q4 [YR1997Q4]":0,"1998Q1 [YR1998Q1]":0,"1998Q2 [YR1998Q2]":0,"1998Q3 [YR1998Q3]":0,"1998Q4 [YR1998Q4]":0,"1999Q1 [YR1999Q1]":0,"1999Q2 [YR1999Q2]":0,"1999Q3 [YR1999Q3]":0,"1999Q4 [YR1999Q4]":0,"2000Q1 [YR2000Q1]":0,"2000Q2 [YR2000Q2]":0,"2000Q3 [YR2000Q3]":0,"2000Q4 [YR2000Q4]":0,"2001Q1 [YR2001Q1]":0,"2001Q2 [YR2001Q2]":0,"2001Q3 [YR2001Q3]":0,"2001Q4 [YR2001Q4]":0,"2002Q1 [YR2002Q1]":0,"2002Q2 [YR2002Q2]":0,"2002Q3 [YR2002Q3]":0,"2002Q4 [YR2002Q4]":0,"2003Q1 [YR2003Q1]":0,"2003Q2 [YR2003Q2]":0,"2003Q3 [YR2003Q3]":0,"2003Q4 [YR2003Q4]":0,"2004Q1 [YR2004Q1]":0,"2004Q2 [YR2004Q2]":0,"2004Q3 [YR2004Q3]":0,"2004Q4 [YR2004Q4]":0,"2005Q1 [YR2005Q1]":0,"2005Q2 [YR2005Q2]":0,"2005Q3 [YR2005Q3]":0,"2005Q4 [YR2005Q4]":0,"2006Q1 [YR2006Q1]":0,"2006Q2 [YR2006Q2]":0,"2006Q3 [YR2006Q3]":0,"2006Q4 [YR2006Q4]":0,"2007Q1 [YR2007Q1]":0,"2007Q2 [YR2007Q2]":0,"2007Q3 [YR2007Q3]":0,"2007Q4 [YR2007Q4]":0,"2008Q1 [YR2008Q1]":0,"2008Q2 [YR2008Q2]":0,"2008Q3 [YR2008Q3]":0,"2008Q4 [YR2008Q4]":0,"2009Q1 [YR2009Q1]":0,"2009Q2 [YR2009Q2]":0,"2009Q3 [YR2009Q3]":0,"2009Q4 [YR2009Q4]":0,"2010Q1 [YR2010Q1]":0,"2010Q2 [YR2010Q2]":0,"2010Q3 [YR2010Q3]":0,"2010Q4 [YR2010Q4]":0,"2011Q1 [YR2011Q1]":0,"2011Q2 [YR2011Q2]":0,"2011Q3 [YR2011Q3]":0,"2011Q4 [YR2011Q4]":0,"2012Q1 [YR2012Q1]":0,"2012Q2 [YR2012Q2]":0,"2012Q3 [YR2012Q3]":0,"2012Q4 [YR2012Q4]":0,"2013Q1 [YR2013Q1]":0,"2013Q2 [YR2013Q2]":0,"2013Q3 [YR2013Q3]":0,"2013Q4 [YR2013Q4]":0,"2014Q1 [YR2014Q1]":0,"2014Q2 [YR2014Q2]":0,"2014Q3 [YR2014Q3]":0,"2014Q4 [YR2014Q4]":0,"2015Q1 [YR2015Q1]":0,"2015Q2 [YR2015Q2]":0},
	{"Country Name":"Botswana","Country Code":"BWA","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Brazil","Country Code":"BRA","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":62904000000,"1996Q2 [YR1996Q2]":66237000000,"1996Q3 [YR1996Q3]":67320000000,"1996Q4 [YR1996Q4]":71799000000,"1997Q1 [YR1997Q1]":72074000000,"1997Q2 [YR1997Q2]":76875000000,"1997Q3 [YR1997Q3]":80938000000,"1997Q4 [YR1997Q4]":79490000000,"1998Q1 [YR1998Q1]":83328000000,"1998Q2 [YR1998Q2]":87230000000,"1998Q3 [YR1998Q3]":86264000000,"1998Q4 [YR1998Q4]":76118000000,"1999Q1 [YR1999Q1]":72547000000,"1999Q2 [YR1999Q2]":74225000000,"1999Q3 [YR1999Q3]":75913000000,"1999Q4 [YR1999Q4]":79024000000,"2000Q1 [YR2000Q1]":82621000000,"2000Q2 [YR2000Q2]":79115000000,"2000Q3 [YR2000Q3]":84031000000,"2000Q4 [YR2000Q4]":84791000000,"2001Q1 [YR2001Q1]":86409000000,"2001Q2 [YR2001Q2]":81095000000,"2001Q3 [YR2001Q3]":80205000000,"2001Q4 [YR2001Q4]":78319000000,"2002Q1 [YR2002Q1]":79489000000,"2002Q2 [YR2002Q2]":81026000000,"2002Q3 [YR2002Q3]":79242000000,"2002Q4 [YR2002Q4]":78157000000,"2003Q1 [YR2003Q1]":79745000000,"2003Q2 [YR2003Q2]":82901000000,"2003Q3 [YR2003Q3]":84468000000,"2003Q4 [YR2003Q4]":86467000000,"2004Q1 [YR2004Q1]":87432000000,"2004Q2 [YR2004Q2]":82861000000,"2004Q3 [YR2004Q3]":82580000000,"2004Q4 [YR2004Q4]":82388000000,"2005Q1 [YR2005Q1]":83391000000,"2005Q2 [YR2005Q2]":82076000000,"2005Q3 [YR2005Q3]":82042000000,"2005Q4 [YR2005Q4]":81673000000,"2006Q1 [YR2006Q1]":82781000000,"2006Q2 [YR2006Q2]":71993000000,"2006Q3 [YR2006Q3]":75169000000,"2006Q4 [YR2006Q4]":77613000000,"2007Q1 [YR2007Q1]":79444000000,"2007Q2 [YR2007Q2]":82230000000,"2007Q3 [YR2007Q3]":81331000000,"2007Q4 [YR2007Q4]":81854000000,"2008Q1 [YR2008Q1]":84647000000,"2008Q2 [YR2008Q2]":83637000000,"2008Q3 [YR2008Q3]":79560000000,"2008Q4 [YR2008Q4]":76104000000,"2009Q1 [YR2009Q1]":76814000000,"2009Q2 [YR2009Q2]":80360000000,"2009Q3 [YR2009Q3]":85274000000,"2009Q4 [YR2009Q4]":91234000000,"2010Q1 [YR2010Q1]":97155000000,"2010Q2 [YR2010Q2]":"1.00996E+11","2010Q3 [YR2010Q3]":"1.07817E+11","2010Q4 [YR2010Q4]":"1.14668E+11","2011Q1 [YR2011Q1]":"1.19213E+11","2011Q2 [YR2011Q2]":"1.30558E+11","2011Q3 [YR2011Q3]":"1.31025E+11","2011Q4 [YR2011Q4]":"1.34733E+11","2012Q1 [YR2012Q1]":"1.39193E+11","2012Q2 [YR2012Q2]":"1.41022E+11","2012Q3 [YR2012Q3]":"1.45202E+11","2012Q4 [YR2012Q4]":"1.48632E+11","2013Q1 [YR2013Q1]":"1.48129E+11","2013Q2 [YR2013Q2]":"1.49731E+11","2013Q3 [YR2013Q3]":"1.49987E+11","2013Q4 [YR2013Q4]":"1.52265E+11","2014Q1 [YR2014Q1]":"1.54297E+11","2014Q2 [YR2014Q2]":"1.5731E+11","2014Q3 [YR2014Q3]":"1.66563E+11","2014Q4 [YR2014Q4]":"1.61504E+11","2015Q1 [YR2015Q1]":"1.51872E+11","2015Q2 [YR2015Q2]":"1.52935E+11"},
	{"Country Name":"British Indian Ocean Territory","Country Code":"BIT","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"British Overseas Territories","Country Code":"BOT","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Brunei Darussalam","Country Code":"BRN","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Bulgaria","Country Code":"BGR","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":5310000000,"1996Q2 [YR1996Q2]":5304000000,"1996Q3 [YR1996Q3]":5172000000,"1996Q4 [YR1996Q4]":5170000000,"1997Q1 [YR1997Q1]":5166000000,"1997Q2 [YR1997Q2]":5170000000,"1997Q3 [YR1997Q3]":5199000000,"1997Q4 [YR1997Q4]":5196000000,"1998Q1 [YR1998Q1]":5196000000,"1998Q2 [YR1998Q2]":5194000000,"1998Q3 [YR1998Q3]":5196000000,"1998Q4 [YR1998Q4]":5204000000,"1999Q1 [YR1999Q1]":5203000000,"1999Q2 [YR1999Q2]":5255000000,"1999Q3 [YR1999Q3]":5263000000,"1999Q4 [YR1999Q4]":5205000000,"2000Q1 [YR2000Q1]":5203000000,"2000Q2 [YR2000Q2]":5203000000,"2000Q3 [YR2000Q3]":5200000000,"2000Q4 [YR2000Q4]":5203000000,"2001Q1 [YR2001Q1]":5201000000,"2001Q2 [YR2001Q2]":5200000000,"2001Q3 [YR2001Q3]":5188000000,"2001Q4 [YR2001Q4]":5407000000,"2002Q1 [YR2002Q1]":5046000000,"2002Q2 [YR2002Q2]":5061000000,"2002Q3 [YR2002Q3]":4980000000,"2002Q4 [YR2002Q4]":4180000000,"2003Q1 [YR2003Q1]":4175000000,"2003Q2 [YR2003Q2]":4233000000,"2003Q3 [YR2003Q3]":4207000000,"2003Q4 [YR2003Q4]":4314000000,"2004Q1 [YR2004Q1]":4260000000,"2004Q2 [YR2004Q2]":4254000000,"2004Q3 [YR2004Q3]":3603000000,"2004Q4 [YR2004Q4]":3735000000,"2005Q1 [YR2005Q1]":2574000000,"2005Q2 [YR2005Q2]":2481000000,"2005Q3 [YR2005Q3]":2021000000,"2005Q4 [YR2005Q4]":1992000000,"2006Q1 [YR2006Q1]":2056000000,"2006Q2 [YR2006Q2]":2132000000,"2006Q3 [YR2006Q3]":2126000000,"2006Q4 [YR2006Q4]":2420000000,"2007Q1 [YR2007Q1]":2109000000,"2007Q2 [YR2007Q2]":2131000000,"2007Q3 [YR2007Q3]":2210000000,"2007Q4 [YR2007Q4]":2274000000,"2008Q1 [YR2008Q1]":2401000000,"2008Q2 [YR2008Q2]":2396000000,"2008Q3 [YR2008Q3]":2464000000,"2008Q4 [YR2008Q4]":2415000000,"2009Q1 [YR2009Q1]":2334000000,"2009Q2 [YR2009Q2]":2404000000,"2009Q3 [YR2009Q3]":2420000000,"2009Q4 [YR2009Q4]":2363000000,"2010Q1 [YR2010Q1]":2246000000,"2010Q2 [YR2010Q2]":2092000000,"2010Q3 [YR2010Q3]":1995000000,"2010Q4 [YR2010Q4]":1964000000,"2011Q1 [YR2011Q1]":2056000000,"2011Q2 [YR2011Q2]":2083000000,"2011Q3 [YR2011Q3]":1981000000,"2011Q4 [YR2011Q4]":1791000000,"2012Q1 [YR2012Q1]":1832000000,"2012Q2 [YR2012Q2]":1758000000,"2012Q3 [YR2012Q3]":3020000000,"2012Q4 [YR2012Q4]":3221000000,"2013Q1 [YR2013Q1]":2100000000,"2013Q2 [YR2013Q2]":2131000000,"2013Q3 [YR2013Q3]":2179000000,"2013Q4 [YR2013Q4]":3452000000,"2014Q1 [YR2014Q1]":3452000000,"2014Q2 [YR2014Q2]":3426000000,"2014Q3 [YR2014Q3]":4940000000,"2014Q4 [YR2014Q4]":4785000000,"2015Q1 [YR2015Q1]":7127000000,"2015Q2 [YR2015Q2]":7411000000},
	{"Country Name":"Burkina Faso","Country Code":"BFA","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Burundi","Country Code":"BDI","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Cambodia","Country Code":"KHM","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Cameroon","Country Code":"CMR","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Canada","Country Code":"CAN","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"1.76362E+11","1996Q2 [YR1996Q2]":"1.77274E+11","1996Q3 [YR1996Q3]":"1.79415E+11","1996Q4 [YR1996Q4]":"1.81786E+11","1997Q1 [YR1997Q1]":"1.82749E+11","1997Q2 [YR1997Q2]":"1.87881E+11","1997Q3 [YR1997Q3]":"1.89296E+11","1997Q4 [YR1997Q4]":"1.85221E+11","1998Q1 [YR1998Q1]":"1.89635E+11","1998Q2 [YR1998Q2]":"1.9288E+11","1998Q3 [YR1998Q3]":"1.98123E+11","1998Q4 [YR1998Q4]":"2.04385E+11","1999Q1 [YR1999Q1]":"2.02179E+11","1999Q2 [YR1999Q2]":"2.09231E+11","1999Q3 [YR1999Q3]":"2.13003E+11","1999Q4 [YR1999Q4]":"2.14663E+11","2000Q1 [YR2000Q1]":"2.12577E+11","2000Q2 [YR2000Q2]":"2.06877E+11","2000Q3 [YR2000Q3]":"2.03874E+11","2000Q4 [YR2000Q4]":"2.03771E+11","2001Q1 [YR2001Q1]":"2.03763E+11","2001Q2 [YR2001Q2]":"2.0775E+11","2001Q3 [YR2001Q3]":"2.12247E+11","2001Q4 [YR2001Q4]":"2.16865E+11","2002Q1 [YR2002Q1]":"2.23714E+11","2002Q2 [YR2002Q2]":"2.33422E+11","2002Q3 [YR2002Q3]":"2.3715E+11","2002Q4 [YR2002Q4]":"2.42656E+11","2003Q1 [YR2003Q1]":"2.4545E+11","2003Q2 [YR2003Q2]":"2.60454E+11","2003Q3 [YR2003Q3]":"2.66943E+11","2003Q4 [YR2003Q4]":"2.85352E+11","2004Q1 [YR2004Q1]":"2.83611E+11","2004Q2 [YR2004Q2]":"2.78812E+11","2004Q3 [YR2004Q3]":"2.92373E+11","2004Q4 [YR2004Q4]":"3.06309E+11","2005Q1 [YR2005Q1]":"3.04683E+11","2005Q2 [YR2005Q2]":"3.06788E+11","2005Q3 [YR2005Q3]":"3.07999E+11","2005Q4 [YR2005Q4]":"3.15262E+11","2006Q1 [YR2006Q1]":"3.20082E+11","2006Q2 [YR2006Q2]":"3.25368E+11","2006Q3 [YR2006Q3]":"3.34664E+11","2006Q4 [YR2006Q4]":"3.46667E+11","2007Q1 [YR2007Q1]":"3.58937E+11","2007Q2 [YR2007Q2]":"3.85066E+11","2007Q3 [YR2007Q3]":"3.99344E+11","2007Q4 [YR2007Q4]":"4.20482E+11","2008Q1 [YR2008Q1]":"4.25848E+11","2008Q2 [YR2008Q2]":"4.75852E+11","2008Q3 [YR2008Q3]":"4.73586E+11","2008Q4 [YR2008Q4]":"4.38157E+11","2009Q1 [YR2009Q1]":"4.42226E+11","2009Q2 [YR2009Q2]":"4.85813E+11","2009Q3 [YR2009Q3]":"5.06609E+11","2009Q4 [YR2009Q4]":"5.34177E+11","2010Q1 [YR2010Q1]":"5.42716E+11","2010Q2 [YR2010Q2]":"5.56677E+11","2010Q3 [YR2010Q3]":"5.89893E+11","2010Q4 [YR2010Q4]":"6.1912E+11","2011Q1 [YR2011Q1]":"6.41678E+11","2011Q2 [YR2011Q2]":"6.67474E+11","2011Q3 [YR2011Q3]":"6.45043E+11","2011Q4 [YR2011Q4]":"6.63828E+11","2012Q1 [YR2012Q1]":"6.97685E+11","2012Q2 [YR2012Q2]":"6.83438E+11","2012Q3 [YR2012Q3]":"7.08065E+11","2012Q4 [YR2012Q4]":"7.09854E+11","2013Q1 [YR2013Q1]":"7.07116E+11","2013Q2 [YR2013Q2]":"6.92525E+11","2013Q3 [YR2013Q3]":"7.39958E+11","2013Q4 [YR2013Q4]":"7.61584E+11","2014Q1 [YR2014Q1]":"7.64229E+11","2014Q2 [YR2014Q2]":"7.83117E+11","2014Q3 [YR2014Q3]":"7.82926E+11","2014Q4 [YR2014Q4]":"7.75701E+11","2015Q1 [YR2015Q1]":"7.78597E+11","2015Q2 [YR2015Q2]":"7.78793E+11"},
	{"Country Name":"Cape Verde","Country Code":"CPV","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Cayman Islands","Country Code":"CYM","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":87351000000,"1996Q2 [YR1996Q2]":97564000000,"1996Q3 [YR1996Q3]":"1.01422E+11","1996Q4 [YR1996Q4]":"1.18219E+11","1997Q1 [YR1997Q1]":"1.23943E+11","1997Q2 [YR1997Q2]":"1.33441E+11","1997Q3 [YR1997Q3]":"1.53079E+11","1997Q4 [YR1997Q4]":"1.69958E+11","1998Q1 [YR1998Q1]":"1.81391E+11","1998Q2 [YR1998Q2]":"1.97444E+11","1998Q3 [YR1998Q3]":"2.15374E+11","1998Q4 [YR1998Q4]":"2.26493E+11","1999Q1 [YR1999Q1]":"2.31697E+11","1999Q2 [YR1999Q2]":"2.47086E+11","1999Q3 [YR1999Q3]":"2.68496E+11","1999Q4 [YR1999Q4]":"2.80193E+11","2000Q1 [YR2000Q1]":"2.95896E+11","2000Q2 [YR2000Q2]":"3.05824E+11","2000Q3 [YR2000Q3]":"3.17727E+11","2000Q4 [YR2000Q4]":"3.36165E+11","2001Q1 [YR2001Q1]":"3.50478E+11","2001Q2 [YR2001Q2]":"3.63087E+11","2001Q3 [YR2001Q3]":"3.89236E+11","2001Q4 [YR2001Q4]":"3.90508E+11","2002Q1 [YR2002Q1]":"3.94539E+11","2002Q2 [YR2002Q2]":"4.40083E+11","2002Q3 [YR2002Q3]":"4.40555E+11","2002Q4 [YR2002Q4]":"4.52592E+11","2003Q1 [YR2003Q1]":"4.5971E+11","2003Q2 [YR2003Q2]":"4.67221E+11","2003Q3 [YR2003Q3]":"4.76163E+11","2003Q4 [YR2003Q4]":"4.95913E+11","2004Q1 [YR2004Q1]":"4.94595E+11","2004Q2 [YR2004Q2]":"4.87402E+11","2004Q3 [YR2004Q3]":"4.93247E+11","2004Q4 [YR2004Q4]":"5.25343E+11","2005Q1 [YR2005Q1]":"5.17537E+11","2005Q2 [YR2005Q2]":"5.0184E+11","2005Q3 [YR2005Q3]":"5.12552E+11","2005Q4 [YR2005Q4]":"5.43333E+11","2006Q1 [YR2006Q1]":"6.03282E+11","2006Q2 [YR2006Q2]":"6.67671E+11","2006Q3 [YR2006Q3]":"7.41189E+11","2006Q4 [YR2006Q4]":"8.7775E+11","2007Q1 [YR2007Q1]":"9.84906E+11","2007Q2 [YR2007Q2]":"1.09247E+12","2007Q3 [YR2007Q3]":"1.15628E+12","2007Q4 [YR2007Q4]":"1.18552E+12","2008Q1 [YR2008Q1]":"1.20283E+12","2008Q2 [YR2008Q2]":"1.19342E+12","2008Q3 [YR2008Q3]":"1.15866E+12","2008Q4 [YR2008Q4]":"1.14298E+12","2009Q1 [YR2009Q1]":"1.11361E+12","2009Q2 [YR2009Q2]":"1.13999E+12","2009Q3 [YR2009Q3]":"1.15677E+12","2009Q4 [YR2009Q4]":"1.14694E+12","2010Q1 [YR2010Q1]":"1.13413E+12","2010Q2 [YR2010Q2]":"1.11668E+12","2010Q3 [YR2010Q3]":"1.14696E+12","2010Q4 [YR2010Q4]":"1.15399E+12","2011Q1 [YR2011Q1]":"1.15625E+12","2011Q2 [YR2011Q2]":"1.15315E+12","2011Q3 [YR2011Q3]":"1.14155E+12","2011Q4 [YR2011Q4]":"1.14112E+12","2012Q1 [YR2012Q1]":"1.16058E+12","2012Q2 [YR2012Q2]":"1.16157E+12","2012Q3 [YR2012Q3]":"1.1812E+12","2012Q4 [YR2012Q4]":"1.20263E+12","2013Q1 [YR2013Q1]":"1.20371E+12","2013Q2 [YR2013Q2]":"1.22386E+12","2013Q3 [YR2013Q3]":"1.23293E+12","2013Q4 [YR2013Q4]":"1.24816E+12","2014Q1 [YR2014Q1]":"1.26379E+12","2014Q2 [YR2014Q2]":"1.29928E+12","2014Q3 [YR2014Q3]":"1.30151E+12","2014Q4 [YR2014Q4]":"1.30848E+12","2015Q1 [YR2015Q1]":"1.30661E+12","2015Q2 [YR2015Q2]":"1.32357E+12"},
	{"Country Name":"Central African Republic","Country Code":"CAF","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Chad","Country Code":"TCD","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Chile","Country Code":"CHL","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":1172000000,"1996Q2 [YR1996Q2]":1892000000,"1996Q3 [YR1996Q3]":2332000000,"1996Q4 [YR1996Q4]":3132000000,"1997Q1 [YR1997Q1]":3882000000,"1997Q2 [YR1997Q2]":3882000000,"1997Q3 [YR1997Q3]":4182000000,"1997Q4 [YR1997Q4]":4832000000,"1998Q1 [YR1998Q1]":4832000000,"1998Q2 [YR1998Q2]":5332000000,"1998Q3 [YR1998Q3]":5332000000,"1998Q4 [YR1998Q4]":5745000000,"1999Q1 [YR1999Q1]":5945000000,"1999Q2 [YR1999Q2]":7145000000,"1999Q3 [YR1999Q3]":7441000000,"1999Q4 [YR1999Q4]":7428000000,"2000Q1 [YR2000Q1]":7418000000,"2000Q2 [YR2000Q2]":7418000000,"2000Q3 [YR2000Q3]":7703000000,"2000Q4 [YR2000Q4]":7713000000,"2001Q1 [YR2001Q1]":7704000000,"2001Q2 [YR2001Q2]":8302000000,"2001Q3 [YR2001Q3]":8671000000,"2001Q4 [YR2001Q4]":9315000000,"2002Q1 [YR2002Q1]":9313000000,"2002Q2 [YR2002Q2]":10237000000,"2002Q3 [YR2002Q3]":10602000000,"2002Q4 [YR2002Q4]":11449000000,"2003Q1 [YR2003Q1]":12398000000,"2003Q2 [YR2003Q2]":12673000000,"2003Q3 [YR2003Q3]":13544000000,"2003Q4 [YR2003Q4]":13330000000,"2004Q1 [YR2004Q1]":14153000000,"2004Q2 [YR2004Q2]":14150000000,"2004Q3 [YR2004Q3]":13905000000,"2004Q4 [YR2004Q4]":15142000000,"2005Q1 [YR2005Q1]":15040000000,"2005Q2 [YR2005Q2]":15163000000,"2005Q3 [YR2005Q3]":15106000000,"2005Q4 [YR2005Q4]":14906000000,"2006Q1 [YR2006Q1]":14249000000,"2006Q2 [YR2006Q2]":14349000000,"2006Q3 [YR2006Q3]":14149000000,"2006Q4 [YR2006Q4]":14349000000,"2007Q1 [YR2007Q1]":14483000000,"2007Q2 [YR2007Q2]":14483000000,"2007Q3 [YR2007Q3]":13796000000,"2007Q4 [YR2007Q4]":13611000000,"2008Q1 [YR2008Q1]":13002000000,"2008Q2 [YR2008Q2]":12931000000,"2008Q3 [YR2008Q3]":12920000000,"2008Q4 [YR2008Q4]":12913000000,"2009Q1 [YR2009Q1]":13503000000,"2009Q2 [YR2009Q2]":12452000000,"2009Q3 [YR2009Q3]":13309000000,"2009Q4 [YR2009Q4]":14762000000,"2010Q1 [YR2010Q1]":15257000000,"2010Q2 [YR2010Q2]":16137000000,"2010Q3 [YR2010Q3]":19604000000,"2010Q4 [YR2010Q4]":22216000000,"2011Q1 [YR2011Q1]":24345000000,"2011Q2 [YR2011Q2]":24637000000,"2011Q3 [YR2011Q3]":25485000000,"2011Q4 [YR2011Q4]":27214000000,"2012Q1 [YR2012Q1]":27634000000,"2012Q2 [YR2012Q2]":27413000000,"2012Q3 [YR2012Q3]":30518000000,"2012Q4 [YR2012Q4]":33197000000,"2013Q1 [YR2013Q1]":35310000000,"2013Q2 [YR2013Q2]":37298000000,"2013Q3 [YR2013Q3]":39068000000,"2013Q4 [YR2013Q4]":42648000000,"2014Q1 [YR2014Q1]":42737000000,"2014Q2 [YR2014Q2]":44560000000,"2014Q3 [YR2014Q3]":49426000000,"2014Q4 [YR2014Q4]":54162000000,"2015Q1 [YR2015Q1]":54836000000,"2015Q2 [YR2015Q2]":59533000000},
	{"Country Name":"China","Country Code":"CHN","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":11493000000,"1996Q2 [YR1996Q2]":11246000000,"1996Q3 [YR1996Q3]":12517000000,"1996Q4 [YR1996Q4]":12564000000,"1997Q1 [YR1997Q1]":12852000000,"1997Q2 [YR1997Q2]":14739000000,"1997Q3 [YR1997Q3]":14442000000,"1997Q4 [YR1997Q4]":14504000000,"1998Q1 [YR1998Q1]":14422000000,"1998Q2 [YR1998Q2]":13396000000,"1998Q3 [YR1998Q3]":12730000000,"1998Q4 [YR1998Q4]":13957000000,"1999Q1 [YR1999Q1]":13299000000,"1999Q2 [YR1999Q2]":13483000000,"1999Q3 [YR1999Q3]":13528000000,"1999Q4 [YR1999Q4]":13585000000,"2000Q1 [YR2000Q1]":13156000000,"2000Q2 [YR2000Q2]":13197000000,"2000Q3 [YR2000Q3]":12843000000,"2000Q4 [YR2000Q4]":12688000000,"2001Q1 [YR2001Q1]":12313000000,"2001Q2 [YR2001Q2]":13657000000,"2001Q3 [YR2001Q3]":12394000000,"2001Q4 [YR2001Q4]":12339000000,"2002Q1 [YR2002Q1]":13174000000,"2002Q2 [YR2002Q2]":12317000000,"2002Q3 [YR2002Q3]":11875000000,"2002Q4 [YR2002Q4]":10989000000,"2003Q1 [YR2003Q1]":10708000000,"2003Q2 [YR2003Q2]":10741000000,"2003Q3 [YR2003Q3]":10725000000,"2003Q4 [YR2003Q4]":11838000000,"2004Q1 [YR2004Q1]":10989000000,"2004Q2 [YR2004Q2]":10426000000,"2004Q3 [YR2004Q3]":10949000000,"2004Q4 [YR2004Q4]":14112000000,"2005Q1 [YR2005Q1]":13836000000,"2005Q2 [YR2005Q2]":13411000000,"2005Q3 [YR2005Q3]":14612000000,"2005Q4 [YR2005Q4]":15529000000,"2006Q1 [YR2006Q1]":15347000000,"2006Q2 [YR2006Q2]":14707000000,"2006Q3 [YR2006Q3]":14181000000,"2006Q4 [YR2006Q4]":14117000000,"2007Q1 [YR2007Q1]":14922000000,"2007Q2 [YR2007Q2]":16990000000,"2007Q3 [YR2007Q3]":18278000000,"2007Q4 [YR2007Q4]":18667000000,"2008Q1 [YR2008Q1]":19514000000,"2008Q2 [YR2008Q2]":19529000000,"2008Q3 [YR2008Q3]":21607000000,"2008Q4 [YR2008Q4]":20007000000,"2009Q1 [YR2009Q1]":19907000000,"2009Q2 [YR2009Q2]":19541000000,"2009Q3 [YR2009Q3]":20503000000,"2009Q4 [YR2009Q4]":21347000000,"2010Q1 [YR2010Q1]":21278000000,"2010Q2 [YR2010Q2]":20826000000,"2010Q3 [YR2010Q3]":19917000000,"2010Q4 [YR2010Q4]":21986000000,"2011Q1 [YR2011Q1]":22652000000,"2011Q2 [YR2011Q2]":24524000000,"2011Q3 [YR2011Q3]":25093000000,"2011Q4 [YR2011Q4]":25753000000,"2012Q1 [YR2012Q1]":26852000000,"2012Q2 [YR2012Q2]":34540000000,"2012Q3 [YR2012Q3]":36778000000,"2012Q4 [YR2012Q4]":39110000000,"2013Q1 [YR2013Q1]":41107000000,"2013Q2 [YR2013Q2]":43484000000,"2013Q3 [YR2013Q3]":45404000000,"2013Q4 [YR2013Q4]":49914000000,"2014Q1 [YR2014Q1]":51613000000,"2014Q2 [YR2014Q2]":54922000000,"2014Q3 [YR2014Q3]":57123000000,"2014Q4 [YR2014Q4]":77043000000,"2015Q1 [YR2015Q1]":76236000000,"2015Q2 [YR2015Q2]":78556000000},
	{"Country Name":"Christmas Island","Country Code":"CXR","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Cocos (Keeling) Islands","Country Code":"CCK","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Colombia","Country Code":"COL","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":2146000000,"1996Q2 [YR1996Q2]":2676000000,"1996Q3 [YR1996Q3]":3125000000,"1996Q4 [YR1996Q4]":3299000000,"1997Q1 [YR1997Q1]":4234000000,"1997Q2 [YR1997Q2]":4444000000,"1997Q3 [YR1997Q3]":4403000000,"1997Q4 [YR1997Q4]":4504000000,"1998Q1 [YR1998Q1]":4876000000,"1998Q2 [YR1998Q2]":5371000000,"1998Q3 [YR1998Q3]":5933000000,"1998Q4 [YR1998Q4]":5980000000,"1999Q1 [YR1999Q1]":6324000000,"1999Q2 [YR1999Q2]":6799000000,"1999Q3 [YR1999Q3]":6772000000,"1999Q4 [YR1999Q4]":7228000000,"2000Q1 [YR2000Q1]":7932000000,"2000Q2 [YR2000Q2]":8081000000,"2000Q3 [YR2000Q3]":8268000000,"2000Q4 [YR2000Q4]":8456000000,"2001Q1 [YR2001Q1]":9100000000,"2001Q2 [YR2001Q2]":10623000000,"2001Q3 [YR2001Q3]":10922000000,"2001Q4 [YR2001Q4]":11664000000,"2002Q1 [YR2002Q1]":11419000000,"2002Q2 [YR2002Q2]":11046000000,"2002Q3 [YR2002Q3]":11415000000,"2002Q4 [YR2002Q4]":12067000000,"2003Q1 [YR2003Q1]":12257000000,"2003Q2 [YR2003Q2]":11816000000,"2003Q3 [YR2003Q3]":12315000000,"2003Q4 [YR2003Q4]":13009000000,"2004Q1 [YR2004Q1]":12583000000,"2004Q2 [YR2004Q2]":12606000000,"2004Q3 [YR2004Q3]":13146000000,"2004Q4 [YR2004Q4]":13956000000,"2005Q1 [YR2005Q1]":14263000000,"2005Q2 [YR2005Q2]":14259000000,"2005Q3 [YR2005Q3]":14244000000,"2005Q4 [YR2005Q4]":14330000000,"2006Q1 [YR2006Q1]":14118000000,"2006Q2 [YR2006Q2]":13382000000,"2006Q3 [YR2006Q3]":15605000000,"2006Q4 [YR2006Q4]":16165000000,"2007Q1 [YR2007Q1]":15742000000,"2007Q2 [YR2007Q2]":17050000000,"2007Q3 [YR2007Q3]":17353000000,"2007Q4 [YR2007Q4]":18017000000,"2008Q1 [YR2008Q1]":18001000000,"2008Q2 [YR2008Q2]":17726000000,"2008Q3 [YR2008Q3]":17128000000,"2008Q4 [YR2008Q4]":17114000000,"2009Q1 [YR2009Q1]":17663000000,"2009Q2 [YR2009Q2]":18237000000,"2009Q3 [YR2009Q3]":20675000000,"2009Q4 [YR2009Q4]":21951000000,"2010Q1 [YR2010Q1]":21443000000,"2010Q2 [YR2010Q2]":22032000000,"2010Q3 [YR2010Q3]":23769000000,"2010Q4 [YR2010Q4]":22776000000,"2011Q1 [YR2011Q1]":24593000000,"2011Q2 [YR2011Q2]":25335000000,"2011Q3 [YR2011Q3]":27002000000,"2011Q4 [YR2011Q4]":27391000000,"2012Q1 [YR2012Q1]":28905000000,"2012Q2 [YR2012Q2]":29713000000,"2012Q3 [YR2012Q3]":33014000000,"2012Q4 [YR2012Q4]":32747000000,"2013Q1 [YR2013Q1]":33713000000,"2013Q2 [YR2013Q2]":33692000000,"2013Q3 [YR2013Q3]":37845000000,"2013Q4 [YR2013Q4]":37927000000,"2014Q1 [YR2014Q1]":38817000000,"2014Q2 [YR2014Q2]":41575000000,"2014Q3 [YR2014Q3]":43048000000,"2014Q4 [YR2014Q4]":41886000000,"2015Q1 [YR2015Q1]":44501000000,"2015Q2 [YR2015Q2]":46409000000},
	{"Country Name":"Comoros","Country Code":"COM","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Congo","Country Code":"COG","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":513000000,"1996Q2 [YR1996Q2]":515000000,"1996Q3 [YR1996Q3]":518000000,"1996Q4 [YR1996Q4]":520000000,"1997Q1 [YR1997Q1]":523000000,"1997Q2 [YR1997Q2]":526000000,"1997Q3 [YR1997Q3]":528000000,"1997Q4 [YR1997Q4]":531000000,"1998Q1 [YR1998Q1]":534000000,"1998Q2 [YR1998Q2]":536000000,"1998Q3 [YR1998Q3]":539000000,"1998Q4 [YR1998Q4]":542000000,"1999Q1 [YR1999Q1]":544000000,"1999Q2 [YR1999Q2]":547000000,"1999Q3 [YR1999Q3]":550000000,"1999Q4 [YR1999Q4]":552000000,"2000Q1 [YR2000Q1]":555000000,"2000Q2 [YR2000Q2]":558000000,"2000Q3 [YR2000Q3]":561000000,"2000Q4 [YR2000Q4]":563000000,"2001Q1 [YR2001Q1]":566000000,"2001Q2 [YR2001Q2]":569000000,"2001Q3 [YR2001Q3]":572000000,"2001Q4 [YR2001Q4]":575000000,"2002Q1 [YR2002Q1]":578000000,"2002Q2 [YR2002Q2]":580000000,"2002Q3 [YR2002Q3]":583000000,"2002Q4 [YR2002Q4]":586000000,"2003Q1 [YR2003Q1]":589000000,"2003Q2 [YR2003Q2]":592000000,"2003Q3 [YR2003Q3]":595000000,"2003Q4 [YR2003Q4]":0,"2004Q1 [YR2004Q1]":0,"2004Q2 [YR2004Q2]":0,"2004Q3 [YR2004Q3]":0,"2004Q4 [YR2004Q4]":0,"2005Q1 [YR2005Q1]":0,"2005Q2 [YR2005Q2]":0,"2005Q3 [YR2005Q3]":0,"2005Q4 [YR2005Q4]":0,"2006Q1 [YR2006Q1]":0,"2006Q2 [YR2006Q2]":0,"2006Q3 [YR2006Q3]":0,"2006Q4 [YR2006Q4]":0,"2007Q1 [YR2007Q1]":0,"2007Q2 [YR2007Q2]":0,"2007Q3 [YR2007Q3]":0,"2007Q4 [YR2007Q4]":0,"2008Q1 [YR2008Q1]":0,"2008Q2 [YR2008Q2]":0,"2008Q3 [YR2008Q3]":0,"2008Q4 [YR2008Q4]":0,"2009Q1 [YR2009Q1]":0,"2009Q2 [YR2009Q2]":0,"2009Q3 [YR2009Q3]":0,"2009Q4 [YR2009Q4]":0,"2010Q1 [YR2010Q1]":0,"2010Q2 [YR2010Q2]":0,"2010Q3 [YR2010Q3]":0,"2010Q4 [YR2010Q4]":0,"2011Q1 [YR2011Q1]":0,"2011Q2 [YR2011Q2]":0,"2011Q3 [YR2011Q3]":0,"2011Q4 [YR2011Q4]":0,"2012Q1 [YR2012Q1]":0,"2012Q2 [YR2012Q2]":0,"2012Q3 [YR2012Q3]":0,"2012Q4 [YR2012Q4]":0,"2013Q1 [YR2013Q1]":0,"2013Q2 [YR2013Q2]":0,"2013Q3 [YR2013Q3]":0,"2013Q4 [YR2013Q4]":0,"2014Q1 [YR2014Q1]":0,"2014Q2 [YR2014Q2]":0,"2014Q3 [YR2014Q3]":0,"2014Q4 [YR2014Q4]":0,"2015Q1 [YR2015Q1]":0,"2015Q2 [YR2015Q2]":0},
	{"Country Name":"Congo, The Democratic Republic of the","Country Code":"ZAR","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Cook Islands","Country Code":"COK","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Costa Rica","Country Code":"CRI","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":1220000000,"1996Q2 [YR1996Q2]":1270000000,"1996Q3 [YR1996Q3]":1094000000,"1996Q4 [YR1996Q4]":934000000,"1997Q1 [YR1997Q1]":783000000,"1997Q2 [YR1997Q2]":632000000,"1997Q3 [YR1997Q3]":762000000,"1997Q4 [YR1997Q4]":710000000,"1998Q1 [YR1998Q1]":684000000,"1998Q2 [YR1998Q2]":822000000,"1998Q3 [YR1998Q3]":781000000,"1998Q4 [YR1998Q4]":708000000,"1999Q1 [YR1999Q1]":761000000,"1999Q2 [YR1999Q2]":1147000000,"1999Q3 [YR1999Q3]":1231000000,"1999Q4 [YR1999Q4]":1256000000,"2000Q1 [YR2000Q1]":1275000000,"2000Q2 [YR2000Q2]":1203000000,"2000Q3 [YR2000Q3]":1345000000,"2000Q4 [YR2000Q4]":1318000000,"2001Q1 [YR2001Q1]":1543000000,"2001Q2 [YR2001Q2]":1462000000,"2001Q3 [YR2001Q3]":1442000000,"2001Q4 [YR2001Q4]":1442000000,"2002Q1 [YR2002Q1]":1682000000,"2002Q2 [YR2002Q2]":1659000000,"2002Q3 [YR2002Q3]":1652000000,"2002Q4 [YR2002Q4]":1642000000,"2003Q1 [YR2003Q1]":2096000000,"2003Q2 [YR2003Q2]":1740000000,"2003Q3 [YR2003Q3]":1749000000,"2003Q4 [YR2003Q4]":1793000000,"2004Q1 [YR2004Q1]":1889000000,"2004Q2 [YR2004Q2]":1897000000,"2004Q3 [YR2004Q3]":1911000000,"2004Q4 [YR2004Q4]":1909000000,"2005Q1 [YR2005Q1]":1907000000,"2005Q2 [YR2005Q2]":1894000000,"2005Q3 [YR2005Q3]":1861000000,"2005Q4 [YR2005Q4]":1855000000,"2006Q1 [YR2006Q1]":1851000000,"2006Q2 [YR2006Q2]":1851000000,"2006Q3 [YR2006Q3]":1850000000,"2006Q4 [YR2006Q4]":1850000000,"2007Q1 [YR2007Q1]":1850000000,"2007Q2 [YR2007Q2]":1850000000,"2007Q3 [YR2007Q3]":1850000000,"2007Q4 [YR2007Q4]":1850000000,"2008Q1 [YR2008Q1]":1650000000,"2008Q2 [YR2008Q2]":1650000000,"2008Q3 [YR2008Q3]":1650000000,"2008Q4 [YR2008Q4]":1650000000,"2009Q1 [YR2009Q1]":1650000000,"2009Q2 [YR2009Q2]":1350000000,"2009Q3 [YR2009Q3]":1350000000,"2009Q4 [YR2009Q4]":1350000000,"2010Q1 [YR2010Q1]":1350000000,"2010Q2 [YR2010Q2]":1350000000,"2010Q3 [YR2010Q3]":1350000000,"2010Q4 [YR2010Q4]":1350000000,"2011Q1 [YR2011Q1]":1100000000,"2011Q2 [YR2011Q2]":1100000000,"2011Q3 [YR2011Q3]":1100000000,"2011Q4 [YR2011Q4]":1350000000,"2012Q1 [YR2012Q1]":1100000000,"2012Q2 [YR2012Q2]":1350000000,"2012Q3 [YR2012Q3]":1350000000,"2012Q4 [YR2012Q4]":2350000000,"2013Q1 [YR2013Q1]":2100000000,"2013Q2 [YR2013Q2]":3600000000,"2013Q3 [YR2013Q3]":4100000000,"2013Q4 [YR2013Q4]":5060000000,"2014Q1 [YR2014Q1]":5100000000,"2014Q2 [YR2014Q2]":6100000000,"2014Q3 [YR2014Q3]":6100000000,"2014Q4 [YR2014Q4]":6100000000,"2015Q1 [YR2015Q1]":7100000000,"2015Q2 [YR2015Q2]":7100000000},
	{"Country Name":"Cote d'Ivoire","Country Code":"CIV","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":0,"1996Q2 [YR1996Q2]":0,"1996Q3 [YR1996Q3]":0,"1996Q4 [YR1996Q4]":0,"1997Q1 [YR1997Q1]":0,"1997Q2 [YR1997Q2]":0,"1997Q3 [YR1997Q3]":0,"1997Q4 [YR1997Q4]":0,"1998Q1 [YR1998Q1]":1277000000,"1998Q2 [YR1998Q2]":1277000000,"1998Q3 [YR1998Q3]":1272000000,"1998Q4 [YR1998Q4]":1272000000,"1999Q1 [YR1999Q1]":1267000000,"1999Q2 [YR1999Q2]":1267000000,"1999Q3 [YR1999Q3]":1261000000,"1999Q4 [YR1999Q4]":1261000000,"2000Q1 [YR2000Q1]":1256000000,"2000Q2 [YR2000Q2]":1256000000,"2000Q3 [YR2000Q3]":1251000000,"2000Q4 [YR2000Q4]":1251000000,"2001Q1 [YR2001Q1]":1245000000,"2001Q2 [YR2001Q2]":1245000000,"2001Q3 [YR2001Q3]":1240000000,"2001Q4 [YR2001Q4]":1240000000,"2002Q1 [YR2002Q1]":1235000000,"2002Q2 [YR2002Q2]":1235000000,"2002Q3 [YR2002Q3]":1229000000,"2002Q4 [YR2002Q4]":1229000000,"2003Q1 [YR2003Q1]":1224000000,"2003Q2 [YR2003Q2]":1224000000,"2003Q3 [YR2003Q3]":1218000000,"2003Q4 [YR2003Q4]":1218000000,"2004Q1 [YR2004Q1]":1211000000,"2004Q2 [YR2004Q2]":1211000000,"2004Q3 [YR2004Q3]":1205000000,"2004Q4 [YR2004Q4]":1205000000,"2005Q1 [YR2005Q1]":1199000000,"2005Q2 [YR2005Q2]":1199000000,"2005Q3 [YR2005Q3]":1192000000,"2005Q4 [YR2005Q4]":1192000000,"2006Q1 [YR2006Q1]":1186000000,"2006Q2 [YR2006Q2]":1186000000,"2006Q3 [YR2006Q3]":1179000000,"2006Q4 [YR2006Q4]":1179000000,"2007Q1 [YR2007Q1]":1173000000,"2007Q2 [YR2007Q2]":1173000000,"2007Q3 [YR2007Q3]":1167000000,"2007Q4 [YR2007Q4]":1167000000,"2008Q1 [YR2008Q1]":1158000000,"2008Q2 [YR2008Q2]":1158000000,"2008Q3 [YR2008Q3]":1150000000,"2008Q4 [YR2008Q4]":1150000000,"2009Q1 [YR2009Q1]":1141000000,"2009Q2 [YR2009Q2]":1141000000,"2009Q3 [YR2009Q3]":1133000000,"2009Q4 [YR2009Q4]":1133000000,"2010Q1 [YR2010Q1]":1124000000,"2010Q2 [YR2010Q2]":2605000000,"2010Q3 [YR2010Q3]":2592000000,"2010Q4 [YR2010Q4]":2592000000,"2011Q1 [YR2011Q1]":2580000000,"2011Q2 [YR2011Q2]":2580000000,"2011Q3 [YR2011Q3]":2567000000,"2011Q4 [YR2011Q4]":2567000000,"2012Q1 [YR2012Q1]":2554000000,"2012Q2 [YR2012Q2]":2554000000,"2012Q3 [YR2012Q3]":2537000000,"2012Q4 [YR2012Q4]":2537000000,"2013Q1 [YR2013Q1]":2520000000,"2013Q2 [YR2013Q2]":2520000000,"2013Q3 [YR2013Q3]":2503000000,"2013Q4 [YR2013Q4]":2503000000,"2014Q1 [YR2014Q1]":2486000000,"2014Q2 [YR2014Q2]":2486000000,"2014Q3 [YR2014Q3]":3219000000,"2014Q4 [YR2014Q4]":3219000000,"2015Q1 [YR2015Q1]":4202000000,"2015Q2 [YR2015Q2]":4202000000},
	{"Country Name":"Croatia","Country Code":"HRV","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":0,"1996Q2 [YR1996Q2]":0,"1996Q3 [YR1996Q3]":0,"1996Q4 [YR1996Q4]":0,"1997Q1 [YR1997Q1]":350000000,"1997Q2 [YR1997Q2]":406000000,"1997Q3 [YR1997Q3]":2037000000,"1997Q4 [YR1997Q4]":2033000000,"1998Q1 [YR1998Q1]":2120000000,"1998Q2 [YR1998Q2]":2126000000,"1998Q3 [YR1998Q3]":2155000000,"1998Q4 [YR1998Q4]":2115000000,"1999Q1 [YR1999Q1]":2420000000,"1999Q2 [YR1999Q2]":2390000000,"1999Q3 [YR1999Q3]":2444000000,"1999Q4 [YR1999Q4]":2653000000,"2000Q1 [YR2000Q1]":3115000000,"2000Q2 [YR2000Q2]":3118000000,"2000Q3 [YR2000Q3]":3396000000,"2000Q4 [YR2000Q4]":3385000000,"2001Q1 [YR2001Q1]":3879000000,"2001Q2 [YR2001Q2]":3842000000,"2001Q3 [YR2001Q3]":4199000000,"2001Q4 [YR2001Q4]":4071000000,"2002Q1 [YR2002Q1]":4193000000,"2002Q2 [YR2002Q2]":4847000000,"2002Q3 [YR2002Q3]":4816000000,"2002Q4 [YR2002Q4]":5079000000,"2003Q1 [YR2003Q1]":5958000000,"2003Q2 [YR2003Q2]":6352000000,"2003Q3 [YR2003Q3]":6523000000,"2003Q4 [YR2003Q4]":6893000000,"2004Q1 [YR2004Q1]":7149000000,"2004Q2 [YR2004Q2]":7807000000,"2004Q3 [YR2004Q3]":8216000000,"2004Q4 [YR2004Q4]":8595000000,"2005Q1 [YR2005Q1]":7567000000,"2005Q2 [YR2005Q2]":7159000000,"2005Q3 [YR2005Q3]":7103000000,"2005Q4 [YR2005Q4]":6967000000,"2006Q1 [YR2006Q1]":6514000000,"2006Q2 [YR2006Q2]":6746000000,"2006Q3 [YR2006Q3]":6027000000,"2006Q4 [YR2006Q4]":6395000000,"2007Q1 [YR2007Q1]":6457000000,"2007Q2 [YR2007Q2]":6828000000,"2007Q3 [YR2007Q3]":7233000000,"2007Q4 [YR2007Q4]":7155000000,"2008Q1 [YR2008Q1]":6991000000,"2008Q2 [YR2008Q2]":6707000000,"2008Q3 [YR2008Q3]":6045000000,"2008Q4 [YR2008Q4]":5929000000,"2009Q1 [YR2009Q1]":4963000000,"2009Q2 [YR2009Q2]":6053000000,"2009Q3 [YR2009Q3]":5569000000,"2009Q4 [YR2009Q4]":7340000000,"2010Q1 [YR2010Q1]":6257000000,"2010Q2 [YR2010Q2]":5834000000,"2010Q3 [YR2010Q3]":7527000000,"2010Q4 [YR2010Q4]":7427000000,"2011Q1 [YR2011Q1]":7944000000,"2011Q2 [YR2011Q2]":8008000000,"2011Q3 [YR2011Q3]":8774000000,"2011Q4 [YR2011Q4]":8585000000,"2012Q1 [YR2012Q1]":8724000000,"2012Q2 [YR2012Q2]":10345000000,"2012Q3 [YR2012Q3]":10469000000,"2012Q4 [YR2012Q4]":11663000000,"2013Q1 [YR2013Q1]":11512000000,"2013Q2 [YR2013Q2]":13118000000,"2013Q3 [YR2013Q3]":13486000000,"2013Q4 [YR2013Q4]":15351000000,"2014Q1 [YR2014Q1]":15350000000,"2014Q2 [YR2014Q2]":15775000000,"2014Q3 [YR2014Q3]":15305000000,"2014Q4 [YR2014Q4]":15155000000,"2015Q1 [YR2015Q1]":15352000000,"2015Q2 [YR2015Q2]":15607000000},
	{"Country Name":"Cuba","Country Code":"CUB","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":0,"1996Q2 [YR1996Q2]":0,"1996Q3 [YR1996Q3]":0,"1996Q4 [YR1996Q4]":0,"1997Q1 [YR1997Q1]":0,"1997Q2 [YR1997Q2]":0,"1997Q3 [YR1997Q3]":0,"1997Q4 [YR1997Q4]":0,"1998Q1 [YR1998Q1]":0,"1998Q2 [YR1998Q2]":0,"1998Q3 [YR1998Q3]":0,"1998Q4 [YR1998Q4]":0,"1999Q1 [YR1999Q1]":0,"1999Q2 [YR1999Q2]":0,"1999Q3 [YR1999Q3]":0,"1999Q4 [YR1999Q4]":0,"2000Q1 [YR2000Q1]":0,"2000Q2 [YR2000Q2]":0,"2000Q3 [YR2000Q3]":0,"2000Q4 [YR2000Q4]":0,"2001Q1 [YR2001Q1]":0,"2001Q2 [YR2001Q2]":0,"2001Q3 [YR2001Q3]":0,"2001Q4 [YR2001Q4]":0,"2002Q1 [YR2002Q1]":0,"2002Q2 [YR2002Q2]":0,"2002Q3 [YR2002Q3]":0,"2002Q4 [YR2002Q4]":0,"2003Q1 [YR2003Q1]":0,"2003Q2 [YR2003Q2]":0,"2003Q3 [YR2003Q3]":0,"2003Q4 [YR2003Q4]":0,"2004Q1 [YR2004Q1]":0,"2004Q2 [YR2004Q2]":0,"2004Q3 [YR2004Q3]":0,"2004Q4 [YR2004Q4]":0,"2005Q1 [YR2005Q1]":0,"2005Q2 [YR2005Q2]":0,"2005Q3 [YR2005Q3]":0,"2005Q4 [YR2005Q4]":0,"2006Q1 [YR2006Q1]":0,"2006Q2 [YR2006Q2]":0,"2006Q3 [YR2006Q3]":0,"2006Q4 [YR2006Q4]":0,"2007Q1 [YR2007Q1]":0,"2007Q2 [YR2007Q2]":270000000,"2007Q3 [YR2007Q3]":284000000,"2007Q4 [YR2007Q4]":294000000,"2008Q1 [YR2008Q1]":316000000,"2008Q2 [YR2008Q2]":315000000,"2008Q3 [YR2008Q3]":286000000,"2008Q4 [YR2008Q4]":278000000,"2009Q1 [YR2009Q1]":0,"2009Q2 [YR2009Q2]":0,"2009Q3 [YR2009Q3]":0,"2009Q4 [YR2009Q4]":0,"2010Q1 [YR2010Q1]":0,"2010Q2 [YR2010Q2]":0,"2010Q3 [YR2010Q3]":0,"2010Q4 [YR2010Q4]":0,"2011Q1 [YR2011Q1]":0,"2011Q2 [YR2011Q2]":0,"2011Q3 [YR2011Q3]":0,"2011Q4 [YR2011Q4]":0,"2012Q1 [YR2012Q1]":0,"2012Q2 [YR2012Q2]":0,"2012Q3 [YR2012Q3]":0,"2012Q4 [YR2012Q4]":0,"2013Q1 [YR2013Q1]":0,"2013Q2 [YR2013Q2]":0,"2013Q3 [YR2013Q3]":0,"2013Q4 [YR2013Q4]":0,"2014Q1 [YR2014Q1]":0,"2014Q2 [YR2014Q2]":0,"2014Q3 [YR2014Q3]":0,"2014Q4 [YR2014Q4]":0,"2015Q1 [YR2015Q1]":0,"2015Q2 [YR2015Q2]":0},
	{"Country Name":"Curacao","Country Code":"CUW","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":0,"1996Q2 [YR1996Q2]":0,"1996Q3 [YR1996Q3]":0,"1996Q4 [YR1996Q4]":0,"1997Q1 [YR1997Q1]":0,"1997Q2 [YR1997Q2]":0,"1997Q3 [YR1997Q3]":0,"1997Q4 [YR1997Q4]":0,"1998Q1 [YR1998Q1]":0,"1998Q2 [YR1998Q2]":0,"1998Q3 [YR1998Q3]":0,"1998Q4 [YR1998Q4]":0,"1999Q1 [YR1999Q1]":0,"1999Q2 [YR1999Q2]":0,"1999Q3 [YR1999Q3]":0,"1999Q4 [YR1999Q4]":0,"2000Q1 [YR2000Q1]":0,"2000Q2 [YR2000Q2]":0,"2000Q3 [YR2000Q3]":0,"2000Q4 [YR2000Q4]":0,"2001Q1 [YR2001Q1]":0,"2001Q2 [YR2001Q2]":0,"2001Q3 [YR2001Q3]":0,"2001Q4 [YR2001Q4]":0,"2002Q1 [YR2002Q1]":0,"2002Q2 [YR2002Q2]":0,"2002Q3 [YR2002Q3]":0,"2002Q4 [YR2002Q4]":0,"2003Q1 [YR2003Q1]":0,"2003Q2 [YR2003Q2]":0,"2003Q3 [YR2003Q3]":0,"2003Q4 [YR2003Q4]":0,"2004Q1 [YR2004Q1]":0,"2004Q2 [YR2004Q2]":0,"2004Q3 [YR2004Q3]":0,"2004Q4 [YR2004Q4]":0,"2005Q1 [YR2005Q1]":0,"2005Q2 [YR2005Q2]":23000000,"2005Q3 [YR2005Q3]":78000000,"2005Q4 [YR2005Q4]":712000000,"2006Q1 [YR2006Q1]":789000000,"2006Q2 [YR2006Q2]":907000000,"2006Q3 [YR2006Q3]":993000000,"2006Q4 [YR2006Q4]":1141000000,"2007Q1 [YR2007Q1]":1241000000,"2007Q2 [YR2007Q2]":1338000000,"2007Q3 [YR2007Q3]":1405000000,"2007Q4 [YR2007Q4]":1459000000,"2008Q1 [YR2008Q1]":1575000000,"2008Q2 [YR2008Q2]":1567000000,"2008Q3 [YR2008Q3]":1424000000,"2008Q4 [YR2008Q4]":1395000000,"2009Q1 [YR2009Q1]":1331000000,"2009Q2 [YR2009Q2]":1412000000,"2009Q3 [YR2009Q3]":1465000000,"2009Q4 [YR2009Q4]":1444000000,"2010Q1 [YR2010Q1]":1356000000,"2010Q2 [YR2010Q2]":1246000000,"2010Q3 [YR2010Q3]":1385000000,"2010Q4 [YR2010Q4]":1366000000,"2011Q1 [YR2011Q1]":1466000000,"2011Q2 [YR2011Q2]":1505000000,"2011Q3 [YR2011Q3]":3409000000,"2011Q4 [YR2011Q4]":4016000000,"2012Q1 [YR2012Q1]":9125000000,"2012Q2 [YR2012Q2]":10140000000,"2012Q3 [YR2012Q3]":12778000000,"2012Q4 [YR2012Q4]":13507000000,"2013Q1 [YR2013Q1]":15412000000,"2013Q2 [YR2013Q2]":15707000000,"2013Q3 [YR2013Q3]":14329000000,"2013Q4 [YR2013Q4]":13443000000,"2014Q1 [YR2014Q1]":10746000000,"2014Q2 [YR2014Q2]":10234000000,"2014Q3 [YR2014Q3]":9594000000,"2014Q4 [YR2014Q4]":9232000000,"2015Q1 [YR2015Q1]":8769000000,"2015Q2 [YR2015Q2]":8528000000},
	{"Country Name":"Cyprus","Country Code":"CYP","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":445000000,"1996Q2 [YR1996Q2]":423000000,"1996Q3 [YR1996Q3]":434000000,"1996Q4 [YR1996Q4]":531000000,"1997Q1 [YR1997Q1]":534000000,"1997Q2 [YR1997Q2]":862000000,"1997Q3 [YR1997Q3]":829000000,"1997Q4 [YR1997Q4]":832000000,"1998Q1 [YR1998Q1]":919000000,"1998Q2 [YR1998Q2]":897000000,"1998Q3 [YR1998Q3]":1299000000,"1998Q4 [YR1998Q4]":1228000000,"1999Q1 [YR1999Q1]":1187000000,"1999Q2 [YR1999Q2]":1424000000,"1999Q3 [YR1999Q3]":1487000000,"1999Q4 [YR1999Q4]":1451000000,"2000Q1 [YR2000Q1]":1393000000,"2000Q2 [YR2000Q2]":1370000000,"2000Q3 [YR2000Q3]":1327000000,"2000Q4 [YR2000Q4]":1304000000,"2001Q1 [YR2001Q1]":1333000000,"2001Q2 [YR2001Q2]":1546000000,"2001Q3 [YR2001Q3]":1664000000,"2001Q4 [YR2001Q4]":1762000000,"2002Q1 [YR2002Q1]":2244000000,"2002Q2 [YR2002Q2]":2027000000,"2002Q3 [YR2002Q3]":2076000000,"2002Q4 [YR2002Q4]":2025000000,"2003Q1 [YR2003Q1]":2065000000,"2003Q2 [YR2003Q2]":2161000000,"2003Q3 [YR2003Q3]":2563000000,"2003Q4 [YR2003Q4]":3793000000,"2004Q1 [YR2004Q1]":4715000000,"2004Q2 [YR2004Q2]":4860000000,"2004Q3 [YR2004Q3]":6222000000,"2004Q4 [YR2004Q4]":7023000000,"2005Q1 [YR2005Q1]":7213000000,"2005Q2 [YR2005Q2]":7662000000,"2005Q3 [YR2005Q3]":7898000000,"2005Q4 [YR2005Q4]":7242000000,"2006Q1 [YR2006Q1]":7987000000,"2006Q2 [YR2006Q2]":9116000000,"2006Q3 [YR2006Q3]":9237000000,"2006Q4 [YR2006Q4]":9214000000,"2007Q1 [YR2007Q1]":11113000000,"2007Q2 [YR2007Q2]":14303000000,"2007Q3 [YR2007Q3]":12429000000,"2007Q4 [YR2007Q4]":12583000000,"2008Q1 [YR2008Q1]":14222000000,"2008Q2 [YR2008Q2]":14271000000,"2008Q3 [YR2008Q3]":14726000000,"2008Q4 [YR2008Q4]":10227000000,"2009Q1 [YR2009Q1]":9164000000,"2009Q2 [YR2009Q2]":12526000000,"2009Q3 [YR2009Q3]":13257000000,"2009Q4 [YR2009Q4]":13042000000,"2010Q1 [YR2010Q1]":13743000000,"2010Q2 [YR2010Q2]":11906000000,"2010Q3 [YR2010Q3]":12646000000,"2010Q4 [YR2010Q4]":13566000000,"2011Q1 [YR2011Q1]":14899000000,"2011Q2 [YR2011Q2]":16569000000,"2011Q3 [YR2011Q3]":17210000000,"2011Q4 [YR2011Q4]":18085000000,"2012Q1 [YR2012Q1]":12622000000,"2012Q2 [YR2012Q2]":11635000000,"2012Q3 [YR2012Q3]":5656000000,"2012Q4 [YR2012Q4]":11079000000,"2013Q1 [YR2013Q1]":11209000000,"2013Q2 [YR2013Q2]":11692000000,"2013Q3 [YR2013Q3]":12081000000,"2013Q4 [YR2013Q4]":8534000000,"2014Q1 [YR2014Q1]":11258000000,"2014Q2 [YR2014Q2]":12149000000,"2014Q3 [YR2014Q3]":9148000000,"2014Q4 [YR2014Q4]":8996000000,"2015Q1 [YR2015Q1]":7628000000,"2015Q2 [YR2015Q2]":9361000000},
	{"Country Name":"Czech Republic","Country Code":"CZE","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":952000000,"1996Q2 [YR1996Q2]":642000000,"1996Q3 [YR1996Q3]":686000000,"1996Q4 [YR1996Q4]":718000000,"1997Q1 [YR1997Q1]":687000000,"1997Q2 [YR1997Q2]":951000000,"1997Q3 [YR1997Q3]":932000000,"1997Q4 [YR1997Q4]":908000000,"1998Q1 [YR1998Q1]":844000000,"1998Q2 [YR1998Q2]":829000000,"1998Q3 [YR1998Q3]":845000000,"1998Q4 [YR1998Q4]":1089000000,"1999Q1 [YR1999Q1]":1070000000,"1999Q2 [YR1999Q2]":1022000000,"1999Q3 [YR1999Q3]":1070000000,"1999Q4 [YR1999Q4]":1068000000,"2000Q1 [YR2000Q1]":1043000000,"2000Q2 [YR2000Q2]":1044000000,"2000Q3 [YR2000Q3]":690000000,"2000Q4 [YR2000Q4]":705000000,"2001Q1 [YR2001Q1]":692000000,"2001Q2 [YR2001Q2]":682000000,"2001Q3 [YR2001Q3]":722000000,"2001Q4 [YR2001Q4]":1560000000,"2002Q1 [YR2002Q1]":1549000000,"2002Q2 [YR2002Q2]":1892000000,"2002Q3 [YR2002Q3]":1876000000,"2002Q4 [YR2002Q4]":1961000000,"2003Q1 [YR2003Q1]":2201000000,"2003Q2 [YR2003Q2]":2281000000,"2003Q3 [YR2003Q3]":2315000000,"2003Q4 [YR2003Q4]":2613000000,"2004Q1 [YR2004Q1]":2552000000,"2004Q2 [YR2004Q2]":4577000000,"2004Q3 [YR2004Q3]":4783000000,"2004Q4 [YR2004Q4]":5624000000,"2005Q1 [YR2005Q1]":6683000000,"2005Q2 [YR2005Q2]":6280000000,"2005Q3 [YR2005Q3]":5868000000,"2005Q4 [YR2005Q4]":5563000000,"2006Q1 [YR2006Q1]":5695000000,"2006Q2 [YR2006Q2]":5954000000,"2006Q3 [YR2006Q3]":6221000000,"2006Q4 [YR2006Q4]":5882000000,"2007Q1 [YR2007Q1]":6177000000,"2007Q2 [YR2007Q2]":6472000000,"2007Q3 [YR2007Q3]":6830000000,"2007Q4 [YR2007Q4]":7922000000,"2008Q1 [YR2008Q1]":8638000000,"2008Q2 [YR2008Q2]":11860000000,"2008Q3 [YR2008Q3]":11980000000,"2008Q4 [YR2008Q4]":11562000000,"2009Q1 [YR2009Q1]":11250000000,"2009Q2 [YR2009Q2]":14430000000,"2009Q3 [YR2009Q3]":15127000000,"2009Q4 [YR2009Q4]":17504000000,"2010Q1 [YR2010Q1]":16670000000,"2010Q2 [YR2010Q2]":17781000000,"2010Q3 [YR2010Q3]":22855000000,"2010Q4 [YR2010Q4]":23122000000,"2011Q1 [YR2011Q1]":24600000000,"2011Q2 [YR2011Q2]":26421000000,"2011Q3 [YR2011Q3]":24869000000,"2011Q4 [YR2011Q4]":23921000000,"2012Q1 [YR2012Q1]":27386000000,"2012Q2 [YR2012Q2]":27640000000,"2012Q3 [YR2012Q3]":28929000000,"2012Q4 [YR2012Q4]":33201000000,"2013Q1 [YR2013Q1]":32012000000,"2013Q2 [YR2013Q2]":34391000000,"2013Q3 [YR2013Q3]":35765000000,"2013Q4 [YR2013Q4]":36897000000,"2014Q1 [YR2014Q1]":38023000000,"2014Q2 [YR2014Q2]":34639000000,"2014Q3 [YR2014Q3]":32299000000,"2014Q4 [YR2014Q4]":30182000000,"2015Q1 [YR2015Q1]":27533000000,"2015Q2 [YR2015Q2]":27747000000},
	{"Country Name":"Czechoslovakia","Country Code":"CSK","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":188000000,"1996Q2 [YR1996Q2]":183000000,"1996Q3 [YR1996Q3]":180000000,"1996Q4 [YR1996Q4]":172000000,"1997Q1 [YR1997Q1]":161000000,"1997Q2 [YR1997Q2]":175000000,"1997Q3 [YR1997Q3]":165000000,"1997Q4 [YR1997Q4]":77000000,"1998Q1 [YR1998Q1]":76000000,"1998Q2 [YR1998Q2]":0,"1998Q3 [YR1998Q3]":0,"1998Q4 [YR1998Q4]":0,"1999Q1 [YR1999Q1]":0,"1999Q2 [YR1999Q2]":0,"1999Q3 [YR1999Q3]":0,"1999Q4 [YR1999Q4]":0,"2000Q1 [YR2000Q1]":0,"2000Q2 [YR2000Q2]":0,"2000Q3 [YR2000Q3]":0,"2000Q4 [YR2000Q4]":0,"2001Q1 [YR2001Q1]":0,"2001Q2 [YR2001Q2]":0,"2001Q3 [YR2001Q3]":0,"2001Q4 [YR2001Q4]":0,"2002Q1 [YR2002Q1]":0,"2002Q2 [YR2002Q2]":0,"2002Q3 [YR2002Q3]":0,"2002Q4 [YR2002Q4]":0,"2003Q1 [YR2003Q1]":0,"2003Q2 [YR2003Q2]":0,"2003Q3 [YR2003Q3]":0,"2003Q4 [YR2003Q4]":0,"2004Q1 [YR2004Q1]":0,"2004Q2 [YR2004Q2]":0,"2004Q3 [YR2004Q3]":0,"2004Q4 [YR2004Q4]":0,"2005Q1 [YR2005Q1]":0,"2005Q2 [YR2005Q2]":0,"2005Q3 [YR2005Q3]":0,"2005Q4 [YR2005Q4]":0,"2006Q1 [YR2006Q1]":0,"2006Q2 [YR2006Q2]":0,"2006Q3 [YR2006Q3]":0,"2006Q4 [YR2006Q4]":0,"2007Q1 [YR2007Q1]":0,"2007Q2 [YR2007Q2]":0,"2007Q3 [YR2007Q3]":0,"2007Q4 [YR2007Q4]":0,"2008Q1 [YR2008Q1]":0,"2008Q2 [YR2008Q2]":0,"2008Q3 [YR2008Q3]":0,"2008Q4 [YR2008Q4]":0,"2009Q1 [YR2009Q1]":0,"2009Q2 [YR2009Q2]":0,"2009Q3 [YR2009Q3]":0,"2009Q4 [YR2009Q4]":0,"2010Q1 [YR2010Q1]":0,"2010Q2 [YR2010Q2]":0,"2010Q3 [YR2010Q3]":0,"2010Q4 [YR2010Q4]":0,"2011Q1 [YR2011Q1]":0,"2011Q2 [YR2011Q2]":0,"2011Q3 [YR2011Q3]":0,"2011Q4 [YR2011Q4]":0,"2012Q1 [YR2012Q1]":0,"2012Q2 [YR2012Q2]":0,"2012Q3 [YR2012Q3]":0,"2012Q4 [YR2012Q4]":0,"2013Q1 [YR2013Q1]":0,"2013Q2 [YR2013Q2]":0,"2013Q3 [YR2013Q3]":0,"2013Q4 [YR2013Q4]":0,"2014Q1 [YR2014Q1]":0,"2014Q2 [YR2014Q2]":0,"2014Q3 [YR2014Q3]":0,"2014Q4 [YR2014Q4]":0,"2015Q1 [YR2015Q1]":0,"2015Q2 [YR2015Q2]":0},
	{"Country Name":"Denmark","Country Code":"DNK","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":30829000000,"1996Q2 [YR1996Q2]":30930000000,"1996Q3 [YR1996Q3]":31325000000,"1996Q4 [YR1996Q4]":31079000000,"1997Q1 [YR1997Q1]":30222000000,"1997Q2 [YR1997Q2]":31276000000,"1997Q3 [YR1997Q3]":30323000000,"1997Q4 [YR1997Q4]":29526000000,"1998Q1 [YR1998Q1]":28226000000,"1998Q2 [YR1998Q2]":28216000000,"1998Q3 [YR1998Q3]":29774000000,"1998Q4 [YR1998Q4]":29680000000,"1999Q1 [YR1999Q1]":28937000000,"1999Q2 [YR1999Q2]":28652000000,"1999Q3 [YR1999Q3]":32168000000,"1999Q4 [YR1999Q4]":30541000000,"2000Q1 [YR2000Q1]":29639000000,"2000Q2 [YR2000Q2]":29948000000,"2000Q3 [YR2000Q3]":29111000000,"2000Q4 [YR2000Q4]":30609000000,"2001Q1 [YR2001Q1]":31580000000,"2001Q2 [YR2001Q2]":32785000000,"2001Q3 [YR2001Q3]":34093000000,"2001Q4 [YR2001Q4]":33329000000,"2002Q1 [YR2002Q1]":32779000000,"2002Q2 [YR2002Q2]":34725000000,"2002Q3 [YR2002Q3]":34509000000,"2002Q4 [YR2002Q4]":36001000000,"2003Q1 [YR2003Q1]":40077000000,"2003Q2 [YR2003Q2]":44720000000,"2003Q3 [YR2003Q3]":46333000000,"2003Q4 [YR2003Q4]":50282000000,"2004Q1 [YR2004Q1]":51957000000,"2004Q2 [YR2004Q2]":52921000000,"2004Q3 [YR2004Q3]":52734000000,"2004Q4 [YR2004Q4]":58729000000,"2005Q1 [YR2005Q1]":65050000000,"2005Q2 [YR2005Q2]":66123000000,"2005Q3 [YR2005Q3]":67199000000,"2005Q4 [YR2005Q4]":71439000000,"2006Q1 [YR2006Q1]":75074000000,"2006Q2 [YR2006Q2]":82394000000,"2006Q3 [YR2006Q3]":82567000000,"2006Q4 [YR2006Q4]":90703000000,"2007Q1 [YR2007Q1]":97768000000,"2007Q2 [YR2007Q2]":"1.04534E+11","2007Q3 [YR2007Q3]":"1.054E+11","2007Q4 [YR2007Q4]":"1.07096E+11","2008Q1 [YR2008Q1]":"1.1365E+11","2008Q2 [YR2008Q2]":"1.19476E+11","2008Q3 [YR2008Q3]":"1.17251E+11","2008Q4 [YR2008Q4]":"1.19517E+11","2009Q1 [YR2009Q1]":"1.29148E+11","2009Q2 [YR2009Q2]":"1.46855E+11","2009Q3 [YR2009Q3]":"1.57785E+11","2009Q4 [YR2009Q4]":"1.56076E+11","2010Q1 [YR2010Q1]":"1.48295E+11","2010Q2 [YR2010Q2]":"1.45799E+11","2010Q3 [YR2010Q3]":"1.39795E+11","2010Q4 [YR2010Q4]":"1.391E+11","2011Q1 [YR2011Q1]":"1.56719E+11","2011Q2 [YR2011Q2]":"1.58688E+11","2011Q3 [YR2011Q3]":"1.55198E+11","2011Q4 [YR2011Q4]":"1.42213E+11","2012Q1 [YR2012Q1]":"1.48773E+11","2012Q2 [YR2012Q2]":"1.35628E+11","2012Q3 [YR2012Q3]":"1.43428E+11","2012Q4 [YR2012Q4]":"1.47948E+11","2013Q1 [YR2013Q1]":"1.39722E+11","2013Q2 [YR2013Q2]":"1.37116E+11","2013Q3 [YR2013Q3]":"1.40079E+11","2013Q4 [YR2013Q4]":"1.42234E+11","2014Q1 [YR2014Q1]":"1.38679E+11","2014Q2 [YR2014Q2]":"1.35577E+11","2014Q3 [YR2014Q3]":"1.28736E+11","2014Q4 [YR2014Q4]":"1.25796E+11","2015Q1 [YR2015Q1]":"1.20763E+11","2015Q2 [YR2015Q2]":"1.22808E+11"},
	{"Country Name":"Djibouti","Country Code":"DJI","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Dominica","Country Code":"DMA","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Dominican Republic","Country Code":"DOM","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":520000000,"1996Q2 [YR1996Q2]":520000000,"1996Q3 [YR1996Q3]":520000000,"1996Q4 [YR1996Q4]":520000000,"1997Q1 [YR1997Q1]":520000000,"1997Q2 [YR1997Q2]":520000000,"1997Q3 [YR1997Q3]":718000000,"1997Q4 [YR1997Q4]":718000000,"1998Q1 [YR1998Q1]":716000000,"1998Q2 [YR1998Q2]":716000000,"1998Q3 [YR1998Q3]":739000000,"1998Q4 [YR1998Q4]":779000000,"1999Q1 [YR1999Q1]":773000000,"1999Q2 [YR1999Q2]":734000000,"1999Q3 [YR1999Q3]":728000000,"1999Q4 [YR1999Q4]":748000000,"2000Q1 [YR2000Q1]":735000000,"2000Q2 [YR2000Q2]":735000000,"2000Q3 [YR2000Q3]":726000000,"2000Q4 [YR2000Q4]":721000000,"2001Q1 [YR2001Q1]":717000000,"2001Q2 [YR2001Q2]":727000000,"2001Q3 [YR2001Q3]":1217000000,"2001Q4 [YR2001Q4]":1215000000,"2002Q1 [YR2002Q1]":1220000000,"2002Q2 [YR2002Q2]":1220000000,"2002Q3 [YR2002Q3]":1197000000,"2002Q4 [YR2002Q4]":1224000000,"2003Q1 [YR2003Q1]":1800000000,"2003Q2 [YR2003Q2]":1795000000,"2003Q3 [YR2003Q3]":1785000000,"2003Q4 [YR2003Q4]":1772000000,"2004Q1 [YR2004Q1]":1762000000,"2004Q2 [YR2004Q2]":1762000000,"2004Q3 [YR2004Q3]":1552000000,"2004Q4 [YR2004Q4]":1552000000,"2005Q1 [YR2005Q1]":1543000000,"2005Q2 [YR2005Q2]":512000000,"2005Q3 [YR2005Q3]":466000000,"2005Q4 [YR2005Q4]":601000000,"2006Q1 [YR2006Q1]":891000000,"2006Q2 [YR2006Q2]":891000000,"2006Q3 [YR2006Q3]":861000000,"2006Q4 [YR2006Q4]":1111000000,"2007Q1 [YR2007Q1]":1533000000,"2007Q2 [YR2007Q2]":1528000000,"2007Q3 [YR2007Q3]":1516000000,"2007Q4 [YR2007Q4]":1515000000,"2008Q1 [YR2008Q1]":1504000000,"2008Q2 [YR2008Q2]":1500000000,"2008Q3 [YR2008Q3]":1487000000,"2008Q4 [YR2008Q4]":1487000000,"2009Q1 [YR2009Q1]":1426000000,"2009Q2 [YR2009Q2]":1425000000,"2009Q3 [YR2009Q3]":1415000000,"2009Q4 [YR2009Q4]":1415000000,"2010Q1 [YR2010Q1]":1412000000,"2010Q2 [YR2010Q2]":2161000000,"2010Q3 [YR2010Q3]":2160000000,"2010Q4 [YR2010Q4]":2282000000,"2011Q1 [YR2011Q1]":2321000000,"2011Q2 [YR2011Q2]":2321000000,"2011Q3 [YR2011Q3]":2821000000,"2011Q4 [YR2011Q4]":3069000000,"2012Q1 [YR2012Q1]":2921000000,"2012Q2 [YR2012Q2]":2716000000,"2012Q3 [YR2012Q3]":2716000000,"2012Q4 [YR2012Q4]":3266000000,"2013Q1 [YR2013Q1]":3553000000,"2013Q2 [YR2013Q2]":4553000000,"2013Q3 [YR2013Q3]":4553000000,"2013Q4 [YR2013Q4]":4803000000,"2014Q1 [YR2014Q1]":4803000000,"2014Q2 [YR2014Q2]":6053000000,"2014Q3 [YR2014Q3]":6303000000,"2014Q4 [YR2014Q4]":6303000000,"2015Q1 [YR2015Q1]":8803000000,"2015Q2 [YR2015Q2]":9803000000},
	{"Country Name":"Ecuador","Country Code":"ECU","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":6098000000,"1996Q2 [YR1996Q2]":6099000000,"1996Q3 [YR1996Q3]":6141000000,"1996Q4 [YR1996Q4]":6257000000,"1997Q1 [YR1997Q1]":6239000000,"1997Q2 [YR1997Q2]":6852000000,"1997Q3 [YR1997Q3]":6872000000,"1997Q4 [YR1997Q4]":6799000000,"1998Q1 [YR1998Q1]":6800000000,"1998Q2 [YR1998Q2]":6725000000,"1998Q3 [YR1998Q3]":6681000000,"1998Q4 [YR1998Q4]":6338000000,"1999Q1 [YR1999Q1]":6316000000,"1999Q2 [YR1999Q2]":6316000000,"1999Q3 [YR1999Q3]":6316000000,"1999Q4 [YR1999Q4]":6316000000,"2000Q1 [YR2000Q1]":6294000000,"2000Q2 [YR2000Q2]":6294000000,"2000Q3 [YR2000Q3]":10044000000,"2000Q4 [YR2000Q4]":10044000000,"2001Q1 [YR2001Q1]":9571000000,"2001Q2 [YR2001Q2]":6429000000,"2001Q3 [YR2001Q3]":6429000000,"2001Q4 [YR2001Q4]":6429000000,"2002Q1 [YR2002Q1]":6429000000,"2002Q2 [YR2002Q2]":6282000000,"2002Q3 [YR2002Q3]":6282000000,"2002Q4 [YR2002Q4]":6279000000,"2003Q1 [YR2003Q1]":6279000000,"2003Q2 [YR2003Q2]":6277000000,"2003Q3 [YR2003Q3]":6277000000,"2003Q4 [YR2003Q4]":6277000000,"2004Q1 [YR2004Q1]":6277000000,"2004Q2 [YR2004Q2]":6277000000,"2004Q3 [YR2004Q3]":6277000000,"2004Q4 [YR2004Q4]":6275000000,"2005Q1 [YR2005Q1]":6462000000,"2005Q2 [YR2005Q2]":6462000000,"2005Q3 [YR2005Q3]":6462000000,"2005Q4 [YR2005Q4]":7112000000,"2006Q1 [YR2006Q1]":7112000000,"2006Q2 [YR2006Q2]":6372000000,"2006Q3 [YR2006Q3]":6372000000,"2006Q4 [YR2006Q4]":6372000000,"2007Q1 [YR2007Q1]":6372000000,"2007Q2 [YR2007Q2]":6372000000,"2007Q3 [YR2007Q3]":6372000000,"2007Q4 [YR2007Q4]":6372000000,"2008Q1 [YR2008Q1]":6372000000,"2008Q2 [YR2008Q2]":6372000000,"2008Q3 [YR2008Q3]":6372000000,"2008Q4 [YR2008Q4]":6372000000,"2009Q1 [YR2009Q1]":6340000000,"2009Q2 [YR2009Q2]":3432000000,"2009Q3 [YR2009Q3]":3301000000,"2009Q4 [YR2009Q4]":3301000000,"2010Q1 [YR2010Q1]":3170000000,"2010Q2 [YR2010Q2]":3099000000,"2010Q3 [YR2010Q3]":2969000000,"2010Q4 [YR2010Q4]":2969000000,"2011Q1 [YR2011Q1]":2969000000,"2011Q2 [YR2011Q2]":2969000000,"2011Q3 [YR2011Q3]":2319000000,"2011Q4 [YR2011Q4]":2319000000,"2012Q1 [YR2012Q1]":2137000000,"2012Q2 [YR2012Q2]":2137000000,"2012Q3 [YR2012Q3]":2137000000,"2012Q4 [YR2012Q4]":2069000000,"2013Q1 [YR2013Q1]":2069000000,"2013Q2 [YR2013Q2]":2069000000,"2013Q3 [YR2013Q3]":1488000000,"2013Q4 [YR2013Q4]":1488000000,"2014Q1 [YR2014Q1]":1294000000,"2014Q2 [YR2014Q2]":3294000000,"2014Q3 [YR2014Q3]":3294000000,"2014Q4 [YR2014Q4]":2912000000,"2015Q1 [YR2015Q1]":3657000000,"2015Q2 [YR2015Q2]":4397000000},
	{"Country Name":"Egypt","Country Code":"EGY","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":0,"1996Q2 [YR1996Q2]":0,"1996Q3 [YR1996Q3]":0,"1996Q4 [YR1996Q4]":0,"1997Q1 [YR1997Q1]":0,"1997Q2 [YR1997Q2]":0,"1997Q3 [YR1997Q3]":0,"1997Q4 [YR1997Q4]":0,"1998Q1 [YR1998Q1]":0,"1998Q2 [YR1998Q2]":0,"1998Q3 [YR1998Q3]":0,"1998Q4 [YR1998Q4]":0,"1999Q1 [YR1999Q1]":0,"1999Q2 [YR1999Q2]":0,"1999Q3 [YR1999Q3]":0,"1999Q4 [YR1999Q4]":0,"2000Q1 [YR2000Q1]":0,"2000Q2 [YR2000Q2]":0,"2000Q3 [YR2000Q3]":0,"2000Q4 [YR2000Q4]":0,"2001Q1 [YR2001Q1]":0,"2001Q2 [YR2001Q2]":0,"2001Q3 [YR2001Q3]":1500000000,"2001Q4 [YR2001Q4]":1500000000,"2002Q1 [YR2002Q1]":1500000000,"2002Q2 [YR2002Q2]":1500000000,"2002Q3 [YR2002Q3]":1500000000,"2002Q4 [YR2002Q4]":1500000000,"2003Q1 [YR2003Q1]":1500000000,"2003Q2 [YR2003Q2]":1500000000,"2003Q3 [YR2003Q3]":1500000000,"2003Q4 [YR2003Q4]":1500000000,"2004Q1 [YR2004Q1]":1500000000,"2004Q2 [YR2004Q2]":1500000000,"2004Q3 [YR2004Q3]":1500000000,"2004Q4 [YR2004Q4]":1500000000,"2005Q1 [YR2005Q1]":1500000000,"2005Q2 [YR2005Q2]":1500000000,"2005Q3 [YR2005Q3]":2750000000,"2005Q4 [YR2005Q4]":2750000000,"2006Q1 [YR2006Q1]":2750000000,"2006Q2 [YR2006Q2]":2750000000,"2006Q3 [YR2006Q3]":2250000000,"2006Q4 [YR2006Q4]":2250000000,"2007Q1 [YR2007Q1]":3000000000,"2007Q2 [YR2007Q2]":3000000000,"2007Q3 [YR2007Q3]":4076000000,"2007Q4 [YR2007Q4]":4090000000,"2008Q1 [YR2008Q1]":4102000000,"2008Q2 [YR2008Q2]":4195000000,"2008Q3 [YR2008Q3]":4166000000,"2008Q4 [YR2008Q4]":4156000000,"2009Q1 [YR2009Q1]":4130000000,"2009Q2 [YR2009Q2]":4139000000,"2009Q3 [YR2009Q3]":4159000000,"2009Q4 [YR2009Q4]":4462000000,"2010Q1 [YR2010Q1]":4458000000,"2010Q2 [YR2010Q2]":5920000000,"2010Q3 [YR2010Q3]":5919000000,"2010Q4 [YR2010Q4]":5898000000,"2011Q1 [YR2011Q1]":5868000000,"2011Q2 [YR2011Q2]":5118000000,"2011Q3 [YR2011Q3]":4118000000,"2011Q4 [YR2011Q4]":4107000000,"2012Q1 [YR2012Q1]":4105000000,"2012Q2 [YR2012Q2]":4102000000,"2012Q3 [YR2012Q3]":3109000000,"2012Q4 [YR2012Q4]":3050000000,"2013Q1 [YR2013Q1]":3050000000,"2013Q2 [YR2013Q2]":5750000000,"2013Q3 [YR2013Q3]":6750000000,"2013Q4 [YR2013Q4]":6750000000,"2014Q1 [YR2014Q1]":6750000000,"2014Q2 [YR2014Q2]":6750000000,"2014Q3 [YR2014Q3]":6750000000,"2014Q4 [YR2014Q4]":3750000000,"2015Q1 [YR2015Q1]":3750000000,"2015Q2 [YR2015Q2]":5387000000},
	{"Country Name":"El Salvador","Country Code":"SLV","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":0,"1996Q2 [YR1996Q2]":0,"1996Q3 [YR1996Q3]":0,"1996Q4 [YR1996Q4]":0,"1997Q1 [YR1997Q1]":0,"1997Q2 [YR1997Q2]":0,"1997Q3 [YR1997Q3]":0,"1997Q4 [YR1997Q4]":15000000,"1998Q1 [YR1998Q1]":15000000,"1998Q2 [YR1998Q2]":4000000,"1998Q3 [YR1998Q3]":4000000,"1998Q4 [YR1998Q4]":0,"1999Q1 [YR1999Q1]":0,"1999Q2 [YR1999Q2]":0,"1999Q3 [YR1999Q3]":150000000,"1999Q4 [YR1999Q4]":150000000,"2000Q1 [YR2000Q1]":200000000,"2000Q2 [YR2000Q2]":200000000,"2000Q3 [YR2000Q3]":200000000,"2000Q4 [YR2000Q4]":200000000,"2001Q1 [YR2001Q1]":200000000,"2001Q2 [YR2001Q2]":200000000,"2001Q3 [YR2001Q3]":554000000,"2001Q4 [YR2001Q4]":554000000,"2002Q1 [YR2002Q1]":694000000,"2002Q2 [YR2002Q2]":1194000000,"2002Q3 [YR2002Q3]":1494000000,"2002Q4 [YR2002Q4]":1945000000,"2003Q1 [YR2003Q1]":2294000000,"2003Q2 [YR2003Q2]":2294000000,"2003Q3 [YR2003Q3]":2294000000,"2003Q4 [YR2003Q4]":2294000000,"2004Q1 [YR2004Q1]":2294000000,"2004Q2 [YR2004Q2]":2294000000,"2004Q3 [YR2004Q3]":2580000000,"2004Q4 [YR2004Q4]":2580000000,"2005Q1 [YR2005Q1]":2580000000,"2005Q2 [YR2005Q2]":2955000000,"2005Q3 [YR2005Q3]":2955000000,"2005Q4 [YR2005Q4]":2955000000,"2006Q1 [YR2006Q1]":2955000000,"2006Q2 [YR2006Q2]":3355000000,"2006Q3 [YR2006Q3]":3430000000,"2006Q4 [YR2006Q4]":3430000000,"2007Q1 [YR2007Q1]":3380000000,"2007Q2 [YR2007Q2]":3380000000,"2007Q3 [YR2007Q3]":3380000000,"2007Q4 [YR2007Q4]":3380000000,"2008Q1 [YR2008Q1]":3380000000,"2008Q2 [YR2008Q2]":3380000000,"2008Q3 [YR2008Q3]":3380000000,"2008Q4 [YR2008Q4]":3380000000,"2009Q1 [YR2009Q1]":3380000000,"2009Q2 [YR2009Q2]":3380000000,"2009Q3 [YR2009Q3]":3380000000,"2009Q4 [YR2009Q4]":4180000000,"2010Q1 [YR2010Q1]":4180000000,"2010Q2 [YR2010Q2]":4040000000,"2010Q3 [YR2010Q3]":4490000000,"2010Q4 [YR2010Q4]":4490000000,"2011Q1 [YR2011Q1]":5143000000,"2011Q2 [YR2011Q2]":5143000000,"2011Q3 [YR2011Q3]":4490000000,"2011Q4 [YR2011Q4]":4490000000,"2012Q1 [YR2012Q1]":4490000000,"2012Q2 [YR2012Q2]":4490000000,"2012Q3 [YR2012Q3]":4490000000,"2012Q4 [YR2012Q4]":5290000000,"2013Q1 [YR2013Q1]":5290000000,"2013Q2 [YR2013Q2]":5304000000,"2013Q3 [YR2013Q3]":5304000000,"2013Q4 [YR2013Q4]":5304000000,"2014Q1 [YR2014Q1]":5304000000,"2014Q2 [YR2014Q2]":5304000000,"2014Q3 [YR2014Q3]":6104000000,"2014Q4 [YR2014Q4]":6104000000,"2015Q1 [YR2015Q1]":6104000000,"2015Q2 [YR2015Q2]":5940000000},
	{"Country Name":"Equatorial Guinea","Country Code":"GNQ","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Eritrea","Country Code":"ERI","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Estonia","Country Code":"EST","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":0,"1996Q2 [YR1996Q2]":39000000,"1996Q3 [YR1996Q3]":39000000,"1996Q4 [YR1996Q4]":39000000,"1997Q1 [YR1997Q1]":54000000,"1997Q2 [YR1997Q2]":60000000,"1997Q3 [YR1997Q3]":128000000,"1997Q4 [YR1997Q4]":247000000,"1998Q1 [YR1998Q1]":270000000,"1998Q2 [YR1998Q2]":297000000,"1998Q3 [YR1998Q3]":322000000,"1998Q4 [YR1998Q4]":315000000,"1999Q1 [YR1999Q1]":318000000,"1999Q2 [YR1999Q2]":278000000,"1999Q3 [YR1999Q3]":284000000,"1999Q4 [YR1999Q4]":243000000,"2000Q1 [YR2000Q1]":213000000,"2000Q2 [YR2000Q2]":328000000,"2000Q3 [YR2000Q3]":291000000,"2000Q4 [YR2000Q4]":335000000,"2001Q1 [YR2001Q1]":430000000,"2001Q2 [YR2001Q2]":333000000,"2001Q3 [YR2001Q3]":357000000,"2001Q4 [YR2001Q4]":303000000,"2002Q1 [YR2002Q1]":287000000,"2002Q2 [YR2002Q2]":413000000,"2002Q3 [YR2002Q3]":615000000,"2002Q4 [YR2002Q4]":650000000,"2003Q1 [YR2003Q1]":1002000000,"2003Q2 [YR2003Q2]":837000000,"2003Q3 [YR2003Q3]":856000000,"2003Q4 [YR2003Q4]":1299000000,"2004Q1 [YR2004Q1]":1267000000,"2004Q2 [YR2004Q2]":1600000000,"2004Q3 [YR2004Q3]":1690000000,"2004Q4 [YR2004Q4]":2474000000,"2005Q1 [YR2005Q1]":2739000000,"2005Q2 [YR2005Q2]":2143000000,"2005Q3 [YR2005Q3]":2002000000,"2005Q4 [YR2005Q4]":2117000000,"2006Q1 [YR2006Q1]":1667000000,"2006Q2 [YR2006Q2]":1751000000,"2006Q3 [YR2006Q3]":1744000000,"2006Q4 [YR2006Q4]":1815000000,"2007Q1 [YR2007Q1]":1725000000,"2007Q2 [YR2007Q2]":1547000000,"2007Q3 [YR2007Q3]":1624000000,"2007Q4 [YR2007Q4]":1723000000,"2008Q1 [YR2008Q1]":1851000000,"2008Q2 [YR2008Q2]":1830000000,"2008Q3 [YR2008Q3]":1660000000,"2008Q4 [YR2008Q4]":1615000000,"2009Q1 [YR2009Q1]":1478000000,"2009Q2 [YR2009Q2]":1570000000,"2009Q3 [YR2009Q3]":1626000000,"2009Q4 [YR2009Q4]":520000000,"2010Q1 [YR2010Q1]":486000000,"2010Q2 [YR2010Q2]":443000000,"2010Q3 [YR2010Q3]":492000000,"2010Q4 [YR2010Q4]":482000000,"2011Q1 [YR2011Q1]":512000000,"2011Q2 [YR2011Q2]":521000000,"2011Q3 [YR2011Q3]":791000000,"2011Q4 [YR2011Q4]":758000000,"2012Q1 [YR2012Q1]":782000000,"2012Q2 [YR2012Q2]":1115000000,"2012Q3 [YR2012Q3]":1145000000,"2012Q4 [YR2012Q4]":1169000000,"2013Q1 [YR2013Q1]":1134000000,"2013Q2 [YR2013Q2]":1308000000,"2013Q3 [YR2013Q3]":1346000000,"2013Q4 [YR2013Q4]":1369000000,"2014Q1 [YR2014Q1]":1509000000,"2014Q2 [YR2014Q2]":1453000000,"2014Q3 [YR2014Q3]":1344000000,"2014Q4 [YR2014Q4]":1283000000,"2015Q1 [YR2015Q1]":1141000000,"2015Q2 [YR2015Q2]":1185000000},
	{"Country Name":"Ethiopia","Country Code":"ETH","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Fiji","Country Code":"FJI","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":0,"1996Q2 [YR1996Q2]":0,"1996Q3 [YR1996Q3]":0,"1996Q4 [YR1996Q4]":0,"1997Q1 [YR1997Q1]":0,"1997Q2 [YR1997Q2]":0,"1997Q3 [YR1997Q3]":0,"1997Q4 [YR1997Q4]":0,"1998Q1 [YR1998Q1]":0,"1998Q2 [YR1998Q2]":0,"1998Q3 [YR1998Q3]":0,"1998Q4 [YR1998Q4]":0,"1999Q1 [YR1999Q1]":0,"1999Q2 [YR1999Q2]":0,"1999Q3 [YR1999Q3]":0,"1999Q4 [YR1999Q4]":0,"2000Q1 [YR2000Q1]":0,"2000Q2 [YR2000Q2]":0,"2000Q3 [YR2000Q3]":0,"2000Q4 [YR2000Q4]":0,"2001Q1 [YR2001Q1]":0,"2001Q2 [YR2001Q2]":0,"2001Q3 [YR2001Q3]":0,"2001Q4 [YR2001Q4]":0,"2002Q1 [YR2002Q1]":0,"2002Q2 [YR2002Q2]":0,"2002Q3 [YR2002Q3]":0,"2002Q4 [YR2002Q4]":0,"2003Q1 [YR2003Q1]":0,"2003Q2 [YR2003Q2]":0,"2003Q3 [YR2003Q3]":0,"2003Q4 [YR2003Q4]":0,"2004Q1 [YR2004Q1]":0,"2004Q2 [YR2004Q2]":0,"2004Q3 [YR2004Q3]":0,"2004Q4 [YR2004Q4]":0,"2005Q1 [YR2005Q1]":0,"2005Q2 [YR2005Q2]":0,"2005Q3 [YR2005Q3]":0,"2005Q4 [YR2005Q4]":0,"2006Q1 [YR2006Q1]":0,"2006Q2 [YR2006Q2]":0,"2006Q3 [YR2006Q3]":150000000,"2006Q4 [YR2006Q4]":150000000,"2007Q1 [YR2007Q1]":150000000,"2007Q2 [YR2007Q2]":150000000,"2007Q3 [YR2007Q3]":150000000,"2007Q4 [YR2007Q4]":150000000,"2008Q1 [YR2008Q1]":150000000,"2008Q2 [YR2008Q2]":150000000,"2008Q3 [YR2008Q3]":150000000,"2008Q4 [YR2008Q4]":150000000,"2009Q1 [YR2009Q1]":150000000,"2009Q2 [YR2009Q2]":150000000,"2009Q3 [YR2009Q3]":150000000,"2009Q4 [YR2009Q4]":150000000,"2010Q1 [YR2010Q1]":150000000,"2010Q2 [YR2010Q2]":150000000,"2010Q3 [YR2010Q3]":150000000,"2010Q4 [YR2010Q4]":150000000,"2011Q1 [YR2011Q1]":400000000,"2011Q2 [YR2011Q2]":400000000,"2011Q3 [YR2011Q3]":250000000,"2011Q4 [YR2011Q4]":251000000,"2012Q1 [YR2012Q1]":251000000,"2012Q2 [YR2012Q2]":251000000,"2012Q3 [YR2012Q3]":251000000,"2012Q4 [YR2012Q4]":251000000,"2013Q1 [YR2013Q1]":251000000,"2013Q2 [YR2013Q2]":251000000,"2013Q3 [YR2013Q3]":251000000,"2013Q4 [YR2013Q4]":251000000,"2014Q1 [YR2014Q1]":251000000,"2014Q2 [YR2014Q2]":251000000,"2014Q3 [YR2014Q3]":251000000,"2014Q4 [YR2014Q4]":251000000,"2015Q1 [YR2015Q1]":251000000,"2015Q2 [YR2015Q2]":251000000},
	{"Country Name":"Finland","Country Code":"FIN","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":55461000000,"1996Q2 [YR1996Q2]":53354000000,"1996Q3 [YR1996Q3]":51954000000,"1996Q4 [YR1996Q4]":52684000000,"1997Q1 [YR1997Q1]":51321000000,"1997Q2 [YR1997Q2]":50519000000,"1997Q3 [YR1997Q3]":48308000000,"1997Q4 [YR1997Q4]":45751000000,"1998Q1 [YR1998Q1]":42530000000,"1998Q2 [YR1998Q2]":42224000000,"1998Q3 [YR1998Q3]":43691000000,"1998Q4 [YR1998Q4]":42403000000,"1999Q1 [YR1999Q1]":39319000000,"1999Q2 [YR1999Q2]":39166000000,"1999Q3 [YR1999Q3]":42425000000,"1999Q4 [YR1999Q4]":40542000000,"2000Q1 [YR2000Q1]":37304000000,"2000Q2 [YR2000Q2]":38196000000,"2000Q3 [YR2000Q3]":35353000000,"2000Q4 [YR2000Q4]":35136000000,"2001Q1 [YR2001Q1]":32902000000,"2001Q2 [YR2001Q2]":37262000000,"2001Q3 [YR2001Q3]":37938000000,"2001Q4 [YR2001Q4]":36459000000,"2002Q1 [YR2002Q1]":37335000000,"2002Q2 [YR2002Q2]":39452000000,"2002Q3 [YR2002Q3]":38567000000,"2002Q4 [YR2002Q4]":41729000000,"2003Q1 [YR2003Q1]":49641000000,"2003Q2 [YR2003Q2]":54483000000,"2003Q3 [YR2003Q3]":57748000000,"2003Q4 [YR2003Q4]":61665000000,"2004Q1 [YR2004Q1]":64720000000,"2004Q2 [YR2004Q2]":66593000000,"2004Q3 [YR2004Q3]":64736000000,"2004Q4 [YR2004Q4]":74930000000,"2005Q1 [YR2005Q1]":70824000000,"2005Q2 [YR2005Q2]":67220000000,"2005Q3 [YR2005Q3]":69114000000,"2005Q4 [YR2005Q4]":70163000000,"2006Q1 [YR2006Q1]":75365000000,"2006Q2 [YR2006Q2]":81674000000,"2006Q3 [YR2006Q3]":73743000000,"2006Q4 [YR2006Q4]":76210000000,"2007Q1 [YR2007Q1]":75418000000,"2007Q2 [YR2007Q2]":78849000000,"2007Q3 [YR2007Q3]":74224000000,"2007Q4 [YR2007Q4]":73011000000,"2008Q1 [YR2008Q1]":74781000000,"2008Q2 [YR2008Q2]":77767000000,"2008Q3 [YR2008Q3]":68064000000,"2008Q4 [YR2008Q4]":67061000000,"2009Q1 [YR2009Q1]":70889000000,"2009Q2 [YR2009Q2]":77577000000,"2009Q3 [YR2009Q3]":82828000000,"2009Q4 [YR2009Q4]":83806000000,"2010Q1 [YR2010Q1]":83679000000,"2010Q2 [YR2010Q2]":78216000000,"2010Q3 [YR2010Q3]":87203000000,"2010Q4 [YR2010Q4]":94724000000,"2011Q1 [YR2011Q1]":"1.12305E+11","2011Q2 [YR2011Q2]":"1.19478E+11","2011Q3 [YR2011Q3]":"1.16007E+11","2011Q4 [YR2011Q4]":"1.13903E+11","2012Q1 [YR2012Q1]":"1.27544E+11","2012Q2 [YR2012Q2]":"1.3308E+11","2012Q3 [YR2012Q3]":"1.37589E+11","2012Q4 [YR2012Q4]":"1.39137E+11","2013Q1 [YR2013Q1]":"1.41796E+11","2013Q2 [YR2013Q2]":"1.4738E+11","2013Q3 [YR2013Q3]":"1.56161E+11","2013Q4 [YR2013Q4]":"1.62931E+11","2014Q1 [YR2014Q1]":"1.7001E+11","2014Q2 [YR2014Q2]":"1.76146E+11","2014Q3 [YR2014Q3]":"1.68428E+11","2014Q4 [YR2014Q4]":"1.65608E+11","2015Q1 [YR2015Q1]":"1.56701E+11","2015Q2 [YR2015Q2]":"1.67444E+11"},
	{"Country Name":"France","Country Code":"FRA","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"1.69369E+11","1996Q2 [YR1996Q2]":"1.74345E+11","1996Q3 [YR1996Q3]":"1.78201E+11","1996Q4 [YR1996Q4]":"1.77049E+11","1997Q1 [YR1997Q1]":"1.73506E+11","1997Q2 [YR1997Q2]":"1.72035E+11","1997Q3 [YR1997Q3]":"1.73772E+11","1997Q4 [YR1997Q4]":"1.72719E+11","1998Q1 [YR1998Q1]":"1.80951E+11","1998Q2 [YR1998Q2]":"1.85663E+11","1998Q3 [YR1998Q3]":"2.03142E+11","1998Q4 [YR1998Q4]":"2.11477E+11","1999Q1 [YR1999Q1]":"2.11457E+11","1999Q2 [YR1999Q2]":"2.18718E+11","1999Q3 [YR1999Q3]":"2.33273E+11","1999Q4 [YR1999Q4]":"2.37685E+11","2000Q1 [YR2000Q1]":"2.38849E+11","2000Q2 [YR2000Q2]":"2.52449E+11","2000Q3 [YR2000Q3]":"2.53958E+11","2000Q4 [YR2000Q4]":"2.76965E+11","2001Q1 [YR2001Q1]":"2.94861E+11","2001Q2 [YR2001Q2]":"3.02525E+11","2001Q3 [YR2001Q3]":"3.35614E+11","2001Q4 [YR2001Q4]":"3.47451E+11","2002Q1 [YR2002Q1]":"3.4864E+11","2002Q2 [YR2002Q2]":"4.09331E+11","2002Q3 [YR2002Q3]":"4.15305E+11","2002Q4 [YR2002Q4]":"4.52445E+11","2003Q1 [YR2003Q1]":"4.89456E+11","2003Q2 [YR2003Q2]":"5.44147E+11","2003Q3 [YR2003Q3]":"5.68939E+11","2003Q4 [YR2003Q4]":"6.309E+11","2004Q1 [YR2004Q1]":"6.26735E+11","2004Q2 [YR2004Q2]":"6.41339E+11","2004Q3 [YR2004Q3]":"6.74547E+11","2004Q4 [YR2004Q4]":"7.692E+11","2005Q1 [YR2005Q1]":"7.61399E+11","2005Q2 [YR2005Q2]":"7.52416E+11","2005Q3 [YR2005Q3]":"7.54925E+11","2005Q4 [YR2005Q4]":"7.69309E+11","2006Q1 [YR2006Q1]":"8.11072E+11","2006Q2 [YR2006Q2]":"8.74027E+11","2006Q3 [YR2006Q3]":"8.80682E+11","2006Q4 [YR2006Q4]":"9.8805E+11","2007Q1 [YR2007Q1]":"1.0255E+12","2007Q2 [YR2007Q2]":"1.09554E+12","2007Q3 [YR2007Q3]":"1.13623E+12","2007Q4 [YR2007Q4]":"1.20803E+12","2008Q1 [YR2008Q1]":"1.3062E+12","2008Q2 [YR2008Q2]":"1.3887E+12","2008Q3 [YR2008Q3]":"1.29597E+12","2008Q4 [YR2008Q4]":"1.26121E+12","2009Q1 [YR2009Q1]":"1.25135E+12","2009Q2 [YR2009Q2]":"1.42616E+12","2009Q3 [YR2009Q3]":"1.49813E+12","2009Q4 [YR2009Q4]":"1.52098E+12","2010Q1 [YR2010Q1]":"1.51866E+12","2010Q2 [YR2010Q2]":"1.42365E+12","2010Q3 [YR2010Q3]":"1.59455E+12","2010Q4 [YR2010Q4]":"1.59783E+12","2011Q1 [YR2011Q1]":"1.75276E+12","2011Q2 [YR2011Q2]":"1.79409E+12","2011Q3 [YR2011Q3]":"1.68475E+12","2011Q4 [YR2011Q4]":"1.63932E+12","2012Q1 [YR2012Q1]":"1.69881E+12","2012Q2 [YR2012Q2]":"1.60077E+12","2012Q3 [YR2012Q3]":"1.64165E+12","2012Q4 [YR2012Q4]":"1.65671E+12","2013Q1 [YR2013Q1]":"1.60187E+12","2013Q2 [YR2013Q2]":"1.62497E+12","2013Q3 [YR2013Q3]":"1.66802E+12","2013Q4 [YR2013Q4]":"1.69519E+12","2014Q1 [YR2014Q1]":"1.71967E+12","2014Q2 [YR2014Q2]":"1.72201E+12","2014Q3 [YR2014Q3]":"1.62685E+12","2014Q4 [YR2014Q4]":"1.55235E+12","2015Q1 [YR2015Q1]":"1.43939E+12","2015Q2 [YR2015Q2]":"1.45195E+12"},
	{"Country Name":"French Guiana","Country Code":"GUF","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"French Polynesia","Country Code":"PYF","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":0,"1996Q2 [YR1996Q2]":0,"1996Q3 [YR1996Q3]":0,"1996Q4 [YR1996Q4]":0,"1997Q1 [YR1997Q1]":0,"1997Q2 [YR1997Q2]":0,"1997Q3 [YR1997Q3]":0,"1997Q4 [YR1997Q4]":0,"1998Q1 [YR1998Q1]":0,"1998Q2 [YR1998Q2]":0,"1998Q3 [YR1998Q3]":0,"1998Q4 [YR1998Q4]":0,"1999Q1 [YR1999Q1]":0,"1999Q2 [YR1999Q2]":0,"1999Q3 [YR1999Q3]":0,"1999Q4 [YR1999Q4]":0,"2000Q1 [YR2000Q1]":0,"2000Q2 [YR2000Q2]":0,"2000Q3 [YR2000Q3]":0,"2000Q4 [YR2000Q4]":0,"2001Q1 [YR2001Q1]":18000000,"2001Q2 [YR2001Q2]":17000000,"2001Q3 [YR2001Q3]":18000000,"2001Q4 [YR2001Q4]":18000000,"2002Q1 [YR2002Q1]":17000000,"2002Q2 [YR2002Q2]":20000000,"2002Q3 [YR2002Q3]":20000000,"2002Q4 [YR2002Q4]":21000000,"2003Q1 [YR2003Q1]":22000000,"2003Q2 [YR2003Q2]":23000000,"2003Q3 [YR2003Q3]":23000000,"2003Q4 [YR2003Q4]":25000000,"2004Q1 [YR2004Q1]":24000000,"2004Q2 [YR2004Q2]":24000000,"2004Q3 [YR2004Q3]":25000000,"2004Q4 [YR2004Q4]":27000000,"2005Q1 [YR2005Q1]":26000000,"2005Q2 [YR2005Q2]":24000000,"2005Q3 [YR2005Q3]":24000000,"2005Q4 [YR2005Q4]":24000000,"2006Q1 [YR2006Q1]":24000000,"2006Q2 [YR2006Q2]":25000000,"2006Q3 [YR2006Q3]":25000000,"2006Q4 [YR2006Q4]":26000000,"2007Q1 [YR2007Q1]":27000000,"2007Q2 [YR2007Q2]":27000000,"2007Q3 [YR2007Q3]":28000000,"2007Q4 [YR2007Q4]":29000000,"2008Q1 [YR2008Q1]":32000000,"2008Q2 [YR2008Q2]":32000000,"2008Q3 [YR2008Q3]":29000000,"2008Q4 [YR2008Q4]":28000000,"2009Q1 [YR2009Q1]":27000000,"2009Q2 [YR2009Q2]":28000000,"2009Q3 [YR2009Q3]":29000000,"2009Q4 [YR2009Q4]":29000000,"2010Q1 [YR2010Q1]":27000000,"2010Q2 [YR2010Q2]":25000000,"2010Q3 [YR2010Q3]":27000000,"2010Q4 [YR2010Q4]":27000000,"2011Q1 [YR2011Q1]":0,"2011Q2 [YR2011Q2]":0,"2011Q3 [YR2011Q3]":0,"2011Q4 [YR2011Q4]":0,"2012Q1 [YR2012Q1]":0,"2012Q2 [YR2012Q2]":0,"2012Q3 [YR2012Q3]":0,"2012Q4 [YR2012Q4]":0,"2013Q1 [YR2013Q1]":0,"2013Q2 [YR2013Q2]":0,"2013Q3 [YR2013Q3]":0,"2013Q4 [YR2013Q4]":0,"2014Q1 [YR2014Q1]":0,"2014Q2 [YR2014Q2]":0,"2014Q3 [YR2014Q3]":0,"2014Q4 [YR2014Q4]":0,"2015Q1 [YR2015Q1]":0,"2015Q2 [YR2015Q2]":0},
	{"Country Name":"French Southern Territories","Country Code":"FST","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Gabon","Country Code":"GAB","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":0,"1996Q2 [YR1996Q2]":0,"1996Q3 [YR1996Q3]":0,"1996Q4 [YR1996Q4]":0,"1997Q1 [YR1997Q1]":0,"1997Q2 [YR1997Q2]":0,"1997Q3 [YR1997Q3]":0,"1997Q4 [YR1997Q4]":0,"1998Q1 [YR1998Q1]":0,"1998Q2 [YR1998Q2]":0,"1998Q3 [YR1998Q3]":0,"1998Q4 [YR1998Q4]":0,"1999Q1 [YR1999Q1]":0,"1999Q2 [YR1999Q2]":0,"1999Q3 [YR1999Q3]":0,"1999Q4 [YR1999Q4]":0,"2000Q1 [YR2000Q1]":0,"2000Q2 [YR2000Q2]":0,"2000Q3 [YR2000Q3]":0,"2000Q4 [YR2000Q4]":0,"2001Q1 [YR2001Q1]":0,"2001Q2 [YR2001Q2]":0,"2001Q3 [YR2001Q3]":0,"2001Q4 [YR2001Q4]":0,"2002Q1 [YR2002Q1]":0,"2002Q2 [YR2002Q2]":0,"2002Q3 [YR2002Q3]":0,"2002Q4 [YR2002Q4]":0,"2003Q1 [YR2003Q1]":0,"2003Q2 [YR2003Q2]":0,"2003Q3 [YR2003Q3]":0,"2003Q4 [YR2003Q4]":0,"2004Q1 [YR2004Q1]":0,"2004Q2 [YR2004Q2]":0,"2004Q3 [YR2004Q3]":0,"2004Q4 [YR2004Q4]":0,"2005Q1 [YR2005Q1]":0,"2005Q2 [YR2005Q2]":0,"2005Q3 [YR2005Q3]":0,"2005Q4 [YR2005Q4]":0,"2006Q1 [YR2006Q1]":0,"2006Q2 [YR2006Q2]":0,"2006Q3 [YR2006Q3]":0,"2006Q4 [YR2006Q4]":0,"2007Q1 [YR2007Q1]":0,"2007Q2 [YR2007Q2]":0,"2007Q3 [YR2007Q3]":0,"2007Q4 [YR2007Q4]":1000000000,"2008Q1 [YR2008Q1]":1000000000,"2008Q2 [YR2008Q2]":1000000000,"2008Q3 [YR2008Q3]":1000000000,"2008Q4 [YR2008Q4]":1000000000,"2009Q1 [YR2009Q1]":1000000000,"2009Q2 [YR2009Q2]":1000000000,"2009Q3 [YR2009Q3]":1000000000,"2009Q4 [YR2009Q4]":1000000000,"2010Q1 [YR2010Q1]":1000000000,"2010Q2 [YR2010Q2]":1000000000,"2010Q3 [YR2010Q3]":1000000000,"2010Q4 [YR2010Q4]":1000000000,"2011Q1 [YR2011Q1]":1000000000,"2011Q2 [YR2011Q2]":1000000000,"2011Q3 [YR2011Q3]":1000000000,"2011Q4 [YR2011Q4]":1000000000,"2012Q1 [YR2012Q1]":1000000000,"2012Q2 [YR2012Q2]":1000000000,"2012Q3 [YR2012Q3]":1000000000,"2012Q4 [YR2012Q4]":1000000000,"2013Q1 [YR2013Q1]":1000000000,"2013Q2 [YR2013Q2]":1000000000,"2013Q3 [YR2013Q3]":1000000000,"2013Q4 [YR2013Q4]":3109000000,"2014Q1 [YR2014Q1]":3109000000,"2014Q2 [YR2014Q2]":3109000000,"2014Q3 [YR2014Q3]":3109000000,"2014Q4 [YR2014Q4]":3109000000,"2015Q1 [YR2015Q1]":3109000000,"2015Q2 [YR2015Q2]":3609000000},
	{"Country Name":"Gambia","Country Code":"GMB","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Georgia","Country Code":"GEO","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":0,"1996Q2 [YR1996Q2]":0,"1996Q3 [YR1996Q3]":0,"1996Q4 [YR1996Q4]":0,"1997Q1 [YR1997Q1]":0,"1997Q2 [YR1997Q2]":0,"1997Q3 [YR1997Q3]":0,"1997Q4 [YR1997Q4]":0,"1998Q1 [YR1998Q1]":0,"1998Q2 [YR1998Q2]":0,"1998Q3 [YR1998Q3]":0,"1998Q4 [YR1998Q4]":0,"1999Q1 [YR1999Q1]":0,"1999Q2 [YR1999Q2]":0,"1999Q3 [YR1999Q3]":0,"1999Q4 [YR1999Q4]":0,"2000Q1 [YR2000Q1]":0,"2000Q2 [YR2000Q2]":0,"2000Q3 [YR2000Q3]":0,"2000Q4 [YR2000Q4]":0,"2001Q1 [YR2001Q1]":0,"2001Q2 [YR2001Q2]":0,"2001Q3 [YR2001Q3]":0,"2001Q4 [YR2001Q4]":0,"2002Q1 [YR2002Q1]":0,"2002Q2 [YR2002Q2]":0,"2002Q3 [YR2002Q3]":0,"2002Q4 [YR2002Q4]":0,"2003Q1 [YR2003Q1]":0,"2003Q2 [YR2003Q2]":0,"2003Q3 [YR2003Q3]":0,"2003Q4 [YR2003Q4]":0,"2004Q1 [YR2004Q1]":0,"2004Q2 [YR2004Q2]":0,"2004Q3 [YR2004Q3]":0,"2004Q4 [YR2004Q4]":0,"2005Q1 [YR2005Q1]":0,"2005Q2 [YR2005Q2]":0,"2005Q3 [YR2005Q3]":0,"2005Q4 [YR2005Q4]":0,"2006Q1 [YR2006Q1]":0,"2006Q2 [YR2006Q2]":0,"2006Q3 [YR2006Q3]":0,"2006Q4 [YR2006Q4]":0,"2007Q1 [YR2007Q1]":200000000,"2007Q2 [YR2007Q2]":200000000,"2007Q3 [YR2007Q3]":200000000,"2007Q4 [YR2007Q4]":200000000,"2008Q1 [YR2008Q1]":200000000,"2008Q2 [YR2008Q2]":700000000,"2008Q3 [YR2008Q3]":700000000,"2008Q4 [YR2008Q4]":700000000,"2009Q1 [YR2009Q1]":700000000,"2009Q2 [YR2009Q2]":700000000,"2009Q3 [YR2009Q3]":700000000,"2009Q4 [YR2009Q4]":700000000,"2010Q1 [YR2010Q1]":700000000,"2010Q2 [YR2010Q2]":700000000,"2010Q3 [YR2010Q3]":950000000,"2010Q4 [YR2010Q4]":950000000,"2011Q1 [YR2011Q1]":950000000,"2011Q2 [YR2011Q2]":950000000,"2011Q3 [YR2011Q3]":950000000,"2011Q4 [YR2011Q4]":950000000,"2012Q1 [YR2012Q1]":750000000,"2012Q2 [YR2012Q2]":1000000000,"2012Q3 [YR2012Q3]":1750000000,"2012Q4 [YR2012Q4]":1750000000,"2013Q1 [YR2013Q1]":1750000000,"2013Q2 [YR2013Q2]":1750000000,"2013Q3 [YR2013Q3]":1750000000,"2013Q4 [YR2013Q4]":1750000000,"2014Q1 [YR2014Q1]":1750000000,"2014Q2 [YR2014Q2]":1750000000,"2014Q3 [YR2014Q3]":1750000000,"2014Q4 [YR2014Q4]":1750000000,"2015Q1 [YR2015Q1]":1750000000,"2015Q2 [YR2015Q2]":1750000000},
	{"Country Name":"German democratic republic","Country Code":"DDR","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Germany","Country Code":"DEU","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":82723000000,"1996Q2 [YR1996Q2]":89051000000,"1996Q3 [YR1996Q3]":94644000000,"1996Q4 [YR1996Q4]":"1.06265E+11","1997Q1 [YR1997Q1]":"1.13521E+11","1997Q2 [YR1997Q2]":"1.23919E+11","1997Q3 [YR1997Q3]":"1.28518E+11","1997Q4 [YR1997Q4]":"1.30499E+11","1998Q1 [YR1998Q1]":"1.42068E+11","1998Q2 [YR1998Q2]":"1.51262E+11","1998Q3 [YR1998Q3]":"1.64059E+11","1998Q4 [YR1998Q4]":"1.68504E+11","1999Q1 [YR1999Q1]":"1.7742E+11","1999Q2 [YR1999Q2]":"1.90914E+11","1999Q3 [YR1999Q3]":"2.27945E+11","1999Q4 [YR1999Q4]":"2.37775E+11","2000Q1 [YR2000Q1]":"2.5669E+11","2000Q2 [YR2000Q2]":"2.87615E+11","2000Q3 [YR2000Q3]":"2.89916E+11","2000Q4 [YR2000Q4]":"3.21678E+11","2001Q1 [YR2001Q1]":"3.27568E+11","2001Q2 [YR2001Q2]":"3.3258E+11","2001Q3 [YR2001Q3]":"3.68048E+11","2001Q4 [YR2001Q4]":"3.73465E+11","2002Q1 [YR2002Q1]":"3.93152E+11","2002Q2 [YR2002Q2]":"4.56136E+11","2002Q3 [YR2002Q3]":"4.78981E+11","2002Q4 [YR2002Q4]":"5.14573E+11","2003Q1 [YR2003Q1]":"5.78673E+11","2003Q2 [YR2003Q2]":"6.18753E+11","2003Q3 [YR2003Q3]":"6.53959E+11","2003Q4 [YR2003Q4]":"7.2643E+11","2004Q1 [YR2004Q1]":"7.76094E+11","2004Q2 [YR2004Q2]":"8.0336E+11","2004Q3 [YR2004Q3]":"8.68844E+11","2004Q4 [YR2004Q4]":"9.54774E+11","2005Q1 [YR2005Q1]":"9.64752E+11","2005Q2 [YR2005Q2]":"9.55274E+11","2005Q3 [YR2005Q3]":"9.56046E+11","2005Q4 [YR2005Q4]":"9.61183E+11","2006Q1 [YR2006Q1]":"1.03469E+12","2006Q2 [YR2006Q2]":"1.1177E+12","2006Q3 [YR2006Q3]":"1.12886E+12","2006Q4 [YR2006Q4]":"1.1831E+12","2007Q1 [YR2007Q1]":"1.25042E+12","2007Q2 [YR2007Q2]":"1.32632E+12","2007Q3 [YR2007Q3]":"1.39333E+12","2007Q4 [YR2007Q4]":"1.44733E+12","2008Q1 [YR2008Q1]":"1.56685E+12","2008Q2 [YR2008Q2]":"1.57762E+12","2008Q3 [YR2008Q3]":"1.42021E+12","2008Q4 [YR2008Q4]":"1.39077E+12","2009Q1 [YR2009Q1]":"1.29375E+12","2009Q2 [YR2009Q2]":"1.3658E+12","2009Q3 [YR2009Q3]":"1.38021E+12","2009Q4 [YR2009Q4]":"1.35812E+12","2010Q1 [YR2010Q1]":"1.29672E+12","2010Q2 [YR2010Q2]":"1.2099E+12","2010Q3 [YR2010Q3]":"1.30244E+12","2010Q4 [YR2010Q4]":"1.28518E+12","2011Q1 [YR2011Q1]":"1.35354E+12","2011Q2 [YR2011Q2]":"1.39285E+12","2011Q3 [YR2011Q3]":"1.36499E+12","2011Q4 [YR2011Q4]":"1.34729E+12","2012Q1 [YR2012Q1]":"1.37879E+12","2012Q2 [YR2012Q2]":"1.34383E+12","2012Q3 [YR2012Q3]":"1.34415E+12","2012Q4 [YR2012Q4]":"1.36549E+12","2013Q1 [YR2013Q1]":"1.31445E+12","2013Q2 [YR2013Q2]":"1.32201E+12","2013Q3 [YR2013Q3]":"1.343E+12","2013Q4 [YR2013Q4]":"1.35382E+12","2014Q1 [YR2014Q1]":"1.34117E+12","2014Q2 [YR2014Q2]":"1.33754E+12","2014Q3 [YR2014Q3]":"1.27587E+12","2014Q4 [YR2014Q4]":"1.25016E+12","2015Q1 [YR2015Q1]":"1.17148E+12","2015Q2 [YR2015Q2]":"1.20112E+12"},
	{"Country Name":"Ghana","Country Code":"GHA","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":0,"1996Q2 [YR1996Q2]":0,"1996Q3 [YR1996Q3]":0,"1996Q4 [YR1996Q4]":0,"1997Q1 [YR1997Q1]":0,"1997Q2 [YR1997Q2]":0,"1997Q3 [YR1997Q3]":0,"1997Q4 [YR1997Q4]":0,"1998Q1 [YR1998Q1]":0,"1998Q2 [YR1998Q2]":0,"1998Q3 [YR1998Q3]":0,"1998Q4 [YR1998Q4]":0,"1999Q1 [YR1999Q1]":0,"1999Q2 [YR1999Q2]":0,"1999Q3 [YR1999Q3]":0,"1999Q4 [YR1999Q4]":0,"2000Q1 [YR2000Q1]":0,"2000Q2 [YR2000Q2]":0,"2000Q3 [YR2000Q3]":0,"2000Q4 [YR2000Q4]":0,"2001Q1 [YR2001Q1]":0,"2001Q2 [YR2001Q2]":0,"2001Q3 [YR2001Q3]":0,"2001Q4 [YR2001Q4]":0,"2002Q1 [YR2002Q1]":0,"2002Q2 [YR2002Q2]":0,"2002Q3 [YR2002Q3]":0,"2002Q4 [YR2002Q4]":0,"2003Q1 [YR2003Q1]":0,"2003Q2 [YR2003Q2]":0,"2003Q3 [YR2003Q3]":0,"2003Q4 [YR2003Q4]":0,"2004Q1 [YR2004Q1]":0,"2004Q2 [YR2004Q2]":0,"2004Q3 [YR2004Q3]":0,"2004Q4 [YR2004Q4]":0,"2005Q1 [YR2005Q1]":0,"2005Q2 [YR2005Q2]":0,"2005Q3 [YR2005Q3]":0,"2005Q4 [YR2005Q4]":0,"2006Q1 [YR2006Q1]":0,"2006Q2 [YR2006Q2]":0,"2006Q3 [YR2006Q3]":0,"2006Q4 [YR2006Q4]":0,"2007Q1 [YR2007Q1]":0,"2007Q2 [YR2007Q2]":0,"2007Q3 [YR2007Q3]":0,"2007Q4 [YR2007Q4]":950000000,"2008Q1 [YR2008Q1]":950000000,"2008Q2 [YR2008Q2]":950000000,"2008Q3 [YR2008Q3]":950000000,"2008Q4 [YR2008Q4]":950000000,"2009Q1 [YR2009Q1]":950000000,"2009Q2 [YR2009Q2]":950000000,"2009Q3 [YR2009Q3]":950000000,"2009Q4 [YR2009Q4]":950000000,"2010Q1 [YR2010Q1]":950000000,"2010Q2 [YR2010Q2]":950000000,"2010Q3 [YR2010Q3]":950000000,"2010Q4 [YR2010Q4]":950000000,"2011Q1 [YR2011Q1]":950000000,"2011Q2 [YR2011Q2]":950000000,"2011Q3 [YR2011Q3]":950000000,"2011Q4 [YR2011Q4]":950000000,"2012Q1 [YR2012Q1]":950000000,"2012Q2 [YR2012Q2]":950000000,"2012Q3 [YR2012Q3]":950000000,"2012Q4 [YR2012Q4]":750000000,"2013Q1 [YR2013Q1]":750000000,"2013Q2 [YR2013Q2]":750000000,"2013Q3 [YR2013Q3]":1750000000,"2013Q4 [YR2013Q4]":1750000000,"2014Q1 [YR2014Q1]":1750000000,"2014Q2 [YR2014Q2]":1750000000,"2014Q3 [YR2014Q3]":3750000000,"2014Q4 [YR2014Q4]":3750000000,"2015Q1 [YR2015Q1]":3750000000,"2015Q2 [YR2015Q2]":3750000000},
	{"Country Name":"Gibraltar","Country Code":"GIB","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":299000000,"1996Q2 [YR1996Q2]":208000000,"1996Q3 [YR1996Q3]":209000000,"1996Q4 [YR1996Q4]":216000000,"1997Q1 [YR1997Q1]":201000000,"1997Q2 [YR1997Q2]":83000000,"1997Q3 [YR1997Q3]":81000000,"1997Q4 [YR1997Q4]":83000000,"1998Q1 [YR1998Q1]":84000000,"1998Q2 [YR1998Q2]":83000000,"1998Q3 [YR1998Q3]":85000000,"1998Q4 [YR1998Q4]":83000000,"1999Q1 [YR1999Q1]":88000000,"1999Q2 [YR1999Q2]":138000000,"1999Q3 [YR1999Q3]":144000000,"1999Q4 [YR1999Q4]":229000000,"2000Q1 [YR2000Q1]":221000000,"2000Q2 [YR2000Q2]":327000000,"2000Q3 [YR2000Q3]":301000000,"2000Q4 [YR2000Q4]":1174000000,"2001Q1 [YR2001Q1]":1350000000,"2001Q2 [YR2001Q2]":2592000000,"2001Q3 [YR2001Q3]":3904000000,"2001Q4 [YR2001Q4]":4188000000,"2002Q1 [YR2002Q1]":4589000000,"2002Q2 [YR2002Q2]":5850000000,"2002Q3 [YR2002Q3]":4373000000,"2002Q4 [YR2002Q4]":4898000000,"2003Q1 [YR2003Q1]":4867000000,"2003Q2 [YR2003Q2]":5153000000,"2003Q3 [YR2003Q3]":5416000000,"2003Q4 [YR2003Q4]":5787000000,"2004Q1 [YR2004Q1]":5967000000,"2004Q2 [YR2004Q2]":5917000000,"2004Q3 [YR2004Q3]":5278000000,"2004Q4 [YR2004Q4]":4906000000,"2005Q1 [YR2005Q1]":4908000000,"2005Q2 [YR2005Q2]":4691000000,"2005Q3 [YR2005Q3]":4784000000,"2005Q4 [YR2005Q4]":4716000000,"2006Q1 [YR2006Q1]":4799000000,"2006Q2 [YR2006Q2]":4849000000,"2006Q3 [YR2006Q3]":3806000000,"2006Q4 [YR2006Q4]":3813000000,"2007Q1 [YR2007Q1]":3547000000,"2007Q2 [YR2007Q2]":3784000000,"2007Q3 [YR2007Q3]":4594000000,"2007Q4 [YR2007Q4]":4274000000,"2008Q1 [YR2008Q1]":4427000000,"2008Q2 [YR2008Q2]":4095000000,"2008Q3 [YR2008Q3]":3472000000,"2008Q4 [YR2008Q4]":3234000000,"2009Q1 [YR2009Q1]":2993000000,"2009Q2 [YR2009Q2]":2984000000,"2009Q3 [YR2009Q3]":2965000000,"2009Q4 [YR2009Q4]":2834000000,"2010Q1 [YR2010Q1]":2507000000,"2010Q2 [YR2010Q2]":2378000000,"2010Q3 [YR2010Q3]":2456000000,"2010Q4 [YR2010Q4]":2263000000,"2011Q1 [YR2011Q1]":2130000000,"2011Q2 [YR2011Q2]":1965000000,"2011Q3 [YR2011Q3]":1838000000,"2011Q4 [YR2011Q4]":1781000000,"2012Q1 [YR2012Q1]":1656000000,"2012Q2 [YR2012Q2]":1496000000,"2012Q3 [YR2012Q3]":1529000000,"2012Q4 [YR2012Q4]":1507000000,"2013Q1 [YR2013Q1]":1469000000,"2013Q2 [YR2013Q2]":1021000000,"2013Q3 [YR2013Q3]":1051000000,"2013Q4 [YR2013Q4]":1060000000,"2014Q1 [YR2014Q1]":1064000000,"2014Q2 [YR2014Q2]":1069000000,"2014Q3 [YR2014Q3]":1018000000,"2014Q4 [YR2014Q4]":942000000,"2015Q1 [YR2015Q1]":795000000,"2015Q2 [YR2015Q2]":821000000},
	{"Country Name":"Greece","Country Code":"GRC","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":20767000000,"1996Q2 [YR1996Q2]":20248000000,"1996Q3 [YR1996Q3]":21473000000,"1996Q4 [YR1996Q4]":21213000000,"1997Q1 [YR1997Q1]":20015000000,"1997Q2 [YR1997Q2]":20306000000,"1997Q3 [YR1997Q3]":19359000000,"1997Q4 [YR1997Q4]":20903000000,"1998Q1 [YR1998Q1]":23961000000,"1998Q2 [YR1998Q2]":23010000000,"1998Q3 [YR1998Q3]":23627000000,"1998Q4 [YR1998Q4]":24671000000,"1999Q1 [YR1999Q1]":24832000000,"1999Q2 [YR1999Q2]":23838000000,"1999Q3 [YR1999Q3]":25385000000,"1999Q4 [YR1999Q4]":24412000000,"2000Q1 [YR2000Q1]":25232000000,"2000Q2 [YR2000Q2]":25440000000,"2000Q3 [YR2000Q3]":24016000000,"2000Q4 [YR2000Q4]":24089000000,"2001Q1 [YR2001Q1]":22547000000,"2001Q2 [YR2001Q2]":22127000000,"2001Q3 [YR2001Q3]":23857000000,"2001Q4 [YR2001Q4]":23556000000,"2002Q1 [YR2002Q1]":28052000000,"2002Q2 [YR2002Q2]":31509000000,"2002Q3 [YR2002Q3]":30936000000,"2002Q4 [YR2002Q4]":31531000000,"2003Q1 [YR2003Q1]":41715000000,"2003Q2 [YR2003Q2]":44681000000,"2003Q3 [YR2003Q3]":45864000000,"2003Q4 [YR2003Q4]":48719000000,"2004Q1 [YR2004Q1]":47236000000,"2004Q2 [YR2004Q2]":49110000000,"2004Q3 [YR2004Q3]":49308000000,"2004Q4 [YR2004Q4]":52523000000,"2005Q1 [YR2005Q1]":50375000000,"2005Q2 [YR2005Q2]":50608000000,"2005Q3 [YR2005Q3]":48896000000,"2005Q4 [YR2005Q4]":47536000000,"2006Q1 [YR2006Q1]":53859000000,"2006Q2 [YR2006Q2]":63042000000,"2006Q3 [YR2006Q3]":60871000000,"2006Q4 [YR2006Q4]":68247000000,"2007Q1 [YR2007Q1]":76616000000,"2007Q2 [YR2007Q2]":85974000000,"2007Q3 [YR2007Q3]":87506000000,"2007Q4 [YR2007Q4]":84988000000,"2008Q1 [YR2008Q1]":86418000000,"2008Q2 [YR2008Q2]":93302000000,"2008Q3 [YR2008Q3]":81477000000,"2008Q4 [YR2008Q4]":84667000000,"2009Q1 [YR2009Q1]":99000000000,"2009Q2 [YR2009Q2]":"1.32135E+11","2009Q3 [YR2009Q3]":"1.4051E+11","2009Q4 [YR2009Q4]":"1.27317E+11","2010Q1 [YR2010Q1]":"1.20604E+11","2010Q2 [YR2010Q2]":"1.54539E+11","2010Q3 [YR2010Q3]":"1.78832E+11","2010Q4 [YR2010Q4]":"2.01256E+11","2011Q1 [YR2011Q1]":"2.16495E+11","2011Q2 [YR2011Q2]":"2.32889E+11","2011Q3 [YR2011Q3]":"2.17096E+11","2011Q4 [YR2011Q4]":"2.17058E+11","2012Q1 [YR2012Q1]":"2.07906E+11","2012Q2 [YR2012Q2]":"1.77164E+11","2012Q3 [YR2012Q3]":"1.70237E+11","2012Q4 [YR2012Q4]":"1.71141E+11","2013Q1 [YR2013Q1]":"1.62654E+11","2013Q2 [YR2013Q2]":"1.53342E+11","2013Q3 [YR2013Q3]":"1.52044E+11","2013Q4 [YR2013Q4]":"1.55553E+11","2014Q1 [YR2014Q1]":"1.54475E+11","2014Q2 [YR2014Q2]":"1.54495E+11","2014Q3 [YR2014Q3]":"1.43009E+11","2014Q4 [YR2014Q4]":"1.40781E+11","2015Q1 [YR2015Q1]":"1.22118E+11","2015Q2 [YR2015Q2]":"1.34151E+11"},
	{"Country Name":"Greenland","Country Code":"GRL","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Grenada","Country Code":"GRD","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":0,"1996Q2 [YR1996Q2]":0,"1996Q3 [YR1996Q3]":0,"1996Q4 [YR1996Q4]":0,"1997Q1 [YR1997Q1]":0,"1997Q2 [YR1997Q2]":0,"1997Q3 [YR1997Q3]":0,"1997Q4 [YR1997Q4]":0,"1998Q1 [YR1998Q1]":0,"1998Q2 [YR1998Q2]":0,"1998Q3 [YR1998Q3]":0,"1998Q4 [YR1998Q4]":0,"1999Q1 [YR1999Q1]":0,"1999Q2 [YR1999Q2]":0,"1999Q3 [YR1999Q3]":0,"1999Q4 [YR1999Q4]":0,"2000Q1 [YR2000Q1]":0,"2000Q2 [YR2000Q2]":0,"2000Q3 [YR2000Q3]":0,"2000Q4 [YR2000Q4]":0,"2001Q1 [YR2001Q1]":0,"2001Q2 [YR2001Q2]":0,"2001Q3 [YR2001Q3]":0,"2001Q4 [YR2001Q4]":0,"2002Q1 [YR2002Q1]":0,"2002Q2 [YR2002Q2]":0,"2002Q3 [YR2002Q3]":100000000,"2002Q4 [YR2002Q4]":100000000,"2003Q1 [YR2003Q1]":100000000,"2003Q2 [YR2003Q2]":100000000,"2003Q3 [YR2003Q3]":100000000,"2003Q4 [YR2003Q4]":100000000,"2004Q1 [YR2004Q1]":100000000,"2004Q2 [YR2004Q2]":100000000,"2004Q3 [YR2004Q3]":100000000,"2004Q4 [YR2004Q4]":100000000,"2005Q1 [YR2005Q1]":100000000,"2005Q2 [YR2005Q2]":100000000,"2005Q3 [YR2005Q3]":105000000,"2005Q4 [YR2005Q4]":105000000,"2006Q1 [YR2006Q1]":100000000,"2006Q2 [YR2006Q2]":100000000,"2006Q3 [YR2006Q3]":100000000,"2006Q4 [YR2006Q4]":100000000,"2007Q1 [YR2007Q1]":100000000,"2007Q2 [YR2007Q2]":100000000,"2007Q3 [YR2007Q3]":100000000,"2007Q4 [YR2007Q4]":100000000,"2008Q1 [YR2008Q1]":100000000,"2008Q2 [YR2008Q2]":100000000,"2008Q3 [YR2008Q3]":100000000,"2008Q4 [YR2008Q4]":100000000,"2009Q1 [YR2009Q1]":100000000,"2009Q2 [YR2009Q2]":100000000,"2009Q3 [YR2009Q3]":100000000,"2009Q4 [YR2009Q4]":100000000,"2010Q1 [YR2010Q1]":100000000,"2010Q2 [YR2010Q2]":100000000,"2010Q3 [YR2010Q3]":100000000,"2010Q4 [YR2010Q4]":100000000,"2011Q1 [YR2011Q1]":100000000,"2011Q2 [YR2011Q2]":100000000,"2011Q3 [YR2011Q3]":100000000,"2011Q4 [YR2011Q4]":100000000,"2012Q1 [YR2012Q1]":100000000,"2012Q2 [YR2012Q2]":0,"2012Q3 [YR2012Q3]":0,"2012Q4 [YR2012Q4]":0,"2013Q1 [YR2013Q1]":0,"2013Q2 [YR2013Q2]":0,"2013Q3 [YR2013Q3]":0,"2013Q4 [YR2013Q4]":0,"2014Q1 [YR2014Q1]":0,"2014Q2 [YR2014Q2]":0,"2014Q3 [YR2014Q3]":0,"2014Q4 [YR2014Q4]":0,"2015Q1 [YR2015Q1]":0,"2015Q2 [YR2015Q2]":0},
	{"Country Name":"Guadeloupe","Country Code":"GLP","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Guam","Country Code":"GUM","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Guatemala","Country Code":"GTM","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":60000000,"1996Q2 [YR1996Q2]":60000000,"1996Q3 [YR1996Q3]":48000000,"1996Q4 [YR1996Q4]":48000000,"1997Q1 [YR1997Q1]":36000000,"1997Q2 [YR1997Q2]":36000000,"1997Q3 [YR1997Q3]":186000000,"1997Q4 [YR1997Q4]":174000000,"1998Q1 [YR1998Q1]":162000000,"1998Q2 [YR1998Q2]":162000000,"1998Q3 [YR1998Q3]":150000000,"1998Q4 [YR1998Q4]":150000000,"1999Q1 [YR1999Q1]":150000000,"1999Q2 [YR1999Q2]":150000000,"1999Q3 [YR1999Q3]":150000000,"1999Q4 [YR1999Q4]":150000000,"2000Q1 [YR2000Q1]":150000000,"2000Q2 [YR2000Q2]":150000000,"2000Q3 [YR2000Q3]":150000000,"2000Q4 [YR2000Q4]":150000000,"2001Q1 [YR2001Q1]":150000000,"2001Q2 [YR2001Q2]":150000000,"2001Q3 [YR2001Q3]":150000000,"2001Q4 [YR2001Q4]":475000000,"2002Q1 [YR2002Q1]":475000000,"2002Q2 [YR2002Q2]":475000000,"2002Q3 [YR2002Q3]":475000000,"2002Q4 [YR2002Q4]":475000000,"2003Q1 [YR2003Q1]":475000000,"2003Q2 [YR2003Q2]":475000000,"2003Q3 [YR2003Q3]":775000000,"2003Q4 [YR2003Q4]":775000000,"2004Q1 [YR2004Q1]":775000000,"2004Q2 [YR2004Q2]":775000000,"2004Q3 [YR2004Q3]":775000000,"2004Q4 [YR2004Q4]":1205000000,"2005Q1 [YR2005Q1]":1205000000,"2005Q2 [YR2005Q2]":1205000000,"2005Q3 [YR2005Q3]":1205000000,"2005Q4 [YR2005Q4]":1205000000,"2006Q1 [YR2006Q1]":1205000000,"2006Q2 [YR2006Q2]":1205000000,"2006Q3 [YR2006Q3]":1205000000,"2006Q4 [YR2006Q4]":1205000000,"2007Q1 [YR2007Q1]":1205000000,"2007Q2 [YR2007Q2]":1205000000,"2007Q3 [YR2007Q3]":1055000000,"2007Q4 [YR2007Q4]":1055000000,"2008Q1 [YR2008Q1]":1055000000,"2008Q2 [YR2008Q2]":1090000000,"2008Q3 [YR2008Q3]":1090000000,"2008Q4 [YR2008Q4]":1090000000,"2009Q1 [YR2009Q1]":1090000000,"2009Q2 [YR2009Q2]":1090000000,"2009Q3 [YR2009Q3]":1090000000,"2009Q4 [YR2009Q4]":1090000000,"2010Q1 [YR2010Q1]":1090000000,"2010Q2 [YR2010Q2]":1090000000,"2010Q3 [YR2010Q3]":1090000000,"2010Q4 [YR2010Q4]":1090000000,"2011Q1 [YR2011Q1]":1090000000,"2011Q2 [YR2011Q2]":1090000000,"2011Q3 [YR2011Q3]":1240000000,"2011Q4 [YR2011Q4]":915000000,"2012Q1 [YR2012Q1]":1115000000,"2012Q2 [YR2012Q2]":1815000000,"2012Q3 [YR2012Q3]":1815000000,"2012Q4 [YR2012Q4]":2315000000,"2013Q1 [YR2013Q1]":3015000000,"2013Q2 [YR2013Q2]":3115000000,"2013Q3 [YR2013Q3]":2815000000,"2013Q4 [YR2013Q4]":2815000000,"2014Q1 [YR2014Q1]":3615000000,"2014Q2 [YR2014Q2]":3615000000,"2014Q3 [YR2014Q3]":3615000000,"2014Q4 [YR2014Q4]":3515000000,"2015Q1 [YR2015Q1]":3515000000,"2015Q2 [YR2015Q2]":3515000000},
	{"Country Name":"Guernsey","Country Code":"GGY","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Guinea","Country Code":"GIN","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":0,"1996Q2 [YR1996Q2]":0,"1996Q3 [YR1996Q3]":0,"1996Q4 [YR1996Q4]":0,"1997Q1 [YR1997Q1]":0,"1997Q2 [YR1997Q2]":0,"1997Q3 [YR1997Q3]":0,"1997Q4 [YR1997Q4]":0,"1998Q1 [YR1998Q1]":0,"1998Q2 [YR1998Q2]":0,"1998Q3 [YR1998Q3]":0,"1998Q4 [YR1998Q4]":0,"1999Q1 [YR1999Q1]":0,"1999Q2 [YR1999Q2]":0,"1999Q3 [YR1999Q3]":0,"1999Q4 [YR1999Q4]":0,"2000Q1 [YR2000Q1]":0,"2000Q2 [YR2000Q2]":0,"2000Q3 [YR2000Q3]":0,"2000Q4 [YR2000Q4]":0,"2001Q1 [YR2001Q1]":0,"2001Q2 [YR2001Q2]":0,"2001Q3 [YR2001Q3]":0,"2001Q4 [YR2001Q4]":0,"2002Q1 [YR2002Q1]":0,"2002Q2 [YR2002Q2]":0,"2002Q3 [YR2002Q3]":0,"2002Q4 [YR2002Q4]":0,"2003Q1 [YR2003Q1]":0,"2003Q2 [YR2003Q2]":0,"2003Q3 [YR2003Q3]":0,"2003Q4 [YR2003Q4]":0,"2004Q1 [YR2004Q1]":0,"2004Q2 [YR2004Q2]":0,"2004Q3 [YR2004Q3]":0,"2004Q4 [YR2004Q4]":0,"2005Q1 [YR2005Q1]":0,"2005Q2 [YR2005Q2]":0,"2005Q3 [YR2005Q3]":0,"2005Q4 [YR2005Q4]":0,"2006Q1 [YR2006Q1]":0,"2006Q2 [YR2006Q2]":0,"2006Q3 [YR2006Q3]":0,"2006Q4 [YR2006Q4]":0,"2007Q1 [YR2007Q1]":0,"2007Q2 [YR2007Q2]":0,"2007Q3 [YR2007Q3]":0,"2007Q4 [YR2007Q4]":0,"2008Q1 [YR2008Q1]":0,"2008Q2 [YR2008Q2]":0,"2008Q3 [YR2008Q3]":0,"2008Q4 [YR2008Q4]":0,"2009Q1 [YR2009Q1]":0,"2009Q2 [YR2009Q2]":0,"2009Q3 [YR2009Q3]":0,"2009Q4 [YR2009Q4]":0,"2010Q1 [YR2010Q1]":0,"2010Q2 [YR2010Q2]":0,"2010Q3 [YR2010Q3]":0,"2010Q4 [YR2010Q4]":0,"2011Q1 [YR2011Q1]":0,"2011Q2 [YR2011Q2]":0,"2011Q3 [YR2011Q3]":0,"2011Q4 [YR2011Q4]":0,"2012Q1 [YR2012Q1]":0,"2012Q2 [YR2012Q2]":0,"2012Q3 [YR2012Q3]":0,"2012Q4 [YR2012Q4]":0,"2013Q1 [YR2013Q1]":0,"2013Q2 [YR2013Q2]":0,"2013Q3 [YR2013Q3]":0,"2013Q4 [YR2013Q4]":0,"2014Q1 [YR2014Q1]":0,"2014Q2 [YR2014Q2]":0,"2014Q3 [YR2014Q3]":0,"2014Q4 [YR2014Q4]":0,"2015Q1 [YR2015Q1]":0,"2015Q2 [YR2015Q2]":0},
	{"Country Name":"Guinea-Bissau","Country Code":"GNB","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Guyana","Country Code":"GUY","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Haiti","Country Code":"HTI","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":0,"1996Q2 [YR1996Q2]":0,"1996Q3 [YR1996Q3]":0,"1996Q4 [YR1996Q4]":0,"1997Q1 [YR1997Q1]":0,"1997Q2 [YR1997Q2]":0,"1997Q3 [YR1997Q3]":0,"1997Q4 [YR1997Q4]":0,"1998Q1 [YR1998Q1]":0,"1998Q2 [YR1998Q2]":0,"1998Q3 [YR1998Q3]":0,"1998Q4 [YR1998Q4]":0,"1999Q1 [YR1999Q1]":0,"1999Q2 [YR1999Q2]":0,"1999Q3 [YR1999Q3]":0,"1999Q4 [YR1999Q4]":0,"2000Q1 [YR2000Q1]":0,"2000Q2 [YR2000Q2]":0,"2000Q3 [YR2000Q3]":0,"2000Q4 [YR2000Q4]":0,"2001Q1 [YR2001Q1]":0,"2001Q2 [YR2001Q2]":0,"2001Q3 [YR2001Q3]":0,"2001Q4 [YR2001Q4]":0,"2002Q1 [YR2002Q1]":0,"2002Q2 [YR2002Q2]":0,"2002Q3 [YR2002Q3]":0,"2002Q4 [YR2002Q4]":0,"2003Q1 [YR2003Q1]":0,"2003Q2 [YR2003Q2]":0,"2003Q3 [YR2003Q3]":0,"2003Q4 [YR2003Q4]":0,"2004Q1 [YR2004Q1]":0,"2004Q2 [YR2004Q2]":0,"2004Q3 [YR2004Q3]":0,"2004Q4 [YR2004Q4]":0,"2005Q1 [YR2005Q1]":0,"2005Q2 [YR2005Q2]":0,"2005Q3 [YR2005Q3]":0,"2005Q4 [YR2005Q4]":0,"2006Q1 [YR2006Q1]":0,"2006Q2 [YR2006Q2]":0,"2006Q3 [YR2006Q3]":0,"2006Q4 [YR2006Q4]":0,"2007Q1 [YR2007Q1]":0,"2007Q2 [YR2007Q2]":0,"2007Q3 [YR2007Q3]":0,"2007Q4 [YR2007Q4]":0,"2008Q1 [YR2008Q1]":0,"2008Q2 [YR2008Q2]":0,"2008Q3 [YR2008Q3]":0,"2008Q4 [YR2008Q4]":0,"2009Q1 [YR2009Q1]":0,"2009Q2 [YR2009Q2]":0,"2009Q3 [YR2009Q3]":0,"2009Q4 [YR2009Q4]":0,"2010Q1 [YR2010Q1]":0,"2010Q2 [YR2010Q2]":0,"2010Q3 [YR2010Q3]":0,"2010Q4 [YR2010Q4]":0,"2011Q1 [YR2011Q1]":0,"2011Q2 [YR2011Q2]":0,"2011Q3 [YR2011Q3]":0,"2011Q4 [YR2011Q4]":0,"2012Q1 [YR2012Q1]":0,"2012Q2 [YR2012Q2]":0,"2012Q3 [YR2012Q3]":0,"2012Q4 [YR2012Q4]":0,"2013Q1 [YR2013Q1]":0,"2013Q2 [YR2013Q2]":0,"2013Q3 [YR2013Q3]":0,"2013Q4 [YR2013Q4]":0,"2014Q1 [YR2014Q1]":0,"2014Q2 [YR2014Q2]":0,"2014Q3 [YR2014Q3]":0,"2014Q4 [YR2014Q4]":0,"2015Q1 [YR2015Q1]":0,"2015Q2 [YR2015Q2]":0},
	{"Country Name":"Honduras","Country Code":"HND","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Hong Kong SAR, China","Country Code":"HKG","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":16462000000,"1996Q2 [YR1996Q2]":15299000000,"1996Q3 [YR1996Q3]":16973000000,"1996Q4 [YR1996Q4]":18577000000,"1997Q1 [YR1997Q1]":20203000000,"1997Q2 [YR1997Q2]":22891000000,"1997Q3 [YR1997Q3]":23658000000,"1997Q4 [YR1997Q4]":23066000000,"1998Q1 [YR1998Q1]":22831000000,"1998Q2 [YR1998Q2]":22821000000,"1998Q3 [YR1998Q3]":23261000000,"1998Q4 [YR1998Q4]":23506000000,"1999Q1 [YR1999Q1]":26464000000,"1999Q2 [YR1999Q2]":25313000000,"1999Q3 [YR1999Q3]":28165000000,"1999Q4 [YR1999Q4]":28793000000,"2000Q1 [YR2000Q1]":27277000000,"2000Q2 [YR2000Q2]":26159000000,"2000Q3 [YR2000Q3]":27020000000,"2000Q4 [YR2000Q4]":28641000000,"2001Q1 [YR2001Q1]":28293000000,"2001Q2 [YR2001Q2]":30840000000,"2001Q3 [YR2001Q3]":30439000000,"2001Q4 [YR2001Q4]":29406000000,"2002Q1 [YR2002Q1]":33108000000,"2002Q2 [YR2002Q2]":35906000000,"2002Q3 [YR2002Q3]":37031000000,"2002Q4 [YR2002Q4]":37311000000,"2003Q1 [YR2003Q1]":38116000000,"2003Q2 [YR2003Q2]":39631000000,"2003Q3 [YR2003Q3]":39992000000,"2003Q4 [YR2003Q4]":40327000000,"2004Q1 [YR2004Q1]":41302000000,"2004Q2 [YR2004Q2]":41782000000,"2004Q3 [YR2004Q3]":43620000000,"2004Q4 [YR2004Q4]":44443000000,"2005Q1 [YR2005Q1]":45920000000,"2005Q2 [YR2005Q2]":45745000000,"2005Q3 [YR2005Q3]":45259000000,"2005Q4 [YR2005Q4]":41447000000,"2006Q1 [YR2006Q1]":42056000000,"2006Q2 [YR2006Q2]":43398000000,"2006Q3 [YR2006Q3]":42936000000,"2006Q4 [YR2006Q4]":44092000000,"2007Q1 [YR2007Q1]":43468000000,"2007Q2 [YR2007Q2]":45558000000,"2007Q3 [YR2007Q3]":45898000000,"2007Q4 [YR2007Q4]":45728000000,"2008Q1 [YR2008Q1]":46210000000,"2008Q2 [YR2008Q2]":46625000000,"2008Q3 [YR2008Q3]":47788000000,"2008Q4 [YR2008Q4]":48490000000,"2009Q1 [YR2009Q1]":45376000000,"2009Q2 [YR2009Q2]":47041000000,"2009Q3 [YR2009Q3]":47703000000,"2009Q4 [YR2009Q4]":48094000000,"2010Q1 [YR2010Q1]":51046000000,"2010Q2 [YR2010Q2]":51942000000,"2010Q3 [YR2010Q3]":56970000000,"2010Q4 [YR2010Q4]":62507000000,"2011Q1 [YR2011Q1]":63786000000,"2011Q2 [YR2011Q2]":78562000000,"2011Q3 [YR2011Q3]":82546000000,"2011Q4 [YR2011Q4]":87794000000,"2012Q1 [YR2012Q1]":"1.01296E+11","2012Q2 [YR2012Q2]":"1.07316E+11","2012Q3 [YR2012Q3]":"1.15416E+11","2012Q4 [YR2012Q4]":"1.1924E+11","2013Q1 [YR2013Q1]":"1.28907E+11","2013Q2 [YR2013Q2]":"1.44055E+11","2013Q3 [YR2013Q3]":"1.48411E+11","2013Q4 [YR2013Q4]":"1.58001E+11","2014Q1 [YR2014Q1]":"1.68104E+11","2014Q2 [YR2014Q2]":"1.83605E+11","2014Q3 [YR2014Q3]":"1.96524E+11","2014Q4 [YR2014Q4]":"1.96823E+11","2015Q1 [YR2015Q1]":"2.04237E+11","2015Q2 [YR2015Q2]":"2.08027E+11"},
	{"Country Name":"Hungary","Country Code":"HUN","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":15364000000,"1996Q2 [YR1996Q2]":14909000000,"1996Q3 [YR1996Q3]":14271000000,"1996Q4 [YR1996Q4]":13490000000,"1997Q1 [YR1997Q1]":12635000000,"1997Q2 [YR1997Q2]":12862000000,"1997Q3 [YR1997Q3]":12323000000,"1997Q4 [YR1997Q4]":11495000000,"1998Q1 [YR1998Q1]":10956000000,"1998Q2 [YR1998Q2]":10888000000,"1998Q3 [YR1998Q3]":11715000000,"1998Q4 [YR1998Q4]":12477000000,"1999Q1 [YR1999Q1]":11668000000,"1999Q2 [YR1999Q2]":12647000000,"1999Q3 [YR1999Q3]":12610000000,"1999Q4 [YR1999Q4]":12587000000,"2000Q1 [YR2000Q1]":11464000000,"2000Q2 [YR2000Q2]":10944000000,"2000Q3 [YR2000Q3]":10111000000,"2000Q4 [YR2000Q4]":10410000000,"2001Q1 [YR2001Q1]":9891000000,"2001Q2 [YR2001Q2]":10628000000,"2001Q3 [YR2001Q3]":11158000000,"2001Q4 [YR2001Q4]":10126000000,"2002Q1 [YR2002Q1]":9615000000,"2002Q2 [YR2002Q2]":10337000000,"2002Q3 [YR2002Q3]":10031000000,"2002Q4 [YR2002Q4]":10430000000,"2003Q1 [YR2003Q1]":11181000000,"2003Q2 [YR2003Q2]":11267000000,"2003Q3 [YR2003Q3]":11919000000,"2003Q4 [YR2003Q4]":12463000000,"2004Q1 [YR2004Q1]":11915000000,"2004Q2 [YR2004Q2]":12152000000,"2004Q3 [YR2004Q3]":13177000000,"2004Q4 [YR2004Q4]":16219000000,"2005Q1 [YR2005Q1]":18173000000,"2005Q2 [YR2005Q2]":18211000000,"2005Q3 [YR2005Q3]":18680000000,"2005Q4 [YR2005Q4]":18587000000,"2006Q1 [YR2006Q1]":22415000000,"2006Q2 [YR2006Q2]":22165000000,"2006Q3 [YR2006Q3]":24265000000,"2006Q4 [YR2006Q4]":27255000000,"2007Q1 [YR2007Q1]":30272000000,"2007Q2 [YR2007Q2]":31512000000,"2007Q3 [YR2007Q3]":33075000000,"2007Q4 [YR2007Q4]":34428000000,"2008Q1 [YR2008Q1]":38109000000,"2008Q2 [YR2008Q2]":41331000000,"2008Q3 [YR2008Q3]":38482000000,"2008Q4 [YR2008Q4]":37259000000,"2009Q1 [YR2009Q1]":34000000000,"2009Q2 [YR2009Q2]":35505000000,"2009Q3 [YR2009Q3]":38247000000,"2009Q4 [YR2009Q4]":38292000000,"2010Q1 [YR2010Q1]":37221000000,"2010Q2 [YR2010Q2]":34865000000,"2010Q3 [YR2010Q3]":36281000000,"2010Q4 [YR2010Q4]":35148000000,"2011Q1 [YR2011Q1]":39438000000,"2011Q2 [YR2011Q2]":40351000000,"2011Q3 [YR2011Q3]":38655000000,"2011Q4 [YR2011Q4]":36302000000,"2012Q1 [YR2012Q1]":36818000000,"2012Q2 [YR2012Q2]":34868000000,"2012Q3 [YR2012Q3]":35407000000,"2012Q4 [YR2012Q4]":35536000000,"2013Q1 [YR2013Q1]":36045000000,"2013Q2 [YR2013Q2]":36813000000,"2013Q3 [YR2013Q3]":38181000000,"2013Q4 [YR2013Q4]":41715000000,"2014Q1 [YR2014Q1]":43291000000,"2014Q2 [YR2014Q2]":41643000000,"2014Q3 [YR2014Q3]":36643000000,"2014Q4 [YR2014Q4]":37579000000,"2015Q1 [YR2015Q1]":34156000000,"2015Q2 [YR2015Q2]":35321000000},
	{"Country Name":"Iceland","Country Code":"ISL","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":2088000000,"1996Q2 [YR1996Q2]":2019000000,"1996Q3 [YR1996Q3]":2112000000,"1996Q4 [YR1996Q4]":2083000000,"1997Q1 [YR1997Q1]":2008000000,"1997Q2 [YR1997Q2]":1949000000,"1997Q3 [YR1997Q3]":1896000000,"1997Q4 [YR1997Q4]":1866000000,"1998Q1 [YR1998Q1]":1873000000,"1998Q2 [YR1998Q2]":1847000000,"1998Q3 [YR1998Q3]":1886000000,"1998Q4 [YR1998Q4]":1953000000,"1999Q1 [YR1999Q1]":2032000000,"1999Q2 [YR1999Q2]":2295000000,"1999Q3 [YR1999Q3]":2717000000,"1999Q4 [YR1999Q4]":2837000000,"2000Q1 [YR2000Q1]":3012000000,"2000Q2 [YR2000Q2]":3502000000,"2000Q3 [YR2000Q3]":3624000000,"2000Q4 [YR2000Q4]":4057000000,"2001Q1 [YR2001Q1]":4148000000,"2001Q2 [YR2001Q2]":4018000000,"2001Q3 [YR2001Q3]":4183000000,"2001Q4 [YR2001Q4]":4503000000,"2002Q1 [YR2002Q1]":4329000000,"2002Q2 [YR2002Q2]":5211000000,"2002Q3 [YR2002Q3]":5516000000,"2002Q4 [YR2002Q4]":5437000000,"2003Q1 [YR2003Q1]":5799000000,"2003Q2 [YR2003Q2]":6950000000,"2003Q3 [YR2003Q3]":8003000000,"2003Q4 [YR2003Q4]":10009000000,"2004Q1 [YR2004Q1]":11693000000,"2004Q2 [YR2004Q2]":12681000000,"2004Q3 [YR2004Q3]":16590000000,"2004Q4 [YR2004Q4]":21495000000,"2005Q1 [YR2005Q1]":23995000000,"2005Q2 [YR2005Q2]":27230000000,"2005Q3 [YR2005Q3]":30747000000,"2005Q4 [YR2005Q4]":34414000000,"2006Q1 [YR2006Q1]":37042000000,"2006Q2 [YR2006Q2]":39151000000,"2006Q3 [YR2006Q3]":42335000000,"2006Q4 [YR2006Q4]":48830000000,"2007Q1 [YR2007Q1]":50895000000,"2007Q2 [YR2007Q2]":53351000000,"2007Q3 [YR2007Q3]":54271000000,"2007Q4 [YR2007Q4]":56709000000,"2008Q1 [YR2008Q1]":59971000000,"2008Q2 [YR2008Q2]":61787000000,"2008Q3 [YR2008Q3]":56217000000,"2008Q4 [YR2008Q4]":52023000000,"2009Q1 [YR2009Q1]":47337000000,"2009Q2 [YR2009Q2]":46009000000,"2009Q3 [YR2009Q3]":45173000000,"2009Q4 [YR2009Q4]":41730000000,"2010Q1 [YR2010Q1]":36936000000,"2010Q2 [YR2010Q2]":32986000000,"2010Q3 [YR2010Q3]":35042000000,"2010Q4 [YR2010Q4]":32122000000,"2011Q1 [YR2011Q1]":31948000000,"2011Q2 [YR2011Q2]":32140000000,"2011Q3 [YR2011Q3]":28990000000,"2011Q4 [YR2011Q4]":24862000000,"2012Q1 [YR2012Q1]":22947000000,"2012Q2 [YR2012Q2]":21231000000,"2012Q3 [YR2012Q3]":19513000000,"2012Q4 [YR2012Q4]":18980000000,"2013Q1 [YR2013Q1]":18633000000,"2013Q2 [YR2013Q2]":18646000000,"2013Q3 [YR2013Q3]":18639000000,"2013Q4 [YR2013Q4]":18659000000,"2014Q1 [YR2014Q1]":18549000000,"2014Q2 [YR2014Q2]":18156000000,"2014Q3 [YR2014Q3]":18300000000,"2014Q4 [YR2014Q4]":17632000000,"2015Q1 [YR2015Q1]":16677000000,"2015Q2 [YR2015Q2]":16660000000},
	{"Country Name":"","Country Code":"","Series Name":"","1996Q1 [YR1996Q1]":"","1996Q2 [YR1996Q2]":"","1996Q3 [YR1996Q3]":"","1996Q4 [YR1996Q4]":"","1997Q1 [YR1997Q1]":"","1997Q2 [YR1997Q2]":"","1997Q3 [YR1997Q3]":"","1997Q4 [YR1997Q4]":"","1998Q1 [YR1998Q1]":"","1998Q2 [YR1998Q2]":"","1998Q3 [YR1998Q3]":"","1998Q4 [YR1998Q4]":"","1999Q1 [YR1999Q1]":"","1999Q2 [YR1999Q2]":"","1999Q3 [YR1999Q3]":"","1999Q4 [YR1999Q4]":"","2000Q1 [YR2000Q1]":"","2000Q2 [YR2000Q2]":"","2000Q3 [YR2000Q3]":"","2000Q4 [YR2000Q4]":"","2001Q1 [YR2001Q1]":"","2001Q2 [YR2001Q2]":"","2001Q3 [YR2001Q3]":"","2001Q4 [YR2001Q4]":"","2002Q1 [YR2002Q1]":"","2002Q2 [YR2002Q2]":"","2002Q3 [YR2002Q3]":"","2002Q4 [YR2002Q4]":"","2003Q1 [YR2003Q1]":"","2003Q2 [YR2003Q2]":"","2003Q3 [YR2003Q3]":"","2003Q4 [YR2003Q4]":"","2004Q1 [YR2004Q1]":"","2004Q2 [YR2004Q2]":"","2004Q3 [YR2004Q3]":"","2004Q4 [YR2004Q4]":"","2005Q1 [YR2005Q1]":"","2005Q2 [YR2005Q2]":"","2005Q3 [YR2005Q3]":"","2005Q4 [YR2005Q4]":"","2006Q1 [YR2006Q1]":"","2006Q2 [YR2006Q2]":"","2006Q3 [YR2006Q3]":"","2006Q4 [YR2006Q4]":"","2007Q1 [YR2007Q1]":"","2007Q2 [YR2007Q2]":"","2007Q3 [YR2007Q3]":"","2007Q4 [YR2007Q4]":"","2008Q1 [YR2008Q1]":"","2008Q2 [YR2008Q2]":"","2008Q3 [YR2008Q3]":"","2008Q4 [YR2008Q4]":"","2009Q1 [YR2009Q1]":"","2009Q2 [YR2009Q2]":"","2009Q3 [YR2009Q3]":"","2009Q4 [YR2009Q4]":"","2010Q1 [YR2010Q1]":"","2010Q2 [YR2010Q2]":"","2010Q3 [YR2010Q3]":"","2010Q4 [YR2010Q4]":"","2011Q1 [YR2011Q1]":"","2011Q2 [YR2011Q2]":"","2011Q3 [YR2011Q3]":"","2011Q4 [YR2011Q4]":"","2012Q1 [YR2012Q1]":"","2012Q2 [YR2012Q2]":"","2012Q3 [YR2012Q3]":"","2012Q4 [YR2012Q4]":"","2013Q1 [YR2013Q1]":"","2013Q2 [YR2013Q2]":"","2013Q3 [YR2013Q3]":"","2013Q4 [YR2013Q4]":"","2014Q1 [YR2014Q1]":"","2014Q2 [YR2014Q2]":"","2014Q3 [YR2014Q3]":"","2014Q4 [YR2014Q4]":"","2015Q1 [YR2015Q1]":"","2015Q2 [YR2015Q2]":""},
	{"Country Name":"IMF CPIS Countries","Country Code":"CPI","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"India","Country Code":"IND","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":3999000000,"1996Q2 [YR1996Q2]":4019000000,"1996Q3 [YR1996Q3]":4453000000,"1996Q4 [YR1996Q4]":4514000000,"1997Q1 [YR1997Q1]":4709000000,"1997Q2 [YR1997Q2]":5213000000,"1997Q3 [YR1997Q3]":6060000000,"1997Q4 [YR1997Q4]":6083000000,"1998Q1 [YR1998Q1]":6062000000,"1998Q2 [YR1998Q2]":5895000000,"1998Q3 [YR1998Q3]":5735000000,"1998Q4 [YR1998Q4]":5844000000,"1999Q1 [YR1999Q1]":5843000000,"1999Q2 [YR1999Q2]":5426000000,"1999Q3 [YR1999Q3]":5294000000,"1999Q4 [YR1999Q4]":4904000000,"2000Q1 [YR2000Q1]":4568000000,"2000Q2 [YR2000Q2]":4449000000,"2000Q3 [YR2000Q3]":4432000000,"2000Q4 [YR2000Q4]":4429000000,"2001Q1 [YR2001Q1]":4219000000,"2001Q2 [YR2001Q2]":4104000000,"2001Q3 [YR2001Q3]":3974000000,"2001Q4 [YR2001Q4]":3967000000,"2002Q1 [YR2002Q1]":3812000000,"2002Q2 [YR2002Q2]":3942000000,"2002Q3 [YR2002Q3]":3553000000,"2002Q4 [YR2002Q4]":3492000000,"2003Q1 [YR2003Q1]":3272000000,"2003Q2 [YR2003Q2]":3277000000,"2003Q3 [YR2003Q3]":3382000000,"2003Q4 [YR2003Q4]":3489000000,"2004Q1 [YR2004Q1]":4290000000,"2004Q2 [YR2004Q2]":4789000000,"2004Q3 [YR2004Q3]":5060000000,"2004Q4 [YR2004Q4]":5923000000,"2005Q1 [YR2005Q1]":6665000000,"2005Q2 [YR2005Q2]":7177000000,"2005Q3 [YR2005Q3]":8367000000,"2005Q4 [YR2005Q4]":9026000000,"2006Q1 [YR2006Q1]":11773000000,"2006Q2 [YR2006Q2]":14043000000,"2006Q3 [YR2006Q3]":14826000000,"2006Q4 [YR2006Q4]":16216000000,"2007Q1 [YR2007Q1]":20980000000,"2007Q2 [YR2007Q2]":23052000000,"2007Q3 [YR2007Q3]":24791000000,"2007Q4 [YR2007Q4]":27867000000,"2008Q1 [YR2008Q1]":28464000000,"2008Q2 [YR2008Q2]":28503000000,"2008Q3 [YR2008Q3]":28321000000,"2008Q4 [YR2008Q4]":29164000000,"2009Q1 [YR2009Q1]":28273000000,"2009Q2 [YR2009Q2]":27595000000,"2009Q3 [YR2009Q3]":28326000000,"2009Q4 [YR2009Q4]":30474000000,"2010Q1 [YR2010Q1]":30151000000,"2010Q2 [YR2010Q2]":30008000000,"2010Q3 [YR2010Q3]":28998000000,"2010Q4 [YR2010Q4]":28455000000,"2011Q1 [YR2011Q1]":27530000000,"2011Q2 [YR2011Q2]":26397000000,"2011Q3 [YR2011Q3]":27646000000,"2011Q4 [YR2011Q4]":26066000000,"2012Q1 [YR2012Q1]":23074000000,"2012Q2 [YR2012Q2]":20856000000,"2012Q3 [YR2012Q3]":19454000000,"2012Q4 [YR2012Q4]":19437000000,"2013Q1 [YR2013Q1]":20512000000,"2013Q2 [YR2013Q2]":21778000000,"2013Q3 [YR2013Q3]":22813000000,"2013Q4 [YR2013Q4]":22766000000,"2014Q1 [YR2014Q1]":23427000000,"2014Q2 [YR2014Q2]":25376000000,"2014Q3 [YR2014Q3]":28311000000,"2014Q4 [YR2014Q4]":27797000000,"2015Q1 [YR2015Q1]":28651000000,"2015Q2 [YR2015Q2]":31238000000},
	{"Country Name":"Indonesia","Country Code":"IDN","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":3909000000,"1996Q2 [YR1996Q2]":4113000000,"1996Q3 [YR1996Q3]":4762000000,"1996Q4 [YR1996Q4]":5722000000,"1997Q1 [YR1997Q1]":6629000000,"1997Q2 [YR1997Q2]":6963000000,"1997Q3 [YR1997Q3]":6629000000,"1997Q4 [YR1997Q4]":6455000000,"1998Q1 [YR1998Q1]":5580000000,"1998Q2 [YR1998Q2]":5944000000,"1998Q3 [YR1998Q3]":5870000000,"1998Q4 [YR1998Q4]":5583000000,"1999Q1 [YR1999Q1]":5500000000,"1999Q2 [YR1999Q2]":5515000000,"1999Q3 [YR1999Q3]":3797000000,"1999Q4 [YR1999Q4]":3398000000,"2000Q1 [YR2000Q1]":4124000000,"2000Q2 [YR2000Q2]":3334000000,"2000Q3 [YR2000Q3]":3304000000,"2000Q4 [YR2000Q4]":2763000000,"2001Q1 [YR2001Q1]":2398000000,"2001Q2 [YR2001Q2]":2023000000,"2001Q3 [YR2001Q3]":1858000000,"2001Q4 [YR2001Q4]":1857000000,"2002Q1 [YR2002Q1]":1780000000,"2002Q2 [YR2002Q2]":1915000000,"2002Q3 [YR2002Q3]":1745000000,"2002Q4 [YR2002Q4]":1895000000,"2003Q1 [YR2003Q1]":1900000000,"2003Q2 [YR2003Q2]":2287000000,"2003Q3 [YR2003Q3]":2631000000,"2003Q4 [YR2003Q4]":2629000000,"2004Q1 [YR2004Q1]":3936000000,"2004Q2 [YR2004Q2]":3962000000,"2004Q3 [YR2004Q3]":3962000000,"2004Q4 [YR2004Q4]":4010000000,"2005Q1 [YR2005Q1]":4213000000,"2005Q2 [YR2005Q2]":5192000000,"2005Q3 [YR2005Q3]":5290000000,"2005Q4 [YR2005Q4]":6574000000,"2006Q1 [YR2006Q1]":8580000000,"2006Q2 [YR2006Q2]":8341000000,"2006Q3 [YR2006Q3]":7942000000,"2006Q4 [YR2006Q4]":8011000000,"2007Q1 [YR2007Q1]":9360000000,"2007Q2 [YR2007Q2]":10237000000,"2007Q3 [YR2007Q3]":10237000000,"2007Q4 [YR2007Q4]":10214000000,"2008Q1 [YR2008Q1]":12211000000,"2008Q2 [YR2008Q2]":13809000000,"2008Q3 [YR2008Q3]":13761000000,"2008Q4 [YR2008Q4]":13460000000,"2009Q1 [YR2009Q1]":18160000000,"2009Q2 [YR2009Q2]":18710000000,"2009Q3 [YR2009Q3]":19675000000,"2009Q4 [YR2009Q4]":20955000000,"2010Q1 [YR2010Q1]":23810000000,"2010Q2 [YR2010Q2]":24080000000,"2010Q3 [YR2010Q3]":23888000000,"2010Q4 [YR2010Q4]":24435000000,"2011Q1 [YR2011Q1]":23976000000,"2011Q2 [YR2011Q2]":28125000000,"2011Q3 [YR2011Q3]":28188000000,"2011Q4 [YR2011Q4]":31011000000,"2012Q1 [YR2012Q1]":35050000000,"2012Q2 [YR2012Q2]":40466000000,"2012Q3 [YR2012Q3]":40410000000,"2012Q4 [YR2012Q4]":42641000000,"2013Q1 [YR2013Q1]":43721000000,"2013Q2 [YR2013Q2]":48784000000,"2013Q3 [YR2013Q3]":51341000000,"2013Q4 [YR2013Q4]":51377000000,"2014Q1 [YR2014Q1]":54142000000,"2014Q2 [YR2014Q2]":54965000000,"2014Q3 [YR2014Q3]":58534000000,"2014Q4 [YR2014Q4]":59095000000,"2015Q1 [YR2015Q1]":65136000000,"2015Q2 [YR2015Q2]":72256000000},
	{"Country Name":"Iran","Country Code":"IRN","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":0,"1996Q2 [YR1996Q2]":0,"1996Q3 [YR1996Q3]":0,"1996Q4 [YR1996Q4]":0,"1997Q1 [YR1997Q1]":0,"1997Q2 [YR1997Q2]":0,"1997Q3 [YR1997Q3]":0,"1997Q4 [YR1997Q4]":0,"1998Q1 [YR1998Q1]":0,"1998Q2 [YR1998Q2]":0,"1998Q3 [YR1998Q3]":0,"1998Q4 [YR1998Q4]":0,"1999Q1 [YR1999Q1]":0,"1999Q2 [YR1999Q2]":0,"1999Q3 [YR1999Q3]":0,"1999Q4 [YR1999Q4]":0,"2000Q1 [YR2000Q1]":0,"2000Q2 [YR2000Q2]":0,"2000Q3 [YR2000Q3]":0,"2000Q4 [YR2000Q4]":0,"2001Q1 [YR2001Q1]":0,"2001Q2 [YR2001Q2]":0,"2001Q3 [YR2001Q3]":0,"2001Q4 [YR2001Q4]":0,"2002Q1 [YR2002Q1]":0,"2002Q2 [YR2002Q2]":0,"2002Q3 [YR2002Q3]":616000000,"2002Q4 [YR2002Q4]":1049000000,"2003Q1 [YR2003Q1]":1090000000,"2003Q2 [YR2003Q2]":1143000000,"2003Q3 [YR2003Q3]":1165000000,"2003Q4 [YR2003Q4]":1263000000,"2004Q1 [YR2004Q1]":1222000000,"2004Q2 [YR2004Q2]":1240000000,"2004Q3 [YR2004Q3]":1266000000,"2004Q4 [YR2004Q4]":1389000000,"2005Q1 [YR2005Q1]":1322000000,"2005Q2 [YR2005Q2]":1233000000,"2005Q3 [YR2005Q3]":1228000000,"2005Q4 [YR2005Q4]":1203000000,"2006Q1 [YR2006Q1]":1235000000,"2006Q2 [YR2006Q2]":1297000000,"2006Q3 [YR2006Q3]":1291000000,"2006Q4 [YR2006Q4]":1343000000,"2007Q1 [YR2007Q1]":1358000000,"2007Q2 [YR2007Q2]":1378000000,"2007Q3 [YR2007Q3]":560000000,"2007Q4 [YR2007Q4]":581000000,"2008Q1 [YR2008Q1]":625000000,"2008Q2 [YR2008Q2]":32000000,"2008Q3 [YR2008Q3]":29000000,"2008Q4 [YR2008Q4]":28000000,"2009Q1 [YR2009Q1]":27000000,"2009Q2 [YR2009Q2]":0,"2009Q3 [YR2009Q3]":0,"2009Q4 [YR2009Q4]":0,"2010Q1 [YR2010Q1]":0,"2010Q2 [YR2010Q2]":0,"2010Q3 [YR2010Q3]":0,"2010Q4 [YR2010Q4]":0,"2011Q1 [YR2011Q1]":0,"2011Q2 [YR2011Q2]":0,"2011Q3 [YR2011Q3]":0,"2011Q4 [YR2011Q4]":0,"2012Q1 [YR2012Q1]":0,"2012Q2 [YR2012Q2]":0,"2012Q3 [YR2012Q3]":0,"2012Q4 [YR2012Q4]":0,"2013Q1 [YR2013Q1]":0,"2013Q2 [YR2013Q2]":0,"2013Q3 [YR2013Q3]":0,"2013Q4 [YR2013Q4]":0,"2014Q1 [YR2014Q1]":0,"2014Q2 [YR2014Q2]":0,"2014Q3 [YR2014Q3]":0,"2014Q4 [YR2014Q4]":0,"2015Q1 [YR2015Q1]":0,"2015Q2 [YR2015Q2]":0},
	{"Country Name":"Iraq","Country Code":"IRQ","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":0,"1996Q2 [YR1996Q2]":0,"1996Q3 [YR1996Q3]":0,"1996Q4 [YR1996Q4]":0,"1997Q1 [YR1997Q1]":0,"1997Q2 [YR1997Q2]":0,"1997Q3 [YR1997Q3]":0,"1997Q4 [YR1997Q4]":0,"1998Q1 [YR1998Q1]":0,"1998Q2 [YR1998Q2]":0,"1998Q3 [YR1998Q3]":0,"1998Q4 [YR1998Q4]":0,"1999Q1 [YR1999Q1]":0,"1999Q2 [YR1999Q2]":0,"1999Q3 [YR1999Q3]":0,"1999Q4 [YR1999Q4]":0,"2000Q1 [YR2000Q1]":0,"2000Q2 [YR2000Q2]":0,"2000Q3 [YR2000Q3]":0,"2000Q4 [YR2000Q4]":0,"2001Q1 [YR2001Q1]":0,"2001Q2 [YR2001Q2]":0,"2001Q3 [YR2001Q3]":0,"2001Q4 [YR2001Q4]":0,"2002Q1 [YR2002Q1]":0,"2002Q2 [YR2002Q2]":0,"2002Q3 [YR2002Q3]":0,"2002Q4 [YR2002Q4]":0,"2003Q1 [YR2003Q1]":0,"2003Q2 [YR2003Q2]":0,"2003Q3 [YR2003Q3]":0,"2003Q4 [YR2003Q4]":0,"2004Q1 [YR2004Q1]":0,"2004Q2 [YR2004Q2]":0,"2004Q3 [YR2004Q3]":0,"2004Q4 [YR2004Q4]":0,"2005Q1 [YR2005Q1]":0,"2005Q2 [YR2005Q2]":0,"2005Q3 [YR2005Q3]":0,"2005Q4 [YR2005Q4]":0,"2006Q1 [YR2006Q1]":2700000000,"2006Q2 [YR2006Q2]":2700000000,"2006Q3 [YR2006Q3]":2700000000,"2006Q4 [YR2006Q4]":2700000000,"2007Q1 [YR2007Q1]":2700000000,"2007Q2 [YR2007Q2]":2700000000,"2007Q3 [YR2007Q3]":2700000000,"2007Q4 [YR2007Q4]":2700000000,"2008Q1 [YR2008Q1]":2700000000,"2008Q2 [YR2008Q2]":2700000000,"2008Q3 [YR2008Q3]":2700000000,"2008Q4 [YR2008Q4]":2700000000,"2009Q1 [YR2009Q1]":2700000000,"2009Q2 [YR2009Q2]":2700000000,"2009Q3 [YR2009Q3]":2700000000,"2009Q4 [YR2009Q4]":2659000000,"2010Q1 [YR2010Q1]":2659000000,"2010Q2 [YR2010Q2]":2659000000,"2010Q3 [YR2010Q3]":2659000000,"2010Q4 [YR2010Q4]":2659000000,"2011Q1 [YR2011Q1]":2659000000,"2011Q2 [YR2011Q2]":2659000000,"2011Q3 [YR2011Q3]":2659000000,"2011Q4 [YR2011Q4]":2659000000,"2012Q1 [YR2012Q1]":2659000000,"2012Q2 [YR2012Q2]":2659000000,"2012Q3 [YR2012Q3]":2659000000,"2012Q4 [YR2012Q4]":2659000000,"2013Q1 [YR2013Q1]":2659000000,"2013Q2 [YR2013Q2]":2659000000,"2013Q3 [YR2013Q3]":2659000000,"2013Q4 [YR2013Q4]":2659000000,"2014Q1 [YR2014Q1]":2659000000,"2014Q2 [YR2014Q2]":2659000000,"2014Q3 [YR2014Q3]":2659000000,"2014Q4 [YR2014Q4]":2659000000,"2015Q1 [YR2015Q1]":2659000000,"2015Q2 [YR2015Q2]":2659000000},
	{"Country Name":"Ireland","Country Code":"IRL","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":23110000000,"1996Q2 [YR1996Q2]":23845000000,"1996Q3 [YR1996Q3]":25572000000,"1996Q4 [YR1996Q4]":28398000000,"1997Q1 [YR1997Q1]":32355000000,"1997Q2 [YR1997Q2]":35849000000,"1997Q3 [YR1997Q3]":38472000000,"1997Q4 [YR1997Q4]":40521000000,"1998Q1 [YR1998Q1]":42036000000,"1998Q2 [YR1998Q2]":44906000000,"1998Q3 [YR1998Q3]":51110000000,"1998Q4 [YR1998Q4]":50974000000,"1999Q1 [YR1999Q1]":53634000000,"1999Q2 [YR1999Q2]":54682000000,"1999Q3 [YR1999Q3]":59049000000,"1999Q4 [YR1999Q4]":63232000000,"2000Q1 [YR2000Q1]":64110000000,"2000Q2 [YR2000Q2]":68120000000,"2000Q3 [YR2000Q3]":65519000000,"2000Q4 [YR2000Q4]":70806000000,"2001Q1 [YR2001Q1]":76281000000,"2001Q2 [YR2001Q2]":80894000000,"2001Q3 [YR2001Q3]":83065000000,"2001Q4 [YR2001Q4]":88312000000,"2002Q1 [YR2002Q1]":91876000000,"2002Q2 [YR2002Q2]":"1.03728E+11","2002Q3 [YR2002Q3]":"1.03805E+11","2002Q4 [YR2002Q4]":"1.15634E+11","2003Q1 [YR2003Q1]":"1.31402E+11","2003Q2 [YR2003Q2]":"1.52031E+11","2003Q3 [YR2003Q3]":"1.65719E+11","2003Q4 [YR2003Q4]":"2.10646E+11","2004Q1 [YR2004Q1]":"2.31861E+11","2004Q2 [YR2004Q2]":"2.49871E+11","2004Q3 [YR2004Q3]":"2.84022E+11","2004Q4 [YR2004Q4]":"3.51158E+11","2005Q1 [YR2005Q1]":"3.71518E+11","2005Q2 [YR2005Q2]":"3.97563E+11","2005Q3 [YR2005Q3]":"4.12722E+11","2005Q4 [YR2005Q4]":"4.555E+11","2006Q1 [YR2006Q1]":"5.05876E+11","2006Q2 [YR2006Q2]":"5.87991E+11","2006Q3 [YR2006Q3]":"6.67418E+11","2006Q4 [YR2006Q4]":"7.75355E+11","2007Q1 [YR2007Q1]":"8.54749E+11","2007Q2 [YR2007Q2]":"9.57336E+11","2007Q3 [YR2007Q3]":"1.06123E+12","2007Q4 [YR2007Q4]":"1.11687E+12","2008Q1 [YR2008Q1]":"1.22287E+12","2008Q2 [YR2008Q2]":"1.26439E+12","2008Q3 [YR2008Q3]":"1.17841E+12","2008Q4 [YR2008Q4]":"1.18825E+12","2009Q1 [YR2009Q1]":"1.16786E+12","2009Q2 [YR2009Q2]":"1.26728E+12","2009Q3 [YR2009Q3]":"1.34406E+12","2009Q4 [YR2009Q4]":"1.31118E+12","2010Q1 [YR2010Q1]":"1.24846E+12","2010Q2 [YR2010Q2]":"1.15146E+12","2010Q3 [YR2010Q3]":"1.22653E+12","2010Q4 [YR2010Q4]":"1.19741E+12","2011Q1 [YR2011Q1]":"1.18707E+12","2011Q2 [YR2011Q2]":"1.18905E+12","2011Q3 [YR2011Q3]":"1.09289E+12","2011Q4 [YR2011Q4]":"1.05394E+12","2012Q1 [YR2012Q1]":"1.10806E+12","2012Q2 [YR2012Q2]":"1.04277E+12","2012Q3 [YR2012Q3]":"1.03778E+12","2012Q4 [YR2012Q4]":"1.05889E+12","2013Q1 [YR2013Q1]":"1.02893E+12","2013Q2 [YR2013Q2]":"1.02369E+12","2013Q3 [YR2013Q3]":"1.03466E+12","2013Q4 [YR2013Q4]":"1.05365E+12","2014Q1 [YR2014Q1]":"1.01984E+12","2014Q2 [YR2014Q2]":"1.01028E+12","2014Q3 [YR2014Q3]":"9.26515E+11","2014Q4 [YR2014Q4]":"8.53736E+11","2015Q1 [YR2015Q1]":"7.49701E+11","2015Q2 [YR2015Q2]":"8.04393E+11"},
	{"Country Name":"Isle of Man","Country Code":"IMY","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Israel","Country Code":"ISR","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":1254000000,"1996Q2 [YR1996Q2]":1254000000,"1996Q3 [YR1996Q3]":1149000000,"1996Q4 [YR1996Q4]":1949000000,"1997Q1 [YR1997Q1]":1949000000,"1997Q2 [YR1997Q2]":2024000000,"1997Q3 [YR1997Q3]":2389000000,"1997Q4 [YR1997Q4]":2803000000,"1998Q1 [YR1998Q1]":2800000000,"1998Q2 [YR1998Q2]":2777000000,"1998Q3 [YR1998Q3]":3171000000,"1998Q4 [YR1998Q4]":3458000000,"1999Q1 [YR1999Q1]":3948000000,"1999Q2 [YR1999Q2]":4360000000,"1999Q3 [YR1999Q3]":4406000000,"1999Q4 [YR1999Q4]":5156000000,"2000Q1 [YR2000Q1]":5974000000,"2000Q2 [YR2000Q2]":6092000000,"2000Q3 [YR2000Q3]":6488000000,"2000Q4 [YR2000Q4]":6610000000,"2001Q1 [YR2001Q1]":6550000000,"2001Q2 [YR2001Q2]":7125000000,"2001Q3 [YR2001Q3]":7186000000,"2001Q4 [YR2001Q4]":7090000000,"2002Q1 [YR2002Q1]":7426000000,"2002Q2 [YR2002Q2]":7618000000,"2002Q3 [YR2002Q3]":7501000000,"2002Q4 [YR2002Q4]":7588000000,"2003Q1 [YR2003Q1]":7679000000,"2003Q2 [YR2003Q2]":8535000000,"2003Q3 [YR2003Q3]":8602000000,"2003Q4 [YR2003Q4]":9488000000,"2004Q1 [YR2004Q1]":10234000000,"2004Q2 [YR2004Q2]":11171000000,"2004Q3 [YR2004Q3]":11102000000,"2004Q4 [YR2004Q4]":12154000000,"2005Q1 [YR2005Q1]":11712000000,"2005Q2 [YR2005Q2]":11469000000,"2005Q3 [YR2005Q3]":11170000000,"2005Q4 [YR2005Q4]":11806000000,"2006Q1 [YR2006Q1]":13258000000,"2006Q2 [YR2006Q2]":12713000000,"2006Q3 [YR2006Q3]":12700000000,"2006Q4 [YR2006Q4]":13754000000,"2007Q1 [YR2007Q1]":13680000000,"2007Q2 [YR2007Q2]":13699000000,"2007Q3 [YR2007Q3]":13221000000,"2007Q4 [YR2007Q4]":12659000000,"2008Q1 [YR2008Q1]":13047000000,"2008Q2 [YR2008Q2]":14995000000,"2008Q3 [YR2008Q3]":14808000000,"2008Q4 [YR2008Q4]":14736000000,"2009Q1 [YR2009Q1]":15614000000,"2009Q2 [YR2009Q2]":15701000000,"2009Q3 [YR2009Q3]":15745000000,"2009Q4 [YR2009Q4]":15125000000,"2010Q1 [YR2010Q1]":16566000000,"2010Q2 [YR2010Q2]":16996000000,"2010Q3 [YR2010Q3]":17150000000,"2010Q4 [YR2010Q4]":17196000000,"2011Q1 [YR2011Q1]":17370000000,"2011Q2 [YR2011Q2]":16832000000,"2011Q3 [YR2011Q3]":17006000000,"2011Q4 [YR2011Q4]":21871000000,"2012Q1 [YR2012Q1]":23926000000,"2012Q2 [YR2012Q2]":23552000000,"2012Q3 [YR2012Q3]":23238000000,"2012Q4 [YR2012Q4]":27091000000,"2013Q1 [YR2013Q1]":27993000000,"2013Q2 [YR2013Q2]":25625000000,"2013Q3 [YR2013Q3]":26035000000,"2013Q4 [YR2013Q4]":24000000000,"2014Q1 [YR2014Q1]":25571000000,"2014Q2 [YR2014Q2]":27119000000,"2014Q3 [YR2014Q3]":26681000000,"2014Q4 [YR2014Q4]":29789000000,"2015Q1 [YR2015Q1]":29371000000,"2015Q2 [YR2015Q2]":29540000000},
	{"Country Name":"Italy","Country Code":"ITA","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":61110000000,"1996Q2 [YR1996Q2]":63166000000,"1996Q3 [YR1996Q3]":63445000000,"1996Q4 [YR1996Q4]":63633000000,"1997Q1 [YR1997Q1]":61688000000,"1997Q2 [YR1997Q2]":64994000000,"1997Q3 [YR1997Q3]":65975000000,"1997Q4 [YR1997Q4]":63745000000,"1998Q1 [YR1998Q1]":63318000000,"1998Q2 [YR1998Q2]":66864000000,"1998Q3 [YR1998Q3]":69538000000,"1998Q4 [YR1998Q4]":75917000000,"1999Q1 [YR1999Q1]":71309000000,"1999Q2 [YR1999Q2]":79337000000,"1999Q3 [YR1999Q3]":82341000000,"1999Q4 [YR1999Q4]":92186000000,"2000Q1 [YR2000Q1]":99417000000,"2000Q2 [YR2000Q2]":"1.14729E+11","2000Q3 [YR2000Q3]":"1.18043E+11","2000Q4 [YR2000Q4]":"1.31009E+11","2001Q1 [YR2001Q1]":"1.3681E+11","2001Q2 [YR2001Q2]":"1.42753E+11","2001Q3 [YR2001Q3]":"1.56201E+11","2001Q4 [YR2001Q4]":"1.70507E+11","2002Q1 [YR2002Q1]":"1.78719E+11","2002Q2 [YR2002Q2]":"2.04229E+11","2002Q3 [YR2002Q3]":"2.10974E+11","2002Q4 [YR2002Q4]":"2.36514E+11","2003Q1 [YR2003Q1]":"2.66019E+11","2003Q2 [YR2003Q2]":"2.86797E+11","2003Q3 [YR2003Q3]":"3.01108E+11","2003Q4 [YR2003Q4]":"3.38441E+11","2004Q1 [YR2004Q1]":"3.60078E+11","2004Q2 [YR2004Q2]":"3.88289E+11","2004Q3 [YR2004Q3]":"4.03951E+11","2004Q4 [YR2004Q4]":"4.64246E+11","2005Q1 [YR2005Q1]":"4.70047E+11","2005Q2 [YR2005Q2]":"4.71123E+11","2005Q3 [YR2005Q3]":"4.58457E+11","2005Q4 [YR2005Q4]":"4.76598E+11","2006Q1 [YR2006Q1]":"5.13299E+11","2006Q2 [YR2006Q2]":"5.58322E+11","2006Q3 [YR2006Q3]":"5.80349E+11","2006Q4 [YR2006Q4]":"6.27716E+11","2007Q1 [YR2007Q1]":"6.62454E+11","2007Q2 [YR2007Q2]":"7.22805E+11","2007Q3 [YR2007Q3]":"7.49022E+11","2007Q4 [YR2007Q4]":"7.82296E+11","2008Q1 [YR2008Q1]":"8.61417E+11","2008Q2 [YR2008Q2]":"8.91738E+11","2008Q3 [YR2008Q3]":"8.1111E+11","2008Q4 [YR2008Q4]":"8.63235E+11","2009Q1 [YR2009Q1]":"8.63877E+11","2009Q2 [YR2009Q2]":"9.32182E+11","2009Q3 [YR2009Q3]":"9.83706E+11","2009Q4 [YR2009Q4]":"1.00013E+12","2010Q1 [YR2010Q1]":"9.38876E+11","2010Q2 [YR2010Q2]":"8.58904E+11","2010Q3 [YR2010Q3]":"9.8375E+11","2010Q4 [YR2010Q4]":"9.77074E+11","2011Q1 [YR2011Q1]":"1.05392E+12","2011Q2 [YR2011Q2]":"1.07823E+12","2011Q3 [YR2011Q3]":"1.01779E+12","2011Q4 [YR2011Q4]":"9.81206E+11","2012Q1 [YR2012Q1]":"9.80097E+11","2012Q2 [YR2012Q2]":"9.03775E+11","2012Q3 [YR2012Q3]":"9.28113E+11","2012Q4 [YR2012Q4]":"9.38207E+11","2013Q1 [YR2013Q1]":"8.92667E+11","2013Q2 [YR2013Q2]":"9.10578E+11","2013Q3 [YR2013Q3]":"9.57608E+11","2013Q4 [YR2013Q4]":"9.93505E+11","2014Q1 [YR2014Q1]":"9.85683E+11","2014Q2 [YR2014Q2]":"9.81929E+11","2014Q3 [YR2014Q3]":"8.87776E+11","2014Q4 [YR2014Q4]":"8.60227E+11","2015Q1 [YR2015Q1]":"7.71404E+11","2015Q2 [YR2015Q2]":"7.98791E+11"},
	{"Country Name":"Jamaica","Country Code":"JAM","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":0,"1996Q2 [YR1996Q2]":0,"1996Q3 [YR1996Q3]":0,"1996Q4 [YR1996Q4]":75000000,"1997Q1 [YR1997Q1]":75000000,"1997Q2 [YR1997Q2]":75000000,"1997Q3 [YR1997Q3]":275000000,"1997Q4 [YR1997Q4]":270000000,"1998Q1 [YR1998Q1]":270000000,"1998Q2 [YR1998Q2]":520000000,"1998Q3 [YR1998Q3]":520000000,"1998Q4 [YR1998Q4]":520000000,"1999Q1 [YR1999Q1]":520000000,"1999Q2 [YR1999Q2]":520000000,"1999Q3 [YR1999Q3]":520000000,"1999Q4 [YR1999Q4]":450000000,"2000Q1 [YR2000Q1]":641000000,"2000Q2 [YR2000Q2]":641000000,"2000Q3 [YR2000Q3]":850000000,"2000Q4 [YR2000Q4]":861000000,"2001Q1 [YR2001Q1]":1006000000,"2001Q2 [YR2001Q2]":1393000000,"2001Q3 [YR2001Q3]":1417000000,"2001Q4 [YR2001Q4]":1655000000,"2002Q1 [YR2002Q1]":1652000000,"2002Q2 [YR2002Q2]":1999000000,"2002Q3 [YR2002Q3]":1795000000,"2002Q4 [YR2002Q4]":1818000000,"2003Q1 [YR2003Q1]":1616000000,"2003Q2 [YR2003Q2]":1625000000,"2003Q3 [YR2003Q3]":1629000000,"2003Q4 [YR2003Q4]":1646000000,"2004Q1 [YR2004Q1]":1883000000,"2004Q2 [YR2004Q2]":2006000000,"2004Q3 [YR2004Q3]":2046000000,"2004Q4 [YR2004Q4]":2299000000,"2005Q1 [YR2005Q1]":2263000000,"2005Q2 [YR2005Q2]":2265000000,"2005Q3 [YR2005Q3]":2762000000,"2005Q4 [YR2005Q4]":2999000000,"2006Q1 [YR2006Q1]":3366000000,"2006Q2 [YR2006Q2]":3399000000,"2006Q3 [YR2006Q3]":3546000000,"2006Q4 [YR2006Q4]":3774000000,"2007Q1 [YR2007Q1]":4132000000,"2007Q2 [YR2007Q2]":4268000000,"2007Q3 [YR2007Q3]":4080000000,"2007Q4 [YR2007Q4]":4260000000,"2008Q1 [YR2008Q1]":4320000000,"2008Q2 [YR2008Q2]":4667000000,"2008Q3 [YR2008Q3]":4587000000,"2008Q4 [YR2008Q4]":4565000000,"2009Q1 [YR2009Q1]":4251000000,"2009Q2 [YR2009Q2]":4280000000,"2009Q3 [YR2009Q3]":4284000000,"2009Q4 [YR2009Q4]":4276000000,"2010Q1 [YR2010Q1]":4229000000,"2010Q2 [YR2010Q2]":4187000000,"2010Q3 [YR2010Q3]":4221000000,"2010Q4 [YR2010Q4]":4211000000,"2011Q1 [YR2011Q1]":4626000000,"2011Q2 [YR2011Q2]":4234000000,"2011Q3 [YR2011Q3]":4187000000,"2011Q4 [YR2011Q4]":4741000000,"2012Q1 [YR2012Q1]":5006000000,"2012Q2 [YR2012Q2]":4979000000,"2012Q3 [YR2012Q3]":4268000000,"2012Q4 [YR2012Q4]":4272000000,"2013Q1 [YR2013Q1]":5466000000,"2013Q2 [YR2013Q2]":5470000000,"2013Q3 [YR2013Q3]":5448000000,"2013Q4 [YR2013Q4]":5452000000,"2014Q1 [YR2014Q1]":5438000000,"2014Q2 [YR2014Q2]":5436000000,"2014Q3 [YR2014Q3]":6206000000,"2014Q4 [YR2014Q4]":6017000000,"2015Q1 [YR2015Q1]":6942000000,"2015Q2 [YR2015Q2]":6642000000},
	{"Country Name":"Japan","Country Code":"JPN","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"2.22172E+11","1996Q2 [YR1996Q2]":"2.14771E+11","1996Q3 [YR1996Q3]":"2.09511E+11","1996Q4 [YR1996Q4]":"1.96992E+11","1997Q1 [YR1997Q1]":"1.82357E+11","1997Q2 [YR1997Q2]":"1.81128E+11","1997Q3 [YR1997Q3]":"1.69346E+11","1997Q4 [YR1997Q4]":"1.54687E+11","1998Q1 [YR1998Q1]":"1.42197E+11","1998Q2 [YR1998Q2]":"1.30041E+11","1998Q3 [YR1998Q3]":"1.28539E+11","1998Q4 [YR1998Q4]":"1.32555E+11","1999Q1 [YR1999Q1]":"1.2658E+11","1999Q2 [YR1999Q2]":"1.2479E+11","1999Q3 [YR1999Q3]":"1.3055E+11","1999Q4 [YR1999Q4]":"1.24262E+11","2000Q1 [YR2000Q1]":"1.1354E+11","2000Q2 [YR2000Q2]":"1.12851E+11","2000Q3 [YR2000Q3]":"1.08746E+11","2000Q4 [YR2000Q4]":"1.0437E+11","2001Q1 [YR2001Q1]":97709000000,"2001Q2 [YR2001Q2]":97364000000,"2001Q3 [YR2001Q3]":97373000000,"2001Q4 [YR2001Q4]":94609000000,"2002Q1 [YR2002Q1]":95608000000,"2002Q2 [YR2002Q2]":"1.06153E+11","2002Q3 [YR2002Q3]":"1.0353E+11","2002Q4 [YR2002Q4]":"1.03119E+11","2003Q1 [YR2003Q1]":"1.02708E+11","2003Q2 [YR2003Q2]":"1.05043E+11","2003Q3 [YR2003Q3]":"1.06599E+11","2003Q4 [YR2003Q4]":"1.18108E+11","2004Q1 [YR2004Q1]":"1.23331E+11","2004Q2 [YR2004Q2]":"1.29335E+11","2004Q3 [YR2004Q3]":"1.28948E+11","2004Q4 [YR2004Q4]":"1.3863E+11","2005Q1 [YR2005Q1]":"1.3867E+11","2005Q2 [YR2005Q2]":"1.37314E+11","2005Q3 [YR2005Q3]":"1.41097E+11","2005Q4 [YR2005Q4]":"1.37789E+11","2006Q1 [YR2006Q1]":"1.4213E+11","2006Q2 [YR2006Q2]":"1.47046E+11","2006Q3 [YR2006Q3]":"1.46558E+11","2006Q4 [YR2006Q4]":"1.48382E+11","2007Q1 [YR2007Q1]":"1.48065E+11","2007Q2 [YR2007Q2]":"1.47498E+11","2007Q3 [YR2007Q3]":"1.5572E+11","2007Q4 [YR2007Q4]":"1.62026E+11","2008Q1 [YR2008Q1]":"1.76935E+11","2008Q2 [YR2008Q2]":"1.74046E+11","2008Q3 [YR2008Q3]":"1.72325E+11","2008Q4 [YR2008Q4]":"1.81449E+11","2009Q1 [YR2009Q1]":"1.65772E+11","2009Q2 [YR2009Q2]":"1.64282E+11","2009Q3 [YR2009Q3]":"1.7099E+11","2009Q4 [YR2009Q4]":"1.67312E+11","2010Q1 [YR2010Q1]":"1.68608E+11","2010Q2 [YR2010Q2]":"1.6541E+11","2010Q3 [YR2010Q3]":"1.79957E+11","2010Q4 [YR2010Q4]":"1.80816E+11","2011Q1 [YR2011Q1]":"1.81438E+11","2011Q2 [YR2011Q2]":"1.76668E+11","2011Q3 [YR2011Q3]":"1.79029E+11","2011Q4 [YR2011Q4]":"1.76278E+11","2012Q1 [YR2012Q1]":"1.78618E+11","2012Q2 [YR2012Q2]":"1.76338E+11","2012Q3 [YR2012Q3]":"1.88397E+11","2012Q4 [YR2012Q4]":"1.81509E+11","2013Q1 [YR2013Q1]":"1.83316E+11","2013Q2 [YR2013Q2]":"1.84819E+11","2013Q3 [YR2013Q3]":"2.04205E+11","2013Q4 [YR2013Q4]":"2.03046E+11","2014Q1 [YR2014Q1]":"2.12012E+11","2014Q2 [YR2014Q2]":"2.26797E+11","2014Q3 [YR2014Q3]":"2.34317E+11","2014Q4 [YR2014Q4]":"2.3516E+11","2015Q1 [YR2015Q1]":"2.41105E+11","2015Q2 [YR2015Q2]":"2.4066E+11"},
	{"Country Name":"Jersey","Country Code":"JEY","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Jordan","Country Code":"JOR","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":745000000,"1996Q2 [YR1996Q2]":745000000,"1996Q3 [YR1996Q3]":745000000,"1996Q4 [YR1996Q4]":740000000,"1997Q1 [YR1997Q1]":740000000,"1997Q2 [YR1997Q2]":736000000,"1997Q3 [YR1997Q3]":836000000,"1997Q4 [YR1997Q4]":831000000,"1998Q1 [YR1998Q1]":831000000,"1998Q2 [YR1998Q2]":826000000,"1998Q3 [YR1998Q3]":826000000,"1998Q4 [YR1998Q4]":822000000,"1999Q1 [YR1999Q1]":822000000,"1999Q2 [YR1999Q2]":817000000,"1999Q3 [YR1999Q3]":817000000,"1999Q4 [YR1999Q4]":813000000,"2000Q1 [YR2000Q1]":813000000,"2000Q2 [YR2000Q2]":808000000,"2000Q3 [YR2000Q3]":808000000,"2000Q4 [YR2000Q4]":803000000,"2001Q1 [YR2001Q1]":803000000,"2001Q2 [YR2001Q2]":799000000,"2001Q3 [YR2001Q3]":799000000,"2001Q4 [YR2001Q4]":794000000,"2002Q1 [YR2002Q1]":875000000,"2002Q2 [YR2002Q2]":870000000,"2002Q3 [YR2002Q3]":720000000,"2002Q4 [YR2002Q4]":716000000,"2003Q1 [YR2003Q1]":716000000,"2003Q2 [YR2003Q2]":711000000,"2003Q3 [YR2003Q3]":711000000,"2003Q4 [YR2003Q4]":99000000,"2004Q1 [YR2004Q1]":64000000,"2004Q2 [YR2004Q2]":60000000,"2004Q3 [YR2004Q3]":60000000,"2004Q4 [YR2004Q4]":200000000,"2005Q1 [YR2005Q1]":200000000,"2005Q2 [YR2005Q2]":196000000,"2005Q3 [YR2005Q3]":150000000,"2005Q4 [YR2005Q4]":145000000,"2006Q1 [YR2006Q1]":145000000,"2006Q2 [YR2006Q2]":145000000,"2006Q3 [YR2006Q3]":145000000,"2006Q4 [YR2006Q4]":145000000,"2007Q1 [YR2007Q1]":145000000,"2007Q2 [YR2007Q2]":145000000,"2007Q3 [YR2007Q3]":145000000,"2007Q4 [YR2007Q4]":145000000,"2008Q1 [YR2008Q1]":145000000,"2008Q2 [YR2008Q2]":145000000,"2008Q3 [YR2008Q3]":145000000,"2008Q4 [YR2008Q4]":145000000,"2009Q1 [YR2009Q1]":145000000,"2009Q2 [YR2009Q2]":145000000,"2009Q3 [YR2009Q3]":145000000,"2009Q4 [YR2009Q4]":145000000,"2010Q1 [YR2010Q1]":145000000,"2010Q2 [YR2010Q2]":145000000,"2010Q3 [YR2010Q3]":145000000,"2010Q4 [YR2010Q4]":895000000,"2011Q1 [YR2011Q1]":895000000,"2011Q2 [YR2011Q2]":895000000,"2011Q3 [YR2011Q3]":895000000,"2011Q4 [YR2011Q4]":895000000,"2012Q1 [YR2012Q1]":895000000,"2012Q2 [YR2012Q2]":895000000,"2012Q3 [YR2012Q3]":895000000,"2012Q4 [YR2012Q4]":895000000,"2013Q1 [YR2013Q1]":895000000,"2013Q2 [YR2013Q2]":895000000,"2013Q3 [YR2013Q3]":895000000,"2013Q4 [YR2013Q4]":2145000000,"2014Q1 [YR2014Q1]":2145000000,"2014Q2 [YR2014Q2]":3145000000,"2014Q3 [YR2014Q3]":3145000000,"2014Q4 [YR2014Q4]":3145000000,"2015Q1 [YR2015Q1]":3145000000,"2015Q2 [YR2015Q2]":4645000000},
	{"Country Name":"Kazakhstan","Country Code":"KAZ","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":0,"1996Q2 [YR1996Q2]":0,"1996Q3 [YR1996Q3]":0,"1996Q4 [YR1996Q4]":200000000,"1997Q1 [YR1997Q1]":200000000,"1997Q2 [YR1997Q2]":200000000,"1997Q3 [YR1997Q3]":200000000,"1997Q4 [YR1997Q4]":550000000,"1998Q1 [YR1998Q1]":550000000,"1998Q2 [YR1998Q2]":550000000,"1998Q3 [YR1998Q3]":550000000,"1998Q4 [YR1998Q4]":550000000,"1999Q1 [YR1999Q1]":550000000,"1999Q2 [YR1999Q2]":550000000,"1999Q3 [YR1999Q3]":550000000,"1999Q4 [YR1999Q4]":650000000,"2000Q1 [YR2000Q1]":650000000,"2000Q2 [YR2000Q2]":1000000000,"2000Q3 [YR2000Q3]":1000000000,"2000Q4 [YR2000Q4]":1000000000,"2001Q1 [YR2001Q1]":1000000000,"2001Q2 [YR2001Q2]":1000000000,"2001Q3 [YR2001Q3]":1150000000,"2001Q4 [YR2001Q4]":1150000000,"2002Q1 [YR2002Q1]":1150000000,"2002Q2 [YR2002Q2]":1150000000,"2002Q3 [YR2002Q3]":1150000000,"2002Q4 [YR2002Q4]":900000000,"2003Q1 [YR2003Q1]":900000000,"2003Q2 [YR2003Q2]":1000000000,"2003Q3 [YR2003Q3]":1000000000,"2003Q4 [YR2003Q4]":1000000000,"2004Q1 [YR2004Q1]":1200000000,"2004Q2 [YR2004Q2]":1500000000,"2004Q3 [YR2004Q3]":1500000000,"2004Q4 [YR2004Q4]":1600000000,"2005Q1 [YR2005Q1]":1800000000,"2005Q2 [YR2005Q2]":2400000000,"2005Q3 [YR2005Q3]":2400000000,"2005Q4 [YR2005Q4]":2850000000,"2006Q1 [YR2006Q1]":3271000000,"2006Q2 [YR2006Q2]":3821000000,"2006Q3 [YR2006Q3]":4504000000,"2006Q4 [YR2006Q4]":4798000000,"2007Q1 [YR2007Q1]":4807000000,"2007Q2 [YR2007Q2]":4409000000,"2007Q3 [YR2007Q3]":4454000000,"2007Q4 [YR2007Q4]":5132000000,"2008Q1 [YR2008Q1]":4965000000,"2008Q2 [YR2008Q2]":4691000000,"2008Q3 [YR2008Q3]":4622000000,"2008Q4 [YR2008Q4]":4481000000,"2009Q1 [YR2009Q1]":4109000000,"2009Q2 [YR2009Q2]":4155000000,"2009Q3 [YR2009Q3]":4695000000,"2009Q4 [YR2009Q4]":4778000000,"2010Q1 [YR2010Q1]":4728000000,"2010Q2 [YR2010Q2]":5240000000,"2010Q3 [YR2010Q3]":5323000000,"2010Q4 [YR2010Q4]":9114000000,"2011Q1 [YR2011Q1]":10206000000,"2011Q2 [YR2011Q2]":10479000000,"2011Q3 [YR2011Q3]":9767000000,"2011Q4 [YR2011Q4]":9720000000,"2012Q1 [YR2012Q1]":9755000000,"2012Q2 [YR2012Q2]":9798000000,"2012Q3 [YR2012Q3]":11182000000,"2012Q4 [YR2012Q4]":12955000000,"2013Q1 [YR2013Q1]":13921000000,"2013Q2 [YR2013Q2]":17680000000,"2013Q3 [YR2013Q3]":18179000000,"2013Q4 [YR2013Q4]":18664000000,"2014Q1 [YR2014Q1]":18668000000,"2014Q2 [YR2014Q2]":20544000000,"2014Q3 [YR2014Q3]":19493000000,"2014Q4 [YR2014Q4]":26197000000,"2015Q1 [YR2015Q1]":25462000000,"2015Q2 [YR2015Q2]":24668000000},
	{"Country Name":"Kenya","Country Code":"KEN","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":0,"1996Q2 [YR1996Q2]":0,"1996Q3 [YR1996Q3]":0,"1996Q4 [YR1996Q4]":0,"1997Q1 [YR1997Q1]":0,"1997Q2 [YR1997Q2]":0,"1997Q3 [YR1997Q3]":0,"1997Q4 [YR1997Q4]":10000000,"1998Q1 [YR1998Q1]":10000000,"1998Q2 [YR1998Q2]":5000000,"1998Q3 [YR1998Q3]":5000000,"1998Q4 [YR1998Q4]":0,"1999Q1 [YR1999Q1]":0,"1999Q2 [YR1999Q2]":0,"1999Q3 [YR1999Q3]":0,"1999Q4 [YR1999Q4]":0,"2000Q1 [YR2000Q1]":0,"2000Q2 [YR2000Q2]":0,"2000Q3 [YR2000Q3]":0,"2000Q4 [YR2000Q4]":0,"2001Q1 [YR2001Q1]":0,"2001Q2 [YR2001Q2]":0,"2001Q3 [YR2001Q3]":0,"2001Q4 [YR2001Q4]":0,"2002Q1 [YR2002Q1]":0,"2002Q2 [YR2002Q2]":0,"2002Q3 [YR2002Q3]":0,"2002Q4 [YR2002Q4]":0,"2003Q1 [YR2003Q1]":0,"2003Q2 [YR2003Q2]":0,"2003Q3 [YR2003Q3]":0,"2003Q4 [YR2003Q4]":0,"2004Q1 [YR2004Q1]":0,"2004Q2 [YR2004Q2]":0,"2004Q3 [YR2004Q3]":0,"2004Q4 [YR2004Q4]":0,"2005Q1 [YR2005Q1]":0,"2005Q2 [YR2005Q2]":0,"2005Q3 [YR2005Q3]":0,"2005Q4 [YR2005Q4]":0,"2006Q1 [YR2006Q1]":0,"2006Q2 [YR2006Q2]":0,"2006Q3 [YR2006Q3]":0,"2006Q4 [YR2006Q4]":0,"2007Q1 [YR2007Q1]":0,"2007Q2 [YR2007Q2]":0,"2007Q3 [YR2007Q3]":0,"2007Q4 [YR2007Q4]":0,"2008Q1 [YR2008Q1]":0,"2008Q2 [YR2008Q2]":0,"2008Q3 [YR2008Q3]":0,"2008Q4 [YR2008Q4]":0,"2009Q1 [YR2009Q1]":0,"2009Q2 [YR2009Q2]":0,"2009Q3 [YR2009Q3]":0,"2009Q4 [YR2009Q4]":0,"2010Q1 [YR2010Q1]":0,"2010Q2 [YR2010Q2]":0,"2010Q3 [YR2010Q3]":0,"2010Q4 [YR2010Q4]":0,"2011Q1 [YR2011Q1]":0,"2011Q2 [YR2011Q2]":0,"2011Q3 [YR2011Q3]":0,"2011Q4 [YR2011Q4]":0,"2012Q1 [YR2012Q1]":0,"2012Q2 [YR2012Q2]":0,"2012Q3 [YR2012Q3]":0,"2012Q4 [YR2012Q4]":0,"2013Q1 [YR2013Q1]":0,"2013Q2 [YR2013Q2]":0,"2013Q3 [YR2013Q3]":0,"2013Q4 [YR2013Q4]":0,"2014Q1 [YR2014Q1]":0,"2014Q2 [YR2014Q2]":2000000000,"2014Q3 [YR2014Q3]":2020000000,"2014Q4 [YR2014Q4]":4280000000,"2015Q1 [YR2015Q1]":4280000000,"2015Q2 [YR2015Q2]":4290000000},
	{"Country Name":"Kiribati","Country Code":"KIR","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Korea, D.P.R. of","Country Code":"PRK","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":0,"1996Q2 [YR1996Q2]":0,"1996Q3 [YR1996Q3]":0,"1996Q4 [YR1996Q4]":0,"1997Q1 [YR1997Q1]":0,"1997Q2 [YR1997Q2]":0,"1997Q3 [YR1997Q3]":0,"1997Q4 [YR1997Q4]":0,"1998Q1 [YR1998Q1]":0,"1998Q2 [YR1998Q2]":0,"1998Q3 [YR1998Q3]":0,"1998Q4 [YR1998Q4]":0,"1999Q1 [YR1999Q1]":0,"1999Q2 [YR1999Q2]":0,"1999Q3 [YR1999Q3]":0,"1999Q4 [YR1999Q4]":0,"2000Q1 [YR2000Q1]":0,"2000Q2 [YR2000Q2]":0,"2000Q3 [YR2000Q3]":0,"2000Q4 [YR2000Q4]":0,"2001Q1 [YR2001Q1]":0,"2001Q2 [YR2001Q2]":0,"2001Q3 [YR2001Q3]":0,"2001Q4 [YR2001Q4]":0,"2002Q1 [YR2002Q1]":0,"2002Q2 [YR2002Q2]":0,"2002Q3 [YR2002Q3]":0,"2002Q4 [YR2002Q4]":0,"2003Q1 [YR2003Q1]":0,"2003Q2 [YR2003Q2]":0,"2003Q3 [YR2003Q3]":0,"2003Q4 [YR2003Q4]":0,"2004Q1 [YR2004Q1]":0,"2004Q2 [YR2004Q2]":0,"2004Q3 [YR2004Q3]":0,"2004Q4 [YR2004Q4]":0,"2005Q1 [YR2005Q1]":0,"2005Q2 [YR2005Q2]":0,"2005Q3 [YR2005Q3]":0,"2005Q4 [YR2005Q4]":0,"2006Q1 [YR2006Q1]":0,"2006Q2 [YR2006Q2]":0,"2006Q3 [YR2006Q3]":0,"2006Q4 [YR2006Q4]":0,"2007Q1 [YR2007Q1]":0,"2007Q2 [YR2007Q2]":0,"2007Q3 [YR2007Q3]":0,"2007Q4 [YR2007Q4]":0,"2008Q1 [YR2008Q1]":0,"2008Q2 [YR2008Q2]":0,"2008Q3 [YR2008Q3]":0,"2008Q4 [YR2008Q4]":0,"2009Q1 [YR2009Q1]":0,"2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Korea, Rep.","Country Code":"KOR","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":28550000000,"1996Q2 [YR1996Q2]":31754000000,"1996Q3 [YR1996Q3]":37248000000,"1996Q4 [YR1996Q4]":41950000000,"1997Q1 [YR1997Q1]":43407000000,"1997Q2 [YR1997Q2]":46367000000,"1997Q3 [YR1997Q3]":49959000000,"1997Q4 [YR1997Q4]":49498000000,"1998Q1 [YR1998Q1]":48364000000,"1998Q2 [YR1998Q2]":51336000000,"1998Q3 [YR1998Q3]":50523000000,"1998Q4 [YR1998Q4]":50757000000,"1999Q1 [YR1999Q1]":49376000000,"1999Q2 [YR1999Q2]":47708000000,"1999Q3 [YR1999Q3]":47062000000,"1999Q4 [YR1999Q4]":47614000000,"2000Q1 [YR2000Q1]":48898000000,"2000Q2 [YR2000Q2]":48325000000,"2000Q3 [YR2000Q3]":47479000000,"2000Q4 [YR2000Q4]":46972000000,"2001Q1 [YR2001Q1]":44895000000,"2001Q2 [YR2001Q2]":44708000000,"2001Q3 [YR2001Q3]":43060000000,"2001Q4 [YR2001Q4]":44376000000,"2002Q1 [YR2002Q1]":42747000000,"2002Q2 [YR2002Q2]":45003000000,"2002Q3 [YR2002Q3]":46127000000,"2002Q4 [YR2002Q4]":47072000000,"2003Q1 [YR2003Q1]":48032000000,"2003Q2 [YR2003Q2]":50563000000,"2003Q3 [YR2003Q3]":53584000000,"2003Q4 [YR2003Q4]":53886000000,"2004Q1 [YR2004Q1]":58169000000,"2004Q2 [YR2004Q2]":61057000000,"2004Q3 [YR2004Q3]":62188000000,"2004Q4 [YR2004Q4]":65058000000,"2005Q1 [YR2005Q1]":67221000000,"2005Q2 [YR2005Q2]":68127000000,"2005Q3 [YR2005Q3]":70579000000,"2005Q4 [YR2005Q4]":74298000000,"2006Q1 [YR2006Q1]":76784000000,"2006Q2 [YR2006Q2]":81331000000,"2006Q3 [YR2006Q3]":85823000000,"2006Q4 [YR2006Q4]":89605000000,"2007Q1 [YR2007Q1]":90752000000,"2007Q2 [YR2007Q2]":"1.00503E+11","2007Q3 [YR2007Q3]":"1.02841E+11","2007Q4 [YR2007Q4]":"1.0509E+11","2008Q1 [YR2008Q1]":"1.0903E+11","2008Q2 [YR2008Q2]":"1.12052E+11","2008Q3 [YR2008Q3]":"1.0835E+11","2008Q4 [YR2008Q4]":"1.02193E+11","2009Q1 [YR2009Q1]":"1.04222E+11","2009Q2 [YR2009Q2]":"1.16517E+11","2009Q3 [YR2009Q3]":"1.23792E+11","2009Q4 [YR2009Q4]":"1.21958E+11","2010Q1 [YR2010Q1]":"1.22258E+11","2010Q2 [YR2010Q2]":"1.22416E+11","2010Q3 [YR2010Q3]":"1.28844E+11","2010Q4 [YR2010Q4]":"1.30864E+11","2011Q1 [YR2011Q1]":"1.37121E+11","2011Q2 [YR2011Q2]":"1.41299E+11","2011Q3 [YR2011Q3]":"1.44465E+11","2011Q4 [YR2011Q4]":"1.47946E+11","2012Q1 [YR2012Q1]":"1.54203E+11","2012Q2 [YR2012Q2]":"1.54548E+11","2012Q3 [YR2012Q3]":"1.6393E+11","2012Q4 [YR2012Q4]":"1.59471E+11","2013Q1 [YR2013Q1]":"1.61749E+11","2013Q2 [YR2013Q2]":"1.55318E+11","2013Q3 [YR2013Q3]":"1.67702E+11","2013Q4 [YR2013Q4]":"1.76394E+11","2014Q1 [YR2014Q1]":"1.79987E+11","2014Q2 [YR2014Q2]":"1.79008E+11","2014Q3 [YR2014Q3]":"1.74292E+11","2014Q4 [YR2014Q4]":"1.78607E+11","2015Q1 [YR2015Q1]":"1.75325E+11","2015Q2 [YR2015Q2]":"1.79954E+11"},
	{"Country Name":"Kosovo","Country Code":"KSV","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Kuwait","Country Code":"KWT","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":0,"1996Q2 [YR1996Q2]":0,"1996Q3 [YR1996Q3]":0,"1996Q4 [YR1996Q4]":0,"1997Q1 [YR1997Q1]":0,"1997Q2 [YR1997Q2]":0,"1997Q3 [YR1997Q3]":0,"1997Q4 [YR1997Q4]":0,"1998Q1 [YR1998Q1]":0,"1998Q2 [YR1998Q2]":0,"1998Q3 [YR1998Q3]":0,"1998Q4 [YR1998Q4]":0,"1999Q1 [YR1999Q1]":0,"1999Q2 [YR1999Q2]":0,"1999Q3 [YR1999Q3]":0,"1999Q4 [YR1999Q4]":0,"2000Q1 [YR2000Q1]":0,"2000Q2 [YR2000Q2]":0,"2000Q3 [YR2000Q3]":0,"2000Q4 [YR2000Q4]":0,"2001Q1 [YR2001Q1]":0,"2001Q2 [YR2001Q2]":0,"2001Q3 [YR2001Q3]":0,"2001Q4 [YR2001Q4]":0,"2002Q1 [YR2002Q1]":450000000,"2002Q2 [YR2002Q2]":450000000,"2002Q3 [YR2002Q3]":750000000,"2002Q4 [YR2002Q4]":750000000,"2003Q1 [YR2003Q1]":750000000,"2003Q2 [YR2003Q2]":750000000,"2003Q3 [YR2003Q3]":750000000,"2003Q4 [YR2003Q4]":950000000,"2004Q1 [YR2004Q1]":950000000,"2004Q2 [YR2004Q2]":950000000,"2004Q3 [YR2004Q3]":950000000,"2004Q4 [YR2004Q4]":1450000000,"2005Q1 [YR2005Q1]":1000000000,"2005Q2 [YR2005Q2]":1500000000,"2005Q3 [YR2005Q3]":2189000000,"2005Q4 [YR2005Q4]":2243000000,"2006Q1 [YR2006Q1]":2790000000,"2006Q2 [YR2006Q2]":2635000000,"2006Q3 [YR2006Q3]":2204000000,"2006Q4 [YR2006Q4]":2454000000,"2007Q1 [YR2007Q1]":2453000000,"2007Q2 [YR2007Q2]":2675000000,"2007Q3 [YR2007Q3]":2317000000,"2007Q4 [YR2007Q4]":2237000000,"2008Q1 [YR2008Q1]":2657000000,"2008Q2 [YR2008Q2]":2607000000,"2008Q3 [YR2008Q3]":2513000000,"2008Q4 [YR2008Q4]":2190000000,"2009Q1 [YR2009Q1]":2126000000,"2009Q2 [YR2009Q2]":2169000000,"2009Q3 [YR2009Q3]":2193000000,"2009Q4 [YR2009Q4]":1688000000,"2010Q1 [YR2010Q1]":1664000000,"2010Q2 [YR2010Q2]":1117000000,"2010Q3 [YR2010Q3]":1589000000,"2010Q4 [YR2010Q4]":1578000000,"2011Q1 [YR2011Q1]":1797000000,"2011Q2 [YR2011Q2]":1230000000,"2011Q3 [YR2011Q3]":1436000000,"2011Q4 [YR2011Q4]":1340000000,"2012Q1 [YR2012Q1]":1366000000,"2012Q2 [YR2012Q2]":1427000000,"2012Q3 [YR2012Q3]":1330000000,"2012Q4 [YR2012Q4]":1275000000,"2013Q1 [YR2013Q1]":1072000000,"2013Q2 [YR2013Q2]":1053000000,"2013Q3 [YR2013Q3]":1070000000,"2013Q4 [YR2013Q4]":1066000000,"2014Q1 [YR2014Q1]":1069000000,"2014Q2 [YR2014Q2]":1080000000,"2014Q3 [YR2014Q3]":1784000000,"2014Q4 [YR2014Q4]":1744000000,"2015Q1 [YR2015Q1]":1708000000,"2015Q2 [YR2015Q2]":2562000000},
	{"Country Name":"Kyrgyz Republic","Country Code":"KGZ","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Laos","Country Code":"LAO","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Latvia","Country Code":"LVA","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":0,"1996Q2 [YR1996Q2]":0,"1996Q3 [YR1996Q3]":0,"1996Q4 [YR1996Q4]":0,"1997Q1 [YR1997Q1]":0,"1997Q2 [YR1997Q2]":0,"1997Q3 [YR1997Q3]":30000000,"1997Q4 [YR1997Q4]":30000000,"1998Q1 [YR1998Q1]":30000000,"1998Q2 [YR1998Q2]":30000000,"1998Q3 [YR1998Q3]":30000000,"1998Q4 [YR1998Q4]":30000000,"1999Q1 [YR1999Q1]":30000000,"1999Q2 [YR1999Q2]":185000000,"1999Q3 [YR1999Q3]":190000000,"1999Q4 [YR1999Q4]":256000000,"2000Q1 [YR2000Q1]":245000000,"2000Q2 [YR2000Q2]":245000000,"2000Q3 [YR2000Q3]":197000000,"2000Q4 [YR2000Q4]":209000000,"2001Q1 [YR2001Q1]":199000000,"2001Q2 [YR2001Q2]":212000000,"2001Q3 [YR2001Q3]":228000000,"2001Q4 [YR2001Q4]":397000000,"2002Q1 [YR2002Q1]":393000000,"2002Q2 [YR2002Q2]":449000000,"2002Q3 [YR2002Q3]":463000000,"2002Q4 [YR2002Q4]":493000000,"2003Q1 [YR2003Q1]":512000000,"2003Q2 [YR2003Q2]":537000000,"2003Q3 [YR2003Q3]":548000000,"2003Q4 [YR2003Q4]":594000000,"2004Q1 [YR2004Q1]":575000000,"2004Q2 [YR2004Q2]":790000000,"2004Q3 [YR2004Q3]":807000000,"2004Q4 [YR2004Q4]":892000000,"2005Q1 [YR2005Q1]":849000000,"2005Q2 [YR2005Q2]":913000000,"2005Q3 [YR2005Q3]":885000000,"2005Q4 [YR2005Q4]":867000000,"2006Q1 [YR2006Q1]":890000000,"2006Q2 [YR2006Q2]":1189000000,"2006Q3 [YR2006Q3]":1184000000,"2006Q4 [YR2006Q4]":1225000000,"2007Q1 [YR2007Q1]":1239000000,"2007Q2 [YR2007Q2]":1215000000,"2007Q3 [YR2007Q3]":1276000000,"2007Q4 [YR2007Q4]":1325000000,"2008Q1 [YR2008Q1]":2056000000,"2008Q2 [YR2008Q2]":1892000000,"2008Q3 [YR2008Q3]":1716000000,"2008Q4 [YR2008Q4]":1392000000,"2009Q1 [YR2009Q1]":1331000000,"2009Q2 [YR2009Q2]":1413000000,"2009Q3 [YR2009Q3]":1464000000,"2009Q4 [YR2009Q4]":1441000000,"2010Q1 [YR2010Q1]":1348000000,"2010Q2 [YR2010Q2]":1227000000,"2010Q3 [YR2010Q3]":1365000000,"2010Q4 [YR2010Q4]":1336000000,"2011Q1 [YR2011Q1]":1421000000,"2011Q2 [YR2011Q2]":1656000000,"2011Q3 [YR2011Q3]":1580000000,"2011Q4 [YR2011Q4]":1535000000,"2012Q1 [YR2012Q1]":2568000000,"2012Q2 [YR2012Q2]":2507000000,"2012Q3 [YR2012Q3]":2534000000,"2012Q4 [YR2012Q4]":3806000000,"2013Q1 [YR2013Q1]":3774000000,"2013Q2 [YR2013Q2]":3796000000,"2013Q3 [YR2013Q3]":3830000000,"2013Q4 [YR2013Q4]":3853000000,"2014Q1 [YR2014Q1]":6611000000,"2014Q2 [YR2014Q2]":7394000000,"2014Q3 [YR2014Q3]":6367000000,"2014Q4 [YR2014Q4]":6265000000,"2015Q1 [YR2015Q1]":5888000000,"2015Q2 [YR2015Q2]":6005000000},
	{"Country Name":"Lebanon","Country Code":"LBN","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":350000000,"1996Q2 [YR1996Q2]":450000000,"1996Q3 [YR1996Q3]":560000000,"1996Q4 [YR1996Q4]":836000000,"1997Q1 [YR1997Q1]":840000000,"1997Q2 [YR1997Q2]":1309000000,"1997Q3 [YR1997Q3]":1407000000,"1997Q4 [YR1997Q4]":2105000000,"1998Q1 [YR1998Q1]":2120000000,"1998Q2 [YR1998Q2]":3123000000,"1998Q3 [YR1998Q3]":3484000000,"1998Q4 [YR1998Q4]":3589000000,"1999Q1 [YR1999Q1]":4099000000,"1999Q2 [YR1999Q2]":4142000000,"1999Q3 [YR1999Q3]":4178000000,"1999Q4 [YR1999Q4]":4705000000,"2000Q1 [YR2000Q1]":4658000000,"2000Q2 [YR2000Q2]":5323000000,"2000Q3 [YR2000Q3]":5537000000,"2000Q4 [YR2000Q4]":6442000000,"2001Q1 [YR2001Q1]":6413000000,"2001Q2 [YR2001Q2]":7429000000,"2001Q3 [YR2001Q3]":8702000000,"2001Q4 [YR2001Q4]":8831000000,"2002Q1 [YR2002Q1]":9823000000,"2002Q2 [YR2002Q2]":10332000000,"2002Q3 [YR2002Q3]":11188000000,"2002Q4 [YR2002Q4]":14471000000,"2003Q1 [YR2003Q1]":15206000000,"2003Q2 [YR2003Q2]":15497000000,"2003Q3 [YR2003Q3]":15105000000,"2003Q4 [YR2003Q4]":15229000000,"2004Q1 [YR2004Q1]":14342000000,"2004Q2 [YR2004Q2]":15551000000,"2004Q3 [YR2004Q3]":16886000000,"2004Q4 [YR2004Q4]":19110000000,"2005Q1 [YR2005Q1]":17892000000,"2005Q2 [YR2005Q2]":20059000000,"2005Q3 [YR2005Q3]":19907000000,"2005Q4 [YR2005Q4]":20889000000,"2006Q1 [YR2006Q1]":21796000000,"2006Q2 [YR2006Q2]":24705000000,"2006Q3 [YR2006Q3]":24500000000,"2006Q4 [YR2006Q4]":24202000000,"2007Q1 [YR2007Q1]":23913000000,"2007Q2 [YR2007Q2]":23930000000,"2007Q3 [YR2007Q3]":24167000000,"2007Q4 [YR2007Q4]":23977000000,"2008Q1 [YR2008Q1]":24062000000,"2008Q2 [YR2008Q2]":24440000000,"2008Q3 [YR2008Q3]":24024000000,"2008Q4 [YR2008Q4]":23996000000,"2009Q1 [YR2009Q1]":26052000000,"2009Q2 [YR2009Q2]":25794000000,"2009Q3 [YR2009Q3]":25468000000,"2009Q4 [YR2009Q4]":23455000000,"2010Q1 [YR2010Q1]":23544000000,"2010Q2 [YR2010Q2]":23384000000,"2010Q3 [YR2010Q3]":23283000000,"2010Q4 [YR2010Q4]":24288000000,"2011Q1 [YR2011Q1]":24861000000,"2011Q2 [YR2011Q2]":25173000000,"2011Q3 [YR2011Q3]":26275000000,"2011Q4 [YR2011Q4]":28849000000,"2012Q1 [YR2012Q1]":28307000000,"2012Q2 [YR2012Q2]":31440000000,"2012Q3 [YR2012Q3]":30671000000,"2012Q4 [YR2012Q4]":34759000000,"2013Q1 [YR2013Q1]":33849000000,"2013Q2 [YR2013Q2]":36374000000,"2013Q3 [YR2013Q3]":36586000000,"2013Q4 [YR2013Q4]":36612000000,"2014Q1 [YR2014Q1]":36612000000,"2014Q2 [YR2014Q2]":37098000000,"2014Q3 [YR2014Q3]":37003000000,"2014Q4 [YR2014Q4]":36963000000,"2015Q1 [YR2015Q1]":38790000000,"2015Q2 [YR2015Q2]":36329000000},
	{"Country Name":"Lesotho","Country Code":"LSO","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Liberia","Country Code":"LBR","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":0,"1996Q2 [YR1996Q2]":0,"1996Q3 [YR1996Q3]":0,"1996Q4 [YR1996Q4]":0,"1997Q1 [YR1997Q1]":0,"1997Q2 [YR1997Q2]":0,"1997Q3 [YR1997Q3]":0,"1997Q4 [YR1997Q4]":0,"1998Q1 [YR1998Q1]":0,"1998Q2 [YR1998Q2]":0,"1998Q3 [YR1998Q3]":0,"1998Q4 [YR1998Q4]":0,"1999Q1 [YR1999Q1]":0,"1999Q2 [YR1999Q2]":0,"1999Q3 [YR1999Q3]":0,"1999Q4 [YR1999Q4]":0,"2000Q1 [YR2000Q1]":0,"2000Q2 [YR2000Q2]":0,"2000Q3 [YR2000Q3]":0,"2000Q4 [YR2000Q4]":0,"2001Q1 [YR2001Q1]":0,"2001Q2 [YR2001Q2]":0,"2001Q3 [YR2001Q3]":0,"2001Q4 [YR2001Q4]":0,"2002Q1 [YR2002Q1]":0,"2002Q2 [YR2002Q2]":0,"2002Q3 [YR2002Q3]":0,"2002Q4 [YR2002Q4]":0,"2003Q1 [YR2003Q1]":0,"2003Q2 [YR2003Q2]":0,"2003Q3 [YR2003Q3]":0,"2003Q4 [YR2003Q4]":0,"2004Q1 [YR2004Q1]":0,"2004Q2 [YR2004Q2]":0,"2004Q3 [YR2004Q3]":0,"2004Q4 [YR2004Q4]":0,"2005Q1 [YR2005Q1]":0,"2005Q2 [YR2005Q2]":0,"2005Q3 [YR2005Q3]":0,"2005Q4 [YR2005Q4]":0,"2006Q1 [YR2006Q1]":0,"2006Q2 [YR2006Q2]":0,"2006Q3 [YR2006Q3]":0,"2006Q4 [YR2006Q4]":0,"2007Q1 [YR2007Q1]":0,"2007Q2 [YR2007Q2]":0,"2007Q3 [YR2007Q3]":0,"2007Q4 [YR2007Q4]":150000000,"2008Q1 [YR2008Q1]":150000000,"2008Q2 [YR2008Q2]":150000000,"2008Q3 [YR2008Q3]":150000000,"2008Q4 [YR2008Q4]":150000000,"2009Q1 [YR2009Q1]":150000000,"2009Q2 [YR2009Q2]":150000000,"2009Q3 [YR2009Q3]":150000000,"2009Q4 [YR2009Q4]":150000000,"2010Q1 [YR2010Q1]":150000000,"2010Q2 [YR2010Q2]":150000000,"2010Q3 [YR2010Q3]":150000000,"2010Q4 [YR2010Q4]":150000000,"2011Q1 [YR2011Q1]":150000000,"2011Q2 [YR2011Q2]":150000000,"2011Q3 [YR2011Q3]":150000000,"2011Q4 [YR2011Q4]":150000000,"2012Q1 [YR2012Q1]":150000000,"2012Q2 [YR2012Q2]":150000000,"2012Q3 [YR2012Q3]":150000000,"2012Q4 [YR2012Q4]":150000000,"2013Q1 [YR2013Q1]":150000000,"2013Q2 [YR2013Q2]":150000000,"2013Q3 [YR2013Q3]":150000000,"2013Q4 [YR2013Q4]":150000000,"2014Q1 [YR2014Q1]":150000000,"2014Q2 [YR2014Q2]":150000000,"2014Q3 [YR2014Q3]":150000000,"2014Q4 [YR2014Q4]":150000000,"2015Q1 [YR2015Q1]":150000000,"2015Q2 [YR2015Q2]":150000000},
	{"Country Name":"Libya","Country Code":"LBY","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Liechtenstein","Country Code":"LIE","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":206000000,"1996Q2 [YR1996Q2]":196000000,"1996Q3 [YR1996Q3]":80000000,"1996Q4 [YR1996Q4]":74000000,"1997Q1 [YR1997Q1]":75000000,"1997Q2 [YR1997Q2]":80000000,"1997Q3 [YR1997Q3]":80000000,"1997Q4 [YR1997Q4]":11000000,"1998Q1 [YR1998Q1]":5000000,"1998Q2 [YR1998Q2]":0,"1998Q3 [YR1998Q3]":0,"1998Q4 [YR1998Q4]":0,"1999Q1 [YR1999Q1]":0,"1999Q2 [YR1999Q2]":0,"1999Q3 [YR1999Q3]":0,"1999Q4 [YR1999Q4]":0,"2000Q1 [YR2000Q1]":0,"2000Q2 [YR2000Q2]":0,"2000Q3 [YR2000Q3]":0,"2000Q4 [YR2000Q4]":0,"2001Q1 [YR2001Q1]":0,"2001Q2 [YR2001Q2]":0,"2001Q3 [YR2001Q3]":0,"2001Q4 [YR2001Q4]":0,"2002Q1 [YR2002Q1]":37000000,"2002Q2 [YR2002Q2]":69000000,"2002Q3 [YR2002Q3]":71000000,"2002Q4 [YR2002Q4]":110000000,"2003Q1 [YR2003Q1]":129000000,"2003Q2 [YR2003Q2]":143000000,"2003Q3 [YR2003Q3]":146000000,"2003Q4 [YR2003Q4]":157000000,"2004Q1 [YR2004Q1]":161000000,"2004Q2 [YR2004Q2]":160000000,"2004Q3 [YR2004Q3]":162000000,"2004Q4 [YR2004Q4]":175000000,"2005Q1 [YR2005Q1]":173000000,"2005Q2 [YR2005Q2]":165000000,"2005Q3 [YR2005Q3]":168000000,"2005Q4 [YR2005Q4]":167000000,"2006Q1 [YR2006Q1]":172000000,"2006Q2 [YR2006Q2]":396000000,"2006Q3 [YR2006Q3]":392000000,"2006Q4 [YR2006Q4]":406000000,"2007Q1 [YR2007Q1]":409000000,"2007Q2 [YR2007Q2]":615000000,"2007Q3 [YR2007Q3]":644000000,"2007Q4 [YR2007Q4]":615000000,"2008Q1 [YR2008Q1]":682000000,"2008Q2 [YR2008Q2]":1005000000,"2008Q3 [YR2008Q3]":923000000,"2008Q4 [YR2008Q4]":945000000,"2009Q1 [YR2009Q1]":939000000,"2009Q2 [YR2009Q2]":1250000000,"2009Q3 [YR2009Q3]":1273000000,"2009Q4 [YR2009Q4]":1269000000,"2010Q1 [YR2010Q1]":1066000000,"2010Q2 [YR2010Q2]":1230000000,"2010Q3 [YR2010Q3]":1357000000,"2010Q4 [YR2010Q4]":1405000000,"2011Q1 [YR2011Q1]":1443000000,"2011Q2 [YR2011Q2]":1258000000,"2011Q3 [YR2011Q3]":1165000000,"2011Q4 [YR2011Q4]":1116000000,"2012Q1 [YR2012Q1]":1163000000,"2012Q2 [YR2012Q2]":523000000,"2012Q3 [YR2012Q3]":802000000,"2012Q4 [YR2012Q4]":818000000,"2013Q1 [YR2013Q1]":1103000000,"2013Q2 [YR2013Q2]":1116000000,"2013Q3 [YR2013Q3]":1160000000,"2013Q4 [YR2013Q4]":1402000000,"2014Q1 [YR2014Q1]":1414000000,"2014Q2 [YR2014Q2]":1067000000,"2014Q3 [YR2014Q3]":992000000,"2014Q4 [YR2014Q4]":960000000,"2015Q1 [YR2015Q1]":977000000,"2015Q2 [YR2015Q2]":1236000000},
	{"Country Name":"Lithuania","Country Code":"LTU","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":60000000,"1996Q2 [YR1996Q2]":60000000,"1996Q3 [YR1996Q3]":110000000,"1996Q4 [YR1996Q4]":110000000,"1997Q1 [YR1997Q1]":110000000,"1997Q2 [YR1997Q2]":110000000,"1997Q3 [YR1997Q3]":310000000,"1997Q4 [YR1997Q4]":200000000,"1998Q1 [YR1998Q1]":200000000,"1998Q2 [YR1998Q2]":200000000,"1998Q3 [YR1998Q3]":200000000,"1998Q4 [YR1998Q4]":200000000,"1999Q1 [YR1999Q1]":415000000,"1999Q2 [YR1999Q2]":407000000,"1999Q3 [YR1999Q3]":467000000,"1999Q4 [YR1999Q4]":702000000,"2000Q1 [YR2000Q1]":916000000,"2000Q2 [YR2000Q2]":937000000,"2000Q3 [YR2000Q3]":978000000,"2000Q4 [YR2000Q4]":1050000000,"2001Q1 [YR2001Q1]":1223000000,"2001Q2 [YR2001Q2]":1186000000,"2001Q3 [YR2001Q3]":1235000000,"2001Q4 [YR2001Q4]":1201000000,"2002Q1 [YR2002Q1]":1192000000,"2002Q2 [YR2002Q2]":1733000000,"2002Q3 [YR2002Q3]":1515000000,"2002Q4 [YR2002Q4]":1612000000,"2003Q1 [YR2003Q1]":2109000000,"2003Q2 [YR2003Q2]":1928000000,"2003Q3 [YR2003Q3]":1918000000,"2003Q4 [YR2003Q4]":2080000000,"2004Q1 [YR2004Q1]":2388000000,"2004Q2 [YR2004Q2]":2375000000,"2004Q3 [YR2004Q3]":2486000000,"2004Q4 [YR2004Q4]":2730000000,"2005Q1 [YR2005Q1]":2954000000,"2005Q2 [YR2005Q2]":2756000000,"2005Q3 [YR2005Q3]":2744000000,"2005Q4 [YR2005Q4]":2742000000,"2006Q1 [YR2006Q1]":3208000000,"2006Q2 [YR2006Q2]":3369000000,"2006Q3 [YR2006Q3]":3355000000,"2006Q4 [YR2006Q4]":4330000000,"2007Q1 [YR2007Q1]":4378000000,"2007Q2 [YR2007Q2]":4675000000,"2007Q3 [YR2007Q3]":4835000000,"2007Q4 [YR2007Q4]":5902000000,"2008Q1 [YR2008Q1]":6019000000,"2008Q2 [YR2008Q2]":6001000000,"2008Q3 [YR2008Q3]":5449000000,"2008Q4 [YR2008Q4]":5408000000,"2009Q1 [YR2009Q1]":5363000000,"2009Q2 [YR2009Q2]":6399000000,"2009Q3 [YR2009Q3]":6628000000,"2009Q4 [YR2009Q4]":8021000000,"2010Q1 [YR2010Q1]":9605000000,"2010Q2 [YR2010Q2]":8847000000,"2010Q3 [YR2010Q3]":10192000000,"2010Q4 [YR2010Q4]":10068000000,"2011Q1 [YR2011Q1]":11183000000,"2011Q2 [YR2011Q2]":11289000000,"2011Q3 [YR2011Q3]":10879000000,"2011Q4 [YR2011Q4]":11336000000,"2012Q1 [YR2012Q1]":13016000000,"2012Q2 [YR2012Q2]":11930000000,"2012Q3 [YR2012Q3]":12056000000,"2012Q4 [YR2012Q4]":12345000000,"2013Q1 [YR2013Q1]":11425000000,"2013Q2 [YR2013Q2]":11513000000,"2013Q3 [YR2013Q3]":11653000000,"2013Q4 [YR2013Q4]":11745000000,"2014Q1 [YR2014Q1]":12435000000,"2014Q2 [YR2014Q2]":11704000000,"2014Q3 [YR2014Q3]":11355000000,"2014Q4 [YR2014Q4]":12425000000,"2015Q1 [YR2015Q1]":10359000000,"2015Q2 [YR2015Q2]":10545000000},
	{"Country Name":"Luxembourg","Country Code":"LUX","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":32472000000,"1996Q2 [YR1996Q2]":35568000000,"1996Q3 [YR1996Q3]":37717000000,"1996Q4 [YR1996Q4]":40248000000,"1997Q1 [YR1997Q1]":38900000000,"1997Q2 [YR1997Q2]":39965000000,"1997Q3 [YR1997Q3]":40467000000,"1997Q4 [YR1997Q4]":40873000000,"1998Q1 [YR1998Q1]":44277000000,"1998Q2 [YR1998Q2]":47825000000,"1998Q3 [YR1998Q3]":46846000000,"1998Q4 [YR1998Q4]":49432000000,"1999Q1 [YR1999Q1]":48185000000,"1999Q2 [YR1999Q2]":49946000000,"1999Q3 [YR1999Q3]":57822000000,"1999Q4 [YR1999Q4]":58419000000,"2000Q1 [YR2000Q1]":56016000000,"2000Q2 [YR2000Q2]":60954000000,"2000Q3 [YR2000Q3]":60875000000,"2000Q4 [YR2000Q4]":70979000000,"2001Q1 [YR2001Q1]":80410000000,"2001Q2 [YR2001Q2]":87531000000,"2001Q3 [YR2001Q3]":98375000000,"2001Q4 [YR2001Q4]":"1.04586E+11","2002Q1 [YR2002Q1]":"1.09326E+11","2002Q2 [YR2002Q2]":"1.30096E+11","2002Q3 [YR2002Q3]":"1.21176E+11","2002Q4 [YR2002Q4]":"1.29109E+11","2003Q1 [YR2003Q1]":"1.34742E+11","2003Q2 [YR2003Q2]":"1.43149E+11","2003Q3 [YR2003Q3]":"1.53038E+11","2003Q4 [YR2003Q4]":"1.90099E+11","2004Q1 [YR2004Q1]":"1.88507E+11","2004Q2 [YR2004Q2]":"1.97361E+11","2004Q3 [YR2004Q3]":"1.99769E+11","2004Q4 [YR2004Q4]":"2.2692E+11","2005Q1 [YR2005Q1]":"2.33391E+11","2005Q2 [YR2005Q2]":"2.41981E+11","2005Q3 [YR2005Q3]":"2.62744E+11","2005Q4 [YR2005Q4]":"2.78566E+11","2006Q1 [YR2006Q1]":"2.94477E+11","2006Q2 [YR2006Q2]":"3.20892E+11","2006Q3 [YR2006Q3]":"3.41118E+11","2006Q4 [YR2006Q4]":"3.74171E+11","2007Q1 [YR2007Q1]":"3.86577E+11","2007Q2 [YR2007Q2]":"4.06304E+11","2007Q3 [YR2007Q3]":"4.3589E+11","2007Q4 [YR2007Q4]":"4.59416E+11","2008Q1 [YR2008Q1]":"4.79101E+11","2008Q2 [YR2008Q2]":"5.05487E+11","2008Q3 [YR2008Q3]":"4.71289E+11","2008Q4 [YR2008Q4]":"4.50021E+11","2009Q1 [YR2009Q1]":"4.30618E+11","2009Q2 [YR2009Q2]":"4.59872E+11","2009Q3 [YR2009Q3]":"4.89528E+11","2009Q4 [YR2009Q4]":"4.92826E+11","2010Q1 [YR2010Q1]":"4.77574E+11","2010Q2 [YR2010Q2]":"4.45479E+11","2010Q3 [YR2010Q3]":"4.70777E+11","2010Q4 [YR2010Q4]":"4.65216E+11","2011Q1 [YR2011Q1]":"4.85849E+11","2011Q2 [YR2011Q2]":"4.96561E+11","2011Q3 [YR2011Q3]":"4.73956E+11","2011Q4 [YR2011Q4]":"4.59815E+11","2012Q1 [YR2012Q1]":"4.92594E+11","2012Q2 [YR2012Q2]":"4.79881E+11","2012Q3 [YR2012Q3]":"4.94009E+11","2012Q4 [YR2012Q4]":"5.08793E+11","2013Q1 [YR2013Q1]":"5.15917E+11","2013Q2 [YR2013Q2]":"5.41687E+11","2013Q3 [YR2013Q3]":"5.58523E+11","2013Q4 [YR2013Q4]":"5.7547E+11","2014Q1 [YR2014Q1]":"5.88815E+11","2014Q2 [YR2014Q2]":"5.98798E+11","2014Q3 [YR2014Q3]":"5.71839E+11","2014Q4 [YR2014Q4]":"5.55197E+11","2015Q1 [YR2015Q1]":"5.53804E+11","2015Q2 [YR2015Q2]":"5.74958E+11"},
	{"Country Name":"Macau SAR, China","Country Code":"MAC","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":155000000,"1996Q2 [YR1996Q2]":155000000,"1996Q3 [YR1996Q3]":155000000,"1996Q4 [YR1996Q4]":155000000,"1997Q1 [YR1997Q1]":155000000,"1997Q2 [YR1997Q2]":155000000,"1997Q3 [YR1997Q3]":155000000,"1997Q4 [YR1997Q4]":155000000,"1998Q1 [YR1998Q1]":155000000,"1998Q2 [YR1998Q2]":155000000,"1998Q3 [YR1998Q3]":155000000,"1998Q4 [YR1998Q4]":155000000,"1999Q1 [YR1999Q1]":155000000,"1999Q2 [YR1999Q2]":155000000,"1999Q3 [YR1999Q3]":155000000,"1999Q4 [YR1999Q4]":154000000,"2000Q1 [YR2000Q1]":154000000,"2000Q2 [YR2000Q2]":154000000,"2000Q3 [YR2000Q3]":154000000,"2000Q4 [YR2000Q4]":154000000,"2001Q1 [YR2001Q1]":154000000,"2001Q2 [YR2001Q2]":77000000,"2001Q3 [YR2001Q3]":77000000,"2001Q4 [YR2001Q4]":77000000,"2002Q1 [YR2002Q1]":77000000,"2002Q2 [YR2002Q2]":0,"2002Q3 [YR2002Q3]":0,"2002Q4 [YR2002Q4]":0,"2003Q1 [YR2003Q1]":0,"2003Q2 [YR2003Q2]":0,"2003Q3 [YR2003Q3]":120000000,"2003Q4 [YR2003Q4]":120000000,"2004Q1 [YR2004Q1]":120000000,"2004Q2 [YR2004Q2]":120000000,"2004Q3 [YR2004Q3]":120000000,"2004Q4 [YR2004Q4]":120000000,"2005Q1 [YR2005Q1]":120000000,"2005Q2 [YR2005Q2]":120000000,"2005Q3 [YR2005Q3]":120000000,"2005Q4 [YR2005Q4]":720000000,"2006Q1 [YR2006Q1]":720000000,"2006Q2 [YR2006Q2]":720000000,"2006Q3 [YR2006Q3]":720000000,"2006Q4 [YR2006Q4]":720000000,"2007Q1 [YR2007Q1]":720000000,"2007Q2 [YR2007Q2]":720000000,"2007Q3 [YR2007Q3]":720000000,"2007Q4 [YR2007Q4]":720000000,"2008Q1 [YR2008Q1]":720000000,"2008Q2 [YR2008Q2]":720000000,"2008Q3 [YR2008Q3]":600000000,"2008Q4 [YR2008Q4]":600000000,"2009Q1 [YR2009Q1]":600000000,"2009Q2 [YR2009Q2]":600000000,"2009Q3 [YR2009Q3]":600000000,"2009Q4 [YR2009Q4]":600000000,"2010Q1 [YR2010Q1]":350000000,"2010Q2 [YR2010Q2]":600000000,"2010Q3 [YR2010Q3]":729000000,"2010Q4 [YR2010Q4]":189000000,"2011Q1 [YR2011Q1]":691000000,"2011Q2 [YR2011Q2]":515000000,"2011Q3 [YR2011Q3]":503000000,"2011Q4 [YR2011Q4]":459000000,"2012Q1 [YR2012Q1]":501000000,"2012Q2 [YR2012Q2]":720000000,"2012Q3 [YR2012Q3]":750000000,"2012Q4 [YR2012Q4]":934000000,"2013Q1 [YR2013Q1]":1871000000,"2013Q2 [YR2013Q2]":1714000000,"2013Q3 [YR2013Q3]":1415000000,"2013Q4 [YR2013Q4]":1615000000,"2014Q1 [YR2014Q1]":1980000000,"2014Q2 [YR2014Q2]":2683000000,"2014Q3 [YR2014Q3]":2914000000,"2014Q4 [YR2014Q4]":2666000000,"2015Q1 [YR2015Q1]":2166000000,"2015Q2 [YR2015Q2]":1996000000},
	{"Country Name":"Macedonia, FYR","Country Code":"MKD","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":0,"1996Q2 [YR1996Q2]":0,"1996Q3 [YR1996Q3]":0,"1996Q4 [YR1996Q4]":0,"1997Q1 [YR1997Q1]":229000000,"1997Q2 [YR1997Q2]":229000000,"1997Q3 [YR1997Q3]":229000000,"1997Q4 [YR1997Q4]":229000000,"1998Q1 [YR1998Q1]":229000000,"1998Q2 [YR1998Q2]":229000000,"1998Q3 [YR1998Q3]":229000000,"1998Q4 [YR1998Q4]":229000000,"1999Q1 [YR1999Q1]":229000000,"1999Q2 [YR1999Q2]":229000000,"1999Q3 [YR1999Q3]":229000000,"1999Q4 [YR1999Q4]":229000000,"2000Q1 [YR2000Q1]":229000000,"2000Q2 [YR2000Q2]":229000000,"2000Q3 [YR2000Q3]":229000000,"2000Q4 [YR2000Q4]":229000000,"2001Q1 [YR2001Q1]":229000000,"2001Q2 [YR2001Q2]":229000000,"2001Q3 [YR2001Q3]":229000000,"2001Q4 [YR2001Q4]":229000000,"2002Q1 [YR2002Q1]":225000000,"2002Q2 [YR2002Q2]":225000000,"2002Q3 [YR2002Q3]":222000000,"2002Q4 [YR2002Q4]":222000000,"2003Q1 [YR2003Q1]":217000000,"2003Q2 [YR2003Q2]":217000000,"2003Q3 [YR2003Q3]":213000000,"2003Q4 [YR2003Q4]":213000000,"2004Q1 [YR2004Q1]":208000000,"2004Q2 [YR2004Q2]":208000000,"2004Q3 [YR2004Q3]":204000000,"2004Q4 [YR2004Q4]":204000000,"2005Q1 [YR2005Q1]":199000000,"2005Q2 [YR2005Q2]":199000000,"2005Q3 [YR2005Q3]":194000000,"2005Q4 [YR2005Q4]":371000000,"2006Q1 [YR2006Q1]":369000000,"2006Q2 [YR2006Q2]":378000000,"2006Q3 [YR2006Q3]":371000000,"2006Q4 [YR2006Q4]":378000000,"2007Q1 [YR2007Q1]":374000000,"2007Q2 [YR2007Q2]":376000000,"2007Q3 [YR2007Q3]":380000000,"2007Q4 [YR2007Q4]":388000000,"2008Q1 [YR2008Q1]":394000000,"2008Q2 [YR2008Q2]":393000000,"2008Q3 [YR2008Q3]":361000000,"2008Q4 [YR2008Q4]":355000000,"2009Q1 [YR2009Q1]":330000000,"2009Q2 [YR2009Q2]":342000000,"2009Q3 [YR2009Q3]":590000000,"2009Q4 [YR2009Q4]":583000000,"2010Q1 [YR2010Q1]":536000000,"2010Q2 [YR2010Q2]":497000000,"2010Q3 [YR2010Q3]":526000000,"2010Q4 [YR2010Q4]":517000000,"2011Q1 [YR2011Q1]":524000000,"2011Q2 [YR2011Q2]":532000000,"2011Q3 [YR2011Q3]":480000000,"2011Q4 [YR2011Q4]":462000000,"2012Q1 [YR2012Q1]":455000000,"2012Q2 [YR2012Q2]":430000000,"2012Q3 [YR2012Q3]":420000000,"2012Q4 [YR2012Q4]":429000000,"2013Q1 [YR2013Q1]":192000000,"2013Q2 [YR2013Q2]":196000000,"2013Q3 [YR2013Q3]":203000000,"2013Q4 [YR2013Q4]":207000000,"2014Q1 [YR2014Q1]":207000000,"2014Q2 [YR2014Q2]":205000000,"2014Q3 [YR2014Q3]":818000000,"2014Q4 [YR2014Q4]":789000000,"2015Q1 [YR2015Q1]":699000000,"2015Q2 [YR2015Q2]":727000000},
	{"Country Name":"Madagascar","Country Code":"MDG","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Malawi","Country Code":"MWI","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Malaysia","Country Code":"MYS","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":7135000000,"1996Q2 [YR1996Q2]":7294000000,"1996Q3 [YR1996Q3]":7422000000,"1996Q4 [YR1996Q4]":9351000000,"1997Q1 [YR1997Q1]":9330000000,"1997Q2 [YR1997Q2]":11262000000,"1997Q3 [YR1997Q3]":11703000000,"1997Q4 [YR1997Q4]":11923000000,"1998Q1 [YR1998Q1]":11393000000,"1998Q2 [YR1998Q2]":11304000000,"1998Q3 [YR1998Q3]":11207000000,"1998Q4 [YR1998Q4]":11463000000,"1999Q1 [YR1999Q1]":11762000000,"1999Q2 [YR1999Q2]":12642000000,"1999Q3 [YR1999Q3]":13550000000,"1999Q4 [YR1999Q4]":13541000000,"2000Q1 [YR2000Q1]":13477000000,"2000Q2 [YR2000Q2]":13649000000,"2000Q3 [YR2000Q3]":13901000000,"2000Q4 [YR2000Q4]":14864000000,"2001Q1 [YR2001Q1]":14662000000,"2001Q2 [YR2001Q2]":15290000000,"2001Q3 [YR2001Q3]":16338000000,"2001Q4 [YR2001Q4]":16049000000,"2002Q1 [YR2002Q1]":17201000000,"2002Q2 [YR2002Q2]":20272000000,"2002Q3 [YR2002Q3]":20636000000,"2002Q4 [YR2002Q4]":21882000000,"2003Q1 [YR2003Q1]":21850000000,"2003Q2 [YR2003Q2]":21991000000,"2003Q3 [YR2003Q3]":21289000000,"2003Q4 [YR2003Q4]":20915000000,"2004Q1 [YR2004Q1]":20900000000,"2004Q2 [YR2004Q2]":20826000000,"2004Q3 [YR2004Q3]":22341000000,"2004Q4 [YR2004Q4]":23008000000,"2005Q1 [YR2005Q1]":23090000000,"2005Q2 [YR2005Q2]":23763000000,"2005Q3 [YR2005Q3]":24178000000,"2005Q4 [YR2005Q4]":23562000000,"2006Q1 [YR2006Q1]":24689000000,"2006Q2 [YR2006Q2]":24546000000,"2006Q3 [YR2006Q3]":24748000000,"2006Q4 [YR2006Q4]":24966000000,"2007Q1 [YR2007Q1]":24803000000,"2007Q2 [YR2007Q2]":23744000000,"2007Q3 [YR2007Q3]":23691000000,"2007Q4 [YR2007Q4]":23900000000,"2008Q1 [YR2008Q1]":25026000000,"2008Q2 [YR2008Q2]":25000000000,"2008Q3 [YR2008Q3]":25295000000,"2008Q4 [YR2008Q4]":24686000000,"2009Q1 [YR2009Q1]":24015000000,"2009Q2 [YR2009Q2]":21259000000,"2009Q3 [YR2009Q3]":24477000000,"2009Q4 [YR2009Q4]":23643000000,"2010Q1 [YR2010Q1]":23996000000,"2010Q2 [YR2010Q2]":25447000000,"2010Q3 [YR2010Q3]":26731000000,"2010Q4 [YR2010Q4]":26513000000,"2011Q1 [YR2011Q1]":26744000000,"2011Q2 [YR2011Q2]":26938000000,"2011Q3 [YR2011Q3]":27053000000,"2011Q4 [YR2011Q4]":26962000000,"2012Q1 [YR2012Q1]":28079000000,"2012Q2 [YR2012Q2]":30906000000,"2012Q3 [YR2012Q3]":32082000000,"2012Q4 [YR2012Q4]":32582000000,"2013Q1 [YR2013Q1]":32437000000,"2013Q2 [YR2013Q2]":35611000000,"2013Q3 [YR2013Q3]":35779000000,"2013Q4 [YR2013Q4]":36468000000,"2014Q1 [YR2014Q1]":37002000000,"2014Q2 [YR2014Q2]":37641000000,"2014Q3 [YR2014Q3]":36595000000,"2014Q4 [YR2014Q4]":38485000000,"2015Q1 [YR2015Q1]":42661000000,"2015Q2 [YR2015Q2]":43720000000},
	{"Country Name":"Maldives","Country Code":"MDV","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Mali","Country Code":"MLI","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Malta","Country Code":"MLT","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":205000000,"1996Q2 [YR1996Q2]":205000000,"1996Q3 [YR1996Q3]":205000000,"1996Q4 [YR1996Q4]":205000000,"1997Q1 [YR1997Q1]":205000000,"1997Q2 [YR1997Q2]":205000000,"1997Q3 [YR1997Q3]":205000000,"1997Q4 [YR1997Q4]":205000000,"1998Q1 [YR1998Q1]":205000000,"1998Q2 [YR1998Q2]":455000000,"1998Q3 [YR1998Q3]":455000000,"1998Q4 [YR1998Q4]":455000000,"1999Q1 [YR1999Q1]":445000000,"1999Q2 [YR1999Q2]":445000000,"1999Q3 [YR1999Q3]":435000000,"1999Q4 [YR1999Q4]":435000000,"2000Q1 [YR2000Q1]":426000000,"2000Q2 [YR2000Q2]":426000000,"2000Q3 [YR2000Q3]":416000000,"2000Q4 [YR2000Q4]":416000000,"2001Q1 [YR2001Q1]":406000000,"2001Q2 [YR2001Q2]":406000000,"2001Q3 [YR2001Q3]":396000000,"2001Q4 [YR2001Q4]":396000000,"2002Q1 [YR2002Q1]":387000000,"2002Q2 [YR2002Q2]":387000000,"2002Q3 [YR2002Q3]":377000000,"2002Q4 [YR2002Q4]":377000000,"2003Q1 [YR2003Q1]":367000000,"2003Q2 [YR2003Q2]":367000000,"2003Q3 [YR2003Q3]":348000000,"2003Q4 [YR2003Q4]":348000000,"2004Q1 [YR2004Q1]":348000000,"2004Q2 [YR2004Q2]":348000000,"2004Q3 [YR2004Q3]":338000000,"2004Q4 [YR2004Q4]":338000000,"2005Q1 [YR2005Q1]":328000000,"2005Q2 [YR2005Q2]":328000000,"2005Q3 [YR2005Q3]":318000000,"2005Q4 [YR2005Q4]":318000000,"2006Q1 [YR2006Q1]":309000000,"2006Q2 [YR2006Q2]":309000000,"2006Q3 [YR2006Q3]":309000000,"2006Q4 [YR2006Q4]":299000000,"2007Q1 [YR2007Q1]":299000000,"2007Q2 [YR2007Q2]":289000000,"2007Q3 [YR2007Q3]":279000000,"2007Q4 [YR2007Q4]":279000000,"2008Q1 [YR2008Q1]":1323000000,"2008Q2 [YR2008Q2]":2729000000,"2008Q3 [YR2008Q3]":1332000000,"2008Q4 [YR2008Q4]":260000000,"2009Q1 [YR2009Q1]":439000000,"2009Q2 [YR2009Q2]":357000000,"2009Q3 [YR2009Q3]":1197000000,"2009Q4 [YR2009Q4]":733000000,"2010Q1 [YR2010Q1]":1309000000,"2010Q2 [YR2010Q2]":797000000,"2010Q3 [YR2010Q3]":899000000,"2010Q4 [YR2010Q4]":925000000,"2011Q1 [YR2011Q1]":1203000000,"2011Q2 [YR2011Q2]":775000000,"2011Q3 [YR2011Q3]":686000000,"2011Q4 [YR2011Q4]":1282000000,"2012Q1 [YR2012Q1]":651000000,"2012Q2 [YR2012Q2]":250000000,"2012Q3 [YR2012Q3]":250000000,"2012Q4 [YR2012Q4]":382000000,"2013Q1 [YR2013Q1]":250000000,"2013Q2 [YR2013Q2]":642000000,"2013Q3 [YR2013Q3]":858000000,"2013Q4 [YR2013Q4]":664000000,"2014Q1 [YR2014Q1]":835000000,"2014Q2 [YR2014Q2]":619000000,"2014Q3 [YR2014Q3]":615000000,"2014Q4 [YR2014Q4]":602000000,"2015Q1 [YR2015Q1]":670000000,"2015Q2 [YR2015Q2]":686000000},
	{"Country Name":"Marshall Islands","Country Code":"MHL","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":0,"1996Q2 [YR1996Q2]":0,"1996Q3 [YR1996Q3]":0,"1996Q4 [YR1996Q4]":0,"1997Q1 [YR1997Q1]":0,"1997Q2 [YR1997Q2]":0,"1997Q3 [YR1997Q3]":0,"1997Q4 [YR1997Q4]":0,"1998Q1 [YR1998Q1]":0,"1998Q2 [YR1998Q2]":0,"1998Q3 [YR1998Q3]":0,"1998Q4 [YR1998Q4]":0,"1999Q1 [YR1999Q1]":0,"1999Q2 [YR1999Q2]":0,"1999Q3 [YR1999Q3]":0,"1999Q4 [YR1999Q4]":0,"2000Q1 [YR2000Q1]":0,"2000Q2 [YR2000Q2]":0,"2000Q3 [YR2000Q3]":0,"2000Q4 [YR2000Q4]":0,"2001Q1 [YR2001Q1]":0,"2001Q2 [YR2001Q2]":0,"2001Q3 [YR2001Q3]":0,"2001Q4 [YR2001Q4]":0,"2002Q1 [YR2002Q1]":0,"2002Q2 [YR2002Q2]":0,"2002Q3 [YR2002Q3]":0,"2002Q4 [YR2002Q4]":0,"2003Q1 [YR2003Q1]":0,"2003Q2 [YR2003Q2]":0,"2003Q3 [YR2003Q3]":0,"2003Q4 [YR2003Q4]":0,"2004Q1 [YR2004Q1]":0,"2004Q2 [YR2004Q2]":0,"2004Q3 [YR2004Q3]":0,"2004Q4 [YR2004Q4]":0,"2005Q1 [YR2005Q1]":0,"2005Q2 [YR2005Q2]":0,"2005Q3 [YR2005Q3]":0,"2005Q4 [YR2005Q4]":0,"2006Q1 [YR2006Q1]":0,"2006Q2 [YR2006Q2]":0,"2006Q3 [YR2006Q3]":0,"2006Q4 [YR2006Q4]":300000000,"2007Q1 [YR2007Q1]":300000000,"2007Q2 [YR2007Q2]":300000000,"2007Q3 [YR2007Q3]":0,"2007Q4 [YR2007Q4]":0,"2008Q1 [YR2008Q1]":0,"2008Q2 [YR2008Q2]":0,"2008Q3 [YR2008Q3]":0,"2008Q4 [YR2008Q4]":0,"2009Q1 [YR2009Q1]":200000000,"2009Q2 [YR2009Q2]":200000000,"2009Q3 [YR2009Q3]":200000000,"2009Q4 [YR2009Q4]":1360000000,"2010Q1 [YR2010Q1]":1360000000,"2010Q2 [YR2010Q2]":1602000000,"2010Q3 [YR2010Q3]":1427000000,"2010Q4 [YR2010Q4]":1930000000,"2011Q1 [YR2011Q1]":2136000000,"2011Q2 [YR2011Q2]":3044000000,"2011Q3 [YR2011Q3]":3035000000,"2011Q4 [YR2011Q4]":3033000000,"2012Q1 [YR2012Q1]":3143000000,"2012Q2 [YR2012Q2]":3250000000,"2012Q3 [YR2012Q3]":3962000000,"2012Q4 [YR2012Q4]":4271000000,"2013Q1 [YR2013Q1]":4558000000,"2013Q2 [YR2013Q2]":4703000000,"2013Q3 [YR2013Q3]":4769000000,"2013Q4 [YR2013Q4]":6066000000,"2014Q1 [YR2014Q1]":8013000000,"2014Q2 [YR2014Q2]":9504000000,"2014Q3 [YR2014Q3]":10032000000,"2014Q4 [YR2014Q4]":9325000000,"2015Q1 [YR2015Q1]":9324000000,"2015Q2 [YR2015Q2]":9772000000},
	{"Country Name":"Martinique","Country Code":"MTQ","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Mauritania","Country Code":"MRT","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Mauritius","Country Code":"MUS","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":150000000,"1996Q2 [YR1996Q2]":150000000,"1996Q3 [YR1996Q3]":150000000,"1996Q4 [YR1996Q4]":150000000,"1997Q1 [YR1997Q1]":150000000,"1997Q2 [YR1997Q2]":150000000,"1997Q3 [YR1997Q3]":1350000000,"1997Q4 [YR1997Q4]":3538000000,"1998Q1 [YR1998Q1]":3350000000,"1998Q2 [YR1998Q2]":3350000000,"1998Q3 [YR1998Q3]":3350000000,"1998Q4 [YR1998Q4]":3350000000,"1999Q1 [YR1999Q1]":3350000000,"1999Q2 [YR1999Q2]":3532000000,"1999Q3 [YR1999Q3]":3692000000,"1999Q4 [YR1999Q4]":3583000000,"2000Q1 [YR2000Q1]":3600000000,"2000Q2 [YR2000Q2]":3606000000,"2000Q3 [YR2000Q3]":3601000000,"2000Q4 [YR2000Q4]":3457000000,"2001Q1 [YR2001Q1]":3463000000,"2001Q2 [YR2001Q2]":3470000000,"2001Q3 [YR2001Q3]":3372000000,"2001Q4 [YR2001Q4]":3372000000,"2002Q1 [YR2002Q1]":3450000000,"2002Q2 [YR2002Q2]":3450000000,"2002Q3 [YR2002Q3]":3450000000,"2002Q4 [YR2002Q4]":3350000000,"2003Q1 [YR2003Q1]":3350000000,"2003Q2 [YR2003Q2]":3600000000,"2003Q3 [YR2003Q3]":3650000000,"2003Q4 [YR2003Q4]":3650000000,"2004Q1 [YR2004Q1]":3650000000,"2004Q2 [YR2004Q2]":3650000000,"2004Q3 [YR2004Q3]":3050000000,"2004Q4 [YR2004Q4]":3050000000,"2005Q1 [YR2005Q1]":3050000000,"2005Q2 [YR2005Q2]":3050000000,"2005Q3 [YR2005Q3]":3050000000,"2005Q4 [YR2005Q4]":3060000000,"2006Q1 [YR2006Q1]":3060000000,"2006Q2 [YR2006Q2]":3077000000,"2006Q3 [YR2006Q3]":3157000000,"2006Q4 [YR2006Q4]":3007000000,"2007Q1 [YR2007Q1]":3077000000,"2007Q2 [YR2007Q2]":3143000000,"2007Q3 [YR2007Q3]":2693000000,"2007Q4 [YR2007Q4]":2525000000,"2008Q1 [YR2008Q1]":2689000000,"2008Q2 [YR2008Q2]":2638000000,"2008Q3 [YR2008Q3]":2439000000,"2008Q4 [YR2008Q4]":2423000000,"2009Q1 [YR2009Q1]":2303000000,"2009Q2 [YR2009Q2]":2319000000,"2009Q3 [YR2009Q3]":2332000000,"2009Q4 [YR2009Q4]":2349000000,"2010Q1 [YR2010Q1]":2190000000,"2010Q2 [YR2010Q2]":1890000000,"2010Q3 [YR2010Q3]":1933000000,"2010Q4 [YR2010Q4]":1928000000,"2011Q1 [YR2011Q1]":1814000000,"2011Q2 [YR2011Q2]":1797000000,"2011Q3 [YR2011Q3]":1789000000,"2011Q4 [YR2011Q4]":1769000000,"2012Q1 [YR2012Q1]":1772000000,"2012Q2 [YR2012Q2]":1735000000,"2012Q3 [YR2012Q3]":2149000000,"2012Q4 [YR2012Q4]":789000000,"2013Q1 [YR2013Q1]":789000000,"2013Q2 [YR2013Q2]":789000000,"2013Q3 [YR2013Q3]":914000000,"2013Q4 [YR2013Q4]":914000000,"2014Q1 [YR2014Q1]":853000000,"2014Q2 [YR2014Q2]":849000000,"2014Q3 [YR2014Q3]":835000000,"2014Q4 [YR2014Q4]":2328000000,"2015Q1 [YR2015Q1]":2316000000,"2015Q2 [YR2015Q2]":2321000000},
	{"Country Name":"Mayotte","Country Code":"MYT","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Mexico","Country Code":"MEX","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":62260000000,"1996Q2 [YR1996Q2]":62325000000,"1996Q3 [YR1996Q3]":69357000000,"1996Q4 [YR1996Q4]":69754000000,"1997Q1 [YR1997Q1]":71430000000,"1997Q2 [YR1997Q2]":76829000000,"1997Q3 [YR1997Q3]":72866000000,"1997Q4 [YR1997Q4]":72344000000,"1998Q1 [YR1998Q1]":73801000000,"1998Q2 [YR1998Q2]":73513000000,"1998Q3 [YR1998Q3]":74828000000,"1998Q4 [YR1998Q4]":74808000000,"1999Q1 [YR1999Q1]":73906000000,"1999Q2 [YR1999Q2]":77890000000,"1999Q3 [YR1999Q3]":79031000000,"1999Q4 [YR1999Q4]":79820000000,"2000Q1 [YR2000Q1]":82139000000,"2000Q2 [YR2000Q2]":81753000000,"2000Q3 [YR2000Q3]":81884000000,"2000Q4 [YR2000Q4]":79584000000,"2001Q1 [YR2001Q1]":83946000000,"2001Q2 [YR2001Q2]":79396000000,"2001Q3 [YR2001Q3]":81518000000,"2001Q4 [YR2001Q4]":75136000000,"2002Q1 [YR2002Q1]":74812000000,"2002Q2 [YR2002Q2]":71377000000,"2002Q3 [YR2002Q3]":70909000000,"2002Q4 [YR2002Q4]":72407000000,"2003Q1 [YR2003Q1]":64496000000,"2003Q2 [YR2003Q2]":61790000000,"2003Q3 [YR2003Q3]":58113000000,"2003Q4 [YR2003Q4]":59966000000,"2004Q1 [YR2004Q1]":60872000000,"2004Q2 [YR2004Q2]":59848000000,"2004Q3 [YR2004Q3]":60190000000,"2004Q4 [YR2004Q4]":61213000000,"2005Q1 [YR2005Q1]":63544000000,"2005Q2 [YR2005Q2]":63521000000,"2005Q3 [YR2005Q3]":63591000000,"2005Q4 [YR2005Q4]":64051000000,"2006Q1 [YR2006Q1]":64972000000,"2006Q2 [YR2006Q2]":64266000000,"2006Q3 [YR2006Q3]":63063000000,"2006Q4 [YR2006Q4]":64288000000,"2007Q1 [YR2007Q1]":63785000000,"2007Q2 [YR2007Q2]":64370000000,"2007Q3 [YR2007Q3]":65369000000,"2007Q4 [YR2007Q4]":67438000000,"2008Q1 [YR2008Q1]":67158000000,"2008Q2 [YR2008Q2]":66608000000,"2008Q3 [YR2008Q3]":64918000000,"2008Q4 [YR2008Q4]":62319000000,"2009Q1 [YR2009Q1]":60524000000,"2009Q2 [YR2009Q2]":64130000000,"2009Q3 [YR2009Q3]":68372000000,"2009Q4 [YR2009Q4]":76680000000,"2010Q1 [YR2010Q1]":80793000000,"2010Q2 [YR2010Q2]":87468000000,"2010Q3 [YR2010Q3]":92398000000,"2010Q4 [YR2010Q4]":92777000000,"2011Q1 [YR2011Q1]":98190000000,"2011Q2 [YR2011Q2]":"1.04091E+11","2011Q3 [YR2011Q3]":"1.08479E+11","2011Q4 [YR2011Q4]":"1.1233E+11","2012Q1 [YR2012Q1]":"1.20314E+11","2012Q2 [YR2012Q2]":"1.21829E+11","2012Q3 [YR2012Q3]":"1.32325E+11","2012Q4 [YR2012Q4]":"1.38483E+11","2013Q1 [YR2013Q1]":"1.41842E+11","2013Q2 [YR2013Q2]":"1.46986E+11","2013Q3 [YR2013Q3]":"1.58353E+11","2013Q4 [YR2013Q4]":"1.73101E+11","2014Q1 [YR2014Q1]":"1.80359E+11","2014Q2 [YR2014Q2]":"1.91201E+11","2014Q3 [YR2014Q3]":"1.91708E+11","2014Q4 [YR2014Q4]":"1.9538E+11","2015Q1 [YR2015Q1]":"1.99957E+11","2015Q2 [YR2015Q2]":"2.09452E+11"},
	{"Country Name":"Micronesia","Country Code":"FSM","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Moldova","Country Code":"MDA","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":0,"1996Q2 [YR1996Q2]":0,"1996Q3 [YR1996Q3]":0,"1996Q4 [YR1996Q4]":30000000,"1997Q1 [YR1997Q1]":30000000,"1997Q2 [YR1997Q2]":105000000,"1997Q3 [YR1997Q3]":105000000,"1997Q4 [YR1997Q4]":105000000,"1998Q1 [YR1998Q1]":105000000,"1998Q2 [YR1998Q2]":105000000,"1998Q3 [YR1998Q3]":105000000,"1998Q4 [YR1998Q4]":75000000,"1999Q1 [YR1999Q1]":75000000,"1999Q2 [YR1999Q2]":75000000,"1999Q3 [YR1999Q3]":75000000,"1999Q4 [YR1999Q4]":75000000,"2000Q1 [YR2000Q1]":75000000,"2000Q2 [YR2000Q2]":75000000,"2000Q3 [YR2000Q3]":75000000,"2000Q4 [YR2000Q4]":75000000,"2001Q1 [YR2001Q1]":75000000,"2001Q2 [YR2001Q2]":75000000,"2001Q3 [YR2001Q3]":75000000,"2001Q4 [YR2001Q4]":75000000,"2002Q1 [YR2002Q1]":75000000,"2002Q2 [YR2002Q2]":0,"2002Q3 [YR2002Q3]":0,"2002Q4 [YR2002Q4]":0,"2003Q1 [YR2003Q1]":0,"2003Q2 [YR2003Q2]":0,"2003Q3 [YR2003Q3]":0,"2003Q4 [YR2003Q4]":0,"2004Q1 [YR2004Q1]":0,"2004Q2 [YR2004Q2]":0,"2004Q3 [YR2004Q3]":0,"2004Q4 [YR2004Q4]":0,"2005Q1 [YR2005Q1]":0,"2005Q2 [YR2005Q2]":0,"2005Q3 [YR2005Q3]":0,"2005Q4 [YR2005Q4]":0,"2006Q1 [YR2006Q1]":0,"2006Q2 [YR2006Q2]":0,"2006Q3 [YR2006Q3]":0,"2006Q4 [YR2006Q4]":0,"2007Q1 [YR2007Q1]":0,"2007Q2 [YR2007Q2]":0,"2007Q3 [YR2007Q3]":0,"2007Q4 [YR2007Q4]":0,"2008Q1 [YR2008Q1]":0,"2008Q2 [YR2008Q2]":0,"2008Q3 [YR2008Q3]":0,"2008Q4 [YR2008Q4]":0,"2009Q1 [YR2009Q1]":0,"2009Q2 [YR2009Q2]":0,"2009Q3 [YR2009Q3]":0,"2009Q4 [YR2009Q4]":0,"2010Q1 [YR2010Q1]":0,"2010Q2 [YR2010Q2]":0,"2010Q3 [YR2010Q3]":0,"2010Q4 [YR2010Q4]":0,"2011Q1 [YR2011Q1]":0,"2011Q2 [YR2011Q2]":0,"2011Q3 [YR2011Q3]":0,"2011Q4 [YR2011Q4]":0,"2012Q1 [YR2012Q1]":0,"2012Q2 [YR2012Q2]":0,"2012Q3 [YR2012Q3]":0,"2012Q4 [YR2012Q4]":0,"2013Q1 [YR2013Q1]":0,"2013Q2 [YR2013Q2]":0,"2013Q3 [YR2013Q3]":0,"2013Q4 [YR2013Q4]":0,"2014Q1 [YR2014Q1]":0,"2014Q2 [YR2014Q2]":0,"2014Q3 [YR2014Q3]":0,"2014Q4 [YR2014Q4]":0,"2015Q1 [YR2015Q1]":0,"2015Q2 [YR2015Q2]":0},
	{"Country Name":"Monaco","Country Code":"MCO","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Mongolia","Country Code":"MNG","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":0,"1996Q2 [YR1996Q2]":0,"1996Q3 [YR1996Q3]":0,"1996Q4 [YR1996Q4]":0,"1997Q1 [YR1997Q1]":0,"1997Q2 [YR1997Q2]":0,"1997Q3 [YR1997Q3]":0,"1997Q4 [YR1997Q4]":0,"1998Q1 [YR1998Q1]":0,"1998Q2 [YR1998Q2]":0,"1998Q3 [YR1998Q3]":0,"1998Q4 [YR1998Q4]":0,"1999Q1 [YR1999Q1]":0,"1999Q2 [YR1999Q2]":0,"1999Q3 [YR1999Q3]":0,"1999Q4 [YR1999Q4]":0,"2000Q1 [YR2000Q1]":0,"2000Q2 [YR2000Q2]":0,"2000Q3 [YR2000Q3]":0,"2000Q4 [YR2000Q4]":0,"2001Q1 [YR2001Q1]":0,"2001Q2 [YR2001Q2]":0,"2001Q3 [YR2001Q3]":0,"2001Q4 [YR2001Q4]":0,"2002Q1 [YR2002Q1]":0,"2002Q2 [YR2002Q2]":100000000,"2002Q3 [YR2002Q3]":100000000,"2002Q4 [YR2002Q4]":100000000,"2003Q1 [YR2003Q1]":100000000,"2003Q2 [YR2003Q2]":100000000,"2003Q3 [YR2003Q3]":100000000,"2003Q4 [YR2003Q4]":100000000,"2004Q1 [YR2004Q1]":100000000,"2004Q2 [YR2004Q2]":100000000,"2004Q3 [YR2004Q3]":100000000,"2004Q4 [YR2004Q4]":100000000,"2005Q1 [YR2005Q1]":100000000,"2005Q2 [YR2005Q2]":100000000,"2005Q3 [YR2005Q3]":100000000,"2005Q4 [YR2005Q4]":100000000,"2006Q1 [YR2006Q1]":100000000,"2006Q2 [YR2006Q2]":100000000,"2006Q3 [YR2006Q3]":100000000,"2006Q4 [YR2006Q4]":100000000,"2007Q1 [YR2007Q1]":175000000,"2007Q2 [YR2007Q2]":175000000,"2007Q3 [YR2007Q3]":175000000,"2007Q4 [YR2007Q4]":175000000,"2008Q1 [YR2008Q1]":175000000,"2008Q2 [YR2008Q2]":175000000,"2008Q3 [YR2008Q3]":175000000,"2008Q4 [YR2008Q4]":175000000,"2009Q1 [YR2009Q1]":175000000,"2009Q2 [YR2009Q2]":175000000,"2009Q3 [YR2009Q3]":175000000,"2009Q4 [YR2009Q4]":175000000,"2010Q1 [YR2010Q1]":100000000,"2010Q2 [YR2010Q2]":100000000,"2010Q3 [YR2010Q3]":100000000,"2010Q4 [YR2010Q4]":275000000,"2011Q1 [YR2011Q1]":275000000,"2011Q2 [YR2011Q2]":275000000,"2011Q3 [YR2011Q3]":275000000,"2011Q4 [YR2011Q4]":295000000,"2012Q1 [YR2012Q1]":875000000,"2012Q2 [YR2012Q2]":875000000,"2012Q3 [YR2012Q3]":1175000000,"2012Q4 [YR2012Q4]":2655000000,"2013Q1 [YR2013Q1]":2655000000,"2013Q2 [YR2013Q2]":2655000000,"2013Q3 [YR2013Q3]":2655000000,"2013Q4 [YR2013Q4]":2810000000,"2014Q1 [YR2014Q1]":2930000000,"2014Q2 [YR2014Q2]":2935000000,"2014Q3 [YR2014Q3]":2913000000,"2014Q4 [YR2014Q4]":2888000000,"2015Q1 [YR2015Q1]":2889000000,"2015Q2 [YR2015Q2]":3544000000},
	{"Country Name":"Montenegro","Country Code":"MNE","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":0,"1996Q2 [YR1996Q2]":0,"1996Q3 [YR1996Q3]":0,"1996Q4 [YR1996Q4]":0,"1997Q1 [YR1997Q1]":0,"1997Q2 [YR1997Q2]":0,"1997Q3 [YR1997Q3]":0,"1997Q4 [YR1997Q4]":0,"1998Q1 [YR1998Q1]":0,"1998Q2 [YR1998Q2]":0,"1998Q3 [YR1998Q3]":0,"1998Q4 [YR1998Q4]":0,"1999Q1 [YR1999Q1]":0,"1999Q2 [YR1999Q2]":0,"1999Q3 [YR1999Q3]":0,"1999Q4 [YR1999Q4]":0,"2000Q1 [YR2000Q1]":0,"2000Q2 [YR2000Q2]":0,"2000Q3 [YR2000Q3]":0,"2000Q4 [YR2000Q4]":0,"2001Q1 [YR2001Q1]":0,"2001Q2 [YR2001Q2]":0,"2001Q3 [YR2001Q3]":0,"2001Q4 [YR2001Q4]":0,"2002Q1 [YR2002Q1]":0,"2002Q2 [YR2002Q2]":0,"2002Q3 [YR2002Q3]":0,"2002Q4 [YR2002Q4]":0,"2003Q1 [YR2003Q1]":0,"2003Q2 [YR2003Q2]":0,"2003Q3 [YR2003Q3]":0,"2003Q4 [YR2003Q4]":0,"2004Q1 [YR2004Q1]":0,"2004Q2 [YR2004Q2]":0,"2004Q3 [YR2004Q3]":0,"2004Q4 [YR2004Q4]":0,"2005Q1 [YR2005Q1]":0,"2005Q2 [YR2005Q2]":0,"2005Q3 [YR2005Q3]":0,"2005Q4 [YR2005Q4]":0,"2006Q1 [YR2006Q1]":0,"2006Q2 [YR2006Q2]":0,"2006Q3 [YR2006Q3]":0,"2006Q4 [YR2006Q4]":0,"2007Q1 [YR2007Q1]":0,"2007Q2 [YR2007Q2]":0,"2007Q3 [YR2007Q3]":0,"2007Q4 [YR2007Q4]":0,"2008Q1 [YR2008Q1]":0,"2008Q2 [YR2008Q2]":0,"2008Q3 [YR2008Q3]":0,"2008Q4 [YR2008Q4]":0,"2009Q1 [YR2009Q1]":0,"2009Q2 [YR2009Q2]":0,"2009Q3 [YR2009Q3]":0,"2009Q4 [YR2009Q4]":0,"2010Q1 [YR2010Q1]":0,"2010Q2 [YR2010Q2]":0,"2010Q3 [YR2010Q3]":273000000,"2010Q4 [YR2010Q4]":267000000,"2011Q1 [YR2011Q1]":284000000,"2011Q2 [YR2011Q2]":549000000,"2011Q3 [YR2011Q3]":513000000,"2011Q4 [YR2011Q4]":492000000,"2012Q1 [YR2012Q1]":508000000,"2012Q2 [YR2012Q2]":478000000,"2012Q3 [YR2012Q3]":491000000,"2012Q4 [YR2012Q4]":501000000,"2013Q1 [YR2013Q1]":487000000,"2013Q2 [YR2013Q2]":497000000,"2013Q3 [YR2013Q3]":513000000,"2013Q4 [YR2013Q4]":634000000,"2014Q1 [YR2014Q1]":634000000,"2014Q2 [YR2014Q2]":1011000000,"2014Q3 [YR2014Q3]":931000000,"2014Q4 [YR2014Q4]":898000000,"2015Q1 [YR2015Q1]":1334000000,"2015Q2 [YR2015Q2]":1387000000},
	{"Country Name":"Montserrat","Country Code":"MSR","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Morocco","Country Code":"MAR","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":0,"1996Q2 [YR1996Q2]":0,"1996Q3 [YR1996Q3]":290000000,"1996Q4 [YR1996Q4]":286000000,"1997Q1 [YR1997Q1]":266000000,"1997Q2 [YR1997Q2]":255000000,"1997Q3 [YR1997Q3]":253000000,"1997Q4 [YR1997Q4]":250000000,"1998Q1 [YR1998Q1]":243000000,"1998Q2 [YR1998Q2]":245000000,"1998Q3 [YR1998Q3]":267000000,"1998Q4 [YR1998Q4]":267000000,"1999Q1 [YR1999Q1]":246000000,"1999Q2 [YR1999Q2]":379000000,"1999Q3 [YR1999Q3]":392000000,"1999Q4 [YR1999Q4]":369000000,"2000Q1 [YR2000Q1]":351000000,"2000Q2 [YR2000Q2]":351000000,"2000Q3 [YR2000Q3]":322000000,"2000Q4 [YR2000Q4]":342000000,"2001Q1 [YR2001Q1]":324000000,"2001Q2 [YR2001Q2]":312000000,"2001Q3 [YR2001Q3]":335000000,"2001Q4 [YR2001Q4]":324000000,"2002Q1 [YR2002Q1]":320000000,"2002Q2 [YR2002Q2]":366000000,"2002Q3 [YR2002Q3]":137000000,"2002Q4 [YR2002Q4]":145000000,"2003Q1 [YR2003Q1]":151000000,"2003Q2 [YR2003Q2]":158000000,"2003Q3 [YR2003Q3]":628000000,"2003Q4 [YR2003Q4]":680000000,"2004Q1 [YR2004Q1]":659000000,"2004Q2 [YR2004Q2]":486000000,"2004Q3 [YR2004Q3]":496000000,"2004Q4 [YR2004Q4]":545000000,"2005Q1 [YR2005Q1]":519000000,"2005Q2 [YR2005Q2]":484000000,"2005Q3 [YR2005Q3]":482000000,"2005Q4 [YR2005Q4]":472000000,"2006Q1 [YR2006Q1]":484000000,"2006Q2 [YR2006Q2]":509000000,"2006Q3 [YR2006Q3]":506000000,"2006Q4 [YR2006Q4]":527000000,"2007Q1 [YR2007Q1]":533000000,"2007Q2 [YR2007Q2]":1215000000,"2007Q3 [YR2007Q3]":1276000000,"2007Q4 [YR2007Q4]":1325000000,"2008Q1 [YR2008Q1]":1423000000,"2008Q2 [YR2008Q2]":1419000000,"2008Q3 [YR2008Q3]":715000000,"2008Q4 [YR2008Q4]":696000000,"2009Q1 [YR2009Q1]":665000000,"2009Q2 [YR2009Q2]":707000000,"2009Q3 [YR2009Q3]":732000000,"2009Q4 [YR2009Q4]":720000000,"2010Q1 [YR2010Q1]":674000000,"2010Q2 [YR2010Q2]":614000000,"2010Q3 [YR2010Q3]":682000000,"2010Q4 [YR2010Q4]":2004000000,"2011Q1 [YR2011Q1]":2131000000,"2011Q2 [YR2011Q2]":2168000000,"2011Q3 [YR2011Q3]":2025000000,"2011Q4 [YR2011Q4]":1941000000,"2012Q1 [YR2012Q1]":2003000000,"2012Q2 [YR2012Q2]":1889000000,"2012Q3 [YR2012Q3]":1940000000,"2012Q4 [YR2012Q4]":3479000000,"2013Q1 [YR2013Q1]":3421000000,"2013Q2 [YR2013Q2]":4212000000,"2013Q3 [YR2013Q3]":4276000000,"2013Q4 [YR2013Q4]":4619000000,"2014Q1 [YR2014Q1]":4618000000,"2014Q2 [YR2014Q2]":7514000000,"2014Q3 [YR2014Q3]":7318000000,"2014Q4 [YR2014Q4]":7206000000,"2015Q1 [YR2015Q1]":6854000000,"2015Q2 [YR2015Q2]":7961000000},
	{"Country Name":"Mozambique","Country Code":"MOZ","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Multilateral lending agencies","Country Code":"MLA","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Myanmar","Country Code":"MMR","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":0,"1996Q2 [YR1996Q2]":0,"1996Q3 [YR1996Q3]":0,"1996Q4 [YR1996Q4]":0,"1997Q1 [YR1997Q1]":0,"1997Q2 [YR1997Q2]":0,"1997Q3 [YR1997Q3]":0,"1997Q4 [YR1997Q4]":0,"1998Q1 [YR1998Q1]":0,"1998Q2 [YR1998Q2]":0,"1998Q3 [YR1998Q3]":0,"1998Q4 [YR1998Q4]":0,"1999Q1 [YR1999Q1]":0,"1999Q2 [YR1999Q2]":0,"1999Q3 [YR1999Q3]":0,"1999Q4 [YR1999Q4]":0,"2000Q1 [YR2000Q1]":0,"2000Q2 [YR2000Q2]":0,"2000Q3 [YR2000Q3]":0,"2000Q4 [YR2000Q4]":0,"2001Q1 [YR2001Q1]":0,"2001Q2 [YR2001Q2]":0,"2001Q3 [YR2001Q3]":0,"2001Q4 [YR2001Q4]":0,"2002Q1 [YR2002Q1]":0,"2002Q2 [YR2002Q2]":0,"2002Q3 [YR2002Q3]":0,"2002Q4 [YR2002Q4]":0,"2003Q1 [YR2003Q1]":0,"2003Q2 [YR2003Q2]":0,"2003Q3 [YR2003Q3]":0,"2003Q4 [YR2003Q4]":0,"2004Q1 [YR2004Q1]":0,"2004Q2 [YR2004Q2]":0,"2004Q3 [YR2004Q3]":0,"2004Q4 [YR2004Q4]":0,"2005Q1 [YR2005Q1]":0,"2005Q2 [YR2005Q2]":0,"2005Q3 [YR2005Q3]":0,"2005Q4 [YR2005Q4]":0,"2006Q1 [YR2006Q1]":0,"2006Q2 [YR2006Q2]":0,"2006Q3 [YR2006Q3]":0,"2006Q4 [YR2006Q4]":0,"2007Q1 [YR2007Q1]":0,"2007Q2 [YR2007Q2]":0,"2007Q3 [YR2007Q3]":0,"2007Q4 [YR2007Q4]":0,"2008Q1 [YR2008Q1]":0,"2008Q2 [YR2008Q2]":0,"2008Q3 [YR2008Q3]":0,"2008Q4 [YR2008Q4]":0,"2009Q1 [YR2009Q1]":0,"2009Q2 [YR2009Q2]":0,"2009Q3 [YR2009Q3]":0,"2009Q4 [YR2009Q4]":0,"2010Q1 [YR2010Q1]":0,"2010Q2 [YR2010Q2]":0,"2010Q3 [YR2010Q3]":0,"2010Q4 [YR2010Q4]":0,"2011Q1 [YR2011Q1]":0,"2011Q2 [YR2011Q2]":0,"2011Q3 [YR2011Q3]":0,"2011Q4 [YR2011Q4]":0,"2012Q1 [YR2012Q1]":0,"2012Q2 [YR2012Q2]":0,"2012Q3 [YR2012Q3]":0,"2012Q4 [YR2012Q4]":0,"2013Q1 [YR2013Q1]":0,"2013Q2 [YR2013Q2]":0,"2013Q3 [YR2013Q3]":0,"2013Q4 [YR2013Q4]":0,"2014Q1 [YR2014Q1]":0,"2014Q2 [YR2014Q2]":0,"2014Q3 [YR2014Q3]":0,"2014Q4 [YR2014Q4]":0,"2015Q1 [YR2015Q1]":0,"2015Q2 [YR2015Q2]":0},
	{"Country Name":"Namibia","Country Code":"NAM","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":0,"1996Q2 [YR1996Q2]":0,"1996Q3 [YR1996Q3]":0,"1996Q4 [YR1996Q4]":0,"1997Q1 [YR1997Q1]":0,"1997Q2 [YR1997Q2]":0,"1997Q3 [YR1997Q3]":0,"1997Q4 [YR1997Q4]":0,"1998Q1 [YR1998Q1]":0,"1998Q2 [YR1998Q2]":0,"1998Q3 [YR1998Q3]":0,"1998Q4 [YR1998Q4]":0,"1999Q1 [YR1999Q1]":0,"1999Q2 [YR1999Q2]":0,"1999Q3 [YR1999Q3]":0,"1999Q4 [YR1999Q4]":0,"2000Q1 [YR2000Q1]":0,"2000Q2 [YR2000Q2]":0,"2000Q3 [YR2000Q3]":0,"2000Q4 [YR2000Q4]":0,"2001Q1 [YR2001Q1]":0,"2001Q2 [YR2001Q2]":0,"2001Q3 [YR2001Q3]":0,"2001Q4 [YR2001Q4]":0,"2002Q1 [YR2002Q1]":0,"2002Q2 [YR2002Q2]":0,"2002Q3 [YR2002Q3]":0,"2002Q4 [YR2002Q4]":0,"2003Q1 [YR2003Q1]":0,"2003Q2 [YR2003Q2]":0,"2003Q3 [YR2003Q3]":0,"2003Q4 [YR2003Q4]":0,"2004Q1 [YR2004Q1]":0,"2004Q2 [YR2004Q2]":0,"2004Q3 [YR2004Q3]":0,"2004Q4 [YR2004Q4]":0,"2005Q1 [YR2005Q1]":0,"2005Q2 [YR2005Q2]":0,"2005Q3 [YR2005Q3]":0,"2005Q4 [YR2005Q4]":0,"2006Q1 [YR2006Q1]":0,"2006Q2 [YR2006Q2]":0,"2006Q3 [YR2006Q3]":0,"2006Q4 [YR2006Q4]":0,"2007Q1 [YR2007Q1]":0,"2007Q2 [YR2007Q2]":0,"2007Q3 [YR2007Q3]":0,"2007Q4 [YR2007Q4]":0,"2008Q1 [YR2008Q1]":0,"2008Q2 [YR2008Q2]":0,"2008Q3 [YR2008Q3]":0,"2008Q4 [YR2008Q4]":0,"2009Q1 [YR2009Q1]":0,"2009Q2 [YR2009Q2]":0,"2009Q3 [YR2009Q3]":0,"2009Q4 [YR2009Q4]":0,"2010Q1 [YR2010Q1]":0,"2010Q2 [YR2010Q2]":0,"2010Q3 [YR2010Q3]":0,"2010Q4 [YR2010Q4]":0,"2011Q1 [YR2011Q1]":0,"2011Q2 [YR2011Q2]":0,"2011Q3 [YR2011Q3]":0,"2011Q4 [YR2011Q4]":500000000,"2012Q1 [YR2012Q1]":500000000,"2012Q2 [YR2012Q2]":500000000,"2012Q3 [YR2012Q3]":500000000,"2012Q4 [YR2012Q4]":500000000,"2013Q1 [YR2013Q1]":500000000,"2013Q2 [YR2013Q2]":500000000,"2013Q3 [YR2013Q3]":500000000,"2013Q4 [YR2013Q4]":500000000,"2014Q1 [YR2014Q1]":500000000,"2014Q2 [YR2014Q2]":500000000,"2014Q3 [YR2014Q3]":500000000,"2014Q4 [YR2014Q4]":500000000,"2015Q1 [YR2015Q1]":500000000,"2015Q2 [YR2015Q2]":500000000},
	{"Country Name":"Nauru","Country Code":"NRU","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":0,"1996Q2 [YR1996Q2]":0,"1996Q3 [YR1996Q3]":0,"1996Q4 [YR1996Q4]":0,"1997Q1 [YR1997Q1]":0,"1997Q2 [YR1997Q2]":0,"1997Q3 [YR1997Q3]":0,"1997Q4 [YR1997Q4]":0,"1998Q1 [YR1998Q1]":0,"1998Q2 [YR1998Q2]":0,"1998Q3 [YR1998Q3]":0,"1998Q4 [YR1998Q4]":0,"1999Q1 [YR1999Q1]":0,"1999Q2 [YR1999Q2]":0,"1999Q3 [YR1999Q3]":0,"1999Q4 [YR1999Q4]":0,"2000Q1 [YR2000Q1]":0,"2000Q2 [YR2000Q2]":0,"2000Q3 [YR2000Q3]":0,"2000Q4 [YR2000Q4]":0,"2001Q1 [YR2001Q1]":0,"2001Q2 [YR2001Q2]":0,"2001Q3 [YR2001Q3]":0,"2001Q4 [YR2001Q4]":0,"2002Q1 [YR2002Q1]":0,"2002Q2 [YR2002Q2]":0,"2002Q3 [YR2002Q3]":0,"2002Q4 [YR2002Q4]":0,"2003Q1 [YR2003Q1]":0,"2003Q2 [YR2003Q2]":0,"2003Q3 [YR2003Q3]":0,"2003Q4 [YR2003Q4]":0,"2004Q1 [YR2004Q1]":0,"2004Q2 [YR2004Q2]":0,"2004Q3 [YR2004Q3]":0,"2004Q4 [YR2004Q4]":0,"2005Q1 [YR2005Q1]":0,"2005Q2 [YR2005Q2]":0,"2005Q3 [YR2005Q3]":0,"2005Q4 [YR2005Q4]":0,"2006Q1 [YR2006Q1]":0,"2006Q2 [YR2006Q2]":0,"2006Q3 [YR2006Q3]":0,"2006Q4 [YR2006Q4]":0,"2007Q1 [YR2007Q1]":0,"2007Q2 [YR2007Q2]":0,"2007Q3 [YR2007Q3]":0,"2007Q4 [YR2007Q4]":0,"2008Q1 [YR2008Q1]":0,"2008Q2 [YR2008Q2]":0,"2008Q3 [YR2008Q3]":0,"2008Q4 [YR2008Q4]":0,"2009Q1 [YR2009Q1]":0,"2009Q2 [YR2009Q2]":0,"2009Q3 [YR2009Q3]":0,"2009Q4 [YR2009Q4]":0,"2010Q1 [YR2010Q1]":0,"2010Q2 [YR2010Q2]":0,"2010Q3 [YR2010Q3]":0,"2010Q4 [YR2010Q4]":0,"2011Q1 [YR2011Q1]":0,"2011Q2 [YR2011Q2]":0,"2011Q3 [YR2011Q3]":0,"2011Q4 [YR2011Q4]":0,"2012Q1 [YR2012Q1]":0,"2012Q2 [YR2012Q2]":0,"2012Q3 [YR2012Q3]":0,"2012Q4 [YR2012Q4]":0,"2013Q1 [YR2013Q1]":0,"2013Q2 [YR2013Q2]":0,"2013Q3 [YR2013Q3]":0,"2013Q4 [YR2013Q4]":0,"2014Q1 [YR2014Q1]":0,"2014Q2 [YR2014Q2]":0,"2014Q3 [YR2014Q3]":0,"2014Q4 [YR2014Q4]":0,"2015Q1 [YR2015Q1]":0,"2015Q2 [YR2015Q2]":0},
	{"Country Name":"Nepal","Country Code":"NPL","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Netherlands","Country Code":"NLD","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"1.90281E+11","1996Q2 [YR1996Q2]":"1.96708E+11","1996Q3 [YR1996Q3]":"2.0324E+11","1996Q4 [YR1996Q4]":"2.07301E+11","1997Q1 [YR1997Q1]":"2.09133E+11","1997Q2 [YR1997Q2]":"2.15792E+11","1997Q3 [YR1997Q3]":"2.25951E+11","1997Q4 [YR1997Q4]":"2.28792E+11","1998Q1 [YR1998Q1]":"2.3726E+11","1998Q2 [YR1998Q2]":"2.55778E+11","1998Q3 [YR1998Q3]":"2.8459E+11","1998Q4 [YR1998Q4]":"2.9716E+11","1999Q1 [YR1999Q1]":"3.04803E+11","1999Q2 [YR1999Q2]":"3.38932E+11","1999Q3 [YR1999Q3]":"3.79699E+11","1999Q4 [YR1999Q4]":"3.82535E+11","2000Q1 [YR2000Q1]":"3.83971E+11","2000Q2 [YR2000Q2]":"4.06044E+11","2000Q3 [YR2000Q3]":"4.17353E+11","2000Q4 [YR2000Q4]":"4.65235E+11","2001Q1 [YR2001Q1]":"4.69088E+11","2001Q2 [YR2001Q2]":"4.79067E+11","2001Q3 [YR2001Q3]":"5.20655E+11","2001Q4 [YR2001Q4]":"5.34329E+11","2002Q1 [YR2002Q1]":"5.46541E+11","2002Q2 [YR2002Q2]":"6.24733E+11","2002Q3 [YR2002Q3]":"6.43617E+11","2002Q4 [YR2002Q4]":"6.91852E+11","2003Q1 [YR2003Q1]":"7.32567E+11","2003Q2 [YR2003Q2]":"7.92699E+11","2003Q3 [YR2003Q3]":"8.20649E+11","2003Q4 [YR2003Q4]":"9.19744E+11","2004Q1 [YR2004Q1]":"9.05126E+11","2004Q2 [YR2004Q2]":"9.17854E+11","2004Q3 [YR2004Q3]":"9.31339E+11","2004Q4 [YR2004Q4]":"1.03063E+12","2005Q1 [YR2005Q1]":"1.01216E+12","2005Q2 [YR2005Q2]":"9.76095E+11","2005Q3 [YR2005Q3]":"9.72146E+11","2005Q4 [YR2005Q4]":"9.98497E+11","2006Q1 [YR2006Q1]":"1.04774E+12","2006Q2 [YR2006Q2]":"1.14705E+12","2006Q3 [YR2006Q3]":"1.17911E+12","2006Q4 [YR2006Q4]":"1.28097E+12","2007Q1 [YR2007Q1]":"1.36183E+12","2007Q2 [YR2007Q2]":"1.43436E+12","2007Q3 [YR2007Q3]":"1.50456E+12","2007Q4 [YR2007Q4]":"1.57646E+12","2008Q1 [YR2008Q1]":"1.6861E+12","2008Q2 [YR2008Q2]":"1.75386E+12","2008Q3 [YR2008Q3]":"1.63488E+12","2008Q4 [YR2008Q4]":"1.61676E+12","2009Q1 [YR2009Q1]":"1.644E+12","2009Q2 [YR2009Q2]":"1.8021E+12","2009Q3 [YR2009Q3]":"1.8819E+12","2009Q4 [YR2009Q4]":"1.87059E+12","2010Q1 [YR2010Q1]":"1.84032E+12","2010Q2 [YR2010Q2]":"1.69306E+12","2010Q3 [YR2010Q3]":"1.91491E+12","2010Q4 [YR2010Q4]":"1.90558E+12","2011Q1 [YR2011Q1]":"2.0119E+12","2011Q2 [YR2011Q2]":"2.06671E+12","2011Q3 [YR2011Q3]":"1.97463E+12","2011Q4 [YR2011Q4]":"1.95911E+12","2012Q1 [YR2012Q1]":"2.05686E+12","2012Q2 [YR2012Q2]":"1.9623E+12","2012Q3 [YR2012Q3]":"2.03908E+12","2012Q4 [YR2012Q4]":"2.0854E+12","2013Q1 [YR2013Q1]":"2.03329E+12","2013Q2 [YR2013Q2]":"2.08762E+12","2013Q3 [YR2013Q3]":"2.16268E+12","2013Q4 [YR2013Q4]":"2.17401E+12","2014Q1 [YR2014Q1]":"2.17921E+12","2014Q2 [YR2014Q2]":"2.17599E+12","2014Q3 [YR2014Q3]":"2.03455E+12","2014Q4 [YR2014Q4]":"1.96981E+12","2015Q1 [YR2015Q1]":"1.813E+12","2015Q2 [YR2015Q2]":"1.88684E+12"},
	{"Country Name":"Netherlands Antilles","Country Code":"ANT","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":63902000000,"1996Q2 [YR1996Q2]":64501000000,"1996Q3 [YR1996Q3]":66410000000,"1996Q4 [YR1996Q4]":68594000000,"1997Q1 [YR1997Q1]":70579000000,"1997Q2 [YR1997Q2]":75457000000,"1997Q3 [YR1997Q3]":76122000000,"1997Q4 [YR1997Q4]":77021000000,"1998Q1 [YR1998Q1]":75511000000,"1998Q2 [YR1998Q2]":75330000000,"1998Q3 [YR1998Q3]":78057000000,"1998Q4 [YR1998Q4]":81053000000,"1999Q1 [YR1999Q1]":79779000000,"1999Q2 [YR1999Q2]":81684000000,"1999Q3 [YR1999Q3]":91801000000,"1999Q4 [YR1999Q4]":88733000000,"2000Q1 [YR2000Q1]":87510000000,"2000Q2 [YR2000Q2]":86641000000,"2000Q3 [YR2000Q3]":81692000000,"2000Q4 [YR2000Q4]":82730000000,"2001Q1 [YR2001Q1]":81006000000,"2001Q2 [YR2001Q2]":79168000000,"2001Q3 [YR2001Q3]":81988000000,"2001Q4 [YR2001Q4]":80633000000,"2002Q1 [YR2002Q1]":80180000000,"2002Q2 [YR2002Q2]":89845000000,"2002Q3 [YR2002Q3]":88060000000,"2002Q4 [YR2002Q4]":90651000000,"2003Q1 [YR2003Q1]":91167000000,"2003Q2 [YR2003Q2]":94343000000,"2003Q3 [YR2003Q3]":96215000000,"2003Q4 [YR2003Q4]":"1.0089E+11","2004Q1 [YR2004Q1]":97854000000,"2004Q2 [YR2004Q2]":"1.00226E+11","2004Q3 [YR2004Q3]":97075000000,"2004Q4 [YR2004Q4]":"1.03088E+11","2005Q1 [YR2005Q1]":"1.03781E+11","2005Q2 [YR2005Q2]":"1.0381E+11","2005Q3 [YR2005Q3]":"1.03709E+11","2005Q4 [YR2005Q4]":"1.0282E+11","2006Q1 [YR2006Q1]":"1.02195E+11","2006Q2 [YR2006Q2]":"1.05805E+11","2006Q3 [YR2006Q3]":"1.07591E+11","2006Q4 [YR2006Q4]":"1.12233E+11","2007Q1 [YR2007Q1]":"1.09528E+11","2007Q2 [YR2007Q2]":"1.15605E+11","2007Q3 [YR2007Q3]":"1.23549E+11","2007Q4 [YR2007Q4]":"1.28287E+11","2008Q1 [YR2008Q1]":"1.32028E+11","2008Q2 [YR2008Q2]":"1.29566E+11","2008Q3 [YR2008Q3]":"1.23317E+11","2008Q4 [YR2008Q4]":"1.18174E+11","2009Q1 [YR2009Q1]":"1.09769E+11","2009Q2 [YR2009Q2]":"1.09107E+11","2009Q3 [YR2009Q3]":"1.08786E+11","2009Q4 [YR2009Q4]":"1.06268E+11","2010Q1 [YR2010Q1]":99934000000,"2010Q2 [YR2010Q2]":93175000000,"2010Q3 [YR2010Q3]":97931000000,"2010Q4 [YR2010Q4]":94465000000,"2011Q1 [YR2011Q1]":99761000000,"2011Q2 [YR2011Q2]":"1.00268E+11","2011Q3 [YR2011Q3]":92624000000,"2011Q4 [YR2011Q4]":83319000000,"2012Q1 [YR2012Q1]":79800000000,"2012Q2 [YR2012Q2]":72819000000,"2012Q3 [YR2012Q3]":71434000000,"2012Q4 [YR2012Q4]":66050000000,"2013Q1 [YR2013Q1]":61733000000,"2013Q2 [YR2013Q2]":58498000000,"2013Q3 [YR2013Q3]":56334000000,"2013Q4 [YR2013Q4]":52802000000,"2014Q1 [YR2014Q1]":50259000000,"2014Q2 [YR2014Q2]":46122000000,"2014Q3 [YR2014Q3]":41600000000,"2014Q4 [YR2014Q4]":37864000000,"2015Q1 [YR2015Q1]":35588000000,"2015Q2 [YR2015Q2]":32559000000},
	{"Country Name":"New Caledonia","Country Code":"NCL","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"New Zealand","Country Code":"NZL","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":9472000000,"1996Q2 [YR1996Q2]":8934000000,"1996Q3 [YR1996Q3]":8167000000,"1996Q4 [YR1996Q4]":8335000000,"1997Q1 [YR1997Q1]":7785000000,"1997Q2 [YR1997Q2]":8208000000,"1997Q3 [YR1997Q3]":7943000000,"1997Q4 [YR1997Q4]":8545000000,"1998Q1 [YR1998Q1]":8626000000,"1998Q2 [YR1998Q2]":7986000000,"1998Q3 [YR1998Q3]":7890000000,"1998Q4 [YR1998Q4]":8281000000,"1999Q1 [YR1999Q1]":8065000000,"1999Q2 [YR1999Q2]":7446000000,"1999Q3 [YR1999Q3]":8106000000,"1999Q4 [YR1999Q4]":7999000000,"2000Q1 [YR2000Q1]":8103000000,"2000Q2 [YR2000Q2]":8443000000,"2000Q3 [YR2000Q3]":7911000000,"2000Q4 [YR2000Q4]":8394000000,"2001Q1 [YR2001Q1]":7961000000,"2001Q2 [YR2001Q2]":8568000000,"2001Q3 [YR2001Q3]":8314000000,"2001Q4 [YR2001Q4]":8336000000,"2002Q1 [YR2002Q1]":8036000000,"2002Q2 [YR2002Q2]":9170000000,"2002Q3 [YR2002Q3]":9342000000,"2002Q4 [YR2002Q4]":8738000000,"2003Q1 [YR2003Q1]":10466000000,"2003Q2 [YR2003Q2]":10551000000,"2003Q3 [YR2003Q3]":9841000000,"2003Q4 [YR2003Q4]":10350000000,"2004Q1 [YR2004Q1]":11788000000,"2004Q2 [YR2004Q2]":12437000000,"2004Q3 [YR2004Q3]":14739000000,"2004Q4 [YR2004Q4]":18754000000,"2005Q1 [YR2005Q1]":19838000000,"2005Q2 [YR2005Q2]":19156000000,"2005Q3 [YR2005Q3]":19084000000,"2005Q4 [YR2005Q4]":18636000000,"2006Q1 [YR2006Q1]":18040000000,"2006Q2 [YR2006Q2]":18771000000,"2006Q3 [YR2006Q3]":18604000000,"2006Q4 [YR2006Q4]":17677000000,"2007Q1 [YR2007Q1]":16294000000,"2007Q2 [YR2007Q2]":16155000000,"2007Q3 [YR2007Q3]":16822000000,"2007Q4 [YR2007Q4]":18914000000,"2008Q1 [YR2008Q1]":20928000000,"2008Q2 [YR2008Q2]":16901000000,"2008Q3 [YR2008Q3]":14081000000,"2008Q4 [YR2008Q4]":12188000000,"2009Q1 [YR2009Q1]":10703000000,"2009Q2 [YR2009Q2]":10923000000,"2009Q3 [YR2009Q3]":8704000000,"2009Q4 [YR2009Q4]":10521000000,"2010Q1 [YR2010Q1]":9192000000,"2010Q2 [YR2010Q2]":9039000000,"2010Q3 [YR2010Q3]":9220000000,"2010Q4 [YR2010Q4]":13007000000,"2011Q1 [YR2011Q1]":15950000000,"2011Q2 [YR2011Q2]":15845000000,"2011Q3 [YR2011Q3]":18498000000,"2011Q4 [YR2011Q4]":19274000000,"2012Q1 [YR2012Q1]":20708000000,"2012Q2 [YR2012Q2]":20314000000,"2012Q3 [YR2012Q3]":22198000000,"2012Q4 [YR2012Q4]":21747000000,"2013Q1 [YR2013Q1]":22133000000,"2013Q2 [YR2013Q2]":22130000000,"2013Q3 [YR2013Q3]":22916000000,"2013Q4 [YR2013Q4]":23663000000,"2014Q1 [YR2014Q1]":20589000000,"2014Q2 [YR2014Q2]":21644000000,"2014Q3 [YR2014Q3]":20890000000,"2014Q4 [YR2014Q4]":20425000000,"2015Q1 [YR2015Q1]":19957000000,"2015Q2 [YR2015Q2]":20219000000},
	{"Country Name":"Nicaragua","Country Code":"NIC","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":5000000,"1996Q2 [YR1996Q2]":5000000,"1996Q3 [YR1996Q3]":5000000,"1996Q4 [YR1996Q4]":5000000,"1997Q1 [YR1997Q1]":5000000,"1997Q2 [YR1997Q2]":5000000,"1997Q3 [YR1997Q3]":5000000,"1997Q4 [YR1997Q4]":5000000,"1998Q1 [YR1998Q1]":5000000,"1998Q2 [YR1998Q2]":5000000,"1998Q3 [YR1998Q3]":5000000,"1998Q4 [YR1998Q4]":5000000,"1999Q1 [YR1999Q1]":5000000,"1999Q2 [YR1999Q2]":5000000,"1999Q3 [YR1999Q3]":5000000,"1999Q4 [YR1999Q4]":5000000,"2000Q1 [YR2000Q1]":5000000,"2000Q2 [YR2000Q2]":5000000,"2000Q3 [YR2000Q3]":5000000,"2000Q4 [YR2000Q4]":5000000,"2001Q1 [YR2001Q1]":5000000,"2001Q2 [YR2001Q2]":5000000,"2001Q3 [YR2001Q3]":5000000,"2001Q4 [YR2001Q4]":5000000,"2002Q1 [YR2002Q1]":0,"2002Q2 [YR2002Q2]":0,"2002Q3 [YR2002Q3]":0,"2002Q4 [YR2002Q4]":0,"2003Q1 [YR2003Q1]":0,"2003Q2 [YR2003Q2]":0,"2003Q3 [YR2003Q3]":0,"2003Q4 [YR2003Q4]":0,"2004Q1 [YR2004Q1]":0,"2004Q2 [YR2004Q2]":0,"2004Q3 [YR2004Q3]":0,"2004Q4 [YR2004Q4]":0,"2005Q1 [YR2005Q1]":0,"2005Q2 [YR2005Q2]":0,"2005Q3 [YR2005Q3]":0,"2005Q4 [YR2005Q4]":0,"2006Q1 [YR2006Q1]":0,"2006Q2 [YR2006Q2]":0,"2006Q3 [YR2006Q3]":0,"2006Q4 [YR2006Q4]":0,"2007Q1 [YR2007Q1]":0,"2007Q2 [YR2007Q2]":0,"2007Q3 [YR2007Q3]":0,"2007Q4 [YR2007Q4]":0,"2008Q1 [YR2008Q1]":0,"2008Q2 [YR2008Q2]":0,"2008Q3 [YR2008Q3]":0,"2008Q4 [YR2008Q4]":0,"2009Q1 [YR2009Q1]":0,"2009Q2 [YR2009Q2]":0,"2009Q3 [YR2009Q3]":0,"2009Q4 [YR2009Q4]":0,"2010Q1 [YR2010Q1]":0,"2010Q2 [YR2010Q2]":0,"2010Q3 [YR2010Q3]":0,"2010Q4 [YR2010Q4]":0,"2011Q1 [YR2011Q1]":0,"2011Q2 [YR2011Q2]":0,"2011Q3 [YR2011Q3]":0,"2011Q4 [YR2011Q4]":0,"2012Q1 [YR2012Q1]":0,"2012Q2 [YR2012Q2]":0,"2012Q3 [YR2012Q3]":0,"2012Q4 [YR2012Q4]":0,"2013Q1 [YR2013Q1]":0,"2013Q2 [YR2013Q2]":0,"2013Q3 [YR2013Q3]":0,"2013Q4 [YR2013Q4]":0,"2014Q1 [YR2014Q1]":0,"2014Q2 [YR2014Q2]":0,"2014Q3 [YR2014Q3]":0,"2014Q4 [YR2014Q4]":0,"2015Q1 [YR2015Q1]":0,"2015Q2 [YR2015Q2]":0},
	{"Country Name":"Niger","Country Code":"NER","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":0,"1996Q2 [YR1996Q2]":0,"1996Q3 [YR1996Q3]":0,"1996Q4 [YR1996Q4]":0,"1997Q1 [YR1997Q1]":0,"1997Q2 [YR1997Q2]":0,"1997Q3 [YR1997Q3]":0,"1997Q4 [YR1997Q4]":0,"1998Q1 [YR1998Q1]":0,"1998Q2 [YR1998Q2]":0,"1998Q3 [YR1998Q3]":0,"1998Q4 [YR1998Q4]":0,"1999Q1 [YR1999Q1]":0,"1999Q2 [YR1999Q2]":0,"1999Q3 [YR1999Q3]":0,"1999Q4 [YR1999Q4]":0,"2000Q1 [YR2000Q1]":0,"2000Q2 [YR2000Q2]":0,"2000Q3 [YR2000Q3]":0,"2000Q4 [YR2000Q4]":0,"2001Q1 [YR2001Q1]":0,"2001Q2 [YR2001Q2]":0,"2001Q3 [YR2001Q3]":0,"2001Q4 [YR2001Q4]":0,"2002Q1 [YR2002Q1]":0,"2002Q2 [YR2002Q2]":0,"2002Q3 [YR2002Q3]":0,"2002Q4 [YR2002Q4]":0,"2003Q1 [YR2003Q1]":0,"2003Q2 [YR2003Q2]":0,"2003Q3 [YR2003Q3]":0,"2003Q4 [YR2003Q4]":0,"2004Q1 [YR2004Q1]":0,"2004Q2 [YR2004Q2]":0,"2004Q3 [YR2004Q3]":0,"2004Q4 [YR2004Q4]":0,"2005Q1 [YR2005Q1]":0,"2005Q2 [YR2005Q2]":0,"2005Q3 [YR2005Q3]":0,"2005Q4 [YR2005Q4]":0,"2006Q1 [YR2006Q1]":0,"2006Q2 [YR2006Q2]":0,"2006Q3 [YR2006Q3]":0,"2006Q4 [YR2006Q4]":0,"2007Q1 [YR2007Q1]":0,"2007Q2 [YR2007Q2]":0,"2007Q3 [YR2007Q3]":0,"2007Q4 [YR2007Q4]":0,"2008Q1 [YR2008Q1]":0,"2008Q2 [YR2008Q2]":0,"2008Q3 [YR2008Q3]":0,"2008Q4 [YR2008Q4]":0,"2009Q1 [YR2009Q1]":0,"2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Nigeria","Country Code":"NGA","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":2051000000,"1996Q2 [YR1996Q2]":2051000000,"1996Q3 [YR1996Q3]":2051000000,"1996Q4 [YR1996Q4]":2051000000,"1997Q1 [YR1997Q1]":2051000000,"1997Q2 [YR1997Q2]":2051000000,"1997Q3 [YR1997Q3]":2051000000,"1997Q4 [YR1997Q4]":2051000000,"1998Q1 [YR1998Q1]":2051000000,"1998Q2 [YR1998Q2]":2051000000,"1998Q3 [YR1998Q3]":2051000000,"1998Q4 [YR1998Q4]":2051000000,"1999Q1 [YR1999Q1]":2051000000,"1999Q2 [YR1999Q2]":2051000000,"1999Q3 [YR1999Q3]":2051000000,"1999Q4 [YR1999Q4]":2051000000,"2000Q1 [YR2000Q1]":2051000000,"2000Q2 [YR2000Q2]":2051000000,"2000Q3 [YR2000Q3]":2051000000,"2000Q4 [YR2000Q4]":2051000000,"2001Q1 [YR2001Q1]":2051000000,"2001Q2 [YR2001Q2]":2051000000,"2001Q3 [YR2001Q3]":2051000000,"2001Q4 [YR2001Q4]":2051000000,"2002Q1 [YR2002Q1]":2051000000,"2002Q2 [YR2002Q2]":2051000000,"2002Q3 [YR2002Q3]":2051000000,"2002Q4 [YR2002Q4]":1450000000,"2003Q1 [YR2003Q1]":1450000000,"2003Q2 [YR2003Q2]":1450000000,"2003Q3 [YR2003Q3]":1450000000,"2003Q4 [YR2003Q4]":1450000000,"2004Q1 [YR2004Q1]":1450000000,"2004Q2 [YR2004Q2]":1450000000,"2004Q3 [YR2004Q3]":1450000000,"2004Q4 [YR2004Q4]":1450000000,"2005Q1 [YR2005Q1]":1450000000,"2005Q2 [YR2005Q2]":1450000000,"2005Q3 [YR2005Q3]":1450000000,"2005Q4 [YR2005Q4]":1450000000,"2006Q1 [YR2006Q1]":1450000000,"2006Q2 [YR2006Q2]":1450000000,"2006Q3 [YR2006Q3]":1450000000,"2006Q4 [YR2006Q4]":0,"2007Q1 [YR2007Q1]":175000000,"2007Q2 [YR2007Q2]":175000000,"2007Q3 [YR2007Q3]":175000000,"2007Q4 [YR2007Q4]":175000000,"2008Q1 [YR2008Q1]":175000000,"2008Q2 [YR2008Q2]":175000000,"2008Q3 [YR2008Q3]":175000000,"2008Q4 [YR2008Q4]":175000000,"2009Q1 [YR2009Q1]":175000000,"2009Q2 [YR2009Q2]":175000000,"2009Q3 [YR2009Q3]":175000000,"2009Q4 [YR2009Q4]":175000000,"2010Q1 [YR2010Q1]":263000000,"2010Q2 [YR2010Q2]":263000000,"2010Q3 [YR2010Q3]":262000000,"2010Q4 [YR2010Q4]":263000000,"2011Q1 [YR2011Q1]":761000000,"2011Q2 [YR2011Q2]":761000000,"2011Q3 [YR2011Q3]":760000000,"2011Q4 [YR2011Q4]":758000000,"2012Q1 [YR2012Q1]":584000000,"2012Q2 [YR2012Q2]":584000000,"2012Q3 [YR2012Q3]":1036000000,"2012Q4 [YR2012Q4]":1036000000,"2013Q1 [YR2013Q1]":1509000000,"2013Q2 [YR2013Q2]":1809000000,"2013Q3 [YR2013Q3]":3109000000,"2013Q4 [YR2013Q4]":3665000000,"2014Q1 [YR2014Q1]":3665000000,"2014Q2 [YR2014Q2]":4805000000,"2014Q3 [YR2014Q3]":6154000000,"2014Q4 [YR2014Q4]":6408000000,"2015Q1 [YR2015Q1]":6259000000,"2015Q2 [YR2015Q2]":7552000000},
	{"Country Name":"Niue","Country Code":"NIU","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Norfolk Island","Country Code":"NFK","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Northern Mariana Islands","Country Code":"MNP","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Norway","Country Code":"NOR","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":20115000000,"1996Q2 [YR1996Q2]":20332000000,"1996Q3 [YR1996Q3]":19518000000,"1996Q4 [YR1996Q4]":19515000000,"1997Q1 [YR1997Q1]":19498000000,"1997Q2 [YR1997Q2]":19414000000,"1997Q3 [YR1997Q3]":22801000000,"1997Q4 [YR1997Q4]":22207000000,"1998Q1 [YR1998Q1]":23723000000,"1998Q2 [YR1998Q2]":27318000000,"1998Q3 [YR1998Q3]":29230000000,"1998Q4 [YR1998Q4]":29665000000,"1999Q1 [YR1999Q1]":31298000000,"1999Q2 [YR1999Q2]":32452000000,"1999Q3 [YR1999Q3]":33580000000,"1999Q4 [YR1999Q4]":32654000000,"2000Q1 [YR2000Q1]":35172000000,"2000Q2 [YR2000Q2]":38370000000,"2000Q3 [YR2000Q3]":39590000000,"2000Q4 [YR2000Q4]":40037000000,"2001Q1 [YR2001Q1]":40185000000,"2001Q2 [YR2001Q2]":41006000000,"2001Q3 [YR2001Q3]":40807000000,"2001Q4 [YR2001Q4]":41116000000,"2002Q1 [YR2002Q1]":42282000000,"2002Q2 [YR2002Q2]":46206000000,"2002Q3 [YR2002Q3]":45151000000,"2002Q4 [YR2002Q4]":48014000000,"2003Q1 [YR2003Q1]":51596000000,"2003Q2 [YR2003Q2]":54886000000,"2003Q3 [YR2003Q3]":58040000000,"2003Q4 [YR2003Q4]":63578000000,"2004Q1 [YR2004Q1]":64208000000,"2004Q2 [YR2004Q2]":66280000000,"2004Q3 [YR2004Q3]":66485000000,"2004Q4 [YR2004Q4]":76035000000,"2005Q1 [YR2005Q1]":75341000000,"2005Q2 [YR2005Q2]":75661000000,"2005Q3 [YR2005Q3]":75727000000,"2005Q4 [YR2005Q4]":78569000000,"2006Q1 [YR2006Q1]":83096000000,"2006Q2 [YR2006Q2]":94318000000,"2006Q3 [YR2006Q3]":"1.01182E+11","2006Q4 [YR2006Q4]":"1.09756E+11","2007Q1 [YR2007Q1]":"1.18076E+11","2007Q2 [YR2007Q2]":"1.20303E+11","2007Q3 [YR2007Q3]":"1.31495E+11","2007Q4 [YR2007Q4]":"1.43496E+11","2008Q1 [YR2008Q1]":"1.65357E+11","2008Q2 [YR2008Q2]":"1.77373E+11","2008Q3 [YR2008Q3]":"1.67642E+11","2008Q4 [YR2008Q4]":"1.64656E+11","2009Q1 [YR2009Q1]":"1.64046E+11","2009Q2 [YR2009Q2]":"1.7506E+11","2009Q3 [YR2009Q3]":"1.84369E+11","2009Q4 [YR2009Q4]":"1.82834E+11","2010Q1 [YR2010Q1]":"1.8485E+11","2010Q2 [YR2010Q2]":"1.82173E+11","2010Q3 [YR2010Q3]":"2.00839E+11","2010Q4 [YR2010Q4]":"2.00138E+11","2011Q1 [YR2011Q1]":"2.25844E+11","2011Q2 [YR2011Q2]":"2.34678E+11","2011Q3 [YR2011Q3]":"2.31894E+11","2011Q4 [YR2011Q4]":"2.38163E+11","2012Q1 [YR2012Q1]":"2.59937E+11","2012Q2 [YR2012Q2]":"2.64903E+11","2012Q3 [YR2012Q3]":"2.7291E+11","2012Q4 [YR2012Q4]":"2.72902E+11","2013Q1 [YR2013Q1]":"2.65668E+11","2013Q2 [YR2013Q2]":"2.73184E+11","2013Q3 [YR2013Q3]":"2.80769E+11","2013Q4 [YR2013Q4]":"2.91327E+11","2014Q1 [YR2014Q1]":"2.93855E+11","2014Q2 [YR2014Q2]":"2.85969E+11","2014Q3 [YR2014Q3]":"2.74567E+11","2014Q4 [YR2014Q4]":"2.68758E+11","2015Q1 [YR2015Q1]":"2.59198E+11","2015Q2 [YR2015Q2]":"2.57027E+11"},
	{"Country Name":"Oman","Country Code":"OMN","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":245000000,"1996Q2 [YR1996Q2]":245000000,"1996Q3 [YR1996Q3]":245000000,"1996Q4 [YR1996Q4]":250000000,"1997Q1 [YR1997Q1]":475000000,"1997Q2 [YR1997Q2]":440000000,"1997Q3 [YR1997Q3]":440000000,"1997Q4 [YR1997Q4]":362000000,"1998Q1 [YR1998Q1]":418000000,"1998Q2 [YR1998Q2]":470000000,"1998Q3 [YR1998Q3]":475000000,"1998Q4 [YR1998Q4]":296000000,"1999Q1 [YR1999Q1]":284000000,"1999Q2 [YR1999Q2]":494000000,"1999Q3 [YR1999Q3]":470000000,"1999Q4 [YR1999Q4]":372000000,"2000Q1 [YR2000Q1]":395000000,"2000Q2 [YR2000Q2]":366000000,"2000Q3 [YR2000Q3]":360000000,"2000Q4 [YR2000Q4]":354000000,"2001Q1 [YR2001Q1]":390000000,"2001Q2 [YR2001Q2]":324000000,"2001Q3 [YR2001Q3]":225000000,"2001Q4 [YR2001Q4]":225000000,"2002Q1 [YR2002Q1]":0,"2002Q2 [YR2002Q2]":0,"2002Q3 [YR2002Q3]":0,"2002Q4 [YR2002Q4]":0,"2003Q1 [YR2003Q1]":0,"2003Q2 [YR2003Q2]":0,"2003Q3 [YR2003Q3]":0,"2003Q4 [YR2003Q4]":0,"2004Q1 [YR2004Q1]":0,"2004Q2 [YR2004Q2]":250000000,"2004Q3 [YR2004Q3]":250000000,"2004Q4 [YR2004Q4]":250000000,"2005Q1 [YR2005Q1]":250000000,"2005Q2 [YR2005Q2]":250000000,"2005Q3 [YR2005Q3]":250000000,"2005Q4 [YR2005Q4]":250000000,"2006Q1 [YR2006Q1]":250000000,"2006Q2 [YR2006Q2]":250000000,"2006Q3 [YR2006Q3]":250000000,"2006Q4 [YR2006Q4]":1200000000,"2007Q1 [YR2007Q1]":1200000000,"2007Q2 [YR2007Q2]":1215000000,"2007Q3 [YR2007Q3]":1215000000,"2007Q4 [YR2007Q4]":1215000000,"2008Q1 [YR2008Q1]":1215000000,"2008Q2 [YR2008Q2]":1215000000,"2008Q3 [YR2008Q3]":1215000000,"2008Q4 [YR2008Q4]":1215000000,"2009Q1 [YR2009Q1]":1215000000,"2009Q2 [YR2009Q2]":965000000,"2009Q3 [YR2009Q3]":965000000,"2009Q4 [YR2009Q4]":965000000,"2010Q1 [YR2010Q1]":965000000,"2010Q2 [YR2010Q2]":965000000,"2010Q3 [YR2010Q3]":965000000,"2010Q4 [YR2010Q4]":965000000,"2011Q1 [YR2011Q1]":965000000,"2011Q2 [YR2011Q2]":965000000,"2011Q3 [YR2011Q3]":965000000,"2011Q4 [YR2011Q4]":940000000,"2012Q1 [YR2012Q1]":966000000,"2012Q2 [YR2012Q2]":951000000,"2012Q3 [YR2012Q3]":951000000,"2012Q4 [YR2012Q4]":977000000,"2013Q1 [YR2013Q1]":1451000000,"2013Q2 [YR2013Q2]":1451000000,"2013Q3 [YR2013Q3]":1451000000,"2013Q4 [YR2013Q4]":1451000000,"2014Q1 [YR2014Q1]":1451000000,"2014Q2 [YR2014Q2]":1451000000,"2014Q3 [YR2014Q3]":1451000000,"2014Q4 [YR2014Q4]":2451000000,"2015Q1 [YR2015Q1]":2451000000,"2015Q2 [YR2015Q2]":3751000000},
	{"Country Name":"Pakistan","Country Code":"PAK","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":289000000,"1996Q2 [YR1996Q2]":436000000,"1996Q3 [YR1996Q3]":535000000,"1996Q4 [YR1996Q4]":531000000,"1997Q1 [YR1997Q1]":676000000,"1997Q2 [YR1997Q2]":982000000,"1997Q3 [YR1997Q3]":978000000,"1997Q4 [YR1997Q4]":972000000,"1998Q1 [YR1998Q1]":971000000,"1998Q2 [YR1998Q2]":966000000,"1998Q3 [YR1998Q3]":969000000,"1998Q4 [YR1998Q4]":982000000,"1999Q1 [YR1999Q1]":978000000,"1999Q2 [YR1999Q2]":978000000,"1999Q3 [YR1999Q3]":989000000,"1999Q4 [YR1999Q4]":1428000000,"2000Q1 [YR2000Q1]":1006000000,"2000Q2 [YR2000Q2]":995000000,"2000Q3 [YR2000Q3]":993000000,"2000Q4 [YR2000Q4]":900000000,"2001Q1 [YR2001Q1]":900000000,"2001Q2 [YR2001Q2]":855000000,"2001Q3 [YR2001Q3]":755000000,"2001Q4 [YR2001Q4]":605000000,"2002Q1 [YR2002Q1]":585000000,"2002Q2 [YR2002Q2]":585000000,"2002Q3 [YR2002Q3]":585000000,"2002Q4 [YR2002Q4]":439000000,"2003Q1 [YR2003Q1]":439000000,"2003Q2 [YR2003Q2]":439000000,"2003Q3 [YR2003Q3]":439000000,"2003Q4 [YR2003Q4]":293000000,"2004Q1 [YR2004Q1]":793000000,"2004Q2 [YR2004Q2]":793000000,"2004Q3 [YR2004Q3]":793000000,"2004Q4 [YR2004Q4]":646000000,"2005Q1 [YR2005Q1]":1246000000,"2005Q2 [YR2005Q2]":1246000000,"2005Q3 [YR2005Q3]":1246000000,"2005Q4 [YR2005Q4]":1100000000,"2006Q1 [YR2006Q1]":1900000000,"2006Q2 [YR2006Q2]":1900000000,"2006Q3 [YR2006Q3]":1900000000,"2006Q4 [YR2006Q4]":2150000000,"2007Q1 [YR2007Q1]":2150000000,"2007Q2 [YR2007Q2]":2900000000,"2007Q3 [YR2007Q3]":2900000000,"2007Q4 [YR2007Q4]":2900000000,"2008Q1 [YR2008Q1]":2900000000,"2008Q2 [YR2008Q2]":2900000000,"2008Q3 [YR2008Q3]":2900000000,"2008Q4 [YR2008Q4]":2900000000,"2009Q1 [YR2009Q1]":2400000000,"2009Q2 [YR2009Q2]":2538000000,"2009Q3 [YR2009Q3]":2538000000,"2009Q4 [YR2009Q4]":2538000000,"2010Q1 [YR2010Q1]":1938000000,"2010Q2 [YR2010Q2]":1938000000,"2010Q3 [YR2010Q3]":1938000000,"2010Q4 [YR2010Q4]":1938000000,"2011Q1 [YR2011Q1]":1938000000,"2011Q2 [YR2011Q2]":1938000000,"2011Q3 [YR2011Q3]":1938000000,"2011Q4 [YR2011Q4]":1938000000,"2012Q1 [YR2012Q1]":1938000000,"2012Q2 [YR2012Q2]":1938000000,"2012Q3 [YR2012Q3]":1938000000,"2012Q4 [YR2012Q4]":1938000000,"2013Q1 [YR2013Q1]":1938000000,"2013Q2 [YR2013Q2]":1938000000,"2013Q3 [YR2013Q3]":1938000000,"2013Q4 [YR2013Q4]":1550000000,"2014Q1 [YR2014Q1]":1550000000,"2014Q2 [YR2014Q2]":3550000000,"2014Q3 [YR2014Q3]":3550000000,"2014Q4 [YR2014Q4]":4550000000,"2015Q1 [YR2015Q1]":4550000000,"2015Q2 [YR2015Q2]":4550000000},
	{"Country Name":"Palau","Country Code":"PLW","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Panama","Country Code":"PAN","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":173000000,"1996Q2 [YR1996Q2]":218000000,"1996Q3 [YR1996Q3]":3503000000,"1996Q4 [YR1996Q4]":3415000000,"1997Q1 [YR1997Q1]":3809000000,"1997Q2 [YR1997Q2]":3817000000,"1997Q3 [YR1997Q3]":4632000000,"1997Q4 [YR1997Q4]":4756000000,"1998Q1 [YR1998Q1]":4755000000,"1998Q2 [YR1998Q2]":5055000000,"1998Q3 [YR1998Q3]":4980000000,"1998Q4 [YR1998Q4]":4366000000,"1999Q1 [YR1999Q1]":4866000000,"1999Q2 [YR1999Q2]":4862000000,"1999Q3 [YR1999Q3]":4861000000,"1999Q4 [YR1999Q4]":4856000000,"2000Q1 [YR2000Q1]":4856000000,"2000Q2 [YR2000Q2]":4826000000,"2000Q3 [YR2000Q3]":5176000000,"2000Q4 [YR2000Q4]":5171000000,"2001Q1 [YR2001Q1]":6186000000,"2001Q2 [YR2001Q2]":6026000000,"2001Q3 [YR2001Q3]":6002000000,"2001Q4 [YR2001Q4]":5634000000,"2002Q1 [YR2002Q1]":5284000000,"2002Q2 [YR2002Q2]":5317000000,"2002Q3 [YR2002Q3]":5410000000,"2002Q4 [YR2002Q4]":5453000000,"2003Q1 [YR2003Q1]":5633000000,"2003Q2 [YR2003Q2]":5643000000,"2003Q3 [YR2003Q3]":5617000000,"2003Q4 [YR2003Q4]":5642000000,"2004Q1 [YR2004Q1]":5817000000,"2004Q2 [YR2004Q2]":5785000000,"2004Q3 [YR2004Q3]":5773000000,"2004Q4 [YR2004Q4]":6405000000,"2005Q1 [YR2005Q1]":6377000000,"2005Q2 [YR2005Q2]":6346000000,"2005Q3 [YR2005Q3]":6741000000,"2005Q4 [YR2005Q4]":7839000000,"2006Q1 [YR2006Q1]":9149000000,"2006Q2 [YR2006Q2]":8538000000,"2006Q3 [YR2006Q3]":8592000000,"2006Q4 [YR2006Q4]":8883000000,"2007Q1 [YR2007Q1]":8883000000,"2007Q2 [YR2007Q2]":9328000000,"2007Q3 [YR2007Q3]":9328000000,"2007Q4 [YR2007Q4]":9805000000,"2008Q1 [YR2008Q1]":9820000000,"2008Q2 [YR2008Q2]":9437000000,"2008Q3 [YR2008Q3]":9436000000,"2008Q4 [YR2008Q4]":9423000000,"2009Q1 [YR2009Q1]":9745000000,"2009Q2 [YR2009Q2]":9748000000,"2009Q3 [YR2009Q3]":9755000000,"2009Q4 [YR2009Q4]":10755000000,"2010Q1 [YR2010Q1]":10758000000,"2010Q2 [YR2010Q2]":10856000000,"2010Q3 [YR2010Q3]":10888000000,"2010Q4 [YR2010Q4]":10749000000,"2011Q1 [YR2011Q1]":10805000000,"2011Q2 [YR2011Q2]":11068000000,"2011Q3 [YR2011Q3]":11912000000,"2011Q4 [YR2011Q4]":12191000000,"2012Q1 [YR2012Q1]":12025000000,"2012Q2 [YR2012Q2]":12415000000,"2012Q3 [YR2012Q3]":12144000000,"2012Q4 [YR2012Q4]":13153000000,"2013Q1 [YR2013Q1]":13429000000,"2013Q2 [YR2013Q2]":14665000000,"2013Q3 [YR2013Q3]":14745000000,"2013Q4 [YR2013Q4]":14995000000,"2014Q1 [YR2014Q1]":15198000000,"2014Q2 [YR2014Q2]":16763000000,"2014Q3 [YR2014Q3]":17951000000,"2014Q4 [YR2014Q4]":17674000000,"2015Q1 [YR2015Q1]":17573000000,"2015Q2 [YR2015Q2]":18035000000},
	{"Country Name":"Papua New Guinea","Country Code":"PNG","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":0,"1996Q2 [YR1996Q2]":0,"1996Q3 [YR1996Q3]":0,"1996Q4 [YR1996Q4]":0,"1997Q1 [YR1997Q1]":0,"1997Q2 [YR1997Q2]":0,"1997Q3 [YR1997Q3]":0,"1997Q4 [YR1997Q4]":0,"1998Q1 [YR1998Q1]":0,"1998Q2 [YR1998Q2]":0,"1998Q3 [YR1998Q3]":0,"1998Q4 [YR1998Q4]":0,"1999Q1 [YR1999Q1]":0,"1999Q2 [YR1999Q2]":0,"1999Q3 [YR1999Q3]":0,"1999Q4 [YR1999Q4]":0,"2000Q1 [YR2000Q1]":0,"2000Q2 [YR2000Q2]":0,"2000Q3 [YR2000Q3]":0,"2000Q4 [YR2000Q4]":0,"2001Q1 [YR2001Q1]":0,"2001Q2 [YR2001Q2]":0,"2001Q3 [YR2001Q3]":0,"2001Q4 [YR2001Q4]":0,"2002Q1 [YR2002Q1]":0,"2002Q2 [YR2002Q2]":0,"2002Q3 [YR2002Q3]":0,"2002Q4 [YR2002Q4]":0,"2003Q1 [YR2003Q1]":0,"2003Q2 [YR2003Q2]":0,"2003Q3 [YR2003Q3]":0,"2003Q4 [YR2003Q4]":0,"2004Q1 [YR2004Q1]":0,"2004Q2 [YR2004Q2]":0,"2004Q3 [YR2004Q3]":0,"2004Q4 [YR2004Q4]":0,"2005Q1 [YR2005Q1]":0,"2005Q2 [YR2005Q2]":0,"2005Q3 [YR2005Q3]":0,"2005Q4 [YR2005Q4]":0,"2006Q1 [YR2006Q1]":0,"2006Q2 [YR2006Q2]":0,"2006Q3 [YR2006Q3]":0,"2006Q4 [YR2006Q4]":0,"2007Q1 [YR2007Q1]":0,"2007Q2 [YR2007Q2]":0,"2007Q3 [YR2007Q3]":0,"2007Q4 [YR2007Q4]":0,"2008Q1 [YR2008Q1]":0,"2008Q2 [YR2008Q2]":0,"2008Q3 [YR2008Q3]":0,"2008Q4 [YR2008Q4]":0,"2009Q1 [YR2009Q1]":0,"2009Q2 [YR2009Q2]":0,"2009Q3 [YR2009Q3]":0,"2009Q4 [YR2009Q4]":0,"2010Q1 [YR2010Q1]":0,"2010Q2 [YR2010Q2]":0,"2010Q3 [YR2010Q3]":0,"2010Q4 [YR2010Q4]":0,"2011Q1 [YR2011Q1]":0,"2011Q2 [YR2011Q2]":0,"2011Q3 [YR2011Q3]":0,"2011Q4 [YR2011Q4]":0,"2012Q1 [YR2012Q1]":0,"2012Q2 [YR2012Q2]":0,"2012Q3 [YR2012Q3]":0,"2012Q4 [YR2012Q4]":0,"2013Q1 [YR2013Q1]":0,"2013Q2 [YR2013Q2]":0,"2013Q3 [YR2013Q3]":0,"2013Q4 [YR2013Q4]":0,"2014Q1 [YR2014Q1]":0,"2014Q2 [YR2014Q2]":0,"2014Q3 [YR2014Q3]":0,"2014Q4 [YR2014Q4]":0,"2015Q1 [YR2015Q1]":0,"2015Q2 [YR2015Q2]":0},
	{"Country Name":"Paraguay","Country Code":"PRY","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":0,"1996Q2 [YR1996Q2]":0,"1996Q3 [YR1996Q3]":0,"1996Q4 [YR1996Q4]":0,"1997Q1 [YR1997Q1]":0,"1997Q2 [YR1997Q2]":0,"1997Q3 [YR1997Q3]":0,"1997Q4 [YR1997Q4]":0,"1998Q1 [YR1998Q1]":0,"1998Q2 [YR1998Q2]":0,"1998Q3 [YR1998Q3]":0,"1998Q4 [YR1998Q4]":0,"1999Q1 [YR1999Q1]":0,"1999Q2 [YR1999Q2]":0,"1999Q3 [YR1999Q3]":0,"1999Q4 [YR1999Q4]":0,"2000Q1 [YR2000Q1]":0,"2000Q2 [YR2000Q2]":0,"2000Q3 [YR2000Q3]":0,"2000Q4 [YR2000Q4]":0,"2001Q1 [YR2001Q1]":0,"2001Q2 [YR2001Q2]":0,"2001Q3 [YR2001Q3]":0,"2001Q4 [YR2001Q4]":0,"2002Q1 [YR2002Q1]":0,"2002Q2 [YR2002Q2]":0,"2002Q3 [YR2002Q3]":0,"2002Q4 [YR2002Q4]":0,"2003Q1 [YR2003Q1]":0,"2003Q2 [YR2003Q2]":0,"2003Q3 [YR2003Q3]":0,"2003Q4 [YR2003Q4]":0,"2004Q1 [YR2004Q1]":0,"2004Q2 [YR2004Q2]":0,"2004Q3 [YR2004Q3]":0,"2004Q4 [YR2004Q4]":0,"2005Q1 [YR2005Q1]":0,"2005Q2 [YR2005Q2]":0,"2005Q3 [YR2005Q3]":0,"2005Q4 [YR2005Q4]":0,"2006Q1 [YR2006Q1]":0,"2006Q2 [YR2006Q2]":0,"2006Q3 [YR2006Q3]":0,"2006Q4 [YR2006Q4]":0,"2007Q1 [YR2007Q1]":0,"2007Q2 [YR2007Q2]":0,"2007Q3 [YR2007Q3]":0,"2007Q4 [YR2007Q4]":0,"2008Q1 [YR2008Q1]":0,"2008Q2 [YR2008Q2]":0,"2008Q3 [YR2008Q3]":0,"2008Q4 [YR2008Q4]":0,"2009Q1 [YR2009Q1]":0,"2009Q2 [YR2009Q2]":0,"2009Q3 [YR2009Q3]":0,"2009Q4 [YR2009Q4]":0,"2010Q1 [YR2010Q1]":0,"2010Q2 [YR2010Q2]":0,"2010Q3 [YR2010Q3]":0,"2010Q4 [YR2010Q4]":0,"2011Q1 [YR2011Q1]":100000000,"2011Q2 [YR2011Q2]":100000000,"2011Q3 [YR2011Q3]":100000000,"2011Q4 [YR2011Q4]":100000000,"2012Q1 [YR2012Q1]":100000000,"2012Q2 [YR2012Q2]":300000000,"2012Q3 [YR2012Q3]":300000000,"2012Q4 [YR2012Q4]":800000000,"2013Q1 [YR2013Q1]":1300000000,"2013Q2 [YR2013Q2]":1300000000,"2013Q3 [YR2013Q3]":1300000000,"2013Q4 [YR2013Q4]":1300000000,"2014Q1 [YR2014Q1]":1600000000,"2014Q2 [YR2014Q2]":1600000000,"2014Q3 [YR2014Q3]":2600000000,"2014Q4 [YR2014Q4]":2600000000,"2015Q1 [YR2015Q1]":2600000000,"2015Q2 [YR2015Q2]":2880000000},
	{"Country Name":"Peru","Country Code":"PER","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":85000000,"1996Q2 [YR1996Q2]":90000000,"1996Q3 [YR1996Q3]":80000000,"1996Q4 [YR1996Q4]":80000000,"1997Q1 [YR1997Q1]":4911000000,"1997Q2 [YR1997Q2]":5021000000,"1997Q3 [YR1997Q3]":5021000000,"1997Q4 [YR1997Q4]":5021000000,"1998Q1 [YR1998Q1]":5026000000,"1998Q2 [YR1998Q2]":5026000000,"1998Q3 [YR1998Q3]":5026000000,"1998Q4 [YR1998Q4]":4435000000,"1999Q1 [YR1999Q1]":4435000000,"1999Q2 [YR1999Q2]":4435000000,"1999Q3 [YR1999Q3]":4435000000,"1999Q4 [YR1999Q4]":4434000000,"2000Q1 [YR2000Q1]":4434000000,"2000Q2 [YR2000Q2]":4434000000,"2000Q3 [YR2000Q3]":4434000000,"2000Q4 [YR2000Q4]":4430000000,"2001Q1 [YR2001Q1]":4430000000,"2001Q2 [YR2001Q2]":4430000000,"2001Q3 [YR2001Q3]":4430000000,"2001Q4 [YR2001Q4]":4430000000,"2002Q1 [YR2002Q1]":5170000000,"2002Q2 [YR2002Q2]":5102000000,"2002Q3 [YR2002Q3]":5102000000,"2002Q4 [YR2002Q4]":4684000000,"2003Q1 [YR2003Q1]":5416000000,"2003Q2 [YR2003Q2]":5416000000,"2003Q3 [YR2003Q3]":5379000000,"2003Q4 [YR2003Q4]":4969000000,"2004Q1 [YR2004Q1]":4969000000,"2004Q2 [YR2004Q2]":5369000000,"2004Q3 [YR2004Q3]":5369000000,"2004Q4 [YR2004Q4]":6254000000,"2005Q1 [YR2005Q1]":6545000000,"2005Q2 [YR2005Q2]":6488000000,"2005Q3 [YR2005Q3]":7235000000,"2005Q4 [YR2005Q4]":7939000000,"2006Q1 [YR2006Q1]":7964000000,"2006Q2 [YR2006Q2]":8010000000,"2006Q3 [YR2006Q3]":8220000000,"2006Q4 [YR2006Q4]":9236000000,"2007Q1 [YR2007Q1]":10664000000,"2007Q2 [YR2007Q2]":10575000000,"2007Q3 [YR2007Q3]":11347000000,"2007Q4 [YR2007Q4]":11450000000,"2008Q1 [YR2008Q1]":10248000000,"2008Q2 [YR2008Q2]":10095000000,"2008Q3 [YR2008Q3]":9994000000,"2008Q4 [YR2008Q4]":9722000000,"2009Q1 [YR2009Q1]":11023000000,"2009Q2 [YR2009Q2]":11191000000,"2009Q3 [YR2009Q3]":12376000000,"2009Q4 [YR2009Q4]":13064000000,"2010Q1 [YR2010Q1]":13608000000,"2010Q2 [YR2010Q2]":14518000000,"2010Q3 [YR2010Q3]":15532000000,"2010Q4 [YR2010Q4]":19112000000,"2011Q1 [YR2011Q1]":20262000000,"2011Q2 [YR2011Q2]":20334000000,"2011Q3 [YR2011Q3]":20335000000,"2011Q4 [YR2011Q4]":20747000000,"2012Q1 [YR2012Q1]":23524000000,"2012Q2 [YR2012Q2]":24833000000,"2012Q3 [YR2012Q3]":26540000000,"2012Q4 [YR2012Q4]":27137000000,"2013Q1 [YR2013Q1]":29202000000,"2013Q2 [YR2013Q2]":31819000000,"2013Q3 [YR2013Q3]":31816000000,"2013Q4 [YR2013Q4]":32467000000,"2014Q1 [YR2014Q1]":33543000000,"2014Q2 [YR2014Q2]":34625000000,"2014Q3 [YR2014Q3]":36300000000,"2014Q4 [YR2014Q4]":40411000000,"2015Q1 [YR2015Q1]":40885000000,"2015Q2 [YR2015Q2]":41801000000},
	{"Country Name":"Philippines","Country Code":"PHL","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":6826000000,"1996Q2 [YR1996Q2]":7380000000,"1996Q3 [YR1996Q3]":7956000000,"1996Q4 [YR1996Q4]":9661000000,"1997Q1 [YR1997Q1]":10583000000,"1997Q2 [YR1997Q2]":11487000000,"1997Q3 [YR1997Q3]":12639000000,"1997Q4 [YR1997Q4]":12267000000,"1998Q1 [YR1998Q1]":13071000000,"1998Q2 [YR1998Q2]":13767000000,"1998Q3 [YR1998Q3]":13391000000,"1998Q4 [YR1998Q4]":12995000000,"1999Q1 [YR1999Q1]":14155000000,"1999Q2 [YR1999Q2]":14887000000,"1999Q3 [YR1999Q3]":15756000000,"1999Q4 [YR1999Q4]":16124000000,"2000Q1 [YR2000Q1]":17647000000,"2000Q2 [YR2000Q2]":17335000000,"2000Q3 [YR2000Q3]":17450000000,"2000Q4 [YR2000Q4]":17085000000,"2001Q1 [YR2001Q1]":16107000000,"2001Q2 [YR2001Q2]":16361000000,"2001Q3 [YR2001Q3]":16245000000,"2001Q4 [YR2001Q4]":17317000000,"2002Q1 [YR2002Q1]":18936000000,"2002Q2 [YR2002Q2]":20032000000,"2002Q3 [YR2002Q3]":20445000000,"2002Q4 [YR2002Q4]":21479000000,"2003Q1 [YR2003Q1]":22399000000,"2003Q2 [YR2003Q2]":23271000000,"2003Q3 [YR2003Q3]":23921000000,"2003Q4 [YR2003Q4]":25486000000,"2004Q1 [YR2004Q1]":25863000000,"2004Q2 [YR2004Q2]":25932000000,"2004Q3 [YR2004Q3]":26886000000,"2004Q4 [YR2004Q4]":26966000000,"2005Q1 [YR2005Q1]":28364000000,"2005Q2 [YR2005Q2]":28901000000,"2005Q3 [YR2005Q3]":29804000000,"2005Q4 [YR2005Q4]":28607000000,"2006Q1 [YR2006Q1]":31186000000,"2006Q2 [YR2006Q2]":30783000000,"2006Q3 [YR2006Q3]":32147000000,"2006Q4 [YR2006Q4]":31432000000,"2007Q1 [YR2007Q1]":32919000000,"2007Q2 [YR2007Q2]":33211000000,"2007Q3 [YR2007Q3]":32984000000,"2007Q4 [YR2007Q4]":32653000000,"2008Q1 [YR2008Q1]":33179000000,"2008Q2 [YR2008Q2]":31664000000,"2008Q3 [YR2008Q3]":31661000000,"2008Q4 [YR2008Q4]":31535000000,"2009Q1 [YR2009Q1]":31850000000,"2009Q2 [YR2009Q2]":32812000000,"2009Q3 [YR2009Q3]":34219000000,"2009Q4 [YR2009Q4]":35882000000,"2010Q1 [YR2010Q1]":36828000000,"2010Q2 [YR2010Q2]":36867000000,"2010Q3 [YR2010Q3]":37803000000,"2010Q4 [YR2010Q4]":38949000000,"2011Q1 [YR2011Q1]":40962000000,"2011Q2 [YR2011Q2]":42126000000,"2011Q3 [YR2011Q3]":41818000000,"2011Q4 [YR2011Q4]":40784000000,"2012Q1 [YR2012Q1]":43230000000,"2012Q2 [YR2012Q2]":43664000000,"2012Q3 [YR2012Q3]":43659000000,"2012Q4 [YR2012Q4]":44628000000,"2013Q1 [YR2013Q1]":43847000000,"2013Q2 [YR2013Q2]":45434000000,"2013Q3 [YR2013Q3]":44863000000,"2013Q4 [YR2013Q4]":45164000000,"2014Q1 [YR2014Q1]":44959000000,"2014Q2 [YR2014Q2]":45646000000,"2014Q3 [YR2014Q3]":45003000000,"2014Q4 [YR2014Q4]":44859000000,"2015Q1 [YR2015Q1]":47112000000,"2015Q2 [YR2015Q2]":47050000000},
	{"Country Name":"Pitcairn","Country Code":"PCN","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Poland","Country Code":"POL","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":6090000000,"1996Q2 [YR1996Q2]":6290000000,"1996Q3 [YR1996Q3]":6443000000,"1996Q4 [YR1996Q4]":6480000000,"1997Q1 [YR1997Q1]":6469000000,"1997Q2 [YR1997Q2]":6589000000,"1997Q3 [YR1997Q3]":6984000000,"1997Q4 [YR1997Q4]":6980000000,"1998Q1 [YR1998Q1]":6977000000,"1998Q2 [YR1998Q2]":6980000000,"1998Q3 [YR1998Q3]":6989000000,"1998Q4 [YR1998Q4]":6496000000,"1999Q1 [YR1999Q1]":6465000000,"1999Q2 [YR1999Q2]":6310000000,"1999Q3 [YR1999Q3]":6312000000,"1999Q4 [YR1999Q4]":6252000000,"2000Q1 [YR2000Q1]":6817000000,"2000Q2 [YR2000Q2]":6757000000,"2000Q3 [YR2000Q3]":6556000000,"2000Q4 [YR2000Q4]":5661000000,"2001Q1 [YR2001Q1]":6282000000,"2001Q2 [YR2001Q2]":5905000000,"2001Q3 [YR2001Q3]":5894000000,"2001Q4 [YR2001Q4]":6055000000,"2002Q1 [YR2002Q1]":6669000000,"2002Q2 [YR2002Q2]":6951000000,"2002Q3 [YR2002Q3]":8297000000,"2002Q4 [YR2002Q4]":7774000000,"2003Q1 [YR2003Q1]":9498000000,"2003Q2 [YR2003Q2]":9542000000,"2003Q3 [YR2003Q3]":11399000000,"2003Q4 [YR2003Q4]":13056000000,"2004Q1 [YR2004Q1]":15837000000,"2004Q2 [YR2004Q2]":17079000000,"2004Q3 [YR2004Q3]":17285000000,"2004Q4 [YR2004Q4]":18511000000,"2005Q1 [YR2005Q1]":22396000000,"2005Q2 [YR2005Q2]":28213000000,"2005Q3 [YR2005Q3]":27035000000,"2005Q4 [YR2005Q4]":28661000000,"2006Q1 [YR2006Q1]":33417000000,"2006Q2 [YR2006Q2]":34984000000,"2006Q3 [YR2006Q3]":34187000000,"2006Q4 [YR2006Q4]":35956000000,"2007Q1 [YR2007Q1]":36265000000,"2007Q2 [YR2007Q2]":37749000000,"2007Q3 [YR2007Q3]":39074000000,"2007Q4 [YR2007Q4]":40647000000,"2008Q1 [YR2008Q1]":42820000000,"2008Q2 [YR2008Q2]":46280000000,"2008Q3 [YR2008Q3]":42647000000,"2008Q4 [YR2008Q4]":42350000000,"2009Q1 [YR2009Q1]":42472000000,"2009Q2 [YR2009Q2]":46520000000,"2009Q3 [YR2009Q3]":51283000000,"2009Q4 [YR2009Q4]":52428000000,"2010Q1 [YR2010Q1]":55288000000,"2010Q2 [YR2010Q2]":51594000000,"2010Q3 [YR2010Q3]":58987000000,"2010Q4 [YR2010Q4]":57382000000,"2011Q1 [YR2011Q1]":60619000000,"2011Q2 [YR2011Q2]":64016000000,"2011Q3 [YR2011Q3]":61393000000,"2011Q4 [YR2011Q4]":61645000000,"2012Q1 [YR2012Q1]":66504000000,"2012Q2 [YR2012Q2]":65341000000,"2012Q3 [YR2012Q3]":68780000000,"2012Q4 [YR2012Q4]":74435000000,"2013Q1 [YR2013Q1]":69001000000,"2013Q2 [YR2013Q2]":69824000000,"2013Q3 [YR2013Q3]":71515000000,"2013Q4 [YR2013Q4]":74816000000,"2014Q1 [YR2014Q1]":75868000000,"2014Q2 [YR2014Q2]":73092000000,"2014Q3 [YR2014Q3]":68695000000,"2014Q4 [YR2014Q4]":66511000000,"2015Q1 [YR2015Q1]":62137000000,"2015Q2 [YR2015Q2]":63315000000},
	{"Country Name":"Portugal","Country Code":"PRT","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":11085000000,"1996Q2 [YR1996Q2]":12172000000,"1996Q3 [YR1996Q3]":11853000000,"1996Q4 [YR1996Q4]":11573000000,"1997Q1 [YR1997Q1]":11519000000,"1997Q2 [YR1997Q2]":12268000000,"1997Q3 [YR1997Q3]":12577000000,"1997Q4 [YR1997Q4]":13037000000,"1998Q1 [YR1998Q1]":13503000000,"1998Q2 [YR1998Q2]":13752000000,"1998Q3 [YR1998Q3]":14591000000,"1998Q4 [YR1998Q4]":14898000000,"1999Q1 [YR1999Q1]":12679000000,"1999Q2 [YR1999Q2]":12477000000,"1999Q3 [YR1999Q3]":12602000000,"1999Q4 [YR1999Q4]":14565000000,"2000Q1 [YR2000Q1]":14271000000,"2000Q2 [YR2000Q2]":14219000000,"2000Q3 [YR2000Q3]":13734000000,"2000Q4 [YR2000Q4]":14796000000,"2001Q1 [YR2001Q1]":16124000000,"2001Q2 [YR2001Q2]":16524000000,"2001Q3 [YR2001Q3]":18457000000,"2001Q4 [YR2001Q4]":19372000000,"2002Q1 [YR2002Q1]":21221000000,"2002Q2 [YR2002Q2]":25311000000,"2002Q3 [YR2002Q3]":25642000000,"2002Q4 [YR2002Q4]":26935000000,"2003Q1 [YR2003Q1]":30820000000,"2003Q2 [YR2003Q2]":33173000000,"2003Q3 [YR2003Q3]":35500000000,"2003Q4 [YR2003Q4]":39179000000,"2004Q1 [YR2004Q1]":35907000000,"2004Q2 [YR2004Q2]":38821000000,"2004Q3 [YR2004Q3]":38178000000,"2004Q4 [YR2004Q4]":41494000000,"2005Q1 [YR2005Q1]":39598000000,"2005Q2 [YR2005Q2]":36690000000,"2005Q3 [YR2005Q3]":36053000000,"2005Q4 [YR2005Q4]":42643000000,"2006Q1 [YR2006Q1]":46719000000,"2006Q2 [YR2006Q2]":49747000000,"2006Q3 [YR2006Q3]":52356000000,"2006Q4 [YR2006Q4]":60489000000,"2007Q1 [YR2007Q1]":60483000000,"2007Q2 [YR2007Q2]":73948000000,"2007Q3 [YR2007Q3]":75733000000,"2007Q4 [YR2007Q4]":80575000000,"2008Q1 [YR2008Q1]":92433000000,"2008Q2 [YR2008Q2]":"1.046E+11","2008Q3 [YR2008Q3]":97139000000,"2008Q4 [YR2008Q4]":99212000000,"2009Q1 [YR2009Q1]":"1.05013E+11","2009Q2 [YR2009Q2]":"1.22626E+11","2009Q3 [YR2009Q3]":"1.36276E+11","2009Q4 [YR2009Q4]":"1.44214E+11","2010Q1 [YR2010Q1]":"1.39979E+11","2010Q2 [YR2010Q2]":"1.24453E+11","2010Q3 [YR2010Q3]":"1.38519E+11","2010Q4 [YR2010Q4]":"1.3619E+11","2011Q1 [YR2011Q1]":"1.45073E+11","2011Q2 [YR2011Q2]":"1.38131E+11","2011Q3 [YR2011Q3]":"1.27692E+11","2011Q4 [YR2011Q4]":"1.24187E+11","2012Q1 [YR2012Q1]":"1.19915E+11","2012Q2 [YR2012Q2]":"1.08116E+11","2012Q3 [YR2012Q3]":"1.04326E+11","2012Q4 [YR2012Q4]":"1.10805E+11","2013Q1 [YR2013Q1]":"1.05062E+11","2013Q2 [YR2013Q2]":99959000000,"2013Q3 [YR2013Q3]":"1.02309E+11","2013Q4 [YR2013Q4]":"1.04288E+11","2014Q1 [YR2014Q1]":"1.00712E+11","2014Q2 [YR2014Q2]":91022000000,"2014Q3 [YR2014Q3]":87242000000,"2014Q4 [YR2014Q4]":75583000000,"2015Q1 [YR2015Q1]":65968000000,"2015Q2 [YR2015Q2]":69108000000},
	{"Country Name":"Puerto Rico","Country Code":"PRI","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Qatar","Country Code":"QAT","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":0,"1996Q2 [YR1996Q2]":0,"1996Q3 [YR1996Q3]":0,"1996Q4 [YR1996Q4]":1200000000,"1997Q1 [YR1997Q1]":1200000000,"1997Q2 [YR1997Q2]":1200000000,"1997Q3 [YR1997Q3]":1200000000,"1997Q4 [YR1997Q4]":1200000000,"1998Q1 [YR1998Q1]":1200000000,"1998Q2 [YR1998Q2]":1200000000,"1998Q3 [YR1998Q3]":1200000000,"1998Q4 [YR1998Q4]":1200000000,"1999Q1 [YR1999Q1]":1200000000,"1999Q2 [YR1999Q2]":2200000000,"1999Q3 [YR1999Q3]":2200000000,"1999Q4 [YR1999Q4]":2200000000,"2000Q1 [YR2000Q1]":2200000000,"2000Q2 [YR2000Q2]":3600000000,"2000Q3 [YR2000Q3]":3600000000,"2000Q4 [YR2000Q4]":3600000000,"2001Q1 [YR2001Q1]":3600000000,"2001Q2 [YR2001Q2]":3600000000,"2001Q3 [YR2001Q3]":3600000000,"2001Q4 [YR2001Q4]":3600000000,"2002Q1 [YR2002Q1]":3527000000,"2002Q2 [YR2002Q2]":3527000000,"2002Q3 [YR2002Q3]":3491000000,"2002Q4 [YR2002Q4]":3491000000,"2003Q1 [YR2003Q1]":3455000000,"2003Q2 [YR2003Q2]":3455000000,"2003Q3 [YR2003Q3]":3455000000,"2003Q4 [YR2003Q4]":4155000000,"2004Q1 [YR2004Q1]":4747000000,"2004Q2 [YR2004Q2]":4747000000,"2004Q3 [YR2004Q3]":4710000000,"2004Q4 [YR2004Q4]":4710000000,"2005Q1 [YR2005Q1]":4674000000,"2005Q2 [YR2005Q2]":4674000000,"2005Q3 [YR2005Q3]":6888000000,"2005Q4 [YR2005Q4]":6888000000,"2006Q1 [YR2006Q1]":6851000000,"2006Q2 [YR2006Q2]":8001000000,"2006Q3 [YR2006Q3]":9515000000,"2006Q4 [YR2006Q4]":11005000000,"2007Q1 [YR2007Q1]":11005000000,"2007Q2 [YR2007Q2]":11005000000,"2007Q3 [YR2007Q3]":11305000000,"2007Q4 [YR2007Q4]":11305000000,"2008Q1 [YR2008Q1]":11305000000,"2008Q2 [YR2008Q2]":11305000000,"2008Q3 [YR2008Q3]":11305000000,"2008Q4 [YR2008Q4]":11305000000,"2009Q1 [YR2009Q1]":11305000000,"2009Q2 [YR2009Q2]":13305000000,"2009Q3 [YR2009Q3]":14790000000,"2009Q4 [YR2009Q4]":21790000000,"2010Q1 [YR2010Q1]":21710000000,"2010Q2 [YR2010Q2]":22259000000,"2010Q3 [YR2010Q3]":25679000000,"2010Q4 [YR2010Q4]":25675000000,"2011Q1 [YR2011Q1]":25595000000,"2011Q2 [YR2011Q2]":24945000000,"2011Q3 [YR2011Q3]":24865000000,"2011Q4 [YR2011Q4]":29365000000,"2012Q1 [YR2012Q1]":28285000000,"2012Q2 [YR2012Q2]":28285000000,"2012Q3 [YR2012Q3]":32501000000,"2012Q4 [YR2012Q4]":33837000000,"2013Q1 [YR2013Q1]":34758000000,"2013Q2 [YR2013Q2]":34895000000,"2013Q3 [YR2013Q3]":35579000000,"2013Q4 [YR2013Q4]":36206000000,"2014Q1 [YR2014Q1]":36240000000,"2014Q2 [YR2014Q2]":34304000000,"2014Q3 [YR2014Q3]":32908000000,"2014Q4 [YR2014Q4]":33404000000,"2015Q1 [YR2015Q1]":30377000000,"2015Q2 [YR2015Q2]":29718000000},
	{"Country Name":"Rest of the World","Country Code":"ROW","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Reunion","Country Code":"REU","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Romania","Country Code":"ROM","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":50000000,"1996Q2 [YR1996Q2]":750000000,"1996Q3 [YR1996Q3]":744000000,"1996Q4 [YR1996Q4]":982000000,"1997Q1 [YR1997Q1]":1022000000,"1997Q2 [YR1997Q2]":1622000000,"1997Q3 [YR1997Q3]":1582000000,"1997Q4 [YR1997Q4]":1533000000,"1998Q1 [YR1998Q1]":1516000000,"1998Q2 [YR1998Q2]":1487000000,"1998Q3 [YR1998Q3]":1541000000,"1998Q4 [YR1998Q4]":1650000000,"1999Q1 [YR1999Q1]":1595000000,"1999Q2 [YR1999Q2]":928000000,"1999Q3 [YR1999Q3]":977000000,"1999Q4 [YR1999Q4]":975000000,"2000Q1 [YR2000Q1]":865000000,"2000Q2 [YR2000Q2]":870000000,"2000Q3 [YR2000Q3]":843000000,"2000Q4 [YR2000Q4]":1126000000,"2001Q1 [YR2001Q1]":1163000000,"2001Q2 [YR2001Q2]":1778000000,"2001Q3 [YR2001Q3]":1890000000,"2001Q4 [YR2001Q4]":1705000000,"2002Q1 [YR2002Q1]":1695000000,"2002Q2 [YR2002Q2]":2296000000,"2002Q3 [YR2002Q3]":2277000000,"2002Q4 [YR2002Q4]":2854000000,"2003Q1 [YR2003Q1]":2946000000,"2003Q2 [YR2003Q2]":3065000000,"2003Q3 [YR2003Q3]":3934000000,"2003Q4 [YR2003Q4]":4027000000,"2004Q1 [YR2004Q1]":3923000000,"2004Q2 [YR2004Q2]":3727000000,"2004Q3 [YR2004Q3]":3797000000,"2004Q4 [YR2004Q4]":4064000000,"2005Q1 [YR2005Q1]":3902000000,"2005Q2 [YR2005Q2]":4245000000,"2005Q3 [YR2005Q3]":4235000000,"2005Q4 [YR2005Q4]":4418000000,"2006Q1 [YR2006Q1]":4509000000,"2006Q2 [YR2006Q2]":4645000000,"2006Q3 [YR2006Q3]":4634000000,"2006Q4 [YR2006Q4]":4860000000,"2007Q1 [YR2007Q1]":4910000000,"2007Q2 [YR2007Q2]":4563000000,"2007Q3 [YR2007Q3]":4742000000,"2007Q4 [YR2007Q4]":4657000000,"2008Q1 [YR2008Q1]":4966000000,"2008Q2 [YR2008Q2]":5193000000,"2008Q3 [YR2008Q3]":4755000000,"2008Q4 [YR2008Q4]":4135000000,"2009Q1 [YR2009Q1]":3933000000,"2009Q2 [YR2009Q2]":4177000000,"2009Q3 [YR2009Q3]":4332000000,"2009Q4 [YR2009Q4]":4309000000,"2010Q1 [YR2010Q1]":5411000000,"2010Q2 [YR2010Q2]":4965000000,"2010Q3 [YR2010Q3]":4551000000,"2010Q4 [YR2010Q4]":4509000000,"2011Q1 [YR2011Q1]":4837000000,"2011Q2 [YR2011Q2]":7139000000,"2011Q3 [YR2011Q3]":6694000000,"2011Q4 [YR2011Q4]":6213000000,"2012Q1 [YR2012Q1]":9848000000,"2012Q2 [YR2012Q2]":8588000000,"2012Q3 [YR2012Q3]":9695000000,"2012Q4 [YR2012Q4]":11805000000,"2013Q1 [YR2013Q1]":13054000000,"2013Q2 [YR2013Q2]":13217000000,"2013Q3 [YR2013Q3]":15515000000,"2013Q4 [YR2013Q4]":16894000000,"2014Q1 [YR2014Q1]":18797000000,"2014Q2 [YR2014Q2]":20358000000,"2014Q3 [YR2014Q3]":19289000000,"2014Q4 [YR2014Q4]":20650000000,"2015Q1 [YR2015Q1]":17939000000,"2015Q2 [YR2015Q2]":17821000000},
	{"Country Name":"Russian Federation","Country Code":"RUS","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":1111000000,"1996Q2 [YR1996Q2]":1098000000,"1996Q3 [YR1996Q3]":120000000,"1996Q4 [YR1996Q4]":1099000000,"1997Q1 [YR1997Q1]":2286000000,"1997Q2 [YR1997Q2]":5075000000,"1997Q3 [YR1997Q3]":5212000000,"1997Q4 [YR1997Q4]":5830000000,"1998Q1 [YR1998Q1]":6788000000,"1998Q2 [YR1998Q2]":11767000000,"1998Q3 [YR1998Q3]":18377000000,"1998Q4 [YR1998Q4]":18282000000,"1999Q1 [YR1999Q1]":18037000000,"1999Q2 [YR1999Q2]":17830000000,"1999Q3 [YR1999Q3]":17917000000,"1999Q4 [YR1999Q4]":17538000000,"2000Q1 [YR2000Q1]":17411000000,"2000Q2 [YR2000Q2]":17131000000,"2000Q3 [YR2000Q3]":37446000000,"2000Q4 [YR2000Q4]":37585000000,"2001Q1 [YR2001Q1]":37313000000,"2001Q2 [YR2001Q2]":36777000000,"2001Q3 [YR2001Q3]":36910000000,"2001Q4 [YR2001Q4]":36656000000,"2002Q1 [YR2002Q1]":37156000000,"2002Q2 [YR2002Q2]":38306000000,"2002Q3 [YR2002Q3]":38274000000,"2002Q4 [YR2002Q4]":40104000000,"2003Q1 [YR2003Q1]":42259000000,"2003Q2 [YR2003Q2]":41190000000,"2003Q3 [YR2003Q3]":41244000000,"2003Q4 [YR2003Q4]":42535000000,"2004Q1 [YR2004Q1]":41767000000,"2004Q2 [YR2004Q2]":42950000000,"2004Q3 [YR2004Q3]":43736000000,"2004Q4 [YR2004Q4]":44182000000,"2005Q1 [YR2005Q1]":44860000000,"2005Q2 [YR2005Q2]":44743000000,"2005Q3 [YR2005Q3]":42422000000,"2005Q4 [YR2005Q4]":42438000000,"2006Q1 [YR2006Q1]":42431000000,"2006Q2 [YR2006Q2]":43413000000,"2006Q3 [YR2006Q3]":44581000000,"2006Q4 [YR2006Q4]":50337000000,"2007Q1 [YR2007Q1]":54321000000,"2007Q2 [YR2007Q2]":56449000000,"2007Q3 [YR2007Q3]":56967000000,"2007Q4 [YR2007Q4]":56669000000,"2008Q1 [YR2008Q1]":56686000000,"2008Q2 [YR2008Q2]":59296000000,"2008Q3 [YR2008Q3]":62261000000,"2008Q4 [YR2008Q4]":61638000000,"2009Q1 [YR2009Q1]":59619000000,"2009Q2 [YR2009Q2]":61832000000,"2009Q3 [YR2009Q3]":60643000000,"2009Q4 [YR2009Q4]":59625000000,"2010Q1 [YR2010Q1]":56109000000,"2010Q2 [YR2010Q2]":61931000000,"2010Q3 [YR2010Q3]":63162000000,"2010Q4 [YR2010Q4]":65016000000,"2011Q1 [YR2011Q1]":69829000000,"2011Q2 [YR2011Q2]":72781000000,"2011Q3 [YR2011Q3]":70086000000,"2011Q4 [YR2011Q4]":68776000000,"2012Q1 [YR2012Q1]":68599000000,"2012Q2 [YR2012Q2]":83624000000,"2012Q3 [YR2012Q3]":95678000000,"2012Q4 [YR2012Q4]":"1.0767E+11","2013Q1 [YR2013Q1]":"1.12044E+11","2013Q2 [YR2013Q2]":"1.19008E+11","2013Q3 [YR2013Q3]":"1.23707E+11","2013Q4 [YR2013Q4]":"1.27987E+11","2014Q1 [YR2014Q1]":"1.15849E+11","2014Q2 [YR2014Q2]":"1.1638E+11","2014Q3 [YR2014Q3]":"1.15339E+11","2014Q4 [YR2014Q4]":"1.13398E+11","2015Q1 [YR2015Q1]":"1.11465E+11","2015Q2 [YR2015Q2]":"1.10093E+11"},
	{"Country Name":"Rwanda","Country Code":"RWA","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Saint Helena","Country Code":"SHN","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Saint Kitts and Nevis","Country Code":"KNA","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Saint Pierre and Miquelon","Country Code":"SPM","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Saint Vincent and the Grenadines","Country Code":"VCT","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Samoa","Country Code":"WSM","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"San Marino","Country Code":"SMR","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Sao Tome and Principe","Country Code":"STP","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Saudi Arabia","Country Code":"SAU","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":0,"1996Q2 [YR1996Q2]":0,"1996Q3 [YR1996Q3]":0,"1996Q4 [YR1996Q4]":0,"1997Q1 [YR1997Q1]":0,"1997Q2 [YR1997Q2]":0,"1997Q3 [YR1997Q3]":0,"1997Q4 [YR1997Q4]":0,"1998Q1 [YR1998Q1]":0,"1998Q2 [YR1998Q2]":0,"1998Q3 [YR1998Q3]":0,"1998Q4 [YR1998Q4]":0,"1999Q1 [YR1999Q1]":0,"1999Q2 [YR1999Q2]":0,"1999Q3 [YR1999Q3]":0,"1999Q4 [YR1999Q4]":0,"2000Q1 [YR2000Q1]":0,"2000Q2 [YR2000Q2]":0,"2000Q3 [YR2000Q3]":0,"2000Q4 [YR2000Q4]":0,"2001Q1 [YR2001Q1]":0,"2001Q2 [YR2001Q2]":0,"2001Q3 [YR2001Q3]":0,"2001Q4 [YR2001Q4]":0,"2002Q1 [YR2002Q1]":0,"2002Q2 [YR2002Q2]":0,"2002Q3 [YR2002Q3]":0,"2002Q4 [YR2002Q4]":0,"2003Q1 [YR2003Q1]":0,"2003Q2 [YR2003Q2]":0,"2003Q3 [YR2003Q3]":0,"2003Q4 [YR2003Q4]":0,"2004Q1 [YR2004Q1]":0,"2004Q2 [YR2004Q2]":0,"2004Q3 [YR2004Q3]":0,"2004Q4 [YR2004Q4]":187000000,"2005Q1 [YR2005Q1]":787000000,"2005Q2 [YR2005Q2]":787000000,"2005Q3 [YR2005Q3]":787000000,"2005Q4 [YR2005Q4]":1487000000,"2006Q1 [YR2006Q1]":1487000000,"2006Q2 [YR2006Q2]":2900000000,"2006Q3 [YR2006Q3]":3325000000,"2006Q4 [YR2006Q4]":3886000000,"2007Q1 [YR2007Q1]":3873000000,"2007Q2 [YR2007Q2]":3889000000,"2007Q3 [YR2007Q3]":3927000000,"2007Q4 [YR2007Q4]":3950000000,"2008Q1 [YR2008Q1]":3921000000,"2008Q2 [YR2008Q2]":5262000000,"2008Q3 [YR2008Q3]":5144000000,"2008Q4 [YR2008Q4]":5091000000,"2009Q1 [YR2009Q1]":5147000000,"2009Q2 [YR2009Q2]":5267000000,"2009Q3 [YR2009Q3]":7167000000,"2009Q4 [YR2009Q4]":7363000000,"2010Q1 [YR2010Q1]":7579000000,"2010Q2 [YR2010Q2]":7520000000,"2010Q3 [YR2010Q3]":7611000000,"2010Q4 [YR2010Q4]":7530000000,"2011Q1 [YR2011Q1]":7544000000,"2011Q2 [YR2011Q2]":6080000000,"2011Q3 [YR2011Q3]":5994000000,"2011Q4 [YR2011Q4]":6990000000,"2012Q1 [YR2012Q1]":7019000000,"2012Q2 [YR2012Q2]":8737000000,"2012Q3 [YR2012Q3]":8731000000,"2012Q4 [YR2012Q4]":8721000000,"2013Q1 [YR2013Q1]":7357000000,"2013Q2 [YR2013Q2]":9321000000,"2013Q3 [YR2013Q3]":9322000000,"2013Q4 [YR2013Q4]":9207000000,"2014Q1 [YR2014Q1]":9203000000,"2014Q2 [YR2014Q2]":9836000000,"2014Q3 [YR2014Q3]":9813000000,"2014Q4 [YR2014Q4]":9806000000,"2015Q1 [YR2015Q1]":8947000000,"2015Q2 [YR2015Q2]":8946000000},
	{"Country Name":"Senegal","Country Code":"SEN","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":0,"1996Q2 [YR1996Q2]":0,"1996Q3 [YR1996Q3]":0,"1996Q4 [YR1996Q4]":0,"1997Q1 [YR1997Q1]":0,"1997Q2 [YR1997Q2]":0,"1997Q3 [YR1997Q3]":0,"1997Q4 [YR1997Q4]":0,"1998Q1 [YR1998Q1]":0,"1998Q2 [YR1998Q2]":0,"1998Q3 [YR1998Q3]":0,"1998Q4 [YR1998Q4]":0,"1999Q1 [YR1999Q1]":0,"1999Q2 [YR1999Q2]":0,"1999Q3 [YR1999Q3]":0,"1999Q4 [YR1999Q4]":0,"2000Q1 [YR2000Q1]":0,"2000Q2 [YR2000Q2]":0,"2000Q3 [YR2000Q3]":0,"2000Q4 [YR2000Q4]":0,"2001Q1 [YR2001Q1]":0,"2001Q2 [YR2001Q2]":0,"2001Q3 [YR2001Q3]":0,"2001Q4 [YR2001Q4]":0,"2002Q1 [YR2002Q1]":0,"2002Q2 [YR2002Q2]":0,"2002Q3 [YR2002Q3]":0,"2002Q4 [YR2002Q4]":0,"2003Q1 [YR2003Q1]":0,"2003Q2 [YR2003Q2]":0,"2003Q3 [YR2003Q3]":0,"2003Q4 [YR2003Q4]":0,"2004Q1 [YR2004Q1]":0,"2004Q2 [YR2004Q2]":0,"2004Q3 [YR2004Q3]":0,"2004Q4 [YR2004Q4]":0,"2005Q1 [YR2005Q1]":0,"2005Q2 [YR2005Q2]":0,"2005Q3 [YR2005Q3]":0,"2005Q4 [YR2005Q4]":0,"2006Q1 [YR2006Q1]":0,"2006Q2 [YR2006Q2]":0,"2006Q3 [YR2006Q3]":0,"2006Q4 [YR2006Q4]":0,"2007Q1 [YR2007Q1]":0,"2007Q2 [YR2007Q2]":0,"2007Q3 [YR2007Q3]":0,"2007Q4 [YR2007Q4]":0,"2008Q1 [YR2008Q1]":0,"2008Q2 [YR2008Q2]":0,"2008Q3 [YR2008Q3]":0,"2008Q4 [YR2008Q4]":0,"2009Q1 [YR2009Q1]":0,"2009Q2 [YR2009Q2]":0,"2009Q3 [YR2009Q3]":0,"2009Q4 [YR2009Q4]":200000000,"2010Q1 [YR2010Q1]":200000000,"2010Q2 [YR2010Q2]":200000000,"2010Q3 [YR2010Q3]":200000000,"2010Q4 [YR2010Q4]":200000000,"2011Q1 [YR2011Q1]":200000000,"2011Q2 [YR2011Q2]":700000000,"2011Q3 [YR2011Q3]":700000000,"2011Q4 [YR2011Q4]":700000000,"2012Q1 [YR2012Q1]":700000000,"2012Q2 [YR2012Q2]":700000000,"2012Q3 [YR2012Q3]":700000000,"2012Q4 [YR2012Q4]":700000000,"2013Q1 [YR2013Q1]":700000000,"2013Q2 [YR2013Q2]":700000000,"2013Q3 [YR2013Q3]":700000000,"2013Q4 [YR2013Q4]":700000000,"2014Q1 [YR2014Q1]":700000000,"2014Q2 [YR2014Q2]":700000000,"2014Q3 [YR2014Q3]":1200000000,"2014Q4 [YR2014Q4]":1000000000,"2015Q1 [YR2015Q1]":1000000000,"2015Q2 [YR2015Q2]":1000000000},
	{"Country Name":"Serbia","Country Code":"SRB","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":0,"1996Q2 [YR1996Q2]":0,"1996Q3 [YR1996Q3]":0,"1996Q4 [YR1996Q4]":0,"1997Q1 [YR1997Q1]":0,"1997Q2 [YR1997Q2]":0,"1997Q3 [YR1997Q3]":0,"1997Q4 [YR1997Q4]":0,"1998Q1 [YR1998Q1]":0,"1998Q2 [YR1998Q2]":0,"1998Q3 [YR1998Q3]":0,"1998Q4 [YR1998Q4]":0,"1999Q1 [YR1999Q1]":0,"1999Q2 [YR1999Q2]":0,"1999Q3 [YR1999Q3]":0,"1999Q4 [YR1999Q4]":0,"2000Q1 [YR2000Q1]":0,"2000Q2 [YR2000Q2]":0,"2000Q3 [YR2000Q3]":0,"2000Q4 [YR2000Q4]":0,"2001Q1 [YR2001Q1]":0,"2001Q2 [YR2001Q2]":0,"2001Q3 [YR2001Q3]":0,"2001Q4 [YR2001Q4]":0,"2002Q1 [YR2002Q1]":0,"2002Q2 [YR2002Q2]":0,"2002Q3 [YR2002Q3]":0,"2002Q4 [YR2002Q4]":0,"2003Q1 [YR2003Q1]":0,"2003Q2 [YR2003Q2]":0,"2003Q3 [YR2003Q3]":0,"2003Q4 [YR2003Q4]":0,"2004Q1 [YR2004Q1]":0,"2004Q2 [YR2004Q2]":0,"2004Q3 [YR2004Q3]":0,"2004Q4 [YR2004Q4]":0,"2005Q1 [YR2005Q1]":0,"2005Q2 [YR2005Q2]":1018000000,"2005Q3 [YR2005Q3]":1018000000,"2005Q4 [YR2005Q4]":1018000000,"2006Q1 [YR2006Q1]":1018000000,"2006Q2 [YR2006Q2]":1018000000,"2006Q3 [YR2006Q3]":1018000000,"2006Q4 [YR2006Q4]":1018000000,"2007Q1 [YR2007Q1]":1185000000,"2007Q2 [YR2007Q2]":1187000000,"2007Q3 [YR2007Q3]":1196000000,"2007Q4 [YR2007Q4]":1202000000,"2008Q1 [YR2008Q1]":1216000000,"2008Q2 [YR2008Q2]":1216000000,"2008Q3 [YR2008Q3]":1197000000,"2008Q4 [YR2008Q4]":1192000000,"2009Q1 [YR2009Q1]":1185000000,"2009Q2 [YR2009Q2]":1195000000,"2009Q3 [YR2009Q3]":1202000000,"2009Q4 [YR2009Q4]":1199000000,"2010Q1 [YR2010Q1]":1187000000,"2010Q2 [YR2010Q2]":1138000000,"2010Q3 [YR2010Q3]":1155000000,"2010Q4 [YR2010Q4]":1118000000,"2011Q1 [YR2011Q1]":1128000000,"2011Q2 [YR2011Q2]":1097000000,"2011Q3 [YR2011Q3]":2085000000,"2011Q4 [YR2011Q4]":2078000000,"2012Q1 [YR2012Q1]":1883000000,"2012Q2 [YR2012Q2]":1883000000,"2012Q3 [YR2012Q3]":1815000000,"2012Q4 [YR2012Q4]":3565000000,"2013Q1 [YR2013Q1]":5065000000,"2013Q2 [YR2013Q2]":5065000000,"2013Q3 [YR2013Q3]":5031000000,"2013Q4 [YR2013Q4]":6031000000,"2014Q1 [YR2014Q1]":5597000000,"2014Q2 [YR2014Q2]":5597000000,"2014Q3 [YR2014Q3]":5597000000,"2014Q4 [YR2014Q4]":5597000000,"2015Q1 [YR2015Q1]":5597000000,"2015Q2 [YR2015Q2]":5597000000},
	{"Country Name":"Serbia and Montenegro","Country Code":"YUG","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":0,"1996Q2 [YR1996Q2]":0,"1996Q3 [YR1996Q3]":0,"1996Q4 [YR1996Q4]":0,"1997Q1 [YR1997Q1]":0,"1997Q2 [YR1997Q2]":0,"1997Q3 [YR1997Q3]":0,"1997Q4 [YR1997Q4]":0,"1998Q1 [YR1998Q1]":0,"1998Q2 [YR1998Q2]":0,"1998Q3 [YR1998Q3]":0,"1998Q4 [YR1998Q4]":0,"1999Q1 [YR1999Q1]":0,"1999Q2 [YR1999Q2]":0,"1999Q3 [YR1999Q3]":0,"1999Q4 [YR1999Q4]":0,"2000Q1 [YR2000Q1]":0,"2000Q2 [YR2000Q2]":0,"2000Q3 [YR2000Q3]":0,"2000Q4 [YR2000Q4]":0,"2001Q1 [YR2001Q1]":0,"2001Q2 [YR2001Q2]":0,"2001Q3 [YR2001Q3]":0,"2001Q4 [YR2001Q4]":0,"2002Q1 [YR2002Q1]":0,"2002Q2 [YR2002Q2]":0,"2002Q3 [YR2002Q3]":0,"2002Q4 [YR2002Q4]":0,"2003Q1 [YR2003Q1]":0,"2003Q2 [YR2003Q2]":0,"2003Q3 [YR2003Q3]":0,"2003Q4 [YR2003Q4]":0,"2004Q1 [YR2004Q1]":0,"2004Q2 [YR2004Q2]":0,"2004Q3 [YR2004Q3]":0,"2004Q4 [YR2004Q4]":0,"2005Q1 [YR2005Q1]":0,"2005Q2 [YR2005Q2]":0,"2005Q3 [YR2005Q3]":0,"2005Q4 [YR2005Q4]":0,"2006Q1 [YR2006Q1]":0,"2006Q2 [YR2006Q2]":0,"2006Q3 [YR2006Q3]":0,"2006Q4 [YR2006Q4]":0,"2007Q1 [YR2007Q1]":0,"2007Q2 [YR2007Q2]":0,"2007Q3 [YR2007Q3]":0,"2007Q4 [YR2007Q4]":0,"2008Q1 [YR2008Q1]":0,"2008Q2 [YR2008Q2]":0,"2008Q3 [YR2008Q3]":0,"2008Q4 [YR2008Q4]":0,"2009Q1 [YR2009Q1]":0,"2009Q2 [YR2009Q2]":0,"2009Q3 [YR2009Q3]":0,"2009Q4 [YR2009Q4]":0,"2010Q1 [YR2010Q1]":0,"2010Q2 [YR2010Q2]":0,"2010Q3 [YR2010Q3]":0,"2010Q4 [YR2010Q4]":0,"2011Q1 [YR2011Q1]":0,"2011Q2 [YR2011Q2]":0,"2011Q3 [YR2011Q3]":0,"2011Q4 [YR2011Q4]":0,"2012Q1 [YR2012Q1]":0,"2012Q2 [YR2012Q2]":0,"2012Q3 [YR2012Q3]":0,"2012Q4 [YR2012Q4]":0,"2013Q1 [YR2013Q1]":0,"2013Q2 [YR2013Q2]":0,"2013Q3 [YR2013Q3]":0,"2013Q4 [YR2013Q4]":0,"2014Q1 [YR2014Q1]":0,"2014Q2 [YR2014Q2]":0,"2014Q3 [YR2014Q3]":0,"2014Q4 [YR2014Q4]":0,"2015Q1 [YR2015Q1]":0,"2015Q2 [YR2015Q2]":0},
	{"Country Name":"Seychelles","Country Code":"SYC","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":0,"1996Q2 [YR1996Q2]":0,"1996Q3 [YR1996Q3]":0,"1996Q4 [YR1996Q4]":0,"1997Q1 [YR1997Q1]":0,"1997Q2 [YR1997Q2]":0,"1997Q3 [YR1997Q3]":0,"1997Q4 [YR1997Q4]":0,"1998Q1 [YR1998Q1]":0,"1998Q2 [YR1998Q2]":0,"1998Q3 [YR1998Q3]":0,"1998Q4 [YR1998Q4]":0,"1999Q1 [YR1999Q1]":0,"1999Q2 [YR1999Q2]":0,"1999Q3 [YR1999Q3]":0,"1999Q4 [YR1999Q4]":0,"2000Q1 [YR2000Q1]":0,"2000Q2 [YR2000Q2]":0,"2000Q3 [YR2000Q3]":0,"2000Q4 [YR2000Q4]":0,"2001Q1 [YR2001Q1]":0,"2001Q2 [YR2001Q2]":0,"2001Q3 [YR2001Q3]":0,"2001Q4 [YR2001Q4]":0,"2002Q1 [YR2002Q1]":0,"2002Q2 [YR2002Q2]":0,"2002Q3 [YR2002Q3]":0,"2002Q4 [YR2002Q4]":0,"2003Q1 [YR2003Q1]":0,"2003Q2 [YR2003Q2]":0,"2003Q3 [YR2003Q3]":0,"2003Q4 [YR2003Q4]":0,"2004Q1 [YR2004Q1]":0,"2004Q2 [YR2004Q2]":0,"2004Q3 [YR2004Q3]":0,"2004Q4 [YR2004Q4]":0,"2005Q1 [YR2005Q1]":0,"2005Q2 [YR2005Q2]":0,"2005Q3 [YR2005Q3]":0,"2005Q4 [YR2005Q4]":0,"2006Q1 [YR2006Q1]":0,"2006Q2 [YR2006Q2]":0,"2006Q3 [YR2006Q3]":0,"2006Q4 [YR2006Q4]":200000000,"2007Q1 [YR2007Q1]":200000000,"2007Q2 [YR2007Q2]":200000000,"2007Q3 [YR2007Q3]":200000000,"2007Q4 [YR2007Q4]":230000000,"2008Q1 [YR2008Q1]":230000000,"2008Q2 [YR2008Q2]":230000000,"2008Q3 [YR2008Q3]":230000000,"2008Q4 [YR2008Q4]":230000000,"2009Q1 [YR2009Q1]":230000000,"2009Q2 [YR2009Q2]":230000000,"2009Q3 [YR2009Q3]":230000000,"2009Q4 [YR2009Q4]":230000000,"2010Q1 [YR2010Q1]":199000000,"2010Q2 [YR2010Q2]":199000000,"2010Q3 [YR2010Q3]":199000000,"2010Q4 [YR2010Q4]":199000000,"2011Q1 [YR2011Q1]":199000000,"2011Q2 [YR2011Q2]":199000000,"2011Q3 [YR2011Q3]":199000000,"2011Q4 [YR2011Q4]":169000000,"2012Q1 [YR2012Q1]":169000000,"2012Q2 [YR2012Q2]":169000000,"2012Q3 [YR2012Q3]":169000000,"2012Q4 [YR2012Q4]":169000000,"2013Q1 [YR2013Q1]":169000000,"2013Q2 [YR2013Q2]":169000000,"2013Q3 [YR2013Q3]":169000000,"2013Q4 [YR2013Q4]":169000000,"2014Q1 [YR2014Q1]":169000000,"2014Q2 [YR2014Q2]":169000000,"2014Q3 [YR2014Q3]":169000000,"2014Q4 [YR2014Q4]":169000000,"2015Q1 [YR2015Q1]":169000000,"2015Q2 [YR2015Q2]":169000000},
	{"Country Name":"Sierra Leone","Country Code":"SLE","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Singapore","Country Code":"SGP","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":1590000000,"1996Q2 [YR1996Q2]":2090000000,"1996Q3 [YR1996Q3]":1875000000,"1996Q4 [YR1996Q4]":2083000000,"1997Q1 [YR1997Q1]":2231000000,"1997Q2 [YR1997Q2]":2455000000,"1997Q3 [YR1997Q3]":3390000000,"1997Q4 [YR1997Q4]":3440000000,"1998Q1 [YR1998Q1]":3465000000,"1998Q2 [YR1998Q2]":4930000000,"1998Q3 [YR1998Q3]":5114000000,"1998Q4 [YR1998Q4]":5169000000,"1999Q1 [YR1999Q1]":6034000000,"1999Q2 [YR1999Q2]":6314000000,"1999Q3 [YR1999Q3]":7117000000,"1999Q4 [YR1999Q4]":7438000000,"2000Q1 [YR2000Q1]":7274000000,"2000Q2 [YR2000Q2]":8905000000,"2000Q3 [YR2000Q3]":9230000000,"2000Q4 [YR2000Q4]":9234000000,"2001Q1 [YR2001Q1]":8985000000,"2001Q2 [YR2001Q2]":9957000000,"2001Q3 [YR2001Q3]":12118000000,"2001Q4 [YR2001Q4]":15878000000,"2002Q1 [YR2002Q1]":16216000000,"2002Q2 [YR2002Q2]":16581000000,"2002Q3 [YR2002Q3]":16573000000,"2002Q4 [YR2002Q4]":16960000000,"2003Q1 [YR2003Q1]":17292000000,"2003Q2 [YR2003Q2]":18407000000,"2003Q3 [YR2003Q3]":19791000000,"2003Q4 [YR2003Q4]":23416000000,"2004Q1 [YR2004Q1]":23764000000,"2004Q2 [YR2004Q2]":25709000000,"2004Q3 [YR2004Q3]":28807000000,"2004Q4 [YR2004Q4]":33020000000,"2005Q1 [YR2005Q1]":36072000000,"2005Q2 [YR2005Q2]":34903000000,"2005Q3 [YR2005Q3]":37613000000,"2005Q4 [YR2005Q4]":39123000000,"2006Q1 [YR2006Q1]":39552000000,"2006Q2 [YR2006Q2]":43823000000,"2006Q3 [YR2006Q3]":45441000000,"2006Q4 [YR2006Q4]":46817000000,"2007Q1 [YR2007Q1]":49238000000,"2007Q2 [YR2007Q2]":54548000000,"2007Q3 [YR2007Q3]":54801000000,"2007Q4 [YR2007Q4]":55002000000,"2008Q1 [YR2008Q1]":55907000000,"2008Q2 [YR2008Q2]":55262000000,"2008Q3 [YR2008Q3]":55383000000,"2008Q4 [YR2008Q4]":52484000000,"2009Q1 [YR2009Q1]":49183000000,"2009Q2 [YR2009Q2]":47415000000,"2009Q3 [YR2009Q3]":49009000000,"2009Q4 [YR2009Q4]":50702000000,"2010Q1 [YR2010Q1]":51118000000,"2010Q2 [YR2010Q2]":50616000000,"2010Q3 [YR2010Q3]":55073000000,"2010Q4 [YR2010Q4]":55356000000,"2011Q1 [YR2011Q1]":59593000000,"2011Q2 [YR2011Q2]":63019000000,"2011Q3 [YR2011Q3]":63178000000,"2011Q4 [YR2011Q4]":64243000000,"2012Q1 [YR2012Q1]":74328000000,"2012Q2 [YR2012Q2]":72370000000,"2012Q3 [YR2012Q3]":80034000000,"2012Q4 [YR2012Q4]":83903000000,"2013Q1 [YR2013Q1]":88335000000,"2013Q2 [YR2013Q2]":94420000000,"2013Q3 [YR2013Q3]":"1.03409E+11","2013Q4 [YR2013Q4]":"1.05783E+11","2014Q1 [YR2014Q1]":"1.09011E+11","2014Q2 [YR2014Q2]":"1.13836E+11","2014Q3 [YR2014Q3]":"1.21233E+11","2014Q4 [YR2014Q4]":"1.14753E+11","2015Q1 [YR2015Q1]":"1.11003E+11","2015Q2 [YR2015Q2]":"1.17698E+11"},
	{"Country Name":"Sint Maarten","Country Code":"SXM","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Slovak Republic","Country Code":"SVK","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":296000000,"1996Q2 [YR1996Q2]":288000000,"1996Q3 [YR1996Q3]":284000000,"1996Q4 [YR1996Q4]":652000000,"1997Q1 [YR1997Q1]":634000000,"1997Q2 [YR1997Q2]":655000000,"1997Q3 [YR1997Q3]":640000000,"1997Q4 [YR1997Q4]":622000000,"1998Q1 [YR1998Q1]":819000000,"1998Q2 [YR1998Q2]":1652000000,"1998Q3 [YR1998Q3]":1799000000,"1998Q4 [YR1998Q4]":1859000000,"1999Q1 [YR1999Q1]":1784000000,"1999Q2 [YR1999Q2]":2169000000,"1999Q3 [YR1999Q3]":2193000000,"1999Q4 [YR1999Q4]":2277000000,"2000Q1 [YR2000Q1]":2193000000,"2000Q2 [YR2000Q2]":2820000000,"2000Q3 [YR2000Q3]":2840000000,"2000Q4 [YR2000Q4]":2879000000,"2001Q1 [YR2001Q1]":2761000000,"2001Q2 [YR2001Q2]":2783000000,"2001Q3 [YR2001Q3]":2855000000,"2001Q4 [YR2001Q4]":2595000000,"2002Q1 [YR2002Q1]":2578000000,"2002Q2 [YR2002Q2]":3011000000,"2002Q3 [YR2002Q3]":2998000000,"2002Q4 [YR2002Q4]":2888000000,"2003Q1 [YR2003Q1]":2977000000,"2003Q2 [YR2003Q2]":2783000000,"2003Q3 [YR2003Q3]":2739000000,"2003Q4 [YR2003Q4]":3270000000,"2004Q1 [YR2004Q1]":3177000000,"2004Q2 [YR2004Q2]":3770000000,"2004Q3 [YR2004Q3]":3843000000,"2004Q4 [YR2004Q4]":3935000000,"2005Q1 [YR2005Q1]":3755000000,"2005Q2 [YR2005Q2]":2611000000,"2005Q3 [YR2005Q3]":2599000000,"2005Q4 [YR2005Q4]":2556000000,"2006Q1 [YR2006Q1]":3828000000,"2006Q2 [YR2006Q2]":4007000000,"2006Q3 [YR2006Q3]":3845000000,"2006Q4 [YR2006Q4]":3810000000,"2007Q1 [YR2007Q1]":3863000000,"2007Q2 [YR2007Q2]":4993000000,"2007Q3 [YR2007Q3]":5242000000,"2007Q4 [YR2007Q4]":5444000000,"2008Q1 [YR2008Q1]":5858000000,"2008Q2 [YR2008Q2]":5864000000,"2008Q3 [YR2008Q3]":5322000000,"2008Q4 [YR2008Q4]":5183000000,"2009Q1 [YR2009Q1]":4953000000,"2009Q2 [YR2009Q2]":8087000000,"2009Q3 [YR2009Q3]":8378000000,"2009Q4 [YR2009Q4]":8243000000,"2010Q1 [YR2010Q1]":7712000000,"2010Q2 [YR2010Q2]":8248000000,"2010Q3 [YR2010Q3]":9174000000,"2010Q4 [YR2010Q4]":8982000000,"2011Q1 [YR2011Q1]":11325000000,"2011Q2 [YR2011Q2]":12967000000,"2011Q3 [YR2011Q3]":12115000000,"2011Q4 [YR2011Q4]":11609000000,"2012Q1 [YR2012Q1]":11983000000,"2012Q2 [YR2012Q2]":14819000000,"2012Q3 [YR2012Q3]":15135000000,"2012Q4 [YR2012Q4]":15383000000,"2013Q1 [YR2013Q1]":15013000000,"2013Q2 [YR2013Q2]":17491000000,"2013Q3 [YR2013Q3]":17961000000,"2013Q4 [YR2013Q4]":20825000000,"2014Q1 [YR2014Q1]":21406000000,"2014Q2 [YR2014Q2]":20931000000,"2014Q3 [YR2014Q3]":19548000000,"2014Q4 [YR2014Q4]":18204000000,"2015Q1 [YR2015Q1]":15128000000,"2015Q2 [YR2015Q2]":15600000000},
	{"Country Name":"Slovenia","Country Code":"SVN","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":0,"1996Q2 [YR1996Q2]":220000000,"1996Q3 [YR1996Q3]":545000000,"1996Q4 [YR1996Q4]":410000000,"1997Q1 [YR1997Q1]":410000000,"1997Q2 [YR1997Q2]":635000000,"1997Q3 [YR1997Q3]":632000000,"1997Q4 [YR1997Q4]":625000000,"1998Q1 [YR1998Q1]":618000000,"1998Q2 [YR1998Q2]":1167000000,"1998Q3 [YR1998Q3]":1222000000,"1998Q4 [YR1998Q4]":1216000000,"1999Q1 [YR1999Q1]":1580000000,"1999Q2 [YR1999Q2]":1530000000,"1999Q3 [YR1999Q3]":1568000000,"1999Q4 [YR1999Q4]":1495000000,"2000Q1 [YR2000Q1]":1823000000,"2000Q2 [YR2000Q2]":1819000000,"2000Q3 [YR2000Q3]":1700000000,"2000Q4 [YR2000Q4]":1778000000,"2001Q1 [YR2001Q1]":1795000000,"2001Q2 [YR2001Q2]":2116000000,"2001Q3 [YR2001Q3]":1924000000,"2001Q4 [YR2001Q4]":1865000000,"2002Q1 [YR2002Q1]":1847000000,"2002Q2 [YR2002Q2]":2090000000,"2002Q3 [YR2002Q3]":2066000000,"2002Q4 [YR2002Q4]":2222000000,"2003Q1 [YR2003Q1]":2316000000,"2003Q2 [YR2003Q2]":2423000000,"2003Q3 [YR2003Q3]":2471000000,"2003Q4 [YR2003Q4]":2669000000,"2004Q1 [YR2004Q1]":2576000000,"2004Q2 [YR2004Q2]":2309000000,"2004Q3 [YR2004Q3]":2357000000,"2004Q4 [YR2004Q4]":2649000000,"2005Q1 [YR2005Q1]":2522000000,"2005Q2 [YR2005Q2]":1745000000,"2005Q3 [YR2005Q3]":1738000000,"2005Q4 [YR2005Q4]":1699000000,"2006Q1 [YR2006Q1]":1759000000,"2006Q2 [YR2006Q2]":1843000000,"2006Q3 [YR2006Q3]":1836000000,"2006Q4 [YR2006Q4]":1901000000,"2007Q1 [YR2007Q1]":3396000000,"2007Q2 [YR2007Q2]":3444000000,"2007Q3 [YR2007Q3]":3616000000,"2007Q4 [YR2007Q4]":3901000000,"2008Q1 [YR2008Q1]":5771000000,"2008Q2 [YR2008Q2]":5754000000,"2008Q3 [YR2008Q3]":5221000000,"2008Q4 [YR2008Q4]":5080000000,"2009Q1 [YR2009Q1]":4325000000,"2009Q2 [YR2009Q2]":4594000000,"2009Q3 [YR2009Q3]":7688000000,"2009Q4 [YR2009Q4]":8180000000,"2010Q1 [YR2010Q1]":6999000000,"2010Q2 [YR2010Q2]":7564000000,"2010Q3 [YR2010Q3]":8380000000,"2010Q4 [YR2010Q4]":8277000000,"2011Q1 [YR2011Q1]":9279000000,"2011Q2 [YR2011Q2]":8784000000,"2011Q3 [YR2011Q3]":8226000000,"2011Q4 [YR2011Q4]":7895000000,"2012Q1 [YR2012Q1]":8140000000,"2012Q2 [YR2012Q2]":7690000000,"2012Q3 [YR2012Q3]":5304000000,"2012Q4 [YR2012Q4]":7656000000,"2013Q1 [YR2013Q1]":7762000000,"2013Q2 [YR2013Q2]":11374000000,"2013Q3 [YR2013Q3]":11427000000,"2013Q4 [YR2013Q4]":11541000000,"2014Q1 [YR2014Q1]":15040000000,"2014Q2 [YR2014Q2]":18214000000,"2014Q3 [YR2014Q3]":17910000000,"2014Q4 [YR2014Q4]":17555000000,"2015Q1 [YR2015Q1]":16644000000,"2015Q2 [YR2015Q2]":15473000000},
	{"Country Name":"Solomon Islands","Country Code":"SLB","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Somalia","Country Code":"SOM","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"South Africa","Country Code":"ZAF","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":3319000000,"1996Q2 [YR1996Q2]":3400000000,"1996Q3 [YR1996Q3]":3421000000,"1996Q4 [YR1996Q4]":3721000000,"1997Q1 [YR1997Q1]":3295000000,"1997Q2 [YR1997Q2]":4002000000,"1997Q3 [YR1997Q3]":4059000000,"1997Q4 [YR1997Q4]":3899000000,"1998Q1 [YR1998Q1]":4317000000,"1998Q2 [YR1998Q2]":4557000000,"1998Q3 [YR1998Q3]":4608000000,"1998Q4 [YR1998Q4]":4768000000,"1999Q1 [YR1999Q1]":4812000000,"1999Q2 [YR1999Q2]":5820000000,"1999Q3 [YR1999Q3]":6131000000,"1999Q4 [YR1999Q4]":5503000000,"2000Q1 [YR2000Q1]":6039000000,"2000Q2 [YR2000Q2]":6448000000,"2000Q3 [YR2000Q3]":6180000000,"2000Q4 [YR2000Q4]":6023000000,"2001Q1 [YR2001Q1]":5824000000,"2001Q2 [YR2001Q2]":6104000000,"2001Q3 [YR2001Q3]":6682000000,"2001Q4 [YR2001Q4]":6314000000,"2002Q1 [YR2002Q1]":6370000000,"2002Q2 [YR2002Q2]":7832000000,"2002Q3 [YR2002Q3]":7775000000,"2002Q4 [YR2002Q4]":7982000000,"2003Q1 [YR2003Q1]":8145000000,"2003Q2 [YR2003Q2]":9751000000,"2003Q3 [YR2003Q3]":10006000000,"2003Q4 [YR2003Q4]":10131000000,"2004Q1 [YR2004Q1]":10088000000,"2004Q2 [YR2004Q2]":10944000000,"2004Q3 [YR2004Q3]":10821000000,"2004Q4 [YR2004Q4]":11082000000,"2005Q1 [YR2005Q1]":11022000000,"2005Q2 [YR2005Q2]":10822000000,"2005Q3 [YR2005Q3]":11623000000,"2005Q4 [YR2005Q4]":11287000000,"2006Q1 [YR2006Q1]":12322000000,"2006Q2 [YR2006Q2]":13407000000,"2006Q3 [YR2006Q3]":13502000000,"2006Q4 [YR2006Q4]":14027000000,"2007Q1 [YR2007Q1]":13704000000,"2007Q2 [YR2007Q2]":20126000000,"2007Q3 [YR2007Q3]":21747000000,"2007Q4 [YR2007Q4]":22323000000,"2008Q1 [YR2008Q1]":22535000000,"2008Q2 [YR2008Q2]":21850000000,"2008Q3 [YR2008Q3]":19819000000,"2008Q4 [YR2008Q4]":19139000000,"2009Q1 [YR2009Q1]":18565000000,"2009Q2 [YR2009Q2]":20569000000,"2009Q3 [YR2009Q3]":21563000000,"2009Q4 [YR2009Q4]":21393000000,"2010Q1 [YR2010Q1]":22729000000,"2010Q2 [YR2010Q2]":21383000000,"2010Q3 [YR2010Q3]":24310000000,"2010Q4 [YR2010Q4]":25192000000,"2011Q1 [YR2011Q1]":31005000000,"2011Q2 [YR2011Q2]":31493000000,"2011Q3 [YR2011Q3]":29898000000,"2011Q4 [YR2011Q4]":29475000000,"2012Q1 [YR2012Q1]":32417000000,"2012Q2 [YR2012Q2]":29804000000,"2012Q3 [YR2012Q3]":30325000000,"2012Q4 [YR2012Q4]":31371000000,"2013Q1 [YR2013Q1]":30943000000,"2013Q2 [YR2013Q2]":27769000000,"2013Q3 [YR2013Q3]":29886000000,"2013Q4 [YR2013Q4]":31057000000,"2014Q1 [YR2014Q1]":31794000000,"2014Q2 [YR2014Q2]":28915000000,"2014Q3 [YR2014Q3]":30076000000,"2014Q4 [YR2014Q4]":29896000000,"2015Q1 [YR2015Q1]":32154000000,"2015Q2 [YR2015Q2]":32946000000},
	{"Country Name":"South Sudan","Country Code":"SSD","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Soviet Union","Country Code":"SUN","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":0,"1996Q2 [YR1996Q2]":0,"1996Q3 [YR1996Q3]":0,"1996Q4 [YR1996Q4]":0,"1997Q1 [YR1997Q1]":0,"1997Q2 [YR1997Q2]":0,"1997Q3 [YR1997Q3]":0,"1997Q4 [YR1997Q4]":0,"1998Q1 [YR1998Q1]":0,"1998Q2 [YR1998Q2]":0,"1998Q3 [YR1998Q3]":0,"1998Q4 [YR1998Q4]":0,"1999Q1 [YR1999Q1]":0,"1999Q2 [YR1999Q2]":0,"1999Q3 [YR1999Q3]":0,"1999Q4 [YR1999Q4]":0,"2000Q1 [YR2000Q1]":0,"2000Q2 [YR2000Q2]":0,"2000Q3 [YR2000Q3]":0,"2000Q4 [YR2000Q4]":0,"2001Q1 [YR2001Q1]":0,"2001Q2 [YR2001Q2]":0,"2001Q3 [YR2001Q3]":0,"2001Q4 [YR2001Q4]":0,"2002Q1 [YR2002Q1]":0,"2002Q2 [YR2002Q2]":0,"2002Q3 [YR2002Q3]":0,"2002Q4 [YR2002Q4]":0,"2003Q1 [YR2003Q1]":0,"2003Q2 [YR2003Q2]":0,"2003Q3 [YR2003Q3]":0,"2003Q4 [YR2003Q4]":0,"2004Q1 [YR2004Q1]":0,"2004Q2 [YR2004Q2]":0,"2004Q3 [YR2004Q3]":0,"2004Q4 [YR2004Q4]":0,"2005Q1 [YR2005Q1]":0,"2005Q2 [YR2005Q2]":0,"2005Q3 [YR2005Q3]":0,"2005Q4 [YR2005Q4]":0,"2006Q1 [YR2006Q1]":0,"2006Q2 [YR2006Q2]":0,"2006Q3 [YR2006Q3]":0,"2006Q4 [YR2006Q4]":0,"2007Q1 [YR2007Q1]":0,"2007Q2 [YR2007Q2]":0,"2007Q3 [YR2007Q3]":0,"2007Q4 [YR2007Q4]":0,"2008Q1 [YR2008Q1]":0,"2008Q2 [YR2008Q2]":0,"2008Q3 [YR2008Q3]":0,"2008Q4 [YR2008Q4]":0,"2009Q1 [YR2009Q1]":0,"2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Spain","Country Code":"ESP","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":23624000000,"1996Q2 [YR1996Q2]":23112000000,"1996Q3 [YR1996Q3]":25343000000,"1996Q4 [YR1996Q4]":25813000000,"1997Q1 [YR1997Q1]":25918000000,"1997Q2 [YR1997Q2]":26829000000,"1997Q3 [YR1997Q3]":27858000000,"1997Q4 [YR1997Q4]":27805000000,"1998Q1 [YR1998Q1]":28187000000,"1998Q2 [YR1998Q2]":29905000000,"1998Q3 [YR1998Q3]":33405000000,"1998Q4 [YR1998Q4]":35283000000,"1999Q1 [YR1999Q1]":34278000000,"1999Q2 [YR1999Q2]":37243000000,"1999Q3 [YR1999Q3]":40906000000,"1999Q4 [YR1999Q4]":43722000000,"2000Q1 [YR2000Q1]":40743000000,"2000Q2 [YR2000Q2]":43051000000,"2000Q3 [YR2000Q3]":43422000000,"2000Q4 [YR2000Q4]":44946000000,"2001Q1 [YR2001Q1]":43731000000,"2001Q2 [YR2001Q2]":47234000000,"2001Q3 [YR2001Q3]":51154000000,"2001Q4 [YR2001Q4]":53498000000,"2002Q1 [YR2002Q1]":58963000000,"2002Q2 [YR2002Q2]":69157000000,"2002Q3 [YR2002Q3]":71441000000,"2002Q4 [YR2002Q4]":83322000000,"2003Q1 [YR2003Q1]":96231000000,"2003Q2 [YR2003Q2]":"1.16844E+11","2003Q3 [YR2003Q3]":"1.27083E+11","2003Q4 [YR2003Q4]":"1.5341E+11","2004Q1 [YR2004Q1]":"1.617E+11","2004Q2 [YR2004Q2]":"1.72141E+11","2004Q3 [YR2004Q3]":"1.76482E+11","2004Q4 [YR2004Q4]":"2.10781E+11","2005Q1 [YR2005Q1]":"2.19554E+11","2005Q2 [YR2005Q2]":"2.40465E+11","2005Q3 [YR2005Q3]":"2.47451E+11","2005Q4 [YR2005Q4]":"2.92042E+11","2006Q1 [YR2006Q1]":"3.60906E+11","2006Q2 [YR2006Q2]":"4.27035E+11","2006Q3 [YR2006Q3]":"4.49374E+11","2006Q4 [YR2006Q4]":"4.96266E+11","2007Q1 [YR2007Q1]":"5.55887E+11","2007Q2 [YR2007Q2]":"6.05955E+11","2007Q3 [YR2007Q3]":"6.56569E+11","2007Q4 [YR2007Q4]":"6.83207E+11","2008Q1 [YR2008Q1]":"7.32786E+11","2008Q2 [YR2008Q2]":"7.89612E+11","2008Q3 [YR2008Q3]":"7.48978E+11","2008Q4 [YR2008Q4]":"7.35034E+11","2009Q1 [YR2009Q1]":"7.39603E+11","2009Q2 [YR2009Q2]":"8.03269E+11","2009Q3 [YR2009Q3]":"8.53985E+11","2009Q4 [YR2009Q4]":"8.63921E+11","2010Q1 [YR2010Q1]":"8.17519E+11","2010Q2 [YR2010Q2]":"7.35894E+11","2010Q3 [YR2010Q3]":"8.42863E+11","2010Q4 [YR2010Q4]":"8.25508E+11","2011Q1 [YR2011Q1]":"8.8293E+11","2011Q2 [YR2011Q2]":"8.89374E+11","2011Q3 [YR2011Q3]":"8.36862E+11","2011Q4 [YR2011Q4]":"8.03775E+11","2012Q1 [YR2012Q1]":"8.66233E+11","2012Q2 [YR2012Q2]":"7.81704E+11","2012Q3 [YR2012Q3]":"7.78456E+11","2012Q4 [YR2012Q4]":"8.06459E+11","2013Q1 [YR2013Q1]":"7.76322E+11","2013Q2 [YR2013Q2]":"7.80871E+11","2013Q3 [YR2013Q3]":"7.79866E+11","2013Q4 [YR2013Q4]":"7.96394E+11","2014Q1 [YR2014Q1]":"7.70727E+11","2014Q2 [YR2014Q2]":"7.67269E+11","2014Q3 [YR2014Q3]":"6.95469E+11","2014Q4 [YR2014Q4]":"6.56828E+11","2015Q1 [YR2015Q1]":"5.82874E+11","2015Q2 [YR2015Q2]":"5.91351E+11"},
	{"Country Name":"Sri Lanka","Country Code":"LKA","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":0,"1996Q2 [YR1996Q2]":0,"1996Q3 [YR1996Q3]":0,"1996Q4 [YR1996Q4]":0,"1997Q1 [YR1997Q1]":0,"1997Q2 [YR1997Q2]":50000000,"1997Q3 [YR1997Q3]":50000000,"1997Q4 [YR1997Q4]":50000000,"1998Q1 [YR1998Q1]":50000000,"1998Q2 [YR1998Q2]":50000000,"1998Q3 [YR1998Q3]":50000000,"1998Q4 [YR1998Q4]":115000000,"1999Q1 [YR1999Q1]":115000000,"1999Q2 [YR1999Q2]":115000000,"1999Q3 [YR1999Q3]":115000000,"1999Q4 [YR1999Q4]":115000000,"2000Q1 [YR2000Q1]":115000000,"2000Q2 [YR2000Q2]":65000000,"2000Q3 [YR2000Q3]":65000000,"2000Q4 [YR2000Q4]":65000000,"2001Q1 [YR2001Q1]":65000000,"2001Q2 [YR2001Q2]":65000000,"2001Q3 [YR2001Q3]":65000000,"2001Q4 [YR2001Q4]":65000000,"2002Q1 [YR2002Q1]":65000000,"2002Q2 [YR2002Q2]":65000000,"2002Q3 [YR2002Q3]":415000000,"2002Q4 [YR2002Q4]":415000000,"2003Q1 [YR2003Q1]":415000000,"2003Q2 [YR2003Q2]":415000000,"2003Q3 [YR2003Q3]":415000000,"2003Q4 [YR2003Q4]":415000000,"2004Q1 [YR2004Q1]":415000000,"2004Q2 [YR2004Q2]":415000000,"2004Q3 [YR2004Q3]":415000000,"2004Q4 [YR2004Q4]":515000000,"2005Q1 [YR2005Q1]":515000000,"2005Q2 [YR2005Q2]":515000000,"2005Q3 [YR2005Q3]":515000000,"2005Q4 [YR2005Q4]":515000000,"2006Q1 [YR2006Q1]":515000000,"2006Q2 [YR2006Q2]":515000000,"2006Q3 [YR2006Q3]":515000000,"2006Q4 [YR2006Q4]":515000000,"2007Q1 [YR2007Q1]":515000000,"2007Q2 [YR2007Q2]":515000000,"2007Q3 [YR2007Q3]":515000000,"2007Q4 [YR2007Q4]":1015000000,"2008Q1 [YR2008Q1]":1015000000,"2008Q2 [YR2008Q2]":1015000000,"2008Q3 [YR2008Q3]":1015000000,"2008Q4 [YR2008Q4]":950000000,"2009Q1 [YR2009Q1]":950000000,"2009Q2 [YR2009Q2]":950000000,"2009Q3 [YR2009Q3]":950000000,"2009Q4 [YR2009Q4]":1350000000,"2010Q1 [YR2010Q1]":1350000000,"2010Q2 [YR2010Q2]":1350000000,"2010Q3 [YR2010Q3]":1350000000,"2010Q4 [YR2010Q4]":2350000000,"2011Q1 [YR2011Q1]":2350000000,"2011Q2 [YR2011Q2]":2350000000,"2011Q3 [YR2011Q3]":3350000000,"2011Q4 [YR2011Q4]":3350000000,"2012Q1 [YR2012Q1]":3350000000,"2012Q2 [YR2012Q2]":3850000000,"2012Q3 [YR2012Q3]":4850000000,"2012Q4 [YR2012Q4]":4350000000,"2013Q1 [YR2013Q1]":4350000000,"2013Q2 [YR2013Q2]":4850000000,"2013Q3 [YR2013Q3]":5600000000,"2013Q4 [YR2013Q4]":5700000000,"2014Q1 [YR2014Q1]":6700000000,"2014Q2 [YR2014Q2]":7375000000,"2014Q3 [YR2014Q3]":7625000000,"2014Q4 [YR2014Q4]":7625000000,"2015Q1 [YR2015Q1]":7125000000,"2015Q2 [YR2015Q2]":7775000000},
	{"Country Name":"St. Lucia","Country Code":"LCA","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":0,"1996Q2 [YR1996Q2]":0,"1996Q3 [YR1996Q3]":0,"1996Q4 [YR1996Q4]":0,"1997Q1 [YR1997Q1]":0,"1997Q2 [YR1997Q2]":0,"1997Q3 [YR1997Q3]":0,"1997Q4 [YR1997Q4]":0,"1998Q1 [YR1998Q1]":0,"1998Q2 [YR1998Q2]":0,"1998Q3 [YR1998Q3]":0,"1998Q4 [YR1998Q4]":0,"1999Q1 [YR1999Q1]":0,"1999Q2 [YR1999Q2]":0,"1999Q3 [YR1999Q3]":0,"1999Q4 [YR1999Q4]":0,"2000Q1 [YR2000Q1]":0,"2000Q2 [YR2000Q2]":0,"2000Q3 [YR2000Q3]":0,"2000Q4 [YR2000Q4]":0,"2001Q1 [YR2001Q1]":0,"2001Q2 [YR2001Q2]":0,"2001Q3 [YR2001Q3]":0,"2001Q4 [YR2001Q4]":0,"2002Q1 [YR2002Q1]":0,"2002Q2 [YR2002Q2]":0,"2002Q3 [YR2002Q3]":0,"2002Q4 [YR2002Q4]":0,"2003Q1 [YR2003Q1]":0,"2003Q2 [YR2003Q2]":0,"2003Q3 [YR2003Q3]":0,"2003Q4 [YR2003Q4]":0,"2004Q1 [YR2004Q1]":0,"2004Q2 [YR2004Q2]":0,"2004Q3 [YR2004Q3]":0,"2004Q4 [YR2004Q4]":0,"2005Q1 [YR2005Q1]":0,"2005Q2 [YR2005Q2]":0,"2005Q3 [YR2005Q3]":0,"2005Q4 [YR2005Q4]":0,"2006Q1 [YR2006Q1]":0,"2006Q2 [YR2006Q2]":0,"2006Q3 [YR2006Q3]":0,"2006Q4 [YR2006Q4]":0,"2007Q1 [YR2007Q1]":0,"2007Q2 [YR2007Q2]":0,"2007Q3 [YR2007Q3]":0,"2007Q4 [YR2007Q4]":0,"2008Q1 [YR2008Q1]":0,"2008Q2 [YR2008Q2]":0,"2008Q3 [YR2008Q3]":0,"2008Q4 [YR2008Q4]":0,"2009Q1 [YR2009Q1]":0,"2009Q2 [YR2009Q2]":0,"2009Q3 [YR2009Q3]":0,"2009Q4 [YR2009Q4]":0,"2010Q1 [YR2010Q1]":0,"2010Q2 [YR2010Q2]":0,"2010Q3 [YR2010Q3]":0,"2010Q4 [YR2010Q4]":0,"2011Q1 [YR2011Q1]":175000000,"2011Q2 [YR2011Q2]":175000000,"2011Q3 [YR2011Q3]":175000000,"2011Q4 [YR2011Q4]":175000000,"2012Q1 [YR2012Q1]":175000000,"2012Q2 [YR2012Q2]":175000000,"2012Q3 [YR2012Q3]":175000000,"2012Q4 [YR2012Q4]":175000000,"2013Q1 [YR2013Q1]":175000000,"2013Q2 [YR2013Q2]":175000000,"2013Q3 [YR2013Q3]":175000000,"2013Q4 [YR2013Q4]":175000000,"2014Q1 [YR2014Q1]":175000000,"2014Q2 [YR2014Q2]":175000000,"2014Q3 [YR2014Q3]":175000000,"2014Q4 [YR2014Q4]":175000000,"2015Q1 [YR2015Q1]":175000000,"2015Q2 [YR2015Q2]":175000000},
	{"Country Name":"St. Martin","Country Code":"MAF","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Sudan","Country Code":"SDN","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":0,"1996Q2 [YR1996Q2]":0,"1996Q3 [YR1996Q3]":0,"1996Q4 [YR1996Q4]":0,"1997Q1 [YR1997Q1]":0,"1997Q2 [YR1997Q2]":0,"1997Q3 [YR1997Q3]":0,"1997Q4 [YR1997Q4]":0,"1998Q1 [YR1998Q1]":0,"1998Q2 [YR1998Q2]":0,"1998Q3 [YR1998Q3]":0,"1998Q4 [YR1998Q4]":0,"1999Q1 [YR1999Q1]":0,"1999Q2 [YR1999Q2]":0,"1999Q3 [YR1999Q3]":0,"1999Q4 [YR1999Q4]":0,"2000Q1 [YR2000Q1]":0,"2000Q2 [YR2000Q2]":0,"2000Q3 [YR2000Q3]":0,"2000Q4 [YR2000Q4]":0,"2001Q1 [YR2001Q1]":0,"2001Q2 [YR2001Q2]":0,"2001Q3 [YR2001Q3]":0,"2001Q4 [YR2001Q4]":0,"2002Q1 [YR2002Q1]":0,"2002Q2 [YR2002Q2]":0,"2002Q3 [YR2002Q3]":0,"2002Q4 [YR2002Q4]":0,"2003Q1 [YR2003Q1]":0,"2003Q2 [YR2003Q2]":0,"2003Q3 [YR2003Q3]":0,"2003Q4 [YR2003Q4]":0,"2004Q1 [YR2004Q1]":0,"2004Q2 [YR2004Q2]":0,"2004Q3 [YR2004Q3]":0,"2004Q4 [YR2004Q4]":0,"2005Q1 [YR2005Q1]":0,"2005Q2 [YR2005Q2]":0,"2005Q3 [YR2005Q3]":0,"2005Q4 [YR2005Q4]":0,"2006Q1 [YR2006Q1]":0,"2006Q2 [YR2006Q2]":0,"2006Q3 [YR2006Q3]":0,"2006Q4 [YR2006Q4]":0,"2007Q1 [YR2007Q1]":0,"2007Q2 [YR2007Q2]":0,"2007Q3 [YR2007Q3]":0,"2007Q4 [YR2007Q4]":0,"2008Q1 [YR2008Q1]":0,"2008Q2 [YR2008Q2]":0,"2008Q3 [YR2008Q3]":0,"2008Q4 [YR2008Q4]":0,"2009Q1 [YR2009Q1]":0,"2009Q2 [YR2009Q2]":0,"2009Q3 [YR2009Q3]":0,"2009Q4 [YR2009Q4]":0,"2010Q1 [YR2010Q1]":0,"2010Q2 [YR2010Q2]":0,"2010Q3 [YR2010Q3]":0,"2010Q4 [YR2010Q4]":0,"2011Q1 [YR2011Q1]":0,"2011Q2 [YR2011Q2]":0,"2011Q3 [YR2011Q3]":0,"2011Q4 [YR2011Q4]":0,"2012Q1 [YR2012Q1]":0,"2012Q2 [YR2012Q2]":0,"2012Q3 [YR2012Q3]":0,"2012Q4 [YR2012Q4]":0,"2013Q1 [YR2013Q1]":0,"2013Q2 [YR2013Q2]":0,"2013Q3 [YR2013Q3]":0,"2013Q4 [YR2013Q4]":0,"2014Q1 [YR2014Q1]":0,"2014Q2 [YR2014Q2]":0,"2014Q3 [YR2014Q3]":0,"2014Q4 [YR2014Q4]":0,"2015Q1 [YR2015Q1]":0,"2015Q2 [YR2015Q2]":0},
	{"Country Name":"Suriname","Country Code":"SUR","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":0,"1996Q2 [YR1996Q2]":0,"1996Q3 [YR1996Q3]":0,"1996Q4 [YR1996Q4]":0,"1997Q1 [YR1997Q1]":16000000,"1997Q2 [YR1997Q2]":21000000,"1997Q3 [YR1997Q3]":21000000,"1997Q4 [YR1997Q4]":21000000,"1998Q1 [YR1998Q1]":21000000,"1998Q2 [YR1998Q2]":22000000,"1998Q3 [YR1998Q3]":22000000,"1998Q4 [YR1998Q4]":22000000,"1999Q1 [YR1999Q1]":22000000,"1999Q2 [YR1999Q2]":21000000,"1999Q3 [YR1999Q3]":21000000,"1999Q4 [YR1999Q4]":21000000,"2000Q1 [YR2000Q1]":21000000,"2000Q2 [YR2000Q2]":16000000,"2000Q3 [YR2000Q3]":16000000,"2000Q4 [YR2000Q4]":16000000,"2001Q1 [YR2001Q1]":16000000,"2001Q2 [YR2001Q2]":16000000,"2001Q3 [YR2001Q3]":16000000,"2001Q4 [YR2001Q4]":16000000,"2002Q1 [YR2002Q1]":16000000,"2002Q2 [YR2002Q2]":16000000,"2002Q3 [YR2002Q3]":16000000,"2002Q4 [YR2002Q4]":16000000,"2003Q1 [YR2003Q1]":16000000,"2003Q2 [YR2003Q2]":16000000,"2003Q3 [YR2003Q3]":16000000,"2003Q4 [YR2003Q4]":16000000,"2004Q1 [YR2004Q1]":16000000,"2004Q2 [YR2004Q2]":16000000,"2004Q3 [YR2004Q3]":16000000,"2004Q4 [YR2004Q4]":16000000,"2005Q1 [YR2005Q1]":0,"2005Q2 [YR2005Q2]":0,"2005Q3 [YR2005Q3]":0,"2005Q4 [YR2005Q4]":0,"2006Q1 [YR2006Q1]":0,"2006Q2 [YR2006Q2]":0,"2006Q3 [YR2006Q3]":0,"2006Q4 [YR2006Q4]":0,"2007Q1 [YR2007Q1]":0,"2007Q2 [YR2007Q2]":0,"2007Q3 [YR2007Q3]":0,"2007Q4 [YR2007Q4]":0,"2008Q1 [YR2008Q1]":0,"2008Q2 [YR2008Q2]":0,"2008Q3 [YR2008Q3]":0,"2008Q4 [YR2008Q4]":0,"2009Q1 [YR2009Q1]":0,"2009Q2 [YR2009Q2]":0,"2009Q3 [YR2009Q3]":0,"2009Q4 [YR2009Q4]":0,"2010Q1 [YR2010Q1]":0,"2010Q2 [YR2010Q2]":0,"2010Q3 [YR2010Q3]":0,"2010Q4 [YR2010Q4]":0,"2011Q1 [YR2011Q1]":0,"2011Q2 [YR2011Q2]":0,"2011Q3 [YR2011Q3]":0,"2011Q4 [YR2011Q4]":0,"2012Q1 [YR2012Q1]":0,"2012Q2 [YR2012Q2]":0,"2012Q3 [YR2012Q3]":0,"2012Q4 [YR2012Q4]":0,"2013Q1 [YR2013Q1]":0,"2013Q2 [YR2013Q2]":0,"2013Q3 [YR2013Q3]":0,"2013Q4 [YR2013Q4]":0,"2014Q1 [YR2014Q1]":0,"2014Q2 [YR2014Q2]":0,"2014Q3 [YR2014Q3]":0,"2014Q4 [YR2014Q4]":0,"2015Q1 [YR2015Q1]":0,"2015Q2 [YR2015Q2]":0},
	{"Country Name":"Swaziland","Country Code":"SWZ","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Sweden","Country Code":"SWE","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"1.00801E+11","1996Q2 [YR1996Q2]":"1.0486E+11","1996Q3 [YR1996Q3]":"1.0359E+11","1996Q4 [YR1996Q4]":"1.03047E+11","1997Q1 [YR1997Q1]":99510000000,"1997Q2 [YR1997Q2]":"1.02038E+11","1997Q3 [YR1997Q3]":"1.00683E+11","1997Q4 [YR1997Q4]":95830000000,"1998Q1 [YR1998Q1]":90729000000,"1998Q2 [YR1998Q2]":93122000000,"1998Q3 [YR1998Q3]":93639000000,"1998Q4 [YR1998Q4]":92383000000,"1999Q1 [YR1999Q1]":83855000000,"1999Q2 [YR1999Q2]":86598000000,"1999Q3 [YR1999Q3]":90962000000,"1999Q4 [YR1999Q4]":90308000000,"2000Q1 [YR2000Q1]":91402000000,"2000Q2 [YR2000Q2]":90512000000,"2000Q3 [YR2000Q3]":87133000000,"2000Q4 [YR2000Q4]":88190000000,"2001Q1 [YR2001Q1]":84939000000,"2001Q2 [YR2001Q2]":85959000000,"2001Q3 [YR2001Q3]":86891000000,"2001Q4 [YR2001Q4]":84612000000,"2002Q1 [YR2002Q1]":84227000000,"2002Q2 [YR2002Q2]":96464000000,"2002Q3 [YR2002Q3]":97301000000,"2002Q4 [YR2002Q4]":98976000000,"2003Q1 [YR2003Q1]":"1.02798E+11","2003Q2 [YR2003Q2]":"1.08582E+11","2003Q3 [YR2003Q3]":"1.10588E+11","2003Q4 [YR2003Q4]":"1.19208E+11","2004Q1 [YR2004Q1]":"1.23809E+11","2004Q2 [YR2004Q2]":"1.21881E+11","2004Q3 [YR2004Q3]":"1.2654E+11","2004Q4 [YR2004Q4]":"1.36449E+11","2005Q1 [YR2005Q1]":"1.38532E+11","2005Q2 [YR2005Q2]":"1.46099E+11","2005Q3 [YR2005Q3]":"1.48161E+11","2005Q4 [YR2005Q4]":"1.46077E+11","2006Q1 [YR2006Q1]":"1.60524E+11","2006Q2 [YR2006Q2]":"1.67232E+11","2006Q3 [YR2006Q3]":"1.6684E+11","2006Q4 [YR2006Q4]":"1.83221E+11","2007Q1 [YR2007Q1]":"2.00072E+11","2007Q2 [YR2007Q2]":"2.23E+11","2007Q3 [YR2007Q3]":"2.30229E+11","2007Q4 [YR2007Q4]":"2.46219E+11","2008Q1 [YR2008Q1]":"2.58629E+11","2008Q2 [YR2008Q2]":"2.81367E+11","2008Q3 [YR2008Q3]":"2.79585E+11","2008Q4 [YR2008Q4]":"2.61602E+11","2009Q1 [YR2009Q1]":"2.75725E+11","2009Q2 [YR2009Q2]":"3.21926E+11","2009Q3 [YR2009Q3]":"3.54535E+11","2009Q4 [YR2009Q4]":"3.60831E+11","2010Q1 [YR2010Q1]":"3.74497E+11","2010Q2 [YR2010Q2]":"3.44785E+11","2010Q3 [YR2010Q3]":"3.74425E+11","2010Q4 [YR2010Q4]":"3.79872E+11","2011Q1 [YR2011Q1]":"3.98107E+11","2011Q2 [YR2011Q2]":"4.16585E+11","2011Q3 [YR2011Q3]":"4.0534E+11","2011Q4 [YR2011Q4]":"3.96601E+11","2012Q1 [YR2012Q1]":"4.23288E+11","2012Q2 [YR2012Q2]":"4.20841E+11","2012Q3 [YR2012Q3]":"4.40899E+11","2012Q4 [YR2012Q4]":"4.61726E+11","2013Q1 [YR2013Q1]":"4.68935E+11","2013Q2 [YR2013Q2]":"4.72689E+11","2013Q3 [YR2013Q3]":"5.01144E+11","2013Q4 [YR2013Q4]":"4.96728E+11","2014Q1 [YR2014Q1]":"4.97891E+11","2014Q2 [YR2014Q2]":"5.02171E+11","2014Q3 [YR2014Q3]":"4.81899E+11","2014Q4 [YR2014Q4]":"4.7753E+11","2015Q1 [YR2015Q1]":"4.46597E+11","2015Q2 [YR2015Q2]":"4.59266E+11"},
	{"Country Name":"Switzerland","Country Code":"CHE","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":1653000000,"1996Q2 [YR1996Q2]":1972000000,"1996Q3 [YR1996Q3]":2100000000,"1996Q4 [YR1996Q4]":2240000000,"1997Q1 [YR1997Q1]":2927000000,"1997Q2 [YR1997Q2]":3602000000,"1997Q3 [YR1997Q3]":3783000000,"1997Q4 [YR1997Q4]":4241000000,"1998Q1 [YR1998Q1]":4947000000,"1998Q2 [YR1998Q2]":4949000000,"1998Q3 [YR1998Q3]":6464000000,"1998Q4 [YR1998Q4]":7267000000,"1999Q1 [YR1999Q1]":8260000000,"1999Q2 [YR1999Q2]":8215000000,"1999Q3 [YR1999Q3]":10080000000,"1999Q4 [YR1999Q4]":8196000000,"2000Q1 [YR2000Q1]":7055000000,"2000Q2 [YR2000Q2]":7626000000,"2000Q3 [YR2000Q3]":8160000000,"2000Q4 [YR2000Q4]":10630000000,"2001Q1 [YR2001Q1]":10959000000,"2001Q2 [YR2001Q2]":10088000000,"2001Q3 [YR2001Q3]":7828000000,"2001Q4 [YR2001Q4]":7002000000,"2002Q1 [YR2002Q1]":6764000000,"2002Q2 [YR2002Q2]":7531000000,"2002Q3 [YR2002Q3]":7305000000,"2002Q4 [YR2002Q4]":7410000000,"2003Q1 [YR2003Q1]":7455000000,"2003Q2 [YR2003Q2]":7611000000,"2003Q3 [YR2003Q3]":7702000000,"2003Q4 [YR2003Q4]":8080000000,"2004Q1 [YR2004Q1]":7938000000,"2004Q2 [YR2004Q2]":9005000000,"2004Q3 [YR2004Q3]":9134000000,"2004Q4 [YR2004Q4]":9638000000,"2005Q1 [YR2005Q1]":9048000000,"2005Q2 [YR2005Q2]":8505000000,"2005Q3 [YR2005Q3]":8761000000,"2005Q4 [YR2005Q4]":10190000000,"2006Q1 [YR2006Q1]":10539000000,"2006Q2 [YR2006Q2]":12332000000,"2006Q3 [YR2006Q3]":12981000000,"2006Q4 [YR2006Q4]":13281000000,"2007Q1 [YR2007Q1]":14045000000,"2007Q2 [YR2007Q2]":15943000000,"2007Q3 [YR2007Q3]":15782000000,"2007Q4 [YR2007Q4]":16842000000,"2008Q1 [YR2008Q1]":17224000000,"2008Q2 [YR2008Q2]":19677000000,"2008Q3 [YR2008Q3]":18443000000,"2008Q4 [YR2008Q4]":17605000000,"2009Q1 [YR2009Q1]":15828000000,"2009Q2 [YR2009Q2]":17165000000,"2009Q3 [YR2009Q3]":18047000000,"2009Q4 [YR2009Q4]":18634000000,"2010Q1 [YR2010Q1]":18233000000,"2010Q2 [YR2010Q2]":18228000000,"2010Q3 [YR2010Q3]":19565000000,"2010Q4 [YR2010Q4]":20929000000,"2011Q1 [YR2011Q1]":21999000000,"2011Q2 [YR2011Q2]":21901000000,"2011Q3 [YR2011Q3]":21534000000,"2011Q4 [YR2011Q4]":22052000000,"2012Q1 [YR2012Q1]":24599000000,"2012Q2 [YR2012Q2]":24871000000,"2012Q3 [YR2012Q3]":26118000000,"2012Q4 [YR2012Q4]":26793000000,"2013Q1 [YR2013Q1]":28091000000,"2013Q2 [YR2013Q2]":25920000000,"2013Q3 [YR2013Q3]":31344000000,"2013Q4 [YR2013Q4]":37347000000,"2014Q1 [YR2014Q1]":37014000000,"2014Q2 [YR2014Q2]":45451000000,"2014Q3 [YR2014Q3]":46933000000,"2014Q4 [YR2014Q4]":51682000000,"2015Q1 [YR2015Q1]":49685000000,"2015Q2 [YR2015Q2]":53294000000},
	{"Country Name":"Syrian Arab Republic","Country Code":"SYR","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Taiwan, China","Country Code":"TWN","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":2813000000,"1996Q2 [YR1996Q2]":2931000000,"1996Q3 [YR1996Q3]":3043000000,"1996Q4 [YR1996Q4]":3440000000,"1997Q1 [YR1997Q1]":3791000000,"1997Q2 [YR1997Q2]":4554000000,"1997Q3 [YR1997Q3]":5011000000,"1997Q4 [YR1997Q4]":5518000000,"1998Q1 [YR1998Q1]":5787000000,"1998Q2 [YR1998Q2]":6525000000,"1998Q3 [YR1998Q3]":6535000000,"1998Q4 [YR1998Q4]":6479000000,"1999Q1 [YR1999Q1]":6492000000,"1999Q2 [YR1999Q2]":6609000000,"1999Q3 [YR1999Q3]":6609000000,"1999Q4 [YR1999Q4]":6220000000,"2000Q1 [YR2000Q1]":6828000000,"2000Q2 [YR2000Q2]":6271000000,"2000Q3 [YR2000Q3]":5970000000,"2000Q4 [YR2000Q4]":6109000000,"2001Q1 [YR2001Q1]":6585000000,"2001Q2 [YR2001Q2]":7021000000,"2001Q3 [YR2001Q3]":7206000000,"2001Q4 [YR2001Q4]":7128000000,"2002Q1 [YR2002Q1]":8132000000,"2002Q2 [YR2002Q2]":10072000000,"2002Q3 [YR2002Q3]":11003000000,"2002Q4 [YR2002Q4]":11479000000,"2003Q1 [YR2003Q1]":12612000000,"2003Q2 [YR2003Q2]":13343000000,"2003Q3 [YR2003Q3]":16773000000,"2003Q4 [YR2003Q4]":18813000000,"2004Q1 [YR2004Q1]":21211000000,"2004Q2 [YR2004Q2]":23286000000,"2004Q3 [YR2004Q3]":23029000000,"2004Q4 [YR2004Q4]":23384000000,"2005Q1 [YR2005Q1]":23133000000,"2005Q2 [YR2005Q2]":22672000000,"2005Q3 [YR2005Q3]":21696000000,"2005Q4 [YR2005Q4]":21187000000,"2006Q1 [YR2006Q1]":19577000000,"2006Q2 [YR2006Q2]":18443000000,"2006Q3 [YR2006Q3]":18223000000,"2006Q4 [YR2006Q4]":18543000000,"2007Q1 [YR2007Q1]":17637000000,"2007Q2 [YR2007Q2]":16309000000,"2007Q3 [YR2007Q3]":14906000000,"2007Q4 [YR2007Q4]":15004000000,"2008Q1 [YR2008Q1]":13517000000,"2008Q2 [YR2008Q2]":12364000000,"2008Q3 [YR2008Q3]":11092000000,"2008Q4 [YR2008Q4]":9376000000,"2009Q1 [YR2009Q1]":7967000000,"2009Q2 [YR2009Q2]":6712000000,"2009Q3 [YR2009Q3]":6337000000,"2009Q4 [YR2009Q4]":5685000000,"2010Q1 [YR2010Q1]":5278000000,"2010Q2 [YR2010Q2]":5271000000,"2010Q3 [YR2010Q3]":6316000000,"2010Q4 [YR2010Q4]":6890000000,"2011Q1 [YR2011Q1]":7627000000,"2011Q2 [YR2011Q2]":8711000000,"2011Q3 [YR2011Q3]":9067000000,"2011Q4 [YR2011Q4]":8911000000,"2012Q1 [YR2012Q1]":9285000000,"2012Q2 [YR2012Q2]":8926000000,"2012Q3 [YR2012Q3]":9470000000,"2012Q4 [YR2012Q4]":8979000000,"2013Q1 [YR2013Q1]":9109000000,"2013Q2 [YR2013Q2]":9675000000,"2013Q3 [YR2013Q3]":10451000000,"2013Q4 [YR2013Q4]":9274000000,"2014Q1 [YR2014Q1]":9802000000,"2014Q2 [YR2014Q2]":8694000000,"2014Q3 [YR2014Q3]":9438000000,"2014Q4 [YR2014Q4]":11981000000,"2015Q1 [YR2015Q1]":12735000000,"2015Q2 [YR2015Q2]":15183000000},
	{"Country Name":"Tajikistan","Country Code":"TJK","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Tanzania","Country Code":"TZA","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Thailand","Country Code":"THA","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":7648000000,"1996Q2 [YR1996Q2]":8596000000,"1996Q3 [YR1996Q3]":9962000000,"1996Q4 [YR1996Q4]":10812000000,"1997Q1 [YR1997Q1]":11371000000,"1997Q2 [YR1997Q2]":12656000000,"1997Q3 [YR1997Q3]":12788000000,"1997Q4 [YR1997Q4]":12444000000,"1998Q1 [YR1998Q1]":12416000000,"1998Q2 [YR1998Q2]":12331000000,"1998Q3 [YR1998Q3]":12334000000,"1998Q4 [YR1998Q4]":12702000000,"1999Q1 [YR1999Q1]":12356000000,"1999Q2 [YR1999Q2]":12481000000,"1999Q3 [YR1999Q3]":11979000000,"1999Q4 [YR1999Q4]":12102000000,"2000Q1 [YR2000Q1]":11832000000,"2000Q2 [YR2000Q2]":12041000000,"2000Q3 [YR2000Q3]":11396000000,"2000Q4 [YR2000Q4]":11200000000,"2001Q1 [YR2001Q1]":10754000000,"2001Q2 [YR2001Q2]":10702000000,"2001Q3 [YR2001Q3]":10005000000,"2001Q4 [YR2001Q4]":9289000000,"2002Q1 [YR2002Q1]":8796000000,"2002Q2 [YR2002Q2]":8638000000,"2002Q3 [YR2002Q3]":9521000000,"2002Q4 [YR2002Q4]":9289000000,"2003Q1 [YR2003Q1]":9267000000,"2003Q2 [YR2003Q2]":9132000000,"2003Q3 [YR2003Q3]":8710000000,"2003Q4 [YR2003Q4]":8308000000,"2004Q1 [YR2004Q1]":7428000000,"2004Q2 [YR2004Q2]":7933000000,"2004Q3 [YR2004Q3]":8553000000,"2004Q4 [YR2004Q4]":8905000000,"2005Q1 [YR2005Q1]":9075000000,"2005Q2 [YR2005Q2]":10441000000,"2005Q3 [YR2005Q3]":9921000000,"2005Q4 [YR2005Q4]":10050000000,"2006Q1 [YR2006Q1]":9997000000,"2006Q2 [YR2006Q2]":10509000000,"2006Q3 [YR2006Q3]":10988000000,"2006Q4 [YR2006Q4]":10432000000,"2007Q1 [YR2007Q1]":9809000000,"2007Q2 [YR2007Q2]":8726000000,"2007Q3 [YR2007Q3]":8762000000,"2007Q4 [YR2007Q4]":8473000000,"2008Q1 [YR2008Q1]":8679000000,"2008Q2 [YR2008Q2]":8467000000,"2008Q3 [YR2008Q3]":8444000000,"2008Q4 [YR2008Q4]":8157000000,"2009Q1 [YR2009Q1]":7884000000,"2009Q2 [YR2009Q2]":7949000000,"2009Q3 [YR2009Q3]":7770000000,"2009Q4 [YR2009Q4]":7617000000,"2010Q1 [YR2010Q1]":7384000000,"2010Q2 [YR2010Q2]":7097000000,"2010Q3 [YR2010Q3]":7228000000,"2010Q4 [YR2010Q4]":7142000000,"2011Q1 [YR2011Q1]":7444000000,"2011Q2 [YR2011Q2]":7003000000,"2011Q3 [YR2011Q3]":6618000000,"2011Q4 [YR2011Q4]":6583000000,"2012Q1 [YR2012Q1]":6574000000,"2012Q2 [YR2012Q2]":6561000000,"2012Q3 [YR2012Q3]":7151000000,"2012Q4 [YR2012Q4]":8901000000,"2013Q1 [YR2013Q1]":9457000000,"2013Q2 [YR2013Q2]":9232000000,"2013Q3 [YR2013Q3]":9717000000,"2013Q4 [YR2013Q4]":9332000000,"2014Q1 [YR2014Q1]":9654000000,"2014Q2 [YR2014Q2]":10661000000,"2014Q3 [YR2014Q3]":10316000000,"2014Q4 [YR2014Q4]":10136000000,"2015Q1 [YR2015Q1]":10213000000,"2015Q2 [YR2015Q2]":9471000000},
	{"Country Name":"Timor-Leste","Country Code":"TMP","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Togo","Country Code":"TGO","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Tokelau","Country Code":"TKL","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Tonga","Country Code":"TON","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Trinidad and Tobago","Country Code":"TTO","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":342000000,"1996Q2 [YR1996Q2]":343000000,"1996Q3 [YR1996Q3]":343000000,"1996Q4 [YR1996Q4]":497000000,"1997Q1 [YR1997Q1]":495000000,"1997Q2 [YR1997Q2]":496000000,"1997Q3 [YR1997Q3]":495000000,"1997Q4 [YR1997Q4]":396000000,"1998Q1 [YR1998Q1]":397000000,"1998Q2 [YR1998Q2]":396000000,"1998Q3 [YR1998Q3]":397000000,"1998Q4 [YR1998Q4]":396000000,"1999Q1 [YR1999Q1]":395000000,"1999Q2 [YR1999Q2]":394000000,"1999Q3 [YR1999Q3]":626000000,"1999Q4 [YR1999Q4]":625000000,"2000Q1 [YR2000Q1]":624000000,"2000Q2 [YR2000Q2]":872000000,"2000Q3 [YR2000Q3]":870000000,"2000Q4 [YR2000Q4]":675000000,"2001Q1 [YR2001Q1]":746000000,"2001Q2 [YR2001Q2]":745000000,"2001Q3 [YR2001Q3]":747000000,"2001Q4 [YR2001Q4]":1562000000,"2002Q1 [YR2002Q1]":1668000000,"2002Q2 [YR2002Q2]":1800000000,"2002Q3 [YR2002Q3]":1637000000,"2002Q4 [YR2002Q4]":1755000000,"2003Q1 [YR2003Q1]":1649000000,"2003Q2 [YR2003Q2]":1702000000,"2003Q3 [YR2003Q3]":1910000000,"2003Q4 [YR2003Q4]":1889000000,"2004Q1 [YR2004Q1]":1918000000,"2004Q2 [YR2004Q2]":1843000000,"2004Q3 [YR2004Q3]":2014000000,"2004Q4 [YR2004Q4]":2001000000,"2005Q1 [YR2005Q1]":2126000000,"2005Q2 [YR2005Q2]":2039000000,"2005Q3 [YR2005Q3]":2099000000,"2005Q4 [YR2005Q4]":2050000000,"2006Q1 [YR2006Q1]":2623000000,"2006Q2 [YR2006Q2]":2528000000,"2006Q3 [YR2006Q3]":2609000000,"2006Q4 [YR2006Q4]":2496000000,"2007Q1 [YR2007Q1]":1532000000,"2007Q2 [YR2007Q2]":2299000000,"2007Q3 [YR2007Q3]":2291000000,"2007Q4 [YR2007Q4]":2291000000,"2008Q1 [YR2008Q1]":2290000000,"2008Q2 [YR2008Q2]":2290000000,"2008Q3 [YR2008Q3]":2284000000,"2008Q4 [YR2008Q4]":2274000000,"2009Q1 [YR2009Q1]":2273000000,"2009Q2 [YR2009Q2]":2230000000,"2009Q3 [YR2009Q3]":3080000000,"2009Q4 [YR2009Q4]":2850000000,"2010Q1 [YR2010Q1]":2850000000,"2010Q2 [YR2010Q2]":2850000000,"2010Q3 [YR2010Q3]":2850000000,"2010Q4 [YR2010Q4]":2850000000,"2011Q1 [YR2011Q1]":2750000000,"2011Q2 [YR2011Q2]":2750000000,"2011Q3 [YR2011Q3]":2750000000,"2011Q4 [YR2011Q4]":2750000000,"2012Q1 [YR2012Q1]":2650000000,"2012Q2 [YR2012Q2]":2650000000,"2012Q3 [YR2012Q3]":2650000000,"2012Q4 [YR2012Q4]":2650000000,"2013Q1 [YR2013Q1]":2650000000,"2013Q2 [YR2013Q2]":2650000000,"2013Q3 [YR2013Q3]":2650000000,"2013Q4 [YR2013Q4]":3200000000,"2014Q1 [YR2014Q1]":3050000000,"2014Q2 [YR2014Q2]":3050000000,"2014Q3 [YR2014Q3]":3050000000,"2014Q4 [YR2014Q4]":3050000000,"2015Q1 [YR2015Q1]":3050000000,"2015Q2 [YR2015Q2]":3050000000},
	{"Country Name":"Tunisia","Country Code":"TUN","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":797000000,"1996Q2 [YR1996Q2]":774000000,"1996Q3 [YR1996Q3]":899000000,"1996Q4 [YR1996Q4]":861000000,"1997Q1 [YR1997Q1]":807000000,"1997Q2 [YR1997Q2]":873000000,"1997Q3 [YR1997Q3]":1309000000,"1997Q4 [YR1997Q4]":1248000000,"1998Q1 [YR1998Q1]":1235000000,"1998Q2 [YR1998Q2]":1185000000,"1998Q3 [YR1998Q3]":1216000000,"1998Q4 [YR1998Q4]":1351000000,"1999Q1 [YR1999Q1]":1314000000,"1999Q2 [YR1999Q2]":1309000000,"1999Q3 [YR1999Q3]":1543000000,"1999Q4 [YR1999Q4]":1581000000,"2000Q1 [YR2000Q1]":1304000000,"2000Q2 [YR2000Q2]":1193000000,"2000Q3 [YR2000Q3]":1633000000,"2000Q4 [YR2000Q4]":1527000000,"2001Q1 [YR2001Q1]":1886000000,"2001Q2 [YR2001Q2]":1888000000,"2001Q3 [YR2001Q3]":1950000000,"2001Q4 [YR2001Q4]":1811000000,"2002Q1 [YR2002Q1]":1796000000,"2002Q2 [YR2002Q2]":2607000000,"2002Q3 [YR2002Q3]":2581000000,"2002Q4 [YR2002Q4]":2607000000,"2003Q1 [YR2003Q1]":2968000000,"2003Q2 [YR2003Q2]":2995000000,"2003Q3 [YR2003Q3]":3115000000,"2003Q4 [YR2003Q4]":3217000000,"2004Q1 [YR2004Q1]":2954000000,"2004Q2 [YR2004Q2]":3447000000,"2004Q3 [YR2004Q3]":3439000000,"2004Q4 [YR2004Q4]":3606000000,"2005Q1 [YR2005Q1]":3507000000,"2005Q2 [YR2005Q2]":3998000000,"2005Q3 [YR2005Q3]":3827000000,"2005Q4 [YR2005Q4]":3748000000,"2006Q1 [YR2006Q1]":3498000000,"2006Q2 [YR2006Q2]":3507000000,"2006Q3 [YR2006Q3]":3481000000,"2006Q4 [YR2006Q4]":3540000000,"2007Q1 [YR2007Q1]":3568000000,"2007Q2 [YR2007Q2]":3558000000,"2007Q3 [YR2007Q3]":3710000000,"2007Q4 [YR2007Q4]":3791000000,"2008Q1 [YR2008Q1]":4080000000,"2008Q2 [YR2008Q2]":4003000000,"2008Q3 [YR2008Q3]":3834000000,"2008Q4 [YR2008Q4]":3916000000,"2009Q1 [YR2009Q1]":3739000000,"2009Q2 [YR2009Q2]":3873000000,"2009Q3 [YR2009Q3]":3865000000,"2009Q4 [YR2009Q4]":3803000000,"2010Q1 [YR2010Q1]":3677000000,"2010Q2 [YR2010Q2]":3602000000,"2010Q3 [YR2010Q3]":3430000000,"2010Q4 [YR2010Q4]":3420000000,"2011Q1 [YR2011Q1]":3499000000,"2011Q2 [YR2011Q2]":2908000000,"2011Q3 [YR2011Q3]":2699000000,"2011Q4 [YR2011Q4]":2645000000,"2012Q1 [YR2012Q1]":2627000000,"2012Q2 [YR2012Q2]":2452000000,"2012Q3 [YR2012Q3]":2981000000,"2012Q4 [YR2012Q4]":3196000000,"2013Q1 [YR2013Q1]":2656000000,"2013Q2 [YR2013Q2]":2626000000,"2013Q3 [YR2013Q3]":3105000000,"2013Q4 [YR2013Q4]":3014000000,"2014Q1 [YR2014Q1]":3046000000,"2014Q2 [YR2014Q2]":3061000000,"2014Q3 [YR2014Q3]":3417000000,"2014Q4 [YR2014Q4]":3694000000,"2015Q1 [YR2015Q1]":4646000000,"2015Q2 [YR2015Q2]":4633000000},
	{"Country Name":"Turkey","Country Code":"TUR","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":12620000000,"1996Q2 [YR1996Q2]":13690000000,"1996Q3 [YR1996Q3]":13020000000,"1996Q4 [YR1996Q4]":11937000000,"1997Q1 [YR1997Q1]":11730000000,"1997Q2 [YR1997Q2]":12802000000,"1997Q3 [YR1997Q3]":13088000000,"1997Q4 [YR1997Q4]":12916000000,"1998Q1 [YR1998Q1]":13452000000,"1998Q2 [YR1998Q2]":13844000000,"1998Q3 [YR1998Q3]":13662000000,"1998Q4 [YR1998Q4]":12837000000,"1999Q1 [YR1999Q1]":13232000000,"1999Q2 [YR1999Q2]":13235000000,"1999Q3 [YR1999Q3]":13889000000,"1999Q4 [YR1999Q4]":16374000000,"2000Q1 [YR2000Q1]":17976000000,"2000Q2 [YR2000Q2]":19925000000,"2000Q3 [YR2000Q3]":20336000000,"2000Q4 [YR2000Q4]":20459000000,"2001Q1 [YR2001Q1]":20174000000,"2001Q2 [YR2001Q2]":19244000000,"2001Q3 [YR2001Q3]":19984000000,"2001Q4 [YR2001Q4]":19873000000,"2002Q1 [YR2002Q1]":20625000000,"2002Q2 [YR2002Q2]":21619000000,"2002Q3 [YR2002Q3]":21404000000,"2002Q4 [YR2002Q4]":22332000000,"2003Q1 [YR2003Q1]":23014000000,"2003Q2 [YR2003Q2]":24491000000,"2003Q3 [YR2003Q3]":25437000000,"2003Q4 [YR2003Q4]":25531000000,"2004Q1 [YR2004Q1]":25181000000,"2004Q2 [YR2004Q2]":25859000000,"2004Q3 [YR2004Q3]":26261000000,"2004Q4 [YR2004Q4]":28189000000,"2005Q1 [YR2005Q1]":29085000000,"2005Q2 [YR2005Q2]":29221000000,"2005Q3 [YR2005Q3]":29083000000,"2005Q4 [YR2005Q4]":30059000000,"2006Q1 [YR2006Q1]":32723000000,"2006Q2 [YR2006Q2]":32598000000,"2006Q3 [YR2006Q3]":35138000000,"2006Q4 [YR2006Q4]":36443000000,"2007Q1 [YR2007Q1]":39979000000,"2007Q2 [YR2007Q2]":40043000000,"2007Q3 [YR2007Q3]":40080000000,"2007Q4 [YR2007Q4]":41802000000,"2008Q1 [YR2008Q1]":41412000000,"2008Q2 [YR2008Q2]":41872000000,"2008Q3 [YR2008Q3]":42173000000,"2008Q4 [YR2008Q4]":41256000000,"2009Q1 [YR2009Q1]":41756000000,"2009Q2 [YR2009Q2]":42684000000,"2009Q3 [YR2009Q3]":43473000000,"2009Q4 [YR2009Q4]":43293000000,"2010Q1 [YR2010Q1]":44240000000,"2010Q2 [YR2010Q2]":43462000000,"2010Q3 [YR2010Q3]":47541000000,"2010Q4 [YR2010Q4]":48927000000,"2011Q1 [YR2011Q1]":52754000000,"2011Q2 [YR2011Q2]":54196000000,"2011Q3 [YR2011Q3]":53270000000,"2011Q4 [YR2011Q4]":54657000000,"2012Q1 [YR2012Q1]":58885000000,"2012Q2 [YR2012Q2]":61303000000,"2012Q3 [YR2012Q3]":63857000000,"2012Q4 [YR2012Q4]":70920000000,"2013Q1 [YR2013Q1]":72956000000,"2013Q2 [YR2013Q2]":80397000000,"2013Q3 [YR2013Q3]":81738000000,"2013Q4 [YR2013Q4]":90188000000,"2014Q1 [YR2014Q1]":91284000000,"2014Q2 [YR2014Q2]":"1.02017E+11","2014Q3 [YR2014Q3]":"1.07132E+11","2014Q4 [YR2014Q4]":"1.11276E+11","2015Q1 [YR2015Q1]":"1.1145E+11","2015Q2 [YR2015Q2]":"1.13216E+11"},
	{"Country Name":"Turkmenistan","Country Code":"TKM","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Turks and Caicos Islands","Country Code":"TCA","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":0,"1996Q2 [YR1996Q2]":0,"1996Q3 [YR1996Q3]":0,"1996Q4 [YR1996Q4]":0,"1997Q1 [YR1997Q1]":0,"1997Q2 [YR1997Q2]":0,"1997Q3 [YR1997Q3]":0,"1997Q4 [YR1997Q4]":0,"1998Q1 [YR1998Q1]":0,"1998Q2 [YR1998Q2]":0,"1998Q3 [YR1998Q3]":0,"1998Q4 [YR1998Q4]":0,"1999Q1 [YR1999Q1]":0,"1999Q2 [YR1999Q2]":0,"1999Q3 [YR1999Q3]":0,"1999Q4 [YR1999Q4]":0,"2000Q1 [YR2000Q1]":0,"2000Q2 [YR2000Q2]":0,"2000Q3 [YR2000Q3]":0,"2000Q4 [YR2000Q4]":0,"2001Q1 [YR2001Q1]":0,"2001Q2 [YR2001Q2]":0,"2001Q3 [YR2001Q3]":0,"2001Q4 [YR2001Q4]":0,"2002Q1 [YR2002Q1]":0,"2002Q2 [YR2002Q2]":0,"2002Q3 [YR2002Q3]":0,"2002Q4 [YR2002Q4]":0,"2003Q1 [YR2003Q1]":0,"2003Q2 [YR2003Q2]":0,"2003Q3 [YR2003Q3]":0,"2003Q4 [YR2003Q4]":0,"2004Q1 [YR2004Q1]":0,"2004Q2 [YR2004Q2]":0,"2004Q3 [YR2004Q3]":0,"2004Q4 [YR2004Q4]":0,"2005Q1 [YR2005Q1]":0,"2005Q2 [YR2005Q2]":0,"2005Q3 [YR2005Q3]":0,"2005Q4 [YR2005Q4]":0,"2006Q1 [YR2006Q1]":0,"2006Q2 [YR2006Q2]":0,"2006Q3 [YR2006Q3]":0,"2006Q4 [YR2006Q4]":0,"2007Q1 [YR2007Q1]":0,"2007Q2 [YR2007Q2]":0,"2007Q3 [YR2007Q3]":0,"2007Q4 [YR2007Q4]":0,"2008Q1 [YR2008Q1]":0,"2008Q2 [YR2008Q2]":0,"2008Q3 [YR2008Q3]":0,"2008Q4 [YR2008Q4]":0,"2009Q1 [YR2009Q1]":0,"2009Q2 [YR2009Q2]":0,"2009Q3 [YR2009Q3]":0,"2009Q4 [YR2009Q4]":0,"2010Q1 [YR2010Q1]":0,"2010Q2 [YR2010Q2]":0,"2010Q3 [YR2010Q3]":0,"2010Q4 [YR2010Q4]":0,"2011Q1 [YR2011Q1]":0,"2011Q2 [YR2011Q2]":170000000,"2011Q3 [YR2011Q3]":170000000,"2011Q4 [YR2011Q4]":170000000,"2012Q1 [YR2012Q1]":170000000,"2012Q2 [YR2012Q2]":170000000,"2012Q3 [YR2012Q3]":170000000,"2012Q4 [YR2012Q4]":170000000,"2013Q1 [YR2013Q1]":170000000,"2013Q2 [YR2013Q2]":170000000,"2013Q3 [YR2013Q3]":170000000,"2013Q4 [YR2013Q4]":170000000,"2014Q1 [YR2014Q1]":170000000,"2014Q2 [YR2014Q2]":170000000,"2014Q3 [YR2014Q3]":170000000,"2014Q4 [YR2014Q4]":260000000,"2015Q1 [YR2015Q1]":260000000,"2015Q2 [YR2015Q2]":260000000},
	{"Country Name":"Tuvalu","Country Code":"TUV","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Uganda","Country Code":"UGA","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"UK including Guernsey, Isle of Man and Jersey","Country Code":"GIJ","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Ukraine","Country Code":"UKR","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":0,"1996Q2 [YR1996Q2]":0,"1996Q3 [YR1996Q3]":0,"1996Q4 [YR1996Q4]":0,"1997Q1 [YR1997Q1]":0,"1997Q2 [YR1997Q2]":0,"1997Q3 [YR1997Q3]":416000000,"1997Q4 [YR1997Q4]":425000000,"1998Q1 [YR1998Q1]":1378000000,"1998Q2 [YR1998Q2]":1544000000,"1998Q3 [YR1998Q3]":1337000000,"1998Q4 [YR1998Q4]":1336000000,"1999Q1 [YR1999Q1]":1241000000,"1999Q2 [YR1999Q2]":1044000000,"1999Q3 [YR1999Q3]":1372000000,"1999Q4 [YR1999Q4]":1292000000,"2000Q1 [YR2000Q1]":751000000,"2000Q2 [YR2000Q2]":2964000000,"2000Q3 [YR2000Q3]":2812000000,"2000Q4 [YR2000Q4]":2916000000,"2001Q1 [YR2001Q1]":2066000000,"2001Q2 [YR2001Q2]":2028000000,"2001Q3 [YR2001Q3]":2034000000,"2001Q4 [YR2001Q4]":2000000000,"2002Q1 [YR2002Q1]":1885000000,"2002Q2 [YR2002Q2]":2011000000,"2002Q3 [YR2002Q3]":1887000000,"2002Q4 [YR2002Q4]":2446000000,"2003Q1 [YR2003Q1]":2324000000,"2003Q2 [YR2003Q2]":3169000000,"2003Q3 [YR2003Q3]":3110000000,"2003Q4 [YR2003Q4]":3482000000,"2004Q1 [YR2004Q1]":3817000000,"2004Q2 [YR2004Q2]":3913000000,"2004Q3 [YR2004Q3]":5307000000,"2004Q4 [YR2004Q4]":5371000000,"2005Q1 [YR2005Q1]":5194000000,"2005Q2 [YR2005Q2]":5457000000,"2005Q3 [YR2005Q3]":5472000000,"2005Q4 [YR2005Q4]":6612000000,"2006Q1 [YR2006Q1]":6652000000,"2006Q2 [YR2006Q2]":6702000000,"2006Q3 [YR2006Q3]":7114000000,"2006Q4 [YR2006Q4]":9253000000,"2007Q1 [YR2007Q1]":9668000000,"2007Q2 [YR2007Q2]":10676000000,"2007Q3 [YR2007Q3]":11247000000,"2007Q4 [YR2007Q4]":12356000000,"2008Q1 [YR2008Q1]":12511000000,"2008Q2 [YR2008Q2]":12490000000,"2008Q3 [YR2008Q3]":11820000000,"2008Q4 [YR2008Q4]":11722000000,"2009Q1 [YR2009Q1]":11638000000,"2009Q2 [YR2009Q2]":11724000000,"2009Q3 [YR2009Q3]":10275000000,"2009Q4 [YR2009Q4]":11755000000,"2010Q1 [YR2010Q1]":10903000000,"2010Q2 [YR2010Q2]":10842000000,"2010Q3 [YR2010Q3]":12703000000,"2010Q4 [YR2010Q4]":14232000000,"2011Q1 [YR2011Q1]":16105000000,"2011Q2 [YR2011Q2]":18140000000,"2011Q3 [YR2011Q3]":18014000000,"2011Q4 [YR2011Q4]":16844000000,"2012Q1 [YR2012Q1]":16403000000,"2012Q2 [YR2012Q2]":15636000000,"2012Q3 [YR2012Q3]":19273000000,"2012Q4 [YR2012Q4]":21106000000,"2013Q1 [YR2013Q1]":23226000000,"2013Q2 [YR2013Q2]":24102000000,"2013Q3 [YR2013Q3]":24160000000,"2013Q4 [YR2013Q4]":27190000000,"2014Q1 [YR2014Q1]":26899000000,"2014Q2 [YR2014Q2]":26885000000,"2014Q3 [YR2014Q3]":25165000000,"2014Q4 [YR2014Q4]":25113000000,"2015Q1 [YR2015Q1]":25043000000,"2015Q2 [YR2015Q2]":25355000000},
	{"Country Name":"United Arab Emirates","Country Code":"ARE","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":1500000000,"1996Q2 [YR1996Q2]":1500000000,"1996Q3 [YR1996Q3]":1500000000,"1996Q4 [YR1996Q4]":1500000000,"1997Q1 [YR1997Q1]":1500000000,"1997Q2 [YR1997Q2]":1500000000,"1997Q3 [YR1997Q3]":1500000000,"1997Q4 [YR1997Q4]":1500000000,"1998Q1 [YR1998Q1]":1500000000,"1998Q2 [YR1998Q2]":1500000000,"1998Q3 [YR1998Q3]":1500000000,"1998Q4 [YR1998Q4]":1500000000,"1999Q1 [YR1999Q1]":1500000000,"1999Q2 [YR1999Q2]":1500000000,"1999Q3 [YR1999Q3]":1500000000,"1999Q4 [YR1999Q4]":1500000000,"2000Q1 [YR2000Q1]":1500000000,"2000Q2 [YR2000Q2]":1500000000,"2000Q3 [YR2000Q3]":1500000000,"2000Q4 [YR2000Q4]":1500000000,"2001Q1 [YR2001Q1]":1500000000,"2001Q2 [YR2001Q2]":1500000000,"2001Q3 [YR2001Q3]":1500000000,"2001Q4 [YR2001Q4]":1500000000,"2002Q1 [YR2002Q1]":1500000000,"2002Q2 [YR2002Q2]":1500000000,"2002Q3 [YR2002Q3]":1730000000,"2002Q4 [YR2002Q4]":1730000000,"2003Q1 [YR2003Q1]":1730000000,"2003Q2 [YR2003Q2]":1730000000,"2003Q3 [YR2003Q3]":1730000000,"2003Q4 [YR2003Q4]":1730000000,"2004Q1 [YR2004Q1]":3030000000,"2004Q2 [YR2004Q2]":3030000000,"2004Q3 [YR2004Q3]":3030000000,"2004Q4 [YR2004Q4]":4030000000,"2005Q1 [YR2005Q1]":5105000000,"2005Q2 [YR2005Q2]":7105000000,"2005Q3 [YR2005Q3]":7612000000,"2005Q4 [YR2005Q4]":9965000000,"2006Q1 [YR2006Q1]":15357000000,"2006Q2 [YR2006Q2]":18134000000,"2006Q3 [YR2006Q3]":20095000000,"2006Q4 [YR2006Q4]":31858000000,"2007Q1 [YR2007Q1]":36321000000,"2007Q2 [YR2007Q2]":38167000000,"2007Q3 [YR2007Q3]":42749000000,"2007Q4 [YR2007Q4]":46440000000,"2008Q1 [YR2008Q1]":47203000000,"2008Q2 [YR2008Q2]":52392000000,"2008Q3 [YR2008Q3]":54103000000,"2008Q4 [YR2008Q4]":49829000000,"2009Q1 [YR2009Q1]":47798000000,"2009Q2 [YR2009Q2]":54039000000,"2009Q3 [YR2009Q3]":60066000000,"2009Q4 [YR2009Q4]":55703000000,"2010Q1 [YR2010Q1]":54185000000,"2010Q2 [YR2010Q2]":52556000000,"2010Q3 [YR2010Q3]":53173000000,"2010Q4 [YR2010Q4]":55326000000,"2011Q1 [YR2011Q1]":55676000000,"2011Q2 [YR2011Q2]":58526000000,"2011Q3 [YR2011Q3]":58053000000,"2011Q4 [YR2011Q4]":59637000000,"2012Q1 [YR2012Q1]":61105000000,"2012Q2 [YR2012Q2]":59934000000,"2012Q3 [YR2012Q3]":61486000000,"2012Q4 [YR2012Q4]":67236000000,"2013Q1 [YR2013Q1]":70312000000,"2013Q2 [YR2013Q2]":72496000000,"2013Q3 [YR2013Q3]":72112000000,"2013Q4 [YR2013Q4]":73855000000,"2014Q1 [YR2014Q1]":75246000000,"2014Q2 [YR2014Q2]":81827000000,"2014Q3 [YR2014Q3]":80035000000,"2014Q4 [YR2014Q4]":84092000000,"2015Q1 [YR2015Q1]":87240000000,"2015Q2 [YR2015Q2]":92880000000},
	{"Country Name":"United Kingdom","Country Code":"GBR","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"2.47354E+11","1996Q2 [YR1996Q2]":"2.61963E+11","1996Q3 [YR1996Q3]":"2.75083E+11","1996Q4 [YR1996Q4]":"3.08673E+11","1997Q1 [YR1997Q1]":"3.12342E+11","1997Q2 [YR1997Q2]":"3.3364E+11","1997Q3 [YR1997Q3]":"3.45829E+11","1997Q4 [YR1997Q4]":"3.54716E+11","1998Q1 [YR1998Q1]":"3.8004E+11","1998Q2 [YR1998Q2]":"3.9707E+11","1998Q3 [YR1998Q3]":"4.25588E+11","1998Q4 [YR1998Q4]":"4.31855E+11","1999Q1 [YR1999Q1]":"4.60118E+11","1999Q2 [YR1999Q2]":"4.93091E+11","1999Q3 [YR1999Q3]":"5.54254E+11","1999Q4 [YR1999Q4]":"5.69457E+11","2000Q1 [YR2000Q1]":"6.04205E+11","2000Q2 [YR2000Q2]":"6.4342E+11","2000Q3 [YR2000Q3]":"6.46026E+11","2000Q4 [YR2000Q4]":"6.95467E+11","2001Q1 [YR2001Q1]":"6.90342E+11","2001Q2 [YR2001Q2]":"6.97715E+11","2001Q3 [YR2001Q3]":"7.3296E+11","2001Q4 [YR2001Q4]":"7.44032E+11","2002Q1 [YR2002Q1]":"7.47644E+11","2002Q2 [YR2002Q2]":"8.40935E+11","2002Q3 [YR2002Q3]":"8.79135E+11","2002Q4 [YR2002Q4]":"9.28684E+11","2003Q1 [YR2003Q1]":"9.81737E+11","2003Q2 [YR2003Q2]":"1.06995E+12","2003Q3 [YR2003Q3]":"1.14631E+12","2003Q4 [YR2003Q4]":"1.29085E+12","2004Q1 [YR2004Q1]":"1.36615E+12","2004Q2 [YR2004Q2]":"1.42952E+12","2004Q3 [YR2004Q3]":"1.51698E+12","2004Q4 [YR2004Q4]":"1.7073E+12","2005Q1 [YR2005Q1]":"1.73884E+12","2005Q2 [YR2005Q2]":"1.74188E+12","2005Q3 [YR2005Q3]":"1.82285E+12","2005Q4 [YR2005Q4]":"1.89014E+12","2006Q1 [YR2006Q1]":"2.01513E+12","2006Q2 [YR2006Q2]":"2.16045E+12","2006Q3 [YR2006Q3]":"2.2866E+12","2006Q4 [YR2006Q4]":"2.49247E+12","2007Q1 [YR2007Q1]":"2.68109E+12","2007Q2 [YR2007Q2]":"2.87741E+12","2007Q3 [YR2007Q3]":"3.06138E+12","2007Q4 [YR2007Q4]":"3.15217E+12","2008Q1 [YR2008Q1]":"3.3257E+12","2008Q2 [YR2008Q2]":"3.54751E+12","2008Q3 [YR2008Q3]":"3.41105E+12","2008Q4 [YR2008Q4]":"3.42532E+12","2009Q1 [YR2009Q1]":"3.37902E+12","2009Q2 [YR2009Q2]":"3.68223E+12","2009Q3 [YR2009Q3]":"3.77456E+12","2009Q4 [YR2009Q4]":"3.71222E+12","2010Q1 [YR2010Q1]":"3.58348E+12","2010Q2 [YR2010Q2]":"3.40996E+12","2010Q3 [YR2010Q3]":"3.68973E+12","2010Q4 [YR2010Q4]":"3.54348E+12","2011Q1 [YR2011Q1]":"3.69483E+12","2011Q2 [YR2011Q2]":"3.75185E+12","2011Q3 [YR2011Q3]":"3.58703E+12","2011Q4 [YR2011Q4]":"3.47452E+12","2012Q1 [YR2012Q1]":"3.63347E+12","2012Q2 [YR2012Q2]":"3.47892E+12","2012Q3 [YR2012Q3]":"3.51591E+12","2012Q4 [YR2012Q4]":"3.46689E+12","2013Q1 [YR2013Q1]":"3.35048E+12","2013Q2 [YR2013Q2]":"3.32705E+12","2013Q3 [YR2013Q3]":"3.40086E+12","2013Q4 [YR2013Q4]":"3.45748E+12","2014Q1 [YR2014Q1]":"3.4473E+12","2014Q2 [YR2014Q2]":"3.48221E+12","2014Q3 [YR2014Q3]":"3.36999E+12","2014Q4 [YR2014Q4]":"3.25923E+12","2015Q1 [YR2015Q1]":"3.09476E+12","2015Q2 [YR2015Q2]":"3.21758E+12"},
	{"Country Name":"United States","Country Code":"USA","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"2.91081E+11","1996Q2 [YR1996Q2]":"3.12478E+11","1996Q3 [YR1996Q3]":"3.366E+11","1996Q4 [YR1996Q4]":"3.63448E+11","1997Q1 [YR1997Q1]":"3.76984E+11","1997Q2 [YR1997Q2]":"4.11817E+11","1997Q3 [YR1997Q3]":"4.42997E+11","1997Q4 [YR1997Q4]":"4.50432E+11","1998Q1 [YR1998Q1]":"4.76475E+11","1998Q2 [YR1998Q2]":"5.24892E+11","1998Q3 [YR1998Q3]":"5.68328E+11","1998Q4 [YR1998Q4]":"6.0737E+11","1999Q1 [YR1999Q1]":"6.59821E+11","1999Q2 [YR1999Q2]":"7.17112E+11","1999Q3 [YR1999Q3]":"7.99885E+11","1999Q4 [YR1999Q4]":"8.27014E+11","2000Q1 [YR2000Q1]":"8.59476E+11","2000Q2 [YR2000Q2]":"9.24299E+11","2000Q3 [YR2000Q3]":"9.90516E+11","2000Q4 [YR2000Q4]":"1.11161E+12","2001Q1 [YR2001Q1]":"1.26436E+12","2001Q2 [YR2001Q2]":"1.39553E+12","2001Q3 [YR2001Q3]":"1.48467E+12","2001Q4 [YR2001Q4]":"1.57129E+12","2002Q1 [YR2002Q1]":"1.66926E+12","2002Q2 [YR2002Q2]":"1.80668E+12","2002Q3 [YR2002Q3]":"1.80316E+12","2002Q4 [YR2002Q4]":"1.85451E+12","2003Q1 [YR2003Q1]":"1.88674E+12","2003Q2 [YR2003Q2]":"1.92679E+12","2003Q3 [YR2003Q3]":"2.00105E+12","2003Q4 [YR2003Q4]":"2.07134E+12","2004Q1 [YR2004Q1]":"2.11784E+12","2004Q2 [YR2004Q2]":"2.10939E+12","2004Q3 [YR2004Q3]":"2.14761E+12","2004Q4 [YR2004Q4]":"2.21998E+12","2005Q1 [YR2005Q1]":"2.20875E+12","2005Q2 [YR2005Q2]":"2.1648E+12","2005Q3 [YR2005Q3]":"2.15567E+12","2005Q4 [YR2005Q4]":"2.15541E+12","2006Q1 [YR2006Q1]":"2.15224E+12","2006Q2 [YR2006Q2]":"2.22E+12","2006Q3 [YR2006Q3]":"2.24894E+12","2006Q4 [YR2006Q4]":"2.32862E+12","2007Q1 [YR2007Q1]":"2.3702E+12","2007Q2 [YR2007Q2]":"2.47018E+12","2007Q3 [YR2007Q3]":"2.48628E+12","2007Q4 [YR2007Q4]":"2.53544E+12","2008Q1 [YR2008Q1]":"2.61086E+12","2008Q2 [YR2008Q2]":"2.65896E+12","2008Q3 [YR2008Q3]":"2.56144E+12","2008Q4 [YR2008Q4]":"2.46106E+12","2009Q1 [YR2009Q1]":"2.43538E+12","2009Q2 [YR2009Q2]":"2.52075E+12","2009Q3 [YR2009Q3]":"2.53738E+12","2009Q4 [YR2009Q4]":"2.5305E+12","2010Q1 [YR2010Q1]":"2.46153E+12","2010Q2 [YR2010Q2]":"2.37516E+12","2010Q3 [YR2010Q3]":"2.42059E+12","2010Q4 [YR2010Q4]":"2.38987E+12","2011Q1 [YR2011Q1]":"2.38123E+12","2011Q2 [YR2011Q2]":"2.32262E+12","2011Q3 [YR2011Q3]":"2.23505E+12","2011Q4 [YR2011Q4]":"2.16414E+12","2012Q1 [YR2012Q1]":"2.12914E+12","2012Q2 [YR2012Q2]":"2.06658E+12","2012Q3 [YR2012Q3]":"2.09243E+12","2012Q4 [YR2012Q4]":"2.10659E+12","2013Q1 [YR2013Q1]":"2.06872E+12","2013Q2 [YR2013Q2]":"2.06568E+12","2013Q3 [YR2013Q3]":"2.04817E+12","2013Q4 [YR2013Q4]":"2.06585E+12","2014Q1 [YR2014Q1]":"2.07017E+12","2014Q2 [YR2014Q2]":"2.12498E+12","2014Q3 [YR2014Q3]":"2.12348E+12","2014Q4 [YR2014Q4]":"2.13214E+12","2015Q1 [YR2015Q1]":"2.12947E+12","2015Q2 [YR2015Q2]":"2.23122E+12"},
	{"Country Name":"United States Minor Outlying Islands","Country Code":"UMS","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Uruguay","Country Code":"URY","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":1475000000,"1996Q2 [YR1996Q2]":1466000000,"1996Q3 [YR1996Q3]":1578000000,"1996Q4 [YR1996Q4]":1610000000,"1997Q1 [YR1997Q1]":1691000000,"1997Q2 [YR1997Q2]":1693000000,"1997Q3 [YR1997Q3]":1987000000,"1997Q4 [YR1997Q4]":1980000000,"1998Q1 [YR1998Q1]":1946000000,"1998Q2 [YR1998Q2]":2151000000,"1998Q3 [YR1998Q3]":2098000000,"1998Q4 [YR1998Q4]":2311000000,"1999Q1 [YR1999Q1]":2264000000,"1999Q2 [YR1999Q2]":2692000000,"1999Q3 [YR1999Q3]":2679000000,"1999Q4 [YR1999Q4]":2674000000,"2000Q1 [YR2000Q1]":2634000000,"2000Q2 [YR2000Q2]":2935000000,"2000Q3 [YR2000Q3]":2999000000,"2000Q4 [YR2000Q4]":3104000000,"2001Q1 [YR2001Q1]":3332000000,"2001Q2 [YR2001Q2]":3509000000,"2001Q3 [YR2001Q3]":3480000000,"2001Q4 [YR2001Q4]":3859000000,"2002Q1 [YR2002Q1]":4071000000,"2002Q2 [YR2002Q2]":4213000000,"2002Q3 [YR2002Q3]":4159000000,"2002Q4 [YR2002Q4]":4200000000,"2003Q1 [YR2003Q1]":4183000000,"2003Q2 [YR2003Q2]":4567000000,"2003Q3 [YR2003Q3]":4565000000,"2003Q4 [YR2003Q4]":4418000000,"2004Q1 [YR2004Q1]":4437000000,"2004Q2 [YR2004Q2]":4426000000,"2004Q3 [YR2004Q3]":4712000000,"2004Q4 [YR2004Q4]":4787000000,"2005Q1 [YR2005Q1]":4776000000,"2005Q2 [YR2005Q2]":5161000000,"2005Q3 [YR2005Q3]":5463000000,"2005Q4 [YR2005Q4]":5635000000,"2006Q1 [YR2006Q1]":6346000000,"2006Q2 [YR2006Q2]":6375000000,"2006Q3 [YR2006Q3]":7265000000,"2006Q4 [YR2006Q4]":8430000000,"2007Q1 [YR2007Q1]":8582000000,"2007Q2 [YR2007Q2]":9585000000,"2007Q3 [YR2007Q3]":9698000000,"2007Q4 [YR2007Q4]":9684000000,"2008Q1 [YR2008Q1]":9888000000,"2008Q2 [YR2008Q2]":9848000000,"2008Q3 [YR2008Q3]":8732000000,"2008Q4 [YR2008Q4]":8509000000,"2009Q1 [YR2009Q1]":8458000000,"2009Q2 [YR2009Q2]":8453000000,"2009Q3 [YR2009Q3]":9155000000,"2009Q4 [YR2009Q4]":9207000000,"2010Q1 [YR2010Q1]":9155000000,"2010Q2 [YR2010Q2]":8956000000,"2010Q3 [YR2010Q3]":9136000000,"2010Q4 [YR2010Q4]":9156000000,"2011Q1 [YR2011Q1]":8510000000,"2011Q2 [YR2011Q2]":9058000000,"2011Q3 [YR2011Q3]":8819000000,"2011Q4 [YR2011Q4]":9976000000,"2012Q1 [YR2012Q1]":9836000000,"2012Q2 [YR2012Q2]":9473000000,"2012Q3 [YR2012Q3]":9476000000,"2012Q4 [YR2012Q4]":10048000000,"2013Q1 [YR2013Q1]":10049000000,"2013Q2 [YR2013Q2]":9735000000,"2013Q3 [YR2013Q3]":11477000000,"2013Q4 [YR2013Q4]":11520000000,"2014Q1 [YR2014Q1]":11373000000,"2014Q2 [YR2014Q2]":13336000000,"2014Q3 [YR2014Q3]":12767000000,"2014Q4 [YR2014Q4]":12726000000,"2015Q1 [YR2015Q1]":13604000000,"2015Q2 [YR2015Q2]":13601000000},
	{"Country Name":"US Pacific Islands","Country Code":"PCI","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Uzbekistan","Country Code":"UZB","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Vanuatu","Country Code":"VUT","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Vatican","Country Code":"VAT","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Venezuela","Country Code":"VEN","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":18459000000,"1996Q2 [YR1996Q2]":18280000000,"1996Q3 [YR1996Q3]":18100000000,"1996Q4 [YR1996Q4]":18093000000,"1997Q1 [YR1997Q1]":17652000000,"1997Q2 [YR1997Q2]":18925000000,"1997Q3 [YR1997Q3]":22651000000,"1997Q4 [YR1997Q4]":22368000000,"1998Q1 [YR1998Q1]":22218000000,"1998Q2 [YR1998Q2]":22734000000,"1998Q3 [YR1998Q3]":23168000000,"1998Q4 [YR1998Q4]":17826000000,"1999Q1 [YR1999Q1]":17647000000,"1999Q2 [YR1999Q2]":17354000000,"1999Q3 [YR1999Q3]":17249000000,"1999Q4 [YR1999Q4]":16944000000,"2000Q1 [YR2000Q1]":17269000000,"2000Q2 [YR2000Q2]":16999000000,"2000Q3 [YR2000Q3]":16790000000,"2000Q4 [YR2000Q4]":16436000000,"2001Q1 [YR2001Q1]":16853000000,"2001Q2 [YR2001Q2]":16704000000,"2001Q3 [YR2001Q3]":16920000000,"2001Q4 [YR2001Q4]":16797000000,"2002Q1 [YR2002Q1]":16452000000,"2002Q2 [YR2002Q2]":16452000000,"2002Q3 [YR2002Q3]":16281000000,"2002Q4 [YR2002Q4]":16134000000,"2003Q1 [YR2003Q1]":16096000000,"2003Q2 [YR2003Q2]":15643000000,"2003Q3 [YR2003Q3]":16696000000,"2003Q4 [YR2003Q4]":17612000000,"2004Q1 [YR2004Q1]":18429000000,"2004Q2 [YR2004Q2]":19387000000,"2004Q3 [YR2004Q3]":19154000000,"2004Q4 [YR2004Q4]":21210000000,"2005Q1 [YR2005Q1]":21525000000,"2005Q2 [YR2005Q2]":22917000000,"2005Q3 [YR2005Q3]":22779000000,"2005Q4 [YR2005Q4]":25591000000,"2006Q1 [YR2006Q1]":25595000000,"2006Q2 [YR2006Q2]":22451000000,"2006Q3 [YR2006Q3]":22314000000,"2006Q4 [YR2006Q4]":22377000000,"2007Q1 [YR2007Q1]":22286000000,"2007Q2 [YR2007Q2]":29330000000,"2007Q3 [YR2007Q3]":29368000000,"2007Q4 [YR2007Q4]":30463000000,"2008Q1 [YR2008Q1]":29422000000,"2008Q2 [YR2008Q2]":34003000000,"2008Q3 [YR2008Q3]":33807000000,"2008Q4 [YR2008Q4]":33564000000,"2009Q1 [YR2009Q1]":33488000000,"2009Q2 [YR2009Q2]":33534000000,"2009Q3 [YR2009Q3]":35107000000,"2009Q4 [YR2009Q4]":42963000000,"2010Q1 [YR2010Q1]":43024000000,"2010Q2 [YR2010Q2]":43033000000,"2010Q3 [YR2010Q3]":44901000000,"2010Q4 [YR2010Q4]":48063000000,"2011Q1 [YR2011Q1]":51406000000,"2011Q2 [YR2011Q2]":50670000000,"2011Q3 [YR2011Q3]":51506000000,"2011Q4 [YR2011Q4]":59238000000,"2012Q1 [YR2012Q1]":59239000000,"2012Q2 [YR2012Q2]":59148000000,"2012Q3 [YR2012Q3]":59064000000,"2012Q4 [YR2012Q4]":59090000000,"2013Q1 [YR2013Q1]":59051000000,"2013Q2 [YR2013Q2]":59079000000,"2013Q3 [YR2013Q3]":57927000000,"2013Q4 [YR2013Q4]":57956000000,"2014Q1 [YR2014Q1]":57613000000,"2014Q2 [YR2014Q2]":57600000000,"2014Q3 [YR2014Q3]":57492000000,"2014Q4 [YR2014Q4]":54551000000,"2015Q1 [YR2015Q1]":53337000000,"2015Q2 [YR2015Q2]":53337000000},
	{"Country Name":"Viet Nam","Country Code":"VNM","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":0,"1996Q2 [YR1996Q2]":0,"1996Q3 [YR1996Q3]":0,"1996Q4 [YR1996Q4]":0,"1997Q1 [YR1997Q1]":0,"1997Q2 [YR1997Q2]":0,"1997Q3 [YR1997Q3]":0,"1997Q4 [YR1997Q4]":0,"1998Q1 [YR1998Q1]":543000000,"1998Q2 [YR1998Q2]":543000000,"1998Q3 [YR1998Q3]":543000000,"1998Q4 [YR1998Q4]":543000000,"1999Q1 [YR1999Q1]":543000000,"1999Q2 [YR1999Q2]":543000000,"1999Q3 [YR1999Q3]":543000000,"1999Q4 [YR1999Q4]":543000000,"2000Q1 [YR2000Q1]":543000000,"2000Q2 [YR2000Q2]":543000000,"2000Q3 [YR2000Q3]":543000000,"2000Q4 [YR2000Q4]":543000000,"2001Q1 [YR2001Q1]":543000000,"2001Q2 [YR2001Q2]":543000000,"2001Q3 [YR2001Q3]":543000000,"2001Q4 [YR2001Q4]":543000000,"2002Q1 [YR2002Q1]":543000000,"2002Q2 [YR2002Q2]":543000000,"2002Q3 [YR2002Q3]":543000000,"2002Q4 [YR2002Q4]":1043000000,"2003Q1 [YR2003Q1]":1043000000,"2003Q2 [YR2003Q2]":1043000000,"2003Q3 [YR2003Q3]":1043000000,"2003Q4 [YR2003Q4]":1043000000,"2004Q1 [YR2004Q1]":1043000000,"2004Q2 [YR2004Q2]":1043000000,"2004Q3 [YR2004Q3]":1043000000,"2004Q4 [YR2004Q4]":1043000000,"2005Q1 [YR2005Q1]":1030000000,"2005Q2 [YR2005Q2]":1030000000,"2005Q3 [YR2005Q3]":1018000000,"2005Q4 [YR2005Q4]":1768000000,"2006Q1 [YR2006Q1]":1755000000,"2006Q2 [YR2006Q2]":1755000000,"2006Q3 [YR2006Q3]":1742000000,"2006Q4 [YR2006Q4]":1742000000,"2007Q1 [YR2007Q1]":1730000000,"2007Q2 [YR2007Q2]":1916000000,"2007Q3 [YR2007Q3]":1903000000,"2007Q4 [YR2007Q4]":1903000000,"2008Q1 [YR2008Q1]":1893000000,"2008Q2 [YR2008Q2]":1886000000,"2008Q3 [YR2008Q3]":1874000000,"2008Q4 [YR2008Q4]":1869000000,"2009Q1 [YR2009Q1]":1956000000,"2009Q2 [YR2009Q2]":1956000000,"2009Q3 [YR2009Q3]":1943000000,"2009Q4 [YR2009Q4]":2034000000,"2010Q1 [YR2010Q1]":2916000000,"2010Q2 [YR2010Q2]":2916000000,"2010Q3 [YR2010Q3]":2900000000,"2010Q4 [YR2010Q4]":2900000000,"2011Q1 [YR2011Q1]":2874000000,"2011Q2 [YR2011Q2]":2864000000,"2011Q3 [YR2011Q3]":2904000000,"2011Q4 [YR2011Q4]":2903000000,"2012Q1 [YR2012Q1]":3088000000,"2012Q2 [YR2012Q2]":3413000000,"2012Q3 [YR2012Q3]":3413000000,"2012Q4 [YR2012Q4]":2913000000,"2013Q1 [YR2013Q1]":2913000000,"2013Q2 [YR2013Q2]":2912000000,"2013Q3 [YR2013Q3]":2912000000,"2013Q4 [YR2013Q4]":3112000000,"2014Q1 [YR2014Q1]":3112000000,"2014Q2 [YR2014Q2]":3110000000,"2014Q3 [YR2014Q3]":3110000000,"2014Q4 [YR2014Q4]":4110000000,"2015Q1 [YR2015Q1]":4110000000,"2015Q2 [YR2015Q2]":4151000000},
	{"Country Name":"Virgin Islands, British","Country Code":"VGB","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Virgin Islands, U.S.","Country Code":"VIR","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Wallis and Futuna","Country Code":"WLF","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"West Indies UK","Country Code":"WIS","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":2424000000,"1996Q2 [YR1996Q2]":3202000000,"1996Q3 [YR1996Q3]":3652000000,"1996Q4 [YR1996Q4]":4029000000,"1997Q1 [YR1997Q1]":4949000000,"1997Q2 [YR1997Q2]":5575000000,"1997Q3 [YR1997Q3]":6441000000,"1997Q4 [YR1997Q4]":5848000000,"1998Q1 [YR1998Q1]":6210000000,"1998Q2 [YR1998Q2]":8325000000,"1998Q3 [YR1998Q3]":7658000000,"1998Q4 [YR1998Q4]":7974000000,"1999Q1 [YR1999Q1]":8180000000,"1999Q2 [YR1999Q2]":8089000000,"1999Q3 [YR1999Q3]":8282000000,"1999Q4 [YR1999Q4]":8568000000,"2000Q1 [YR2000Q1]":7593000000,"2000Q2 [YR2000Q2]":7401000000,"2000Q3 [YR2000Q3]":7705000000,"2000Q4 [YR2000Q4]":7123000000,"2001Q1 [YR2001Q1]":8540000000,"2001Q2 [YR2001Q2]":8043000000,"2001Q3 [YR2001Q3]":8433000000,"2001Q4 [YR2001Q4]":9395000000,"2002Q1 [YR2002Q1]":9172000000,"2002Q2 [YR2002Q2]":9678000000,"2002Q3 [YR2002Q3]":9130000000,"2002Q4 [YR2002Q4]":9261000000,"2003Q1 [YR2003Q1]":10563000000,"2003Q2 [YR2003Q2]":12722000000,"2003Q3 [YR2003Q3]":14613000000,"2003Q4 [YR2003Q4]":20006000000,"2004Q1 [YR2004Q1]":20611000000,"2004Q2 [YR2004Q2]":20633000000,"2004Q3 [YR2004Q3]":21001000000,"2004Q4 [YR2004Q4]":22340000000,"2005Q1 [YR2005Q1]":21977000000,"2005Q2 [YR2005Q2]":20763000000,"2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Western Sahara","Country Code":"ESH","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Yemen","Country Code":"YEM","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Yugoslavia","Country Code":"YSR","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Zambia","Country Code":"ZMB","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":"..","1996Q2 [YR1996Q2]":"..","1996Q3 [YR1996Q3]":"..","1996Q4 [YR1996Q4]":"..","1997Q1 [YR1997Q1]":"..","1997Q2 [YR1997Q2]":"..","1997Q3 [YR1997Q3]":"..","1997Q4 [YR1997Q4]":"..","1998Q1 [YR1998Q1]":"..","1998Q2 [YR1998Q2]":"..","1998Q3 [YR1998Q3]":"..","1998Q4 [YR1998Q4]":"..","1999Q1 [YR1999Q1]":"..","1999Q2 [YR1999Q2]":"..","1999Q3 [YR1999Q3]":"..","1999Q4 [YR1999Q4]":"..","2000Q1 [YR2000Q1]":"..","2000Q2 [YR2000Q2]":"..","2000Q3 [YR2000Q3]":"..","2000Q4 [YR2000Q4]":"..","2001Q1 [YR2001Q1]":"..","2001Q2 [YR2001Q2]":"..","2001Q3 [YR2001Q3]":"..","2001Q4 [YR2001Q4]":"..","2002Q1 [YR2002Q1]":"..","2002Q2 [YR2002Q2]":"..","2002Q3 [YR2002Q3]":"..","2002Q4 [YR2002Q4]":"..","2003Q1 [YR2003Q1]":"..","2003Q2 [YR2003Q2]":"..","2003Q3 [YR2003Q3]":"..","2003Q4 [YR2003Q4]":"..","2004Q1 [YR2004Q1]":"..","2004Q2 [YR2004Q2]":"..","2004Q3 [YR2004Q3]":"..","2004Q4 [YR2004Q4]":"..","2005Q1 [YR2005Q1]":"..","2005Q2 [YR2005Q2]":"..","2005Q3 [YR2005Q3]":"..","2005Q4 [YR2005Q4]":"..","2006Q1 [YR2006Q1]":"..","2006Q2 [YR2006Q2]":"..","2006Q3 [YR2006Q3]":"..","2006Q4 [YR2006Q4]":"..","2007Q1 [YR2007Q1]":"..","2007Q2 [YR2007Q2]":"..","2007Q3 [YR2007Q3]":"..","2007Q4 [YR2007Q4]":"..","2008Q1 [YR2008Q1]":"..","2008Q2 [YR2008Q2]":"..","2008Q3 [YR2008Q3]":"..","2008Q4 [YR2008Q4]":"..","2009Q1 [YR2009Q1]":"..","2009Q2 [YR2009Q2]":"..","2009Q3 [YR2009Q3]":"..","2009Q4 [YR2009Q4]":"..","2010Q1 [YR2010Q1]":"..","2010Q2 [YR2010Q2]":"..","2010Q3 [YR2010Q3]":"..","2010Q4 [YR2010Q4]":"..","2011Q1 [YR2011Q1]":"..","2011Q2 [YR2011Q2]":"..","2011Q3 [YR2011Q3]":"..","2011Q4 [YR2011Q4]":"..","2012Q1 [YR2012Q1]":"..","2012Q2 [YR2012Q2]":"..","2012Q3 [YR2012Q3]":"..","2012Q4 [YR2012Q4]":"..","2013Q1 [YR2013Q1]":"..","2013Q2 [YR2013Q2]":"..","2013Q3 [YR2013Q3]":"..","2013Q4 [YR2013Q4]":"..","2014Q1 [YR2014Q1]":"..","2014Q2 [YR2014Q2]":"..","2014Q3 [YR2014Q3]":"..","2014Q4 [YR2014Q4]":"..","2015Q1 [YR2015Q1]":"..","2015Q2 [YR2015Q2]":".."},
	{"Country Name":"Zimbabwe","Country Code":"ZWE","Series Name":"16_International debt securities, all maturities","1996Q1 [YR1996Q1]":0,"1996Q2 [YR1996Q2]":0,"1996Q3 [YR1996Q3]":0,"1996Q4 [YR1996Q4]":0,"1997Q1 [YR1997Q1]":0,"1997Q2 [YR1997Q2]":0,"1997Q3 [YR1997Q3]":0,"1997Q4 [YR1997Q4]":0,"1998Q1 [YR1998Q1]":0,"1998Q2 [YR1998Q2]":0,"1998Q3 [YR1998Q3]":0,"1998Q4 [YR1998Q4]":0,"1999Q1 [YR1999Q1]":0,"1999Q2 [YR1999Q2]":0,"1999Q3 [YR1999Q3]":0,"1999Q4 [YR1999Q4]":0,"2000Q1 [YR2000Q1]":0,"2000Q2 [YR2000Q2]":0,"2000Q3 [YR2000Q3]":0,"2000Q4 [YR2000Q4]":0,"2001Q1 [YR2001Q1]":0,"2001Q2 [YR2001Q2]":0,"2001Q3 [YR2001Q3]":0,"2001Q4 [YR2001Q4]":0,"2002Q1 [YR2002Q1]":0,"2002Q2 [YR2002Q2]":0,"2002Q3 [YR2002Q3]":0,"2002Q4 [YR2002Q4]":0,"2003Q1 [YR2003Q1]":0,"2003Q2 [YR2003Q2]":0,"2003Q3 [YR2003Q3]":0,"2003Q4 [YR2003Q4]":0,"2004Q1 [YR2004Q1]":0,"2004Q2 [YR2004Q2]":0,"2004Q3 [YR2004Q3]":0,"2004Q4 [YR2004Q4]":0,"2005Q1 [YR2005Q1]":0,"2005Q2 [YR2005Q2]":0,"2005Q3 [YR2005Q3]":0,"2005Q4 [YR2005Q4]":0,"2006Q1 [YR2006Q1]":0,"2006Q2 [YR2006Q2]":0,"2006Q3 [YR2006Q3]":0,"2006Q4 [YR2006Q4]":0,"2007Q1 [YR2007Q1]":0,"2007Q2 [YR2007Q2]":0,"2007Q3 [YR2007Q3]":0,"2007Q4 [YR2007Q4]":0,"2008Q1 [YR2008Q1]":0,"2008Q2 [YR2008Q2]":0,"2008Q3 [YR2008Q3]":0,"2008Q4 [YR2008Q4]":0,"2009Q1 [YR2009Q1]":0,"2009Q2 [YR2009Q2]":0,"2009Q3 [YR2009Q3]":0,"2009Q4 [YR2009Q4]":0,"2010Q1 [YR2010Q1]":0,"2010Q2 [YR2010Q2]":0,"2010Q3 [YR2010Q3]":0,"2010Q4 [YR2010Q4]":0,"2011Q1 [YR2011Q1]":0,"2011Q2 [YR2011Q2]":0,"2011Q3 [YR2011Q3]":0,"2011Q4 [YR2011Q4]":0,"2012Q1 [YR2012Q1]":0,"2012Q2 [YR2012Q2]":0,"2012Q3 [YR2012Q3]":0,"2012Q4 [YR2012Q4]":0,"2013Q1 [YR2013Q1]":0,"2013Q2 [YR2013Q2]":0,"2013Q3 [YR2013Q3]":0,"2013Q4 [YR2013Q4]":0,"2014Q1 [YR2014Q1]":0,"2014Q2 [YR2014Q2]":0,"2014Q3 [YR2014Q3]":0,"2014Q4 [YR2014Q4]":0,"2015Q1 [YR2015Q1]":0,"2015Q2 [YR2015Q2]":0}
	]

/***/ }
/******/ ]);
//# sourceMappingURL=bundle.js.map